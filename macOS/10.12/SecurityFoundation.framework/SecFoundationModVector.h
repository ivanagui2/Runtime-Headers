/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation
 */

@interface SecFoundationModVector : NSObject {
    struct AuthorizationOpaqueRef { } * _authRef;
    long long  _err;
    struct OpaqueSecKeychainRef { } * _kcRef;
    long long  _lock;
    NSString * _path;
    NSXPCConnection * _proxyConnection;
    NSString * _tmpPath;
    struct OpaqueSecKeychainRef { } * _tmpRef;
    unsigned int  _uid;
}

+ (BOOL)isAccessError:(int)arg1;
+ (id)pathForKeychain:(struct OpaqueSecKeychainRef { }*)arg1;
+ (id)sharedInstance;

- (void)_connectionDidDie:(id)arg1;
- (int)addCertificate:(struct OpaqueSecCertificateRef { }*)arg1 toKeychain:(struct OpaqueSecKeychainRef { }*)arg2;
- (int)addCertificate:(struct OpaqueSecCertificateRef { }*)arg1 toKeychain:(struct OpaqueSecKeychainRef { }*)arg2 domain:(unsigned int)arg3 settings:(struct __CFArray { }*)arg4;
- (BOOL)authorizationValid;
- (int)createKeyPair:(struct OpaqueSecKeychainRef { }*)arg1 algorithm:(unsigned int)arg2 keySizeInBits:(unsigned int)arg3 contextHandle:(unsigned long long)arg4 publicKeyUsage:(unsigned int)arg5 publicKeyAttr:(unsigned int)arg6 privateKeyUsage:(unsigned int)arg7 privateKeyAttr:(unsigned int)arg8 initialAccess:(id)arg9 publicKey:(struct OpaqueSecKeyRef {}**)arg10 privateKey:(struct OpaqueSecKeyRef {}**)arg11 commonName:(id)arg12;
- (void)dealloc;
- (void)doWithProxy:(id)arg1 onError:(id)arg2;
- (id)init;
- (long long)obtainAuthorization:(id)arg1;
- (id)privateKeyPersistentRef;
- (id)proxyWithSemaphore:(id)arg1;
- (id)publicKeyPersistentRef;
- (long long)releaseAuthorization;
- (int)removeItem:(struct OpaqueSecKeychainItemRef { }*)arg1;
- (void)setKeyPrintNamesWithCommonName:(id)arg1 forKey:(struct OpaqueSecKeyRef { }*)arg2;
- (void)startProxy;
- (void)stopProxy;

@end
