/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation
 */

@interface SFCertificateAuthority : NSObject {
    id  _reserved_SFCertificateAuthority;
}

+ (int)_createUserKeyPair:(struct OpaqueSecKeyRef {}**)arg1 privKey:(struct OpaqueSecKeyRef {}**)arg2 keychain:(struct OpaqueSecKeychainRef { }*)arg3 algorithm:(unsigned int)arg4 size:(int)arg5 userName:(id)arg6 accessRef:(struct OpaqueSecAccessRef { }*)arg7 inputParms:(id)arg8;
+ (id)_invitationFromContentsOfFile:(id)arg1;
+ (void)_setPrintNameWithName:(id)arg1 item:(struct OpaqueSecKeychainItemRef { }*)arg2;
+ (id)certificateAuthorityWithFullPath:(id)arg1;
+ (id)certificateAuthorityWithName:(id)arg1;

- (id)_authenticator;
- (void)_chooseIssuer;
- (struct OpaqueSecCertificateRef { }*)_copyCertificateFromPublicKeyHash;
- (struct OpaqueSecKeyRef { }*)_copyPrivateKeyFromPublicKeyHash:(id)arg1 inKeychainOrArray:(void*)arg2;
- (int)_createCA;
- (int)_createCert:(struct OpaqueSecKeyRef { }*)arg1 privKey:(struct OpaqueSecKeyRef { }*)arg2 keychain:(struct OpaqueSecKeychainRef { }*)arg3;
- (int)_createCertExportFileForCAWithFormat:(unsigned int)arg1 pathToExportFile:(id*)arg2 exportedData:(id*)arg3;
- (BOOL)_createWithPublicKey:(struct OpaqueSecKeyRef { }*)arg1 privateKey:(struct OpaqueSecKeyRef { }*)arg2 keychain:(struct OpaqueSecKeychainRef { }*)arg3 authenticator:(id)arg4 signer:(struct OpaqueSecIdentityRef { }*)arg5 ca:(id)arg6 inputParms:(id)arg7 error:(id*)arg8;
- (id)_crlDistributionPoints;
- (id)_initWithNameBackCompat:(id)arg1;
- (id)_lastUsedSerialNumber;
- (void)_presetToCreateCA;
- (id)_publicKeyHash;
- (struct OpaqueSecCertificateRef { }*)_resultingCertificate;
- (int)_selectIssuerBasedOnPublicKeyHash;
- (void)_setAuthenticator:(id)arg1;
- (void)_setCACertificate:(struct OpaqueSecCertificateRef { }*)arg1;
- (void)_setCRLDistributionPoints:(id)arg1;
- (void)_setCSR:(id)arg1;
- (void)_setChosenIssuer:(struct OpaqueSecIdentityRef { }*)arg1;
- (void)_setInvitation:(id)arg1;
- (void)_setIssuerHashOfPublicKey:(id)arg1;
- (void)_setResultingCertificate:(struct OpaqueSecCertificateRef { }*)arg1;
- (void)_setResultingCertificateData:(struct cssm_data { unsigned long long x1; char *x2; })arg1;
- (void)_setSerialNumberToIssuerMappedToCAConfigFile;
- (void)_setupCRLDistPoints:(id)arg1 inCEGeneralNames:(struct __CE_GeneralNames { unsigned int x1; struct __CE_GeneralName {} *x2; }*)arg2;
- (void)_setupCertExtensions:(struct __CE_DataAndType { int x1; union { struct __CE_AuthorityKeyID { int x_1_2_1; struct cssm_data { unsigned long long x_2_3_1; char *x_2_3_2; } x_1_2_2; int x_1_2_3; struct __CE_GeneralNames {} *x_1_2_4; int x_1_2_5; struct cssm_data { unsigned long long x_6_3_1; char *x_6_3_2; } x_1_2_6; } x_2_1_1; struct cssm_data { unsigned long long x_2_2_1; char *x_2_2_2; } x_2_1_2; unsigned short x_2_1_3; struct __CE_GeneralNames { unsigned int x_4_2_1; struct __CE_GeneralName {} *x_4_2_2; } x_2_1_4; struct __CE_GeneralNames { unsigned int x_5_2_1; struct __CE_GeneralName {} *x_5_2_2; } x_2_1_5; struct __CE_ExtendedKeyUsage { unsigned int x_6_2_1; struct cssm_data {} *x_6_2_2; } x_2_1_6; struct __CE_BasicConstraints { int x_7_2_1; int x_7_2_2; unsigned int x_7_2_3; } x_2_1_7; struct __CE_CertPolicies { unsigned int x_8_2_1; struct __CE_PolicyInformation {} *x_8_2_2; } x_2_1_8; unsigned short x_2_1_9; unsigned int x_2_1_10; unsigned int x_2_1_11; unsigned int x_2_1_12; struct __CE_CRLDistPointsSyntax { unsigned int x_13_2_1; struct __CE_CRLDistributionPoint {} *x_13_2_2; } x_2_1_13; } x2; }*)arg1 numExtens:(unsigned int*)arg2;
- (long long)_tpHand;
- (struct OpaqueSecCertificateRef { }*)certificate;
- (id)createSelfSignedCertificateWithPublicKey:(struct OpaqueSecKeyRef { }*)arg1 privateKey:(struct OpaqueSecKeyRef { }*)arg2 inputParms:(id)arg3 error:(id*)arg4;
- (BOOL)createWithPublicKey:(struct OpaqueSecKeyRef { }*)arg1 privateKey:(struct OpaqueSecKeyRef { }*)arg2 keychain:(struct OpaqueSecKeychainRef { }*)arg3 authenticator:(id)arg4 signer:(struct OpaqueSecIdentityRef { }*)arg5 inputParms:(id)arg6 error:(id*)arg7;
- (void)dealloc;
- (id)emailAddress;
- (id)fullPath;
- (id)init;
- (id)initWithFullPath:(id)arg1;
- (id)initWithName:(id)arg1;
- (id)invitation;
- (id)name;
- (void)setAdditionalCertificateInformation:(id)arg1;
- (void)setBasicConstraintsExtension:(id)arg1;
- (void)setCertificateInformation:(id)arg1;
- (void)setDestinationKeychain:(struct OpaqueSecKeychainRef { }*)arg1;
- (void)setEmailAddress:(id)arg1;
- (void)setExtendedKeyUsageExtension:(id)arg1;
- (void)setFullPath:(id)arg1;
- (void)setIdentityNameInfo:(id)arg1;
- (void)setKeyPairAttributes:(id)arg1;
- (void)setKeyUsageExtension:(id)arg1;
- (void)setSubjectAltNameExtension:(id)arg1;
- (void)setWebURL:(id)arg1;
- (id)signedCertificateFromCSR:(id)arg1 inputParms:(id)arg2 error:(id*)arg3;

@end
