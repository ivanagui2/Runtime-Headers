/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation
 */

@interface CASubjectAltNameExtension : NSObject {
    NSString * _caCertAuthorityDNSName;
    NSString * _caCertAuthorityIPAddress;
    NSString * _caCertAuthorityRFC822Name;
    int  _caCertAuthoritySubjectAltNameIsCritical;
    int  _caCertAuthoritySubjectAltNamePresent;
    NSString * _caCertAuthorityURI;
    NSString * _caDNSName;
    char * _caDNSNameArray;
    BOOL  _caDoneCASubjectAltNameExts;
    NSString * _caIPAddress;
    int  _caNumDNSNames;
    int  _caNumIPAddresses;
    int  _caNumRFC822Names;
    int  _caNumURIs;
    NSString * _caRFC822Name;
    char * _caRFC822NamesArray;
    int  _caSubjectAltNameIsCritical;
    int  _caSubjectAltNamePresent;
    NSString * _caURI;
    char * _caURIArray;
    NSString * _caUserDNSName;
    NSString * _caUserIPAddress;
    NSString * _caUserRFC822Name;
    int  _caUserSubjectAltNameIsCritical;
    int  _caUserSubjectAltNamePresent;
    NSString * _caUserURI;
    unsigned int * _ipAddressIntArray;
    struct __CE_GeneralName { int x1; int x2; struct cssm_data { unsigned long long x_3_1_1; char *x_3_1_2; } x3; } * _subjectAltNames;
}

- (BOOL)_alreadySpecifiedCertAuthorityValues;
- (BOOL)_areIPAddressesValid:(BOOL)arg1;
- (id)_dnsName;
- (void)_fillInValuesInExtension:(struct __CE_DataAndType { int x1; union { struct __CE_AuthorityKeyID { int x_1_2_1; struct cssm_data { unsigned long long x_2_3_1; char *x_2_3_2; } x_1_2_2; int x_1_2_3; struct __CE_GeneralNames {} *x_1_2_4; int x_1_2_5; struct cssm_data { unsigned long long x_6_3_1; char *x_6_3_2; } x_1_2_6; } x_2_1_1; struct cssm_data { unsigned long long x_2_2_1; char *x_2_2_2; } x_2_1_2; unsigned short x_2_1_3; struct __CE_GeneralNames { unsigned int x_4_2_1; struct __CE_GeneralName {} *x_4_2_2; } x_2_1_4; struct __CE_GeneralNames { unsigned int x_5_2_1; struct __CE_GeneralName {} *x_5_2_2; } x_2_1_5; struct __CE_ExtendedKeyUsage { unsigned int x_6_2_1; struct cssm_data {} *x_6_2_2; } x_2_1_6; struct __CE_BasicConstraints { int x_7_2_1; int x_7_2_2; unsigned int x_7_2_3; } x_2_1_7; struct __CE_CertPolicies { unsigned int x_8_2_1; struct __CE_PolicyInformation {} *x_8_2_2; } x_2_1_8; unsigned short x_2_1_9; unsigned int x_2_1_10; unsigned int x_2_1_11; unsigned int x_2_1_12; struct __CE_CRLDistPointsSyntax { unsigned int x_13_2_1; struct __CE_CRLDistributionPoint {} *x_13_2_2; } x_2_1_13; } x2; }*)arg1 isCACertBeingCreated:(BOOL)arg2 extensionIsPresent:(BOOL*)arg3;
- (id)_ipAddress;
- (int)_isCritical;
- (int)_isPresent;
- (void)_releaseDNSNamesArray;
- (void)_releaseRFC822NamesArray;
- (void)_releaseURIArray;
- (id)_rfc822Name;
- (void)_saveCertAuthorityPanelValues;
- (void)_saveUserPanelValues;
- (void)_setAlreadySpecifiedCertAuthorityValues:(BOOL)arg1;
- (void)_setDNSName:(id)arg1;
- (void)_setIPAddress:(id)arg1;
- (void)_setIsCritical:(id)arg1;
- (void)_setIsPresent:(id)arg1;
- (void)_setRFC822Name:(id)arg1;
- (void)_setServerDNSNameSetting:(id)arg1;
- (void)_setToDefaults;
- (void)_setToSMIMEWithRFC822Name:(id)arg1;
- (void)_setURI:(id)arg1;
- (void)_setUserDNSNames:(id)arg1;
- (void)_setUserIPAddrs:(id)arg1;
- (void)_setUserRFC822Name:(id)arg1;
- (void)_setUserURIs:(id)arg1;
- (void)_setupDNSNames:(id)arg1 inCEGeneralNames:(struct __CE_GeneralNames { unsigned int x1; struct __CE_GeneralName {} *x2; }*)arg2;
- (void)_setupIPAddresses:(unsigned int*)arg1 numIPAddresses:(int)arg2 inCEGeneralNames:(struct __CE_GeneralNames { unsigned int x1; struct __CE_GeneralName {} *x2; }*)arg3;
- (void)_setupRFC822Names:(id)arg1 inCEGeneralNames:(struct __CE_GeneralNames { unsigned int x1; struct __CE_GeneralName {} *x2; }*)arg2;
- (void)_setupURIs:(id)arg1 inCEGeneralNames:(struct __CE_GeneralNames { unsigned int x1; struct __CE_GeneralName {} *x2; }*)arg2;
- (void)_updatePanelToCertAuthorityValues;
- (void)_updatePanelToUserValues;
- (id)_uri;
- (void)dealloc;
- (id)init;

@end
