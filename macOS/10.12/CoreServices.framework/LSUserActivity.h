/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
 */

@interface LSUserActivity : NSObject <SFCompanionAdvertiserDelegate> {
    SFCompanionAdvertiser * _advertiser;
    BOOL  _canCreateStreams;
    NSMutableDictionary * _contentAttributes;
    NSString * _contentIdentifier;
    NSString * _contentType;
    BOOL  _createsNewUUIDIfSaved;
    NSError * _decodeUserInfoError;
    <LSUserActivityDelegate> * _delegate;
    BOOL  _dirty;
    NSString * _dynamicIdentifier;
    BOOL  _eligibleForHandoff;
    BOOL  _eligibleForPublicIndexing;
    BOOL  _eligibleForReminders;
    BOOL  _eligibleForSearch;
    BOOL  _encodedContainsUnsynchronizedCloudDocument;
    double  _encodedContainsUnsynchronizedCloudDocumentBackoffInterval;
    BOOL  _encodedFileProviderURL;
    BOOL  _forceImmediateSendToServer;
    NSMutableDictionary * _frameworkPayload;
    BOOL  _inWillSaveCallback;
    NSMutableSet * _keywords;
    NSDate * _lastActivityDate;
    double  _lastSaveTime;
    LSUserActivityManager * _manager;
    BOOL  _needsSave;
    NSDictionary * _options;
    LSUserActivity * _parentUserActivity;
    NSMutableSet * _requiredUserActivityKeys;
    SFCompanionAdvertiser * _resumerAdvertiser;
    BOOL  _saveScheduled;
    BOOL  _sendToServerPending;
    NSData * _streamsData;
    NSString * _subtitle;
    unsigned long long  _suggestedActionType;
    BOOL  _supportsContinuationStreams;
    NSString * _teamIdentifier;
    NSString * _title;
    NSString * _typeIdentifier;
    NSUUID * _uniqueIdentifier;
    NSMutableDictionary * _userInfo;
    NSURL * _webpageURL;
}

@property (getter=isActive, atomic, readwrite) BOOL active;
@property (atomic, readwrite, copy) NSDictionary *activityPayload;
@property (getter=activityPayload, setter=setActivityPayload:, atomic, readwrite, copy) NSDictionary *activityPayloadDictionary;
@property (atomic, readwrite) BOOL canCreateStreams;
@property (atomic, readwrite, copy) NSDictionary *contentAttributes;
@property (atomic, readwrite, copy) NSString *contentIdentifier;
@property (atomic, readwrite, copy) NSString *contentType;
@property (atomic, readwrite) BOOL createsNewUUIDIfSaved;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readwrite, retain) NSError *decodeUserInfoError;
@property (atomic, readwrite) <LSUserActivityDelegate> *delegate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite) BOOL dirty;
@property (atomic, readwrite, copy) NSString *dynamicIdentifier;
@property (getter=isEligibleForHandoff, atomic, readwrite) BOOL eligibleForHandoff;
@property (getter=isEligibleForPublicIndexing, atomic, readwrite) BOOL eligibleForPublicIndexing;
@property (getter=isEligibleForReminders, atomic, readwrite) BOOL eligibleForReminders;
@property (getter=isEligibleForSearch, atomic, readwrite) BOOL eligibleForSearch;
@property (atomic, readwrite) BOOL encodedContainsUnsynchronizedCloudDocument;
@property (atomic, readwrite) double encodedContainsUnsynchronizedCloudDocumentBackoffInterval;
@property (atomic, readwrite) BOOL encodedFileProviderURL;
@property (atomic, readwrite) BOOL forceImmediateSendToServer;
@property (atomic, readwrite, copy) NSDictionary *frameworkPayload;
@property (getter=frameworkPayload, setter=setFrameworkPayload:, atomic, readwrite, copy) NSDictionary *frameworkPayloadDictionary;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite, copy) NSSet *keywords;
@property (atomic, readwrite, copy) NSDate *lastActivityDate;
@property (atomic, readonly) LSUserActivityManager *manager;
@property (atomic, readwrite) BOOL needsSave;
@property (atomic, readwrite, copy) NSDictionary *options;
@property (atomic, readwrite, copy) NSString *owningBundleIdentifier;
@property (atomic, readwrite, retain) NSUserActivity *parentUserActivity;
@property (atomic, readwrite, copy) NSSet *requiredUserActivityKeys;
@property (atomic, readwrite) BOOL sendToServerPending;
@property (atomic, readwrite, copy) NSData *streamsData;
@property (atomic, readwrite, copy) NSString *subtitle;
@property (atomic, readonly) unsigned long long suggestedActionType;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite) BOOL supportsContinuationStreams;
@property (atomic, readwrite, copy) NSString *teamIdentifier;
@property (atomic, readwrite, copy) NSString *title;
@property (atomic, readwrite, copy) NSString *typeIdentifier;
@property (atomic, readwrite, copy) NSUUID *uniqueIdentifier;
@property (atomic, readwrite, copy) NSDictionary *userInfo;
@property (atomic, readwrite, copy) NSURL *webPageURL;
@property (atomic, readwrite, copy) NSURL *webpageURL;

+ (void)addDynamicUserActivity:(id)arg1 matching:(id)arg2;
+ (void)fetchUserActivityWithUUID:(id)arg1 completionHandler:(id)arg2;
+ (void)removeDynamicUserActivity:(id)arg1 matching:(id)arg2;
+ (id)userActivity;
+ (BOOL)userActivityContinuationSupported;
+ (id)userActivityFromUUID:(id)arg1 withError:(id*)arg2;

- (BOOL)canCreateStreams;
- (BOOL)createsNewUUIDIfSaved;
- (id)decodeUserInfoError;
- (id)delegate;
- (BOOL)dirty;
- (id)dynamicIdentifier;
- (BOOL)encodedContainsUnsynchronizedCloudDocument;
- (double)encodedContainsUnsynchronizedCloudDocumentBackoffInterval;
- (BOOL)encodedFileProviderURL;
- (BOOL)forceImmediateSendToServer;
- (id)init;
- (id)initDynamicActivityWithTypeIdentifier:(id)arg1 dynamicIdentifier:(id)arg2 suggestedActionType:(unsigned long long)arg3 options:(id)arg4;
- (id)initWithTypeIdentifier:(id)arg1;
- (id)initWithTypeIdentifier:(id)arg1 dynamicIdentifier:(id)arg2 options:(id)arg3;
- (id)initWithTypeIdentifier:(id)arg1 options:(id)arg2;
- (id)initWithTypeIdentifier:(id)arg1 suggestedActionType:(unsigned long long)arg2 options:(id)arg3;
- (id)lastActivityDate;
- (id)manager;
- (BOOL)needsSave;
- (id)options;
- (BOOL)sendToServerPending;
- (void)setCanCreateStreams:(BOOL)arg1;
- (void)setCreatesNewUUIDIfSaved:(BOOL)arg1;
- (void)setDecodeUserInfoError:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDirty:(BOOL)arg1;
- (void)setDynamicIdentifier:(id)arg1;
- (void)setEncodedContainsUnsynchronizedCloudDocument:(BOOL)arg1;
- (void)setEncodedContainsUnsynchronizedCloudDocumentBackoffInterval:(double)arg1;
- (void)setEncodedFileProviderURL:(BOOL)arg1;
- (void)setForceImmediateSendToServer:(BOOL)arg1;
- (void)setLastActivityDate:(id)arg1;
- (void)setNeedsSave:(BOOL)arg1;
- (void)setOptions:(id)arg1;
- (void)setSendToServerPending:(BOOL)arg1;
- (void)setStreamsData:(id)arg1;
- (void)setSupportsContinuationStreams:(BOOL)arg1;
- (void)setTeamIdentifier:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setTypeIdentifier:(id)arg1;
- (void)setUniqueIdentifier:(id)arg1;
- (void)setUserInfo:(id)arg1;
- (void)setWebpageURL:(id)arg1;
- (id)streamsData;
- (unsigned long long)suggestedActionType;
- (BOOL)supportsContinuationStreams;
- (id)teamIdentifier;
- (id)title;
- (id)typeIdentifier;
- (id)uniqueIdentifier;
- (id)userInfo;
- (id)webpageURL;

// LSUserActivity (GURL)

- (BOOL)sendGURLAppleEvent;

// LSUserActivity (Internal)

+ (id)allowedWebpageURLSchemes;
+ (BOOL)checkWebpageURL:(id)arg1 actionType:(unsigned long long)arg2 throwIfFailed:(BOOL)arg3;

- (id)initWithManager:(id)arg1 userActivityInfo:(id)arg2;

// LSUserActivity (LSUserActivityAppLinks)

+ (BOOL)supportsUserActivityAppLinks;

// LSUserActivity (LSUserActivityAppLinksEncoding)

+ (id)_decodeFromScanner:(id)arg1;
+ (id)_decodeFromString:(id)arg1;
+ (id)_encodeKeyAndValueIntoString:(id)arg1 value:(id)arg2;
+ (id)_encodeToString:(id)arg1;

- (id)initWithUserActivityData:(id)arg1 options:(id)arg2;
- (id)initWithUserActivityStrings:(id)arg1 optionalString:(id)arg2 tertiaryData:(id)arg3 options:(id)arg4;

// LSUserActivity (LSUserActivityReminders)

+ (BOOL)_currentUserActivityUUIDWithOptions:(id)arg1 completionHandler:(id)arg2;
+ (id)currentUserActivityUUID;
+ (BOOL)currentUserActivityUUIDWithOptions:(id)arg1 completionHandler:(id)arg2;

// LSUserActivity (Legacy)

+ (id)suggestedActionOfType:(unsigned long long)arg1;

- (id)initWithSuggestedActionType:(unsigned long long)arg1 options:(id)arg2;
- (id)initWithUUID:(id)arg1;
- (void)setWebPageURL:(id)arg1;
- (id)webPageURL;

// LSUserActivity (Nudges)

+ (id)registerForSuggestedActionNudgeOfType:(unsigned long long)arg1 withOptions:(id)arg2 block:(id)arg3;
+ (void)unregisterForSuggestedActionNudgeOfType:(id)arg1;

@end
