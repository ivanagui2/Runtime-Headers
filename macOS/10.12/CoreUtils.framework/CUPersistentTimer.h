/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils
 */

@interface CUPersistentTimer : NSObject {
    NSDate * _cachedDate;
    double  _cachedInterval;
    double  _cachedLeeway;
    BOOL  _cachedRepeating;
    BOOL  _cachedUseXPC;
    BOOL  _cachedWakeSystem;
    NSDate * _date;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    NSString * _identifier;
    double  _interval;
    BOOL  _invalidateCalled;
    id  _invalidationHandler;
    double  _leeway;
    PCPersistentTimer * _pcPersistentTimer;
    BOOL  _repeating;
    id  _timerHandler;
    struct LogCategory { int x1; int x2; char *x3; unsigned int x4; char *x5; char *x6; int x7; struct LogCategory {} *x8; struct LogOutput {} *x9; struct LogOutput {} *x10; unsigned long long x11; unsigned long long x12; unsigned int x13; unsigned int x14; char *x15; struct LogCategoryPrivate {} *x16; } * _ucat;
    BOOL  _useXPC;
    BOOL  _wakeSystem;
    BOOL  _xpcRegistered;
}

@property (nonatomic, readwrite, retain) NSDate *date;
@property (nonatomic, readwrite, retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (nonatomic, readwrite) double interval;
@property (nonatomic, readwrite, copy) id invalidationHandler;
@property (nonatomic, readwrite) double leeway;
@property (nonatomic, readwrite) BOOL repeating;
@property (nonatomic, readwrite, copy) id timerHandler;
@property (nonatomic, readwrite) BOOL useXPC;
@property (nonatomic, readwrite) BOOL wakeSystem;

- (void).cxx_destruct;
- (void)_invalidate;
- (void)_pcTimerFired:(id)arg1;
- (void)_start;
- (void)_startPCPersistentTimer;
- (void)_startXPCActivity;
- (void)_xpcTimerFired:(id)arg1;
- (id)date;
- (void)dealloc;
- (id)dispatchQueue;
- (id)init;
- (id)initWithIdentifier:(id)arg1;
- (double)interval;
- (void)invalidate;
- (id)invalidationHandler;
- (double)leeway;
- (BOOL)repeating;
- (void)setDate:(id)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setInterval:(double)arg1;
- (void)setInvalidationHandler:(id)arg1;
- (void)setLeeway:(double)arg1;
- (void)setRepeating:(BOOL)arg1;
- (void)setTimerHandler:(id)arg1;
- (void)setUseXPC:(BOOL)arg1;
- (void)setWakeSystem:(BOOL)arg1;
- (void)start;
- (id)timerHandler;
- (BOOL)useXPC;
- (BOOL)wakeSystem;

@end
