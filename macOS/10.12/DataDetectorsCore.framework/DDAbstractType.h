/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore
 */

@interface DDAbstractType : NSObject {
    NSArray * _arguments;
    int  _kind;
    DDLocation * _location;
    NSString * _name;
}

@property (atomic, readonly) NSArray *arguments;
@property (atomic, readonly) BOOL isAny;
@property (atomic, readonly) BOOL isEmpty;
@property (atomic, readonly) BOOL isFlatName;
@property (atomic, readonly) int kind;
@property (atomic, readwrite, retain) DDLocation *location;
@property (atomic, readonly) NSString *name;

+ (id)anyType;
+ (id)emptyType;
+ (id)typeWithName:(id)arg1 component:(id)arg2 kind:(int)arg3 location:(id)arg4;
+ (id)typeWithName:(id)arg1 components:(id)arg2 kind:(int)arg3 location:(id)arg4;

- (void)_appendComponents:(id)arg1;
- (void)appendDescription:(id)arg1;
- (id)argument;
- (id)arguments;
- (void)dealloc;
- (id)description;
- (id)initWithConjunctionArg1:(id)arg1 arg2:(id)arg2;
- (id)initWithDisjunctionArg1:(id)arg1 arg2:(id)arg2;
- (id)initWithName:(id)arg1 components:(id)arg2 kind:(int)arg3 location:(id)arg4;
- (id)initWithNameType:(id)arg1;
- (id)initWithOptional:(id)arg1;
- (BOOL)isAny;
- (BOOL)isEmpty;
- (BOOL)isFlatName;
- (int)kind;
- (id)location;
- (id)name;
- (void)setLocation:(id)arg1;
- (id)verboseDescription;

// DDAbstractType (TypeCheckingTools)

- (id)computeInhabitant:(id)arg1;

@end
