/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSNavNodePopUpButton : NSPopUpButton <NSMenuDelegate> {
    unsigned int  _firstItemDirty;
    NSMutableArray * _groupIdentifiers;
    unsigned int  _inMenuTrackingMode;
    NSNavView * _navView;
    NSMutableDictionary * _nodeInfoTable;
    unsigned int  _otherMenuContentsDirty;
    unsigned int  _otherMenuIconsDirty;
    unsigned int  _reserved;
    NSMutableArray * _watchingNodes;
    unsigned int  _windowOrderedOut;
}

@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite) NSNavView *navView;
@property (atomic, readonly) Class superclass;

- (void)_appendNodes:(id)arg1 forNodeInfo:(id)arg2 addSeparator:(BOOL)arg3 shouldFilter:(BOOL)arg4;
- (void)_commonInitNavNodePopUpButton;
- (id)_keyEquivalentForNode:(id)arg1;
- (BOOL)_keyEquivalentsAreActive;
- (BOOL)_lastItemIsNonSeparator;
- (void)_loadIconlessMenuContentsIfNecessary;
- (void)_loadMenuItemIconsIfNecessary;
- (id)_newIconlessMenuItemForNavNode:(id)arg1;
- (id)_nodesToDisplayForNodeInfo:(id)arg1;
- (void)_popUpItemAction:(id)arg1;
- (void)_setContentsDirty:(BOOL)arg1;
- (void)_setContentsDirtyForNodeWithIdentifier:(id)arg1;
- (void)_stopObservingChildrenAndRemoveAll;
- (void)_updateFirstItemIfNecessary;
- (void)_updateMenuItemIcon:(id)arg1;
- (void)appendDisplayedNode:(id)arg1 identifier:(id)arg2 title:(id)arg3 displaysChildren:(BOOL)arg4;
- (void)configureForCollapsedMode;
- (void)configureForRegularMode;
- (void)dealloc;
- (void)doneTrackingMenu:(id)arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id*)arg3 action:(SEL*)arg4;
- (void)menuNeedsUpdate:(id)arg1;
- (id)navView;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)replaceNodeWithIdentifier:(id)arg1 withDataFromDelegate:(id)arg2;
- (void)replaceNodeWithIdentifier:(id)arg1 withNode:(id)arg2;
- (id)selectedNavNode;
- (void)setNavView:(id)arg1;
- (void)update;
- (void)willPopUpNotification:(id)arg1;
- (void)windowOrderedIn;
- (void)windowOrderedOut;

@end
