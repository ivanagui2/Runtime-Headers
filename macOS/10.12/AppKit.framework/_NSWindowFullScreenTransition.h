/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface _NSWindowFullScreenTransition : _NSFullScreenTransition {
    NSWindow * _transitionedWindow;
}

@property (nonatomic, readwrite, retain) NSWindow *transitionedWindow;

+ (id)_fullScreenInstanceInSpace:(unsigned long long)arg1;
+ (id)fullScreenWindowTarget:(id)arg1;

- (id)_allWindowsOnCurrentSpace;
- (void)_cleanUpAfterExit;
- (id)_customColorForBackgroundWindow;
- (void)_exitFullScreenModeForWindow:(id)arg1 duration:(double)arg2 completionHandler:(id)arg3;
- (id)_floatingToolbarWindow;
- (id)_getPossibleCustomWindowsForEnteringIntoFullScreen;
- (id)_getPossibleCustomWindowsForExitingFullScreenForWindow:(id)arg1;
- (id)_maybeFilterParticipatingWindowNumbers:(id)arg1 byScreen:(id)arg2;
- (id)_participatingWindowNumbersForTransition:(long long)arg1 animation:(BOOL)arg2 customWindows:(id)arg3;
- (void)_performExitFullScreenModeForWindow:(id)arg1 windowController:(id)arg2 options:(struct { BOOL x1; BOOL x2; BOOL x3; double x4; BOOL x5; BOOL x6; })arg3 customWindows:(id)arg4 doKitAnimation:(BOOL)arg5;
- (void)_prepareToExitFullScreenMode;
- (BOOL)_sendStartCustomAnimationForExitOfWindowIfNeeded:(id)arg1 duration:(double)arg2;
- (void)_setupToolbarWindowIfNeeded;
- (void)_setupWindowForAfterFullScreenExit;
- (BOOL)_shouldUseScreenBackgroundViewForFullScreen;
- (void)_spinRunloopForDuration:(double)arg1;
- (void)_updateUserSpaceSavedFrameIfNeeded;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_windowFrameForFullScreenMode;
- (void)captureCurrentAfterScreenShotsIncludingShadow:(BOOL)arg1 destinationSpace:(unsigned long long)arg2;
- (id)cocoaWindow;
- (id)copyWindowNumbersForScreenShot;
- (void)dealloc;
- (BOOL)disableMCExit;
- (void)displayChangedForMissionControlMoveOfWindow:(long long)arg1;
- (void)enterFullScreenTransitionForWindow:(id)arg1 options:(struct { BOOL x1; BOOL x2; unsigned long long x3; unsigned long long x4; })arg2;
- (void)exitFullScreenForQuit;
- (void)exitFullScreenStatusItemClicked:(id)arg1;
- (void)exitFullScreenTransitionFinished;
- (void)exitFullScreenTransitionForWindow:(id)arg1 options:(struct { BOOL x1; BOOL x2; BOOL x3; double x4; BOOL x5; BOOL x6; })arg2;
- (void)failedToEnterFullScreenWithAnimation:(BOOL)arg1 whichIsKitAnimation:(BOOL)arg2;
- (id)fullScreenTitle;
- (id)init;
- (void)orderTransitionedWindowFront;
- (void)setAsThePrincipalFullScreenWindowInSpace;
- (void)setTransitionedWindow:(id)arg1;
- (void)setTransitionedWindowFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setWindowToHaveFullScreenSize;
- (BOOL)sharesTileWithOtherTabs;
- (id)transitionedWindow;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })transitionedWindowAnimationTargetFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })transitionedWindowFrame;
- (struct CGSize { double x1; double x2; })transitionedWindowShadowOffset;
- (void)updateBackgroundColorIfNeeded;

@end
