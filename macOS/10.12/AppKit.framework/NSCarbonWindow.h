/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSCarbonWindow : NSWindow {
    unsigned int  _cwFlags;
    struct OpaqueEventHandlerRef { } * _eventHandler;
    BOOL  _forceNotKeyWindowForInputContext;
    int (* _handleEventUPP;
    BOOL  _handlingCarbonWindowActivationEvents;
    BOOL  _passingCarbonWindowActivationEvents;
    struct OpaqueWindowPtr { } * _windowRef;
    BOOL  _windowRefIsOwned;
}

@property (atomic, readwrite) unsigned int cwFlags;

+ (Class)frameViewClassForStyleMask:(unsigned long long)arg1;
+ (void)setWindowLevelOfWindowGroupForWindowRef:(struct OpaqueWindowPtr { }*)arg1 toLevel:(long long)arg2;

- (BOOL)_allowsActiveInputContext;
- (void)_cancelKey:(id)arg1;
- (unsigned int)_carbonWindowClass;
- (void)_cleanup;
- (id)_clearModalWindowLevel;
- (void)_commonAwake;
- (id)_destroyRealWindow:(BOOL)arg1;
- (int)_focusAcquired;
- (int)_focusRelinquished;
- (BOOL)_handleEventsTheCarbonWay;
- (BOOL)_hasWindowRef;
- (BOOL)_managesWindowRef;
- (void)_oldPlaceWindow:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_postCarbonWindowActivateEvent:(BOOL)arg1 makeKeyWindow:(BOOL)arg2;
- (void)_reallyDoOrderWindow:(long long)arg1 relativeTo:(long long)arg2 findKey:(BOOL)arg3 forCounter:(BOOL)arg4 force:(BOOL)arg5 isModal:(BOOL)arg6;
- (void)_removeReferencesToCarbonWindowRef;
- (void)_removeWindowRef;
- (void)_restoreLevelAfterRunningModal;
- (void)_setEventMask:(long long)arg1;
- (void)_setForceNotKeyWindowForInputContext:(BOOL)arg1;
- (void)_setModalWindowLevel;
- (void)_setWindowRef:(struct OpaqueWindowPtr { }*)arg1;
- (void)_termWindowIfOwner;
- (void)_windowMovedToRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)becomeKeyWindow;
- (void)becomeMainWindow;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (unsigned int)carbonHICommandIDFromActionSelector:(SEL)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })carbonPlatformWindowBounds;
- (void)clear:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })constrainFrameRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 toScreen:(id)arg2;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (unsigned int)cwFlags;
- (void)dealloc;
- (void)display;
- (void)encodeWithCoder:(id)arg1;
- (void)handleCarbonBoundsChange;
- (int)handleMouseDownEvent:(struct OpaqueEventRef { }*)arg1 at:(struct Point { short x1; short x2; })arg2 inPart:(short)arg3 withMods:(unsigned int)arg4;
- (id)initWithCarbonWindowRef:(struct OpaqueWindowPtr { }*)arg1 takingOwnership:(BOOL)arg2;
- (id)initWithCarbonWindowRef:(struct OpaqueWindowPtr { }*)arg1 takingOwnership:(BOOL)arg2 disableOrdering:(BOOL)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithContentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;
- (BOOL)isExcludedFromWindowsMenu;
- (long long)level;
- (void)paste:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (BOOL)reconcileToCarbonWindowBounds;
- (void)redo:(id)arg1;
- (void)resignKeyWindow;
- (void)resignMainWindow;
- (void)selectAll:(id)arg1;
- (void)sendCarbonProcessHICommandEvent:(unsigned int)arg1;
- (unsigned char)sendCarbonUpdateHICommandStatusEvent:(unsigned int)arg1 withMenuRef:(struct OpaqueMenuRef { }*)arg2 andMenuItemIndex:(unsigned short)arg3;
- (void)sendEvent:(id)arg1;
- (void)sendSuperEvent:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)setCwFlags:(unsigned int)arg1;
- (void)setHasShadow:(BOOL)arg1;
- (void)setHidesOnDeactivate:(BOOL)arg1;
- (void)setLevel:(long long)arg1;
- (void)setStyleMask:(unsigned long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })startRectForSheet:(id)arg1;
- (void)undo:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (struct OpaqueWindowPtr { }*)windowRef;
- (BOOL)worksWhenModal;

@end
