/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSOpenGLView : NSView {
    NSOpenGLContext * _openGLContext;
    NSOpenGLPixelFormat * _pixelFormat;
    long long  _reserved1;
    long long  _reserved2;
    long long  _reserved3;
}

@property (atomic, readwrite) BOOL animates;
@property (atomic, readwrite) BOOL canAnimateOnBackgroundThread;
@property (atomic, readwrite, retain) NSOpenGLContext *openGLContext;
@property (atomic, readonly) struct CGSize { double x1; double x2; } openGLSurfaceSize;
@property (atomic, readwrite, retain) NSOpenGLPixelFormat *pixelFormat;

+ (id)defaultPixelFormat;
+ (void)initialize;

- (id)_invalidateGStatesForTree;
- (void)_surfaceNeedsUpdate:(id)arg1;
- (void)clearGLContext;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 pixelFormat:(id)arg2;
- (BOOL)isOpaque;
- (long long)layerContentsRedrawPolicy;
- (BOOL)lockFocusIfCanDraw;
- (id)makeBackingLayer;
- (id)openGLContext;
- (id)pixelFormat;
- (void)prepareOpenGL;
- (void)reshape;
- (void)setLayer:(id)arg1;
- (void)setOpenGLContext:(id)arg1;
- (void)setPixelFormat:(id)arg1;
- (void)update;
- (void)viewDidChangeBackingProperties;

// NSOpenGLView (NSOpenGLSurface)

- (struct CGPoint { double x1; double x2; })convertPointFromOpenGLSurface:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGPoint { double x1; double x2; })convertPointToOpenGLSurface:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRectFromOpenGLSurface:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRectToOpenGLSurface:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })convertSizeFromOpenGLSurface:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })convertSizeToOpenGLSurface:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })openGLSurfaceSize;

// NSOpenGLView (NSOpenGLSurfaceResolution)

- (void)setWantsBestResolutionOpenGLSurface:(BOOL)arg1;
- (BOOL)wantsBestResolutionOpenGLSurface;

// NSOpenGLView (NSOpenGLViewAnimation)

- (BOOL)animates;
- (BOOL)canAnimateOnBackgroundThread;
- (void)setAnimates:(BOOL)arg1;
- (void)setCanAnimateOnBackgroundThread:(BOOL)arg1;

@end
