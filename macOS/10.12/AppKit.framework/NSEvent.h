/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSEvent : NSObject <NSCoding, NSCopying> {
    id  _WSTimestamp;
    NSGraphicsContext * _context;
    union { 
        struct { 
            int eventNumber; 
            int clickCount; 
            float pressure; 
            double deltaX; 
            double deltaY; 
            int subtype; 
            short buttonNumber; 
            short reserved1; 
            int reserved2[3]; 
        } mouse; 
        struct { 
            NSString *keys; 
            NSString *unmodKeys; 
            unsigned short keyCode; 
            BOOL isARepeat; 
            int eventFlags; 
            int reserved[5]; 
        } key; 
        struct { 
            int eventNumber; 
            long long trackingNumber; 
            void *userData; 
            int reserved[6]; 
        } tracking; 
        struct { 
            double deltaX; 
            double deltaY; 
            double deltaZ; 
            short subtype; 
            short reserved1; 
            int reserved2[6]; 
        } scrollWheel; 
        struct { 
            double deltaX; 
            double deltaY; 
            double deltaZ; 
            int reserved[7]; 
        } axisGesture; 
        struct { 
            short subtype; 
            BOOL gestureEnded; 
            BOOL reserved; 
            int value; 
            float percentage; 
            int reserved2[7]; 
        } miscGesture; 
        struct { 
            int subtype; 
            long long data1; 
            long long data2; 
            int reserved[6]; 
        } misc; 
        int tabletPointData[14]; 
        int tabletProximityData[14]; 
    }  _data;
    void * _eventRef;
    struct CGPoint { 
        double x; 
        double y; 
    }  _location;
    unsigned int  _modifierFlags;
    double  _timestamp;
    unsigned long long  _type;
    NSWindow * _window;
    long long  _windowNumber;
    void * reserved1;
    void * reserved2;
}

@property (getter=isARepeat, atomic, readonly) BOOL ARepeat;
@property (atomic, readonly) struct __CGEvent { }*CGEvent;
@property (atomic, readonly) long long absoluteX;
@property (atomic, readonly) long long absoluteY;
@property (atomic, readonly) long long absoluteZ;
@property (atomic, readonly) unsigned long long associatedEventsMask;
@property (atomic, readonly) unsigned long long buttonMask;
@property (atomic, readonly) long long buttonNumber;
@property (atomic, readonly) unsigned long long capabilityMask;
@property (atomic, readonly, copy) NSString *characters;
@property (atomic, readonly, copy) NSString *charactersIgnoringModifiers;
@property (atomic, readonly) long long clickCount;
@property (atomic, readonly) NSGraphicsContext *context;
@property (atomic, readonly) long long data1;
@property (atomic, readonly) long long data2;
@property (atomic, readonly) double deltaX;
@property (atomic, readonly) double deltaY;
@property (atomic, readonly) double deltaZ;
@property (atomic, readonly) unsigned long long deviceID;
@property (getter=isDirectionInvertedFromDevice, atomic, readonly) BOOL directionInvertedFromDevice;
@property (getter=isEnteringProximity, atomic, readonly) BOOL enteringProximity;
@property (atomic, readonly) long long eventNumber;
@property (atomic, readonly) const void*eventRef;
@property (atomic, readonly) BOOL hasPreciseScrollingDeltas;
@property (atomic, readonly) unsigned short keyCode;
@property (atomic, readonly) struct CGPoint { double x1; double x2; } locationInWindow;
@property (atomic, readonly) double magnification;
@property (atomic, readonly) unsigned long long modifierFlags;
@property (atomic, readonly) unsigned long long momentumPhase;
@property (atomic, readonly) unsigned long long phase;
@property (atomic, readonly) unsigned long long pointingDeviceID;
@property (atomic, readonly) unsigned long long pointingDeviceSerialNumber;
@property (atomic, readonly) unsigned long long pointingDeviceType;
@property (atomic, readonly) float pressure;
@property (atomic, readonly) long long pressureBehavior;
@property (atomic, readonly) float rotation;
@property (atomic, readonly) double scrollingDeltaX;
@property (atomic, readonly) double scrollingDeltaY;
@property (atomic, readonly) long long stage;
@property (atomic, readonly) double stageTransition;
@property (atomic, readonly) short subtype;
@property (atomic, readonly) unsigned long long systemTabletID;
@property (atomic, readonly) unsigned long long tabletID;
@property (atomic, readonly) float tangentialPressure;
@property (atomic, readonly) struct CGPoint { double x1; double x2; } tilt;
@property (atomic, readonly) double timestamp;
@property (atomic, readonly) NSTrackingArea *trackingArea;
@property (atomic, readonly) long long trackingNumber;
@property (atomic, readonly) unsigned long long type;
@property (atomic, readonly) unsigned long long uniqueID;
@property (atomic, readonly) void*userData;
@property (atomic, readonly) id vendorDefined;
@property (atomic, readonly) unsigned long long vendorID;
@property (atomic, readonly) unsigned long long vendorPointingDeviceType;
@property (atomic, readonly) NSWindow *window;
@property (atomic, readonly) long long windowNumber;

+ (void)_clearCancelledTouches;
+ (id)_delayedEventMatchingMask:(unsigned long long)arg1 pull:(BOOL)arg2;
+ (void)_discardCursorEventsForWindowNumber:(long long)arg1 criteria:(long long)arg2;
+ (void)_discardEventsForTrackingArea:(id)arg1;
+ (void)_discardEventsForTrackingArea:(id)arg1 window:(id)arg2;
+ (void)_discardEventsFromSubthread:(id)arg1;
+ (void)_discardEventsMatchingMask:(unsigned long long)arg1 beforeTime:(unsigned long long)arg2 inQueue:(unsigned long long)arg3;
+ (void)_discardEventsWithMask:(unsigned long long)arg1 eventTime:(unsigned long long)arg2;
+ (id)_eventWithCGSEvent:(struct _CGSEventRecord { unsigned short x1; unsigned short x2; unsigned int x3; unsigned int x4; struct CGPoint { double x_5_1_1; double x_5_1_2; } x5; struct CGPoint { double x_6_1_1; double x_6_1_2; } x6; unsigned long long x7; unsigned int x8; unsigned int x9; unsigned int x10; struct __CGEventSourceData { int x_11_1_1; unsigned int x_11_1_2; unsigned int x_11_1_3; unsigned int x_11_1_4; unsigned long long x_11_1_5; unsigned int x_11_1_6; unsigned short x_11_1_7; unsigned char x_11_1_8; unsigned char x_11_1_9; unsigned long long x_11_1_10; } x11; struct _CGEventProcess { int x_12_1_1; unsigned int x_12_1_2; unsigned int x_12_1_3; unsigned int x_12_1_4; unsigned int x_12_1_5; } x12; union { struct { unsigned char x_1_2_1; unsigned char x_1_2_2; short x_1_2_3; int x_1_2_4; unsigned char x_1_2_5; BOOL x_1_2_6; unsigned char x_1_2_7; unsigned char x_1_2_8; short x_1_2_9; short x_1_2_10; union { struct _CGSTabletPointData { int x_1_4_1; int x_1_4_2; int x_1_4_3; unsigned short x_1_4_4; unsigned short x_1_4_5; struct { short x_6_5_1; short x_6_5_2; } x_1_4_6; unsigned short x_1_4_7; short x_1_4_8; unsigned short x_1_4_9; short x_1_4_10; short x_1_4_11; short x_1_4_12; } x_11_3_1; struct _CGSTabletProximityData { unsigned short x_2_4_1; unsigned short x_2_4_2; unsigned short x_2_4_3; unsigned short x_2_4_4; unsigned short x_2_4_5; unsigned short x_2_4_6; unsigned int x_2_4_7; unsigned long long x_2_4_8; unsigned int x_2_4_9; unsigned char x_2_4_10; unsigned char x_2_4_11; short x_2_4_12; } x_11_3_2; } x_1_2_11; unsigned int x_1_2_12 : 1; unsigned int x_1_2_13 : 31; unsigned int x_1_2_14; unsigned int x_1_2_15; unsigned int x_1_2_16; } x_13_1_1; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; short x_2_2_3; int x_2_2_4; unsigned char x_2_2_5; BOOL x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; short x_2_2_9; short x_2_2_10; union { struct _CGSTabletPointData { int x_1_4_1; int x_1_4_2; int x_1_4_3; unsigned short x_1_4_4; unsigned short x_1_4_5; struct { short x_6_5_1; short x_6_5_2; } x_1_4_6; unsigned short x_1_4_7; short x_1_4_8; unsigned short x_1_4_9; short x_1_4_10; short x_1_4_11; short x_1_4_12; } x_11_3_1; struct _CGSTabletProximityData { unsigned short x_2_4_1; unsigned short x_2_4_2; unsigned short x_2_4_3; unsigned short x_2_4_4; unsigned short x_2_4_5; unsigned short x_2_4_6; unsigned int x_2_4_7; unsigned long long x_2_4_8; unsigned int x_2_4_9; unsigned char x_2_4_10; unsigned char x_2_4_11; short x_2_4_12; } x_11_3_2; } x_2_2_11; unsigned int x_2_2_12 : 1; unsigned int x_2_2_13 : 31; unsigned int x_2_2_14; unsigned int x_2_2_15; unsigned int x_2_2_16; } x_13_1_2; } x13; })arg1;
+ (id)_eventWithEventRefInternal:(const void*)arg1;
+ (id)_eventsCancellingTouchesForWindow:(id)arg1;
+ (void)_fluidSwipeTrackingBehaviorChanged;
+ (id)_quickLookEventWithLocation:(struct CGPoint { double x1; double x2; })arg1 modifierFlags:(unsigned long long)arg2 timestamp:(double)arg3 windowNumber:(long long)arg4 context:(id)arg5 eventNumber:(long long)arg6;
+ (void)_resetDefaults;
+ (void)_resetDeviceCapabilityCaches;
+ (void)_resetDiscardMask;
+ (id)_sendEventToObservers:(id)arg1;
+ (void)_stopPeriodicEventsForSource:(id)arg1;
+ (id)_touchesFromSet:(id)arg1 matchingPhase:(unsigned long long)arg2 inView:(id)arg3 includeResting:(BOOL)arg4;
+ (id)addGlobalMonitorForEventsMatchingMask:(unsigned long long)arg1 handler:(id)arg2;
+ (id)addLocalMonitorForEventsMatchingMask:(unsigned long long)arg1 handler:(id)arg2;
+ (id)addLocalMonitorForEventsMatchingMask:(unsigned long long)arg1 placement:(long long)arg2 handler:(id)arg3;
+ (double)doubleClickInterval;
+ (id)enterExitEventWithType:(unsigned long long)arg1 location:(struct CGPoint { double x1; double x2; })arg2 modifierFlags:(unsigned long long)arg3 timestamp:(double)arg4 windowNumber:(long long)arg5 context:(id)arg6 eventNumber:(long long)arg7 trackingNumber:(long long)arg8 userData:(void*)arg9;
+ (id)eventWithCGEvent:(struct __CGEvent { }*)arg1;
+ (id)eventWithEventRef:(const void*)arg1;
+ (void)initialize;
+ (BOOL)isMouseCoalescingEnabled;
+ (BOOL)isSwipeTrackingFromScrollEventsEnabled;
+ (id)keyEventWithType:(unsigned long long)arg1 location:(struct CGPoint { double x1; double x2; })arg2 modifierFlags:(unsigned long long)arg3 timestamp:(double)arg4 windowNumber:(long long)arg5 context:(id)arg6 characters:(id)arg7 charactersIgnoringModifiers:(id)arg8 isARepeat:(BOOL)arg9 keyCode:(unsigned short)arg10;
+ (double)keyRepeatDelay;
+ (double)keyRepeatInterval;
+ (unsigned long long)modifierFlags;
+ (id)mouseEventWithType:(unsigned long long)arg1 location:(struct CGPoint { double x1; double x2; })arg2 modifierFlags:(unsigned long long)arg3 timestamp:(double)arg4 windowNumber:(long long)arg5 context:(id)arg6 eventNumber:(long long)arg7 clickCount:(long long)arg8 pressure:(float)arg9;
+ (struct CGPoint { double x1; double x2; })mouseLocation;
+ (id)otherEventWithType:(unsigned long long)arg1 location:(struct CGPoint { double x1; double x2; })arg2 modifierFlags:(unsigned long long)arg3 timestamp:(double)arg4 windowNumber:(long long)arg5 context:(id)arg6 subtype:(short)arg7 data1:(long long)arg8 data2:(long long)arg9;
+ (unsigned long long)pressedMouseButtons;
+ (void)removeMonitor:(id)arg1;
+ (void)setMouseCoalescingEnabled:(BOOL)arg1;
+ (double)standardMagnificationThreshold;
+ (float)standardRotationThreshold;
+ (void)startPeriodicEventsAfterDelay:(double)arg1 withPeriod:(double)arg2;
+ (void)stopPeriodicEvents;

- (struct __CGEvent { }*)CGEvent;
- (struct _CGSEventRecord { unsigned short x1; unsigned short x2; unsigned int x3; unsigned int x4; struct CGPoint { double x_5_1_1; double x_5_1_2; } x5; struct CGPoint { double x_6_1_1; double x_6_1_2; } x6; unsigned long long x7; unsigned int x8; unsigned int x9; unsigned int x10; struct __CGEventSourceData { int x_11_1_1; unsigned int x_11_1_2; unsigned int x_11_1_3; unsigned int x_11_1_4; unsigned long long x_11_1_5; unsigned int x_11_1_6; unsigned short x_11_1_7; unsigned char x_11_1_8; unsigned char x_11_1_9; unsigned long long x_11_1_10; } x11; struct _CGEventProcess { int x_12_1_1; unsigned int x_12_1_2; unsigned int x_12_1_3; unsigned int x_12_1_4; unsigned int x_12_1_5; } x12; union { struct { unsigned char x_1_2_1; unsigned char x_1_2_2; short x_1_2_3; int x_1_2_4; unsigned char x_1_2_5; BOOL x_1_2_6; unsigned char x_1_2_7; unsigned char x_1_2_8; short x_1_2_9; short x_1_2_10; union { struct _CGSTabletPointData { int x_1_4_1; int x_1_4_2; int x_1_4_3; unsigned short x_1_4_4; unsigned short x_1_4_5; struct { short x_6_5_1; short x_6_5_2; } x_1_4_6; unsigned short x_1_4_7; short x_1_4_8; unsigned short x_1_4_9; short x_1_4_10; short x_1_4_11; short x_1_4_12; } x_11_3_1; struct _CGSTabletProximityData { unsigned short x_2_4_1; unsigned short x_2_4_2; unsigned short x_2_4_3; unsigned short x_2_4_4; unsigned short x_2_4_5; unsigned short x_2_4_6; unsigned int x_2_4_7; unsigned long long x_2_4_8; unsigned int x_2_4_9; unsigned char x_2_4_10; unsigned char x_2_4_11; short x_2_4_12; } x_11_3_2; } x_1_2_11; unsigned int x_1_2_12 : 1; unsigned int x_1_2_13 : 31; unsigned int x_1_2_14; unsigned int x_1_2_15; unsigned int x_1_2_16; } x_13_1_1; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; short x_2_2_3; int x_2_2_4; unsigned char x_2_2_5; BOOL x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; short x_2_2_9; short x_2_2_10; union { struct _CGSTabletPointData { int x_1_4_1; int x_1_4_2; int x_1_4_3; unsigned short x_1_4_4; unsigned short x_1_4_5; struct { short x_6_5_1; short x_6_5_2; } x_1_4_6; unsigned short x_1_4_7; short x_1_4_8; unsigned short x_1_4_9; short x_1_4_10; short x_1_4_11; short x_1_4_12; } x_11_3_1; struct _CGSTabletProximityData { unsigned short x_2_4_1; unsigned short x_2_4_2; unsigned short x_2_4_3; unsigned short x_2_4_4; unsigned short x_2_4_5; unsigned short x_2_4_6; unsigned int x_2_4_7; unsigned long long x_2_4_8; unsigned int x_2_4_9; unsigned char x_2_4_10; unsigned char x_2_4_11; short x_2_4_12; } x_11_3_2; } x_2_2_11; unsigned int x_2_2_12 : 1; unsigned int x_2_2_13 : 31; unsigned int x_2_2_14; unsigned int x_2_2_15; unsigned int x_2_2_16; } x_13_1_2; } x13; })_cgsEventRecord;
- (unsigned long long)_cgsEventTime;
- (BOOL)_continuousScroll;
- (id)_eventCancellingTouchIdentities:(id)arg1;
- (id)_eventCancellingTouches;
- (double)_eventRecordDelta:(long long)arg1;
- (void*)_eventRef;
- (const void*)_eventRefInternal;
- (id)_eventRelativeToWindow:(id)arg1;
- (id)_eventRemovingTouchIdentities:(id)arg1;
- (id)_eventWithModifiers:(unsigned long long)arg1;
- (id)_eventWithOnlyTouchIdentities:(id)arg1;
- (void)_fixCommandAlphaShifts;
- (long long)_gestureAxis;
- (void)_initAuxiliaryData;
- (void)_initMTTouchesFromIOHidEvent:(struct __IOHIDEvent { }*)arg1;
- (id)_initWithCGEvent:(struct __CGEvent { }*)arg1 eventRef:(void*)arg2;
- (id)_initWithEventRefInternal:(const void*)arg1;
- (BOOL)_isDeadkey;
- (BOOL)_isSynthesizedKeyEvent;
- (BOOL)_isTouchesEnded;
- (BOOL)_matchesKeyEquivalent:(id)arg1 modifierMask:(unsigned long long)arg2;
- (long long)_nxeventTime;
- (void)_postAtStart:(BOOL)arg1;
- (void)_postDelayed;
- (void)_postFromSubthread:(BOOL)arg1;
- (void)_resetScrollAcceleration;
- (long long)_scrollCount;
- (long long)_scrollPhase;
- (void)_setEventRef:(void*)arg1;
- (void)_setSynthesizedKeyEvent:(BOOL)arg1;
- (void)_setTouches:(id)arg1;
- (id)_touchesMatchingPhase:(unsigned long long)arg1 inView:(id)arg2 includeResting:(BOOL)arg3;
- (void)_trackSwipeEventWithOptions:(unsigned long long)arg1 dampenAmountThresholdMin:(double)arg2 max:(double)arg3 trackingDistance:(double)arg4 axis:(long long)arg5 velocityFilterClass:(Class)arg6 usingHandler:(id)arg7;
- (double)_unacceleratedScrollingDeltaX;
- (double)_unacceleratedScrollingDeltaY;
- (struct CGSize { double x1; double x2; })_velocity;
- (long long)absoluteX;
- (long long)absoluteY;
- (long long)absoluteZ;
- (id)allTouches;
- (unsigned long long)associatedEventsMask;
- (unsigned long long)buttonMask;
- (long long)buttonNumber;
- (unsigned long long)capabilityMask;
- (id)characters;
- (id)charactersIgnoringModifiers;
- (long long)clickCount;
- (id)coalescedTouchesForTouch:(id)arg1;
- (id)context;
- (id)copy;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (long long)data1;
- (long long)data2;
- (void)dealloc;
- (double)deltaX;
- (double)deltaY;
- (double)deltaZ;
- (id)description;
- (double)deviceDeltaX;
- (double)deviceDeltaY;
- (double)deviceDeltaZ;
- (unsigned long long)deviceID;
- (void)encodeWithCoder:(id)arg1;
- (long long)eventNumber;
- (const void*)eventRef;
- (double)gestureAmount;
- (long long)gestureAxis;
- (BOOL)hasPreciseScrollingDeltas;
- (id)initWithCoder:(id)arg1;
- (BOOL)isARepeat;
- (BOOL)isDirectionInvertedFromDevice;
- (BOOL)isEnteringProximity;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isGesture;
- (unsigned short)keyCode;
- (struct CGPoint { double x1; double x2; })locationInWindow;
- (double)magnification;
- (unsigned long long)modifierFlags;
- (unsigned long long)momentumPhase;
- (unsigned long long)phase;
- (unsigned long long)pointingDeviceID;
- (unsigned long long)pointingDeviceSerialNumber;
- (unsigned long long)pointingDeviceType;
- (float)pressure;
- (long long)pressureBehavior;
- (double)progress;
- (float)rotation;
- (double)scrollingDeltaX;
- (double)scrollingDeltaY;
- (long long)stage;
- (double)stageTransition;
- (short)subtype;
- (unsigned long long)systemTabletID;
- (unsigned long long)tabletID;
- (float)tangentialPressure;
- (struct CGPoint { double x1; double x2; })tilt;
- (double)timestamp;
- (id)touchesForView:(id)arg1;
- (id)touchesMatchingPhase:(unsigned long long)arg1 inView:(id)arg2;
- (void)trackSwipeEventWithOptions:(unsigned long long)arg1 dampenAmountThresholdMin:(double)arg2 max:(double)arg3 usingHandler:(id)arg4;
- (id)trackingArea;
- (long long)trackingNumber;
- (unsigned long long)type;
- (unsigned long long)uniqueID;
- (void*)userData;
- (struct CGSize { double x1; double x2; })velocity;
- (id)vendorDefined;
- (unsigned long long)vendorID;
- (unsigned long long)vendorPointingDeviceType;
- (id)window;
- (long long)windowNumber;

// NSEvent (NSConcurrentEvents)

+ (id)_addConcurrentEventMonitorMatchingMask:(unsigned long long)arg1 identifier:(id)arg2 handler:(id)arg3;
+ (BOOL)_isConcurrentEventProcessingOn;
+ (BOOL)_isConcurrentEventProcessingSupported:(id*)arg1;
+ (id)_nextConcurrentEventMatchingMask:(unsigned long long)arg1;
+ (void)_registerForConcurrentEventProcessing;
+ (void)_removeConcurrentEventMonitor:(id)arg1;
+ (void)_startConcurrentEventProcessing;
+ (void)_updateMainThreadEventFilter;

// NSEvent (NSNavigationEventExtension)

+ (id)_navigationEventWithCommand:(long long)arg1 data:(long long)arg2 windowNumber:(long long)arg3;

- (long long)command;

// NSEvent (NSTabBarExtras)

+ (BOOL)_mouseButtonIsDown;

- (BOOL)_isEscapeKeyEvent;
- (BOOL)_isMiddleButtonEvent;
- (BOOL)_isSpaceKeyEvent;
- (BOOL)_isVerticalWheelEvent;
- (BOOL)_isWheelEvent;
- (BOOL)_safari_isKeyEvent:(unsigned short)arg1;

@end
