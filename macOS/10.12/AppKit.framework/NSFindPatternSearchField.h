/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSFindPatternSearchField : NSTextFinderBarSearchField <NSFindPatternField> {
    <NSFindPatternManager> * findPatternManager;
    NSFindPatternAttachmentCell * selectedAttachment;
}

@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite) <NSFindPatternManager> *findPatternManager;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readonly) Class superclass;

- (BOOL)_eventIsInsertPatternKeyEquivalent:(id)arg1;
- (id)_fieldEditor;
- (id)_findPatternAttachmentForFindPattern:(id)arg1;
- (void)_insertFindPattern:(id)arg1;
- (void)_insertFindPatternAttachment:(id)arg1;
- (void)_invalidateLayout;
- (BOOL)_isFindField;
- (id)_rangesOfFindPattern:(id)arg1;
- (void)_selectedFindPattern:(id)arg1;
- (void)_uniqueFindPatternsInAttributedStringAttachments:(id)arg1;
- (id)_uniquePatterns;
- (void)_updateFindPatternsWithNewPatterns:(id)arg1;
- (void)_updateReplacePatternsWithNewPatterns:(id)arg1;
- (id)findField;
- (id)findPatternArray;
- (id)findPatternManager;
- (id)findPatternPropertyList;
- (BOOL)hasFindPattern;
- (void)insertNewFindPattern:(id)arg1;
- (id)menuForFindPatternAttachment:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (id)plainTextValue;
- (id)regularExpression;
- (BOOL)removeFindPattern:(id)arg1;
- (id)replaceField;
- (id)replacementExpression;
- (void)setAttributedStringValue:(id)arg1;
- (void)setFindPatternArray:(id)arg1;
- (void)setFindPatternManager:(id)arg1;
- (void)setFindPatternPropertyList:(id)arg1;
- (void)setStringValue:(id)arg1;
- (void)textDidChange:(id)arg1;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 replacementString:(id)arg3;
- (id)textView:(id)arg1 shouldChangeTypingAttributes:(id)arg2 toAttributes:(id)arg3;

@end
