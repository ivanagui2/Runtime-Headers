/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSColorPickerWheelView : NSView {
    double  _brightness;
    NSColorSpace * _preferredDisplayColorSpace;
    id  colorPanel;
    id  controllingPicker;
    struct CGPoint { 
        double x; 
        double y; 
    }  currentPt;
    NSImage * displayWheelImage;
    BOOL  tracking;
}

@property (atomic, readonly, retain) NSColorSpace *effectiveDisplayColorSpace;
@property (atomic, readwrite, retain) NSColorSpace *preferredDisplayColorSpace;

+ (id)preferredColorSpaces;

- (id)_brightColorFromPoint:(struct CGPoint { double x1; double x2; })arg1 fullBrightness:(BOOL)arg2;
- (id)_colorFromPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_compositeImage;
- (id)_displayFallbackColorSpace;
- (BOOL)_isShowingKeyboardFocus;
- (struct CGPoint { double x1; double x2; })_pointFromColor:(id)arg1;
- (BOOL)_pointInPicker:(struct CGPoint { double x1; double x2; }*)arg1;
- (id)_resizeView;
- (void)_selectColorSpace:(id)arg1;
- (void)_windowChangedKeyState;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (id)brightColor;
- (id)color;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)effectiveDisplayColorSpace;
- (BOOL)isTracking;
- (id)menuForEvent:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (void)moveCurrentPointInDirection:(struct CGPoint { double x1; double x2; })arg1;
- (void)moveDown:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveUp:(id)arg1;
- (BOOL)needsPanelToBecomeKey;
- (id)preferredDisplayColorSpace;
- (BOOL)resignFirstResponder;
- (void)setBrightness:(double)arg1;
- (void)setColor:(id)arg1;
- (void)setFrameSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setKeyboardFocusRingNeedsDisplayIfNeededInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setPreferredDisplayColorSpace:(id)arg1;
- (id)storeColorPanel:(id)arg1;
- (void)viewDidChangeBackingProperties;
- (void)viewSizeChanged:(id)arg1;

@end
