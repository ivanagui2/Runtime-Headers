/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSFrameView : NSView {
    BOOL  ___available_for_whatever;
    int  __unusedShadowState;
    NSString * _title;
    NSButton * closeButton;
    NSMutableArray * edgeResizingTrackingAreas;
    NSButton * minimizeButton;
    BOOL  resizeByIncrement;
    struct CGSize { 
        double width; 
        double height; 
    }  resizeParameter;
    unsigned long long  styleMask;
    unsigned char  tabViewCount;
    NSCell * titleCell;
    NSButton * zoomButton;
}

+ (id)_defaultTitleFontForWindowWithStyleMask:(unsigned long long)arg1;
+ (unsigned long long)_validateStyleMask:(unsigned long long)arg1;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentRectForFrameRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 styleMask:(unsigned long long)arg2;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameRectForContentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 styleMask:(unsigned long long)arg2;
+ (void)initTitleCell:(id)arg1 styleMask:(unsigned long long)arg2;
+ (void)initialize;
+ (struct CGSize { double x1; double x2; })minContentSizeForMinFrameSize:(struct CGSize { double x1; double x2; })arg1 styleMask:(unsigned long long)arg2;
+ (struct CGSize { double x1; double x2; })minFrameSizeForMinContentSize:(struct CGSize { double x1; double x2; })arg1 styleMask:(unsigned long long)arg2;
+ (double)minFrameWidthWithTitle:(id)arg1 styleMask:(unsigned long long)arg2;

- (BOOL)_canHaveToolbar;
- (void)_clearDragMargins;
- (double)_distanceFromToolbarBaseToTitlebar;
- (void)_drawFrameRects:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_drawFrameShadowAndFlushContext:(id)arg1;
- (id)_edgeResizingTrackingAreas;
- (void)_hideToolbarWithAnimation:(BOOL)arg1;
- (BOOL)_isHUDWindow;
- (BOOL)_isSheet;
- (BOOL)_isUtility;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_maxTitlebarTitleRect;
- (void)_resetDragMargins;
- (void)_setFrameNeedsDisplay:(BOOL)arg1;
- (void)_setNonactivatingPanel:(BOOL)arg1;
- (void)_setShadowParameters;
- (void)_setUtilityWindow:(BOOL)arg1;
- (unsigned long long)_shadowFlags;
- (struct CGSize { double x1; double x2; })_shadowOffsetForActiveAppearance:(BOOL)arg1;
- (long long)_shadowType;
- (long long)_shadowTypeForActiveAppearance:(BOOL)arg1;
- (void)_showToolbarWithAnimation:(BOOL)arg1;
- (BOOL)_toolbarIsHidden;
- (BOOL)_toolbarIsInTransition;
- (BOOL)_toolbarIsManagedByExternalWindow;
- (BOOL)_toolbarIsShown;
- (void)_updateButtonState;
- (void)addSubview:(id)arg1;
- (void)adjustHalftonePhase;
- (struct CGSize { double x1; double x2; })aspectRatio;
- (id)closeButton;
- (double)contentAlpha;
- (id)contentFill;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentRectForFrameRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 styleMask:(unsigned long long)arg2;
- (struct __CFString { }*)customizedBackgroundTypeForTitleCell:(id)arg1;
- (void)dealloc;
- (id)defaultTitleFont;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })dragRectForFrameRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawThemeContentFill:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inView:(id)arg2;
- (void)drawWindowBackgroundRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawWindowBackgroundRegion:(struct CGSRegionObject { }*)arg1;
- (id)frameColor;
- (BOOL)frameNeedsDisplay;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameRectForContentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 styleMask:(unsigned long long)arg2;
- (void)initTitleCell:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 styleMask:(unsigned long long)arg2 owner:(id)arg3;
- (struct CGSize { double x1; double x2; })minFrameSize;
- (struct CGSize { double x1; double x2; })minFrameSizeForMinContentSize:(struct CGSize { double x1; double x2; })arg1 styleMask:(unsigned long long)arg2;
- (struct CGSize { double x1; double x2; })miniaturizedSize;
- (id)minimizeButton;
- (id)representedFilename;
- (struct CGSize { double x1; double x2; })resizeIncrements;
- (void)setAspectRatio:(struct CGSize { double x1; double x2; })arg1;
- (void)setDocumentEdited:(BOOL)arg1;
- (void)setIsClosable:(BOOL)arg1;
- (void)setIsResizable:(BOOL)arg1;
- (void)setRepresentedFilename:(id)arg1;
- (void)setResizeIncrements:(struct CGSize { double x1; double x2; })arg1;
- (void)setShadowState:(long long)arg1;
- (void)setStyleMask:(unsigned long long)arg1;
- (void)setTitle:(id)arg1;
- (void)setTitle:(id)arg1 andDefeatWrap:(BOOL)arg2;
- (void)setUpGState;
- (long long)shadowState;
- (void)shapeWindow;
- (BOOL)shouldUseStyledTextInTitleCell:(id)arg1;
- (unsigned long long)styleMask;
- (void)systemColorsDidChange:(id)arg1;
- (void)tabViewAdded;
- (void)tabViewRemoved;
- (void)tile;
- (void)tileAndSetWindowShape:(BOOL)arg1;
- (id)title;
- (void)titleBarHiddenChanged;
- (id)titleCell;
- (id)titleFont;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })titlebarRect;
- (void)updateTrackingAreas;
- (BOOL)usesCustomDrawing;
- (id)zoomButton;

@end
