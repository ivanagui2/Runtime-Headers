/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSCollectionViewGridLayout : NSCollectionViewLayout {
    NSArray * _backgroundColors;
    /* Warning: unhandled array encoding: '[22@]' */ id  _glReserved;
    struct NSEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _margins;
    unsigned long long  _maxGridColumns;
    unsigned long long  _maxGridRows;
    struct CGSize { 
        double width; 
        double height; 
    }  _maxItemSize;
    struct CGSize { 
        double width; 
        double height; 
    }  _minItemSize;
    double  _minimumInteritemSpacing;
    double  _minimumLineSpacing;
}

@property (atomic, readwrite, copy) NSArray *backgroundColors;
@property (atomic, readwrite) struct NSEdgeInsets { double x1; double x2; double x3; double x4; } margins;
@property (atomic, readwrite) struct CGSize { double x1; double x2; } maximumItemSize;
@property (atomic, readwrite) unsigned long long maximumNumberOfColumns;
@property (atomic, readwrite) unsigned long long maximumNumberOfRows;
@property (atomic, readwrite) double minimumInteritemSpacing;
@property (atomic, readwrite) struct CGSize { double x1; double x2; } minimumItemSize;
@property (atomic, readwrite) double minimumLineSpacing;

- (BOOL)_shouldRelayoutImmediatelyForNewCollectionViewSize;
- (id)backgroundColors;
- (struct CGSize { double x1; double x2; })collectionViewContentSize;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)layoutAttributesForDropTargetAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)layoutAttributesForElementsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)layoutAttributesForInterItemGapBeforeIndexPath:(id)arg1;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (struct NSEdgeInsets { double x1; double x2; double x3; double x4; })margins;
- (struct CGSize { double x1; double x2; })maximumItemSize;
- (unsigned long long)maximumNumberOfColumns;
- (unsigned long long)maximumNumberOfRows;
- (double)minimumInteritemSpacing;
- (struct CGSize { double x1; double x2; })minimumItemSize;
- (double)minimumLineSpacing;
- (void)prepareLayout;
- (void)setBackgroundColors:(id)arg1;
- (void)setMargins:(struct NSEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setMaximumItemSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setMaximumNumberOfColumns:(unsigned long long)arg1;
- (void)setMaximumNumberOfRows:(unsigned long long)arg1;
- (void)setMinimumInteritemSpacing:(double)arg1;
- (void)setMinimumItemSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setMinimumLineSpacing:(double)arg1;
- (BOOL)shouldInvalidateLayoutForBoundsChange:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;

// NSCollectionViewGridLayout (NSInternal)

- (struct { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; unsigned long long x4; unsigned long long x5; })_computeGridConfiguration;
- (struct { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; unsigned long long x4; unsigned long long x5; })_computeGridConfigurationWithCount:(unsigned long long)arg1;
- (struct { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; unsigned long long x4; unsigned long long x5; })_computeGridConfigurationWithSize:(struct CGSize { double x1; double x2; })arg1;
- (struct { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; unsigned long long x4; unsigned long long x5; })_computeGridConfigurationWithSize:(struct CGSize { double x1; double x2; })arg1 count:(unsigned long long)arg2;
- (struct { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; unsigned long long x4; unsigned long long x5; })_currentGridConfiguration;
- (BOOL)_filledViewShouldExtendVertically;
- (void)_hitTestPoint:(struct CGPoint { double x1; double x2; })arg1 usingBlock:(id)arg2;
- (void)_updateGridSettingsWithPrototype;
- (long long)scrollDirection;

@end
