/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSTabButton : NSTabBarViewButton <NSRolloverButtonDelegate, _NSVibrancyTransitioningImageViewDelegate> {
    _NSTabButtonAccessibilityHelper * _accessibilityHelper;
    NSArray * _accessoryViewConstraints;
    NSMutableArray * _accessoryViews;
    _NSKeyLoopSplicingContainerView * _accessoryViewsContainer;
    unsigned long long  _alignment;
    NSImage * _alternateImage;
    double  _buttonWidthForTitleLayout;
    BOOL  _canShowCloseButton;
    NSRolloverButton * _closeButton;
    <NSTabButtonDelegate> * _delegate;
    BOOL  _didEstablishTabBarViewItemBindings;
    NSView * _focusRingView;
    NSImage * _image;
    NSView * _mainContentClippingContainer;
    NSView * _mainContentContainer;
    double  _mainContentContainerCenterOffset;
    NSLayoutConstraint * _mainContentContainerHorizontalCenteringConstraint;
    NSLayoutConstraint * _mainContentContainerLeftConstraint;
    NSLayoutConstraint * _mainContentContainerRightConstraint;
    NSLayoutConstraint * _mainContentContainerWidthConstraint;
    BOOL  _pinned;
    NSView * _pinnedTabFaviconContainerView;
    CALayer * _pinnedTabFaviconFullscreenBackgroundHighlightLayer;
    NSView * _pinnedTabFaviconFullscreenBackgroundView;
    NSVisualEffectView * _pinnedTabFaviconFullscreenVisualEffectView;
    _NSVibrancyTransitioningImageView * _pinnedTabFaviconView;
    BOOL  _showingCloseButton;
    NSWindowTabViewItem * _tabBarViewItem;
    NSString * _title;
    NSStackView * _titleContainerView;
    NSLayoutConstraint * _titleContainerViewHorizontalCenteringConstraint;
    NSTextField * _titleTextField;
    double  _titleTextFieldCenterOffset;
}

@property (nonatomic, readonly) id accessibilityHelper;
@property (nonatomic, readwrite, copy) NSArray *accessoryViews;
@property (nonatomic, readwrite) unsigned long long alignment;
@property (nonatomic, readwrite, retain) NSImage *alternateImage;
@property (nonatomic, readwrite) double buttonWidthForTitleLayout;
@property (nonatomic, readwrite) BOOL canShowCloseButton;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (nonatomic, readwrite) <NSTabButtonDelegate> *delegate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (nonatomic, readwrite, retain) NSImage *image;
@property (nonatomic, readwrite) double mainContentContainerCenterOffset;
@property (getter=isPinned, nonatomic, readwrite) BOOL pinned;
@property (getter=isShowingCloseButton, nonatomic, readwrite) BOOL showingCloseButton;
@property (atomic, readonly) Class superclass;
@property (atomic, readonly) NSWindowTabViewItem *tabBarViewItem;
@property (nonatomic, readonly) NSRolloverButton *test_closeButton;
@property (nonatomic, readonly) NSTextField *test_titleTextField;
@property (nonatomic, readwrite, copy) NSString *title;
@property (nonatomic, readwrite) double titleTextFieldCenterOffset;

+ (id)titleFont;
+ (double)titleWidthForButtonWidth:(double)arg1;

- (void).cxx_destruct;
- (void)_addWebsiteIconVisualEffectViewForFullScreenToolbarWindow;
- (void)_closeButtonClicked:(id)arg1;
- (BOOL)_isDark;
- (void)_reconfigureFullscreenViewsUsingVisualEffectViews:(BOOL)arg1;
- (void)_removeWebsiteIconVisualEffectViewForFullScreenToolbarWindow;
- (void)_setUpConstraints;
- (BOOL)_shouldDoLayerPerformanceUpdates;
- (BOOL)_shouldShowCloseButton;
- (id)_titleStringAttributesForMainWindow:(BOOL)arg1 activeTab:(BOOL)arg2 isDragging:(BOOL)arg3 isDark:(BOOL)arg4;
- (void)_updateAccessoryViews;
- (void)_updateConstraints;
- (void)_updatePinnedTabFaviconFullscreenBackgroundColor;
- (void)_updatePinnedTabImageViewAnimated:(BOOL)arg1;
- (void)_updateTitleContainerConstraints;
- (void)_updateTitleTextFieldAndAccessibilityProperties;
- (BOOL)_windowIsActive;
- (id)accessibilityHelper;
- (BOOL)accessibilityPerformPress;
- (BOOL)accessibilityPerformShowMenu;
- (id)accessoryViews;
- (unsigned long long)alignment;
- (id)alternateImage;
- (BOOL)becomeFirstResponder;
- (double)buttonWidthForTitleLayout;
- (BOOL)canShowCloseButton;
- (void)dealloc;
- (id)delegate;
- (id)image;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 tabBarViewItem:(id)arg2;
- (BOOL)isPinned;
- (BOOL)isShowingCloseButton;
- (double)mainContentContainerCenterOffset;
- (id)menuForEvent:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (id)pinnedTabDragImageOfSize:(struct CGSize { double x1; double x2; })arg1;
- (BOOL)resignFirstResponder;
- (void)rolloverButtonDidBecomeFirstResponder:(id)arg1;
- (void)rolloverButtonDidResignFirstResponder:(id)arg1;
- (void)setAccessoryViews:(id)arg1;
- (void)setActive:(BOOL)arg1;
- (void)setAlignment:(unsigned long long)arg1;
- (void)setAlternateImage:(id)arg1;
- (void)setButtonWidthForTitleLayout:(double)arg1;
- (void)setButtonWidthForTitleLayout:(double)arg1 animated:(BOOL)arg2;
- (void)setCanShowCloseButton:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFrameSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setHasMouseOverHighlight:(BOOL)arg1 shouldAnimateCloseButton:(BOOL)arg2;
- (void)setHasPressedHighlight:(BOOL)arg1;
- (void)setImage:(id)arg1;
- (void)setMainContentContainerCenterOffset:(double)arg1;
- (void)setMainContentContainerCenterOffset:(double)arg1 animated:(BOOL)arg2;
- (void)setPinned:(BOOL)arg1;
- (void)setShowingCloseButton:(BOOL)arg1;
- (void)setTitle:(id)arg1;
- (void)setTitleTextFieldCenterOffset:(double)arg1;
- (void)setTitleTextFieldCenterOffset:(double)arg1 animated:(BOOL)arg2;
- (id)tabBarViewItem;
- (id)tabDragImageOfSize:(struct CGSize { double x1; double x2; })arg1;
- (id)test_closeButton;
- (id)test_titleTextField;
- (id)title;
- (double)titleTextFieldCenterOffset;
- (void)updateLayer;
- (long long)vibrancyTransitionForVibrancyTransitioningImageView:(id)arg1 transitioningFromVibrant:(BOOL)arg2 toVibrant:(BOOL)arg3;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;

@end
