/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSDocumentRevisionsController : NSObject <NSFilePresenter> {
    NSDocumentRevisionsPlaceholderView * _timeMachineStatusPlaceholderView;
    NSOperationQueue * asyncDocumentOpeningQueue;
    long long  asyncVersionLookupErrorCode;
    BOOL  asyncVersionLookupInProgress;
    void * backupCollectionToken;
    id  cancelAsyncVersionLookupBlock;
    unsigned long long  currentStackItemIndex;
    BOOL  ending;
    id  eventMonitorUninstaller;
    unsigned long long  fullScreenTileParentSpaceID;
    BOOL  gotBackupVersions;
    BOOL  gotNonLocalVersions;
    BOOL  hasAttemptedAsynchronousLookup;
    NSArray * inspectorWindows;
    BOOL  needToRestoreLiveEnvironment;
    BOOL  observingRevisions;
    BOOL  oldIsMovable;
    unsigned long long  oldPresentationOptions;
    unsigned long long  oldWindowCollectionBehavior;
    long long  oldWindowLevel;
    unsigned long long  oldWindowMask;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  oldWindowRect;
    unsigned long long  options;
    NSDocument * originalDocument;
    NSWindow * originalDocumentWindow;
    NSArray * otherWindowRestorationBlocks;
    long long  outcome;
    BOOL  preloadRevisions;
    BOOL  preparedForRevert;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  resizedWindowRect;
    NSFileVersion * revertingToVersion;
    _NSDocumentRevisionsCache * revisionCache;
    NSWindow * revisionWindow;
    BOOL  revisionWindowWasKey;
    BOOL  scheduledCorrectionBlock;
    NSMutableArray * stackItems;
    id  starfield;
    BOOL  suppressUnfocusingOriginalAfterSheet;
    NSMutableArray * transitoryAnimations;
    BOOL  unfocusOriginalAfterSheet;
    BOOL  unfocusRevisionAfterSheet;
    NSMutableSet * versionSet;
    NSDocumentRevisionsWindow * window;
    unsigned long long  windowFocusState;
    long long  windowSheetCount;
    BOOL  windowWasFullScreen;
    BOOL  windowWasLeftTile;
}

@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readonly, retain) NSOperationQueue *presentedItemOperationQueue;
@property (atomic, readonly, copy) NSURL *presentedItemURL;
@property (atomic, readonly, copy) NSURL *primaryPresentedItemURL;
@property (atomic, readonly) Class superclass;

+ (id)_descriptionForRevision:(id)arg1;
+ (void)_hideOverlayScrollersForView:(id)arg1;
+ (void)_hideOverlayScrollersForWindow:(id)arg1;
+ (void)_setOverlayScrollersHidden:(BOOL)arg1 forView:(id)arg2;
+ (void)_setOverlayScrollersHidden:(BOOL)arg1 forWindow:(id)arg2;
+ (id)_takeScreenshotExcludingWindows:(id)arg1;
+ (id)_windowForDocument:(id)arg1;
+ (void)doOrderingWithoutAnimationForWindow:(id)arg1 preventScrollerFlashing:(BOOL)arg2 withBlock:(id)arg3;
+ (id)sharedController;

- (id)_acquireDocumentForRevision:(id)arg1;
- (void)_addRevisionToCache:(id)arg1;
- (void)_animateDisplayFadeOut:(BOOL)arg1;
- (void)_animateInspectorWindows;
- (void)_appDidDeactivate:(id)arg1;
- (void)_appWillTerminate:(id)arg1;
- (long long)_asyncVersionLookupErrorCode;
- (BOOL)_asyncVersionLookupInProgress;
- (BOOL)_canDeleteCurrentVersion;
- (BOOL)_canPreloadRevisions;
- (BOOL)_canUnfocusWindow:(id)arg1;
- (void)_cancelTransitoryAnimations;
- (void)_checkShouldRevertToChosenVersionThenContinue:(id)arg1;
- (void)_cleanupVisualizationState;
- (void)_closeAllRevisionDocuments;
- (id)_closeDrawers;
- (id)_cloudVersionPlaceholderView;
- (id)_currentDocument;
- (id)_currentStackItem;
- (void)_deleteAllVersions;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_destinationFrameForFinishAnimation;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_destinationFrameForResizeAfterFinishAnimation;
- (id)_dictionaryForRevision:(id)arg1;
- (void)_displayProgressPanelOnWindow:(id)arg1 forDownloadingUbiquitousVersion:(id)arg2 canceller:(id*)arg3;
- (void)_doDuplicateRevisionDocument:(id)arg1 thenContinue:(id)arg2;
- (void)_endVisualizationAfterDelay;
- (void)_evictRevision:(id)arg1;
- (void)_finishedDownloadingNonLocalStackItem:(id)arg1;
- (id)_focusAnimationForOriginalWindow:(BOOL)arg1 fromState:(int)arg2 toState:(int)arg3;
- (id)_focusAnimationFromState:(int)arg1 toState:(int)arg2;
- (void)_focusWindow:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForAnimatingWindowFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 toSize:(struct CGSize { double x1; double x2; })arg2;
- (void)_handleIntrusion;
- (void)_hideRevisionWindow;
- (void)_insertVersions:(id)arg1;
- (id)_inspectorWindows;
- (void)_installEventTap;
- (BOOL)_isKeyWindowAllowed:(id)arg1;
- (BOOL)_isWindowFocused:(id)arg1;
- (void)_loadDocumentForStackItem:(id)arg1 wait:(BOOL)arg2 completionBlock:(id)arg3;
- (void)_loadSnapshotForStackItem:(id)arg1 forceNew:(BOOL)arg2 wait:(BOOL)arg3 thenContinue:(id)arg4;
- (unsigned long long)_nextRevisionIndexToPreload:(id)arg1;
- (id)_originalDocument;
- (long long)_outcome;
- (void)_performFinishAnimationThenContinue:(id)arg1 thenContinueWhenExited:(id)arg2;
- (void)_performStartAnimation;
- (struct CGSize { double x1; double x2; })_preferredSizeForRevision:(id)arg1;
- (void)_preloadNextRevision:(id)arg1;
- (void)_preloadRevisionAtIndex:(unsigned long long)arg1 thenContinue:(id)arg2;
- (void)_prepareForFinishAnimationWithOutcome:(long long)arg1;
- (BOOL)_prepareForStartAnimation;
- (id)_presentedItemTemporaryVersionStorageIdentifier;
- (void)_preventWindowCycling;
- (void)_relinquishRevision:(id)arg1;
- (void)_requestUIForStackItem:(id)arg1 wait:(BOOL)arg2 thenContinue:(id)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_resizedOriginalDocumentWindowFrame;
- (void)_restoreLiveEnvironment;
- (void)_restoreWindowCycling;
- (id)_scheduleTransitoryAnimationOfWindow:(id)arg1 startFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 endFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 startSize:(struct CGSize { double x1; double x2; })arg4 endSize:(struct CGSize { double x1; double x2; })arg5 hop:(BOOL)arg6 duration:(double)arg7;
- (void)_setAsyncVersionLookupError:(id)arg1 forDocument:(id)arg2;
- (void)_setAsyncVersionLookupInProgress:(BOOL)arg1 forDocument:(id)arg2;
- (void)_setDocument:(id)arg1 forRevision:(id)arg2;
- (void)_setPreferredSize:(struct CGSize { double x1; double x2; })arg1 forRevision:(id)arg2;
- (void)_sheetDidEnd:(id)arg1;
- (void)_sheetWillBegin:(id)arg1;
- (BOOL)_shouldHideTimelineForWindowFocusState:(int)arg1;
- (void)_showRevisionWindow:(id)arg1;
- (id)_snapshotForDocument:(id)arg1;
- (id)_snapshotOfPlaceholderView:(id)arg1;
- (void)_something:(id)arg1 didSomethingSoContinue:(id)arg2;
- (void)_something:(id)arg1 wasPresentedWithResult:(long long)arg2 soContinue:(id)arg3;
- (id)_startAsynchronouslyFetchingVersionsForURL:(id)arg1;
- (void)_startDownloadingStackItem:(id)arg1 completionHandler:(id)arg2;
- (void)_startIntrusionDetection;
- (void)_startObservingRevisions;
- (void)_startObservingSheetsForWindow:(id)arg1;
- (void)_startObservingWindowClosure;
- (void)_startObservingWindowFrameChanges;
- (void)_startPredownloadingNonLocalVersions;
- (void)_startPreloadingRevisions;
- (void)_startTransitoryAnimationsThenContinue:(id)arg1;
- (void)_stopIntrusionDetection;
- (void)_stopObservingRevisions;
- (void)_stopObservingSheetsForWindow:(id)arg1;
- (void)_stopObservingWindowClosure;
- (void)_stopObservingWindowFrameChanges;
- (void)_stopPreloadingRevisions;
- (id)_takeSnapshotOfWindow:(id)arg1;
- (void)_takeStartAnimationTransitionSnapshotsExcludingWindows:(id)arg1;
- (void)_unfocusWindow:(id)arg1;
- (void)_unfocusWindowAfterSheetIfNecessary:(id)arg1;
- (void)_uninstallEventTap;
- (void)_unshiftRevisionWindow;
- (void)_updateAsyncVersionLookupStatus;
- (void)_updateRevisionCacheCosts;
- (id)_versionLoadFailedPlaceholderView;
- (id)_versionsForDocument:(id)arg1;
- (void)_willEvictRevision:(id)arg1;
- (void)_windowDidBecomeKey:(id)arg1;
- (void)_windowDidResize:(id)arg1;
- (id)_windowForRevision:(id)arg1;
- (BOOL)_windowHasSheet;
- (void)_windowWillClose:(id)arg1;
- (void)cacheWillEvictRevision:(id)arg1;
- (BOOL)canGoToNextVersion;
- (BOOL)canGoToPreviousVersion;
- (unsigned long long)currentStackItemIndex;
- (void)dealloc;
- (void)discardAnyChangesToOldDocument;
- (void)duplicateCurrentRevision;
- (void)endVisualization;
- (void)endVisualizationOfDocument:(id)arg1 thenContinue:(id)arg2;
- (void)endVisualizationThenContinue:(id)arg1;
- (void)endVisualizationWithOutcome:(long long)arg1 thenContinueAfterAnimation:(id)arg2;
- (void)endVisualizationWithOutcome:(long long)arg1 thenContinueAfterAnimation:(id)arg2 thenContinueWhenExited:(id)arg3;
- (void)goToNextVersion:(id)arg1;
- (void)goToPreviousVersion:(id)arg1;
- (void)goToRevisionDidEnd;
- (void)goToRevisionWillBegin;
- (void)goToStackItemAtIndex:(unsigned long long)arg1;
- (BOOL)interceptsWindowClose:(id)arg1;
- (BOOL)isVisualizing;
- (BOOL)isVisualizingDocument:(id)arg1;
- (id)makeBackstopStackItems;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)presentedItemDidGainVersion:(id)arg1;
- (void)presentedItemDidLoseVersion:(id)arg1;
- (void)presentedItemDidMoveToURL:(id)arg1;
- (id)presentedItemOperationQueue;
- (id)presentedItemURL;
- (void)revertToCurrentRevision;
- (void)setCurrentStackItemIndex:(unsigned long long)arg1;
- (void)startDownloadingCurrentVersion:(id)arg1;
- (void)startVisualizationWithDocument:(id)arg1 options:(unsigned long long)arg2 thenContinue:(id)arg3;
- (void)takeOverWindow:(id)arg1 forRevision:(id)arg2;
- (void)timelineAction:(id)arg1;

@end
