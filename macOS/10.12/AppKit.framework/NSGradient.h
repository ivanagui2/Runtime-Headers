/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSGradient : NSObject <NSCoding, NSCopying> {
    NSArray * _colorArray;
    NSColorSpace * _colorSpace;
    void * _componentArray;
    void * _functionRef;
    void * _reserved1;
    void * _reserved2;
    void * _reserved3;
}

@property (atomic, readonly) NSColorSpace *colorSpace;
@property (atomic, readonly) long long numberOfColorStops;

+ (void)initialize;

- (id)_colorSpaceForColorArray:(id)arg1;
- (void)_commonInitWithColorArray:(id)arg1 colorSpace:(id)arg2 padStart:(BOOL)arg3 padEnd:(BOOL)arg4;
- (id)_initWithColorSpace:(id)arg1 callbacks:(struct CGFunctionCallbacks { unsigned int x1; int (*x2)(); int (*x3)(); })arg2 data:(void*)arg3;
- (struct CGFunction { }*)_interpolationFunctionRefWithCallbacks:(struct CGFunctionCallbacks { unsigned int x1; int (*x2)(); int (*x3)(); }*)arg1;
- (id)colorSpace;
- (id)copy;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (void)drawFromCenter:(struct CGPoint { double x1; double x2; })arg1 radius:(double)arg2 toCenter:(struct CGPoint { double x1; double x2; })arg3 radius:(double)arg4 options:(unsigned long long)arg5;
- (void)drawFromPoint:(struct CGPoint { double x1; double x2; })arg1 toPoint:(struct CGPoint { double x1; double x2; })arg2 options:(unsigned long long)arg3;
- (void)drawInBezierPath:(id)arg1 angle:(double)arg2;
- (void)drawInBezierPath:(id)arg1 relativeCenterPosition:(struct CGPoint { double x1; double x2; })arg2;
- (void)drawInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 angle:(double)arg2;
- (void)drawInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 relativeCenterPosition:(struct CGPoint { double x1; double x2; })arg2;
- (void)encodeWithCoder:(id)arg1;
- (void)getColor:(id*)arg1 location:(double*)arg2 atIndex:(long long)arg3;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithColors:(id)arg1;
- (id)initWithColors:(id)arg1 atLocations:(const double*)arg2 colorSpace:(id)arg3;
- (id)initWithColorsAndLocations:(id)arg1;
- (id)initWithStartingColor:(id)arg1 endingColor:(id)arg2;
- (id)interpolatedColorAtLocation:(double)arg1;
- (BOOL)isEqual:(id)arg1;
- (long long)numberOfColorStops;

// NSGradient (NSWindowBorderGradient)

+ (id)_windowBorderGradientFromGrayValue:(int)arg1 toGrayValue:(int)arg2 colorSpace:(id)arg3;

@end
