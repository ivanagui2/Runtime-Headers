/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSImageCell : NSCell <NSCoding, NSCopying> {
    struct _NSImageCellAnimationState { id x1; long long x2; long long x3; long long x4; long long x5; } * _animationState;
    id  _controlView;
    struct __ICFlags { 
        unsigned int _unused : 22; 
        unsigned int _animates : 1; 
        unsigned int _align : 4; 
        unsigned int _scale : 2; 
        unsigned int _style : 3; 
    }  _icFlags;
    NSImage * _scaledImage;
}

@property (atomic, readwrite) unsigned long long imageAlignment;
@property (atomic, readwrite) unsigned long long imageFrameStyle;
@property (atomic, readwrite) unsigned long long imageScaling;

+ (void)initialize;

- (BOOL)_allowsVibrancyForControlView:(id)arg1;
- (struct CGSize { double x1; double x2; })_cellSizeAccountingForImageInControl:(id)arg1;
- (unsigned long long)_currentImageStateForView:(id)arg1;
- (void)_drawBorderStyleWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inView:(id)arg2;
- (void)_drawImageWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inView:(id)arg2;
- (int)_effectiveBackgroundStyleInView:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_imageRectForDrawing:(id)arg1 inFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 inView:(id)arg3;
- (struct __CFDictionary { }*)_newCUIGrayBezelDrawOptionsInView:(id)arg1;
- (void)_setContents:(id)arg1;
- (BOOL)_shouldClip;
- (id)_vibrancyFilterForControlView:(id)arg1;
- (BOOL)_wantsFocusRingForControlView:(id)arg1;
- (struct CGSize { double x1; double x2; })cellSizeForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)controlView;
- (id)copy;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (void)drawFocusRingMaskWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inView:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })drawingRectForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)encodeWithCoder:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })focusRingMaskBoundsForFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inView:(id)arg2;
- (void)highlight:(BOOL)arg1 withFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 inView:(id)arg3;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 ofView:(id)arg3;
- (id)image;
- (unsigned long long)imageAlignment;
- (unsigned long long)imageFrameStyle;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })imageRectForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (unsigned long long)imageScaling;
- (id)init;
- (id)initImageCell:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (long long)interiorBackgroundStyle;
- (BOOL)isOpaque;
- (void)setControlView:(id)arg1;
- (void)setEditable:(BOOL)arg1;
- (void)setFormatter:(id)arg1;
- (void)setImage:(id)arg1;
- (void)setImageAlignment:(unsigned long long)arg1;
- (void)setImageFrameStyle:(unsigned long long)arg1;
- (void)setImageScaling:(unsigned long long)arg1;
- (void)setObjectValue:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })titleRectForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;

// NSImageCell (NSImageCellAccessibility)

- (BOOL)_hasAccessibilityTitle;
- (id)accessibilityAttributeNames;
- (id)accessibilityAuditLabel;
- (id)accessibilityDescriptionAttribute;
- (BOOL)accessibilityIsDescriptionAttributeSettable;
- (id)accessibilityRoleAttribute;

// NSImageCell (NSPrivateAnimationSupport)

- (BOOL)_animates;
- (void)_animationTimerCallback:(id)arg1;
- (void)_setAnimates:(BOOL)arg1;
- (void)_startAnimation;
- (void)_stopAnimation;

@end
