/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSToolbarFullScreenWindowManager : NSObject {
    NSMutableArray * _animatingOverlayWindows;
    BOOL  _animatingToCorrectPosition;
    BOOL  _appInitiatedInvalidTileResizeToFit;
    unsigned int  _autohideDisabledCounter;
    double  _autohideHeight;
    NSTitlebarAccessoryViewController * _auxiliaryViewController;
    double  _collapsingToPoint;
    double  _commitDecisionThreshold;
    BOOL  _committedToCollapse;
    unsigned long long  _dividerDirections;
    _NSFullScreenTileDividerWindow * _eastDividerWindow;
    BOOL  _freezeSnapshotOnly;
    BOOL  _hasAutohideToolbar;
    BOOL  _hasInvalidTileFrame;
    BOOL  _hasSiblings;
    BOOL  _inLayout;
    BOOL  _isCollapsing;
    unsigned long long  _lastMenuBarCompanionSpaceID;
    double  _lastSetAutohideHeight;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _liveResizeStartTileFrame;
    double  _menuBarReveal;
    BOOL  _messageTracedFirstUserResize;
    NSWindow * _originalWindow;
    BOOL  _performingLiveResize;
    BOOL  _performingTileResizeToFit;
    BOOL  _reactingToTileResizeNotification;
    BOOL  _registeredForNotes;
    double  _resizeCrossfadeDuration;
    _NSFullScreenTileResizeCrossfadeOverlayWindow * _resizeCrossfadeOverlay;
    BOOL  _shouldAutomaticallyAutohideToolbar;
    BOOL  _siblingOverlayNeedsBeginPresentation;
    _NSFullScreenTileOverlayWindow * _siblingTileOverlayWindow;
    BOOL  _suppressTileResizeNotification;
    double  _tileCreationTime;
    BOOL  _tileHadLimitedClipping;
    long long  _tileOverlayShowCount;
    _NSFullScreenTileOverlayWindow * _tileOverlayWindow;
    NSTitlebarContainerView * _titlebarContainerView;
    NSTitlebarView * _titlebarView;
    NSToolbar * _toolbar;
    BOOL  _toolbarWantsToAttachToMenubar;
    NSToolbarFullScreenWindow * _toolbarWindow;
    BOOL  _toolbarWindowIsInheritingAppearanceFromParentWindow;
    _NSFullScreenTileDividerWindow * _westDividerWindow;
    BOOL  _windowIsInFullScreen;
    void * evtHandler;
    unsigned int  forceWindowVisibleCounter;
    BOOL  isForcingToolbarVisibleForSheet;
    BOOL  isHandlingHotKeyEvent;
    BOOL  resizeContentWindowAfterToolbarAnimation;
    NSToolbarFullScreenResetableAnimation * windowSlideOutAnimation;
}

@property (getter=isHandlingHotKeyEvent, atomic, readwrite) BOOL handlingHotKeyEvent;
@property (atomic, readwrite) double menuBarReveal;
@property (nonatomic, readwrite) NSWindow *originalWindow;
@property (nonatomic, readwrite) NSTitlebarContainerView *titlebarContainerView;
@property (nonatomic, readwrite) NSTitlebarView *titlebarView;
@property (nonatomic, readwrite, retain) NSToolbar *toolbar;
@property (atomic, readwrite) BOOL toolbarWindowIsInheritingAppearanceFromParentWindow;

+ (id)fullScreenNotificationCenter;

- (void)_activateTileDividerWindows;
- (void)_addViewControllerToWindow;
- (void)_applicationDidBecomeActiveNotification:(id)arg1;
- (void)_applicationDidResignActiveNotification:(id)arg1;
- (void)_cacheTileRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)_calcAttachesToMenuBar;
- (struct CGPoint { double x1; double x2; })_calcWindowTopLeft;
- (void)_cancelResizeCrosfadeAnimation;
- (long long)_currentChildWindowOrderingPriority;
- (long long)_currentToolbarSubLevel;
- (void)_disableFullScreenAutohidingForToolbar:(id)arg1;
- (void)_disableFullScreenForceVisibleForToolbar:(id)arg1;
- (void)_doDidEnterFullScreen;
- (BOOL)_drivingLiveResize;
- (void)_enableFullScreenAutohidingForToolbar:(id)arg1;
- (void)_enableFullScreenForceVisibleForToolbar:(id)arg1;
- (void)_endLiveResize;
- (void)_exitFullScreenFromOverlay:(id)arg1;
- (void)_forceUpdateSpaceAndMenubarCompanionWindowAutohideHeight;
- (BOOL)_isTiledUnderMenuBar;
- (void)_makeWindowIfNecessary;
- (void)_noteTileFrameChanged;
- (BOOL)_originalWindowHasAutohideToolbarSet;
- (BOOL)_originalWindowShouldAutomaticallyAutohide;
- (id)_perfTestResizeWindow;
- (void)_relinquishTitlebar;
- (void)_removeEastTileDividerWindow;
- (void)_removeTileDividerWindows;
- (void)_removeWestTileDividerWindow;
- (void)_resetTileDividers;
- (void)_resizeToolbarWindowFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)_shouldDrawBaselineForEffectiveReveal:(double)arg1;
- (BOOL)_shouldRoundCorners;
- (BOOL)_shouldToolbarFloatAboveSiblings;
- (void)_startLiveResize;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_tileFrameForFullScreen;
- (double)_toolbarWindowContentScreenHeightForToolbar:(id)arg1;
- (void)_updateContentViewWithEffectiveReveal:(double)arg1;
- (void)_updateMenubarCompanionWindowAutohideHeight;
- (void)_updateMessageTracerCreationStatsIfNeeded;
- (void)_updateSpaceAndMenubarCompanionWindowAutohideHeight;
- (void)_updateSpaceIfNecessary;
- (void)_updateTileDividerWindows;
- (void)_updateTileFrame:(BOOL)arg1;
- (void)_updateTileFrameWithCachedRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_updateWindowFrameForTile:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 fromFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (double)_visibleWindowHeight;
- (void)_windowDidBecomeKeyNotification:(id)arg1;
- (void)_windowDidResignKeyNotification:(id)arg1;
- (void)addAsChildOfContentWindow;
- (void)animateWindowToCorrectPositionIfNecessary;
- (BOOL)autohideDisabled;
- (void)autohideHeightChanged;
- (id)auxiliaryViewController;
- (void)beginSiblingOverlayPresentationIfNeeded;
- (void)cancelSiblingOverlayAnimations;
- (double)collapsingToPoint;
- (BOOL)contentWindowShouldMakeRoomForToolbar;
- (double)correctWindowTopTarget;
- (id)currentDividerResizeDirections;
- (id)cursorForResizeDirection:(long long)arg1;
- (void)dealloc;
- (id)description;
- (double)desiredWindowHeight;
- (void)didChangeAuxiliaryViewControllers;
- (void)dispose;
- (double)effectiveAutohideHeight;
- (double)effectiveAuxiliaryViewMaxHeight;
- (double)effectiveAuxiliaryViewMinHeight;
- (double)effectiveClampedAutohideHeight;
- (void)finishAnimationIfSynchronous;
- (double)getMenuBarTransitionDuration;
- (struct NSToolbarFullScreenContentViewLayout_t { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_8_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_8_1_2; } x8; })getToolbarLayout;
- (void)hideOverlayWindow;
- (id)init;
- (BOOL)isCollapsing;
- (BOOL)isCommittedToCollapse;
- (BOOL)isHandlingHotKeyEvent;
- (void)layout;
- (id)mainLayoutView;
- (double)menuBarReveal;
- (id)originalWindow;
- (unsigned long long)parentSpaceID;
- (BOOL)performDividerDragWithEvent:(id)arg1 forResizeDirection:(long long)arg2;
- (BOOL)performTileResizeToFit:(struct CGSize { double x1; double x2; })arg1;
- (BOOL)performTileResizeToFit:(struct CGSize { double x1; double x2; })arg1 acceptIncorrectSize:(BOOL)arg2;
- (void)prepareResizeCrossfadeOverlayWithDuration:(double)arg1 resize:(BOOL)arg2;
- (void)registerForTileNotifications;
- (void)registerForWindowNotifications:(BOOL)arg1;
- (void)removeAsChildOfContentWindow;
- (void)removeSiblingOverlayWindow;
- (void)resizeContentWindow;
- (void)retileForSpaceTileFrameChange;
- (id)screen;
- (void)setAuxiliaryViewController:(id)arg1;
- (void)setHandlingHotKeyEvent:(BOOL)arg1;
- (void)setMenuBarReveal:(double)arg1;
- (void)setOriginalWindow:(id)arg1;
- (void)setTitlebarContainerView:(id)arg1;
- (void)setTitlebarView:(id)arg1;
- (void)setToolbar:(id)arg1;
- (void)setToolbarWindowIsInheritingAppearanceFromParentWindow:(BOOL)arg1;
- (void)setupSiblingOverlayWindowImmediately:(BOOL)arg1;
- (void)showOverlayWindowFromFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)showingSiblingOverlayWindow;
- (void)suppressNoteTileFrameChanged;
- (void)tile;
- (void)tileDidResizeNotification:(id)arg1;
- (void)tileEndedLiveResizeNotification:(id)arg1;
- (unsigned long long)tileSpaceID;
- (void)tileStartedLiveResizeNotification:(id)arg1;
- (id)titlebarContainerView;
- (id)titlebarView;
- (id)titlebarWindowContainerForFullScreenScreenShot;
- (id)toolbar;
- (void)toolbar:(id)arg1 didChangeFrameSizeFromOldSize:(struct CGSize { double x1; double x2; })arg2;
- (void)toolbarDidChangeAttachesToMenuBar:(id)arg1;
- (BOOL)toolbarWindowIsInheritingAppearanceFromParentWindow;
- (struct CGSize { double x1; double x2; })toolbarWindowSize;
- (struct CGPoint { double x1; double x2; })topCenterForSheet:(id)arg1;
- (void)updateContentViewRevealByMenuBar;
- (void)updateForParentSpaceRelocation;
- (void)updateForTabbedWindowOrderFront;
- (void)updateMenuBarScreenRevealHeight;
- (void)updateSiblingOverlayWindow;
- (void)updateTitlebarViewBlendingMode;
- (void)updateWindowAlpha;
- (void)updateWindowAndContentView;
- (void)updateWindowCorners;
- (void)updateWindowHeight;
- (void)updateWindowLayout;
- (void)updateWindowPositionAnimation:(double)arg1 startTop:(double)arg2;
- (void)updateWindowVisibility;
- (id)window;
- (double)windowAnimationDuration;
- (void)windowDidChangeFullScreenStatus:(id)arg1;
- (void)windowDidChangeSheetNotification:(id)arg1;
- (unsigned long long)windowStyleMask;

@end
