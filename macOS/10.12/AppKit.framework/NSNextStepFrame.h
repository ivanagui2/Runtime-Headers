/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSNextStepFrame : NSView {
    NSMutableArray * edgeResizingTrackingAreas;
    struct _frFlags { 
        unsigned int defeatTitleWrap : 1; 
        unsigned int resizeByIncrement : 1; 
        unsigned int shadowIsActive : 1; 
        unsigned int RESERVED : 29; 
    }  fvFlags;
    id  nsfReserved;
    struct CGSize { 
        double width; 
        double height; 
    }  sizingParams;
    unsigned long long  styleMask;
    NSTextFieldCell * titleCell;
}

+ (unsigned long long)_validateStyleMask:(unsigned long long)arg1;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentRectForFrameRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 styleMask:(unsigned long long)arg2;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameRectForContentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 styleMask:(unsigned long long)arg2;
+ (struct CGSize { double x1; double x2; })minContentSizeForMinFrameSize:(struct CGSize { double x1; double x2; })arg1 styleMask:(unsigned long long)arg2;
+ (struct CGSize { double x1; double x2; })minFrameSizeForMinContentSize:(struct CGSize { double x1; double x2; })arg1 styleMask:(unsigned long long)arg2;
+ (double)minFrameWidthWithTitle:(id)arg1 styleMask:(unsigned long long)arg2;

- (struct CGPoint { double x1; double x2; })_autosaveButtonOrigin;
- (id)_autosaveButtonSeparatorField;
- (struct CGPoint { double x1; double x2; })_autosaveButtonSeparatorFieldOrigin;
- (void)_calcTextRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1;
- (BOOL)_canHaveToolbar;
- (void)_clearDragMargins;
- (void)_clearPressedButtons;
- (void)_didEnd:(BOOL)arg1 renameWithTitle:(id)arg2 editingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 grantHandler:(id)arg4;
- (double)_distanceFromToolbarBaseToTitlebar;
- (void)_drawFrameShadowAndFlushContext:(id)arg1;
- (void)_drawTitleStringIn:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withColor:(double)arg2;
- (id)_edgeResizingTrackingAreas;
- (struct CGPoint { double x1; double x2; })_fileButtonOrigin;
- (void)_hideToolbarWithAnimation:(BOOL)arg1;
- (BOOL)_isHUDWindow;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_maxTitlebarTitleRect;
- (struct CGSRegionObject { }*)_regionForOpaqueDescendants:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forMove:(BOOL)arg2;
- (void)_renamingDidEndNormally:(BOOL)arg1;
- (void)_resetDragMargins;
- (id)_resize:(id)arg1;
- (void)_setCloseEnabled:(BOOL)arg1;
- (void)_setFrameNeedsDisplay:(BOOL)arg1;
- (void)_setNonactivatingPanel:(BOOL)arg1;
- (void)_setShadowParameters;
- (void)_setTitleNeedsDisplay;
- (void)_setUtilityWindow:(BOOL)arg1;
- (void)_showToolbarWithAnimation:(BOOL)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_titlebarTitleRect;
- (BOOL)_toolbarIsHidden;
- (BOOL)_toolbarIsInTransition;
- (BOOL)_toolbarIsManagedByExternalWindow;
- (BOOL)_toolbarIsShown;
- (void)_updateButtons;
- (void)_updateWindowBackingTypeForLayer:(BOOL)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_validFrameForResizeFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 fromResizeEdge:(unsigned long long)arg2;
- (void)_willStartRenameWithTitle:(id)arg1 editingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (struct CGSize { double x1; double x2; })aspectRatio;
- (id)autosaveButton;
- (id)closeButton;
- (double)contentAlpha;
- (id)contentFill;
- (id)contentLayoutGuide;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentRectForFrameRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 styleMask:(unsigned long long)arg2;
- (void)dealloc;
- (id)doClose:(id)arg1;
- (id)doIconify:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })dragRectForFrameRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)fileButton;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameRectForContentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 styleMask:(unsigned long long)arg2;
- (void)helpRequested:(id)arg1;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 styleMask:(unsigned long long)arg2 owner:(id)arg3;
- (BOOL)isOpaque;
- (struct CGSize { double x1; double x2; })minFrameSizeForMinContentSize:(struct CGSize { double x1; double x2; })arg1 styleMask:(unsigned long long)arg2;
- (id)minimizeButton;
- (void)mouseDown:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseUp:(id)arg1;
- (BOOL)needsFill;
- (id)opaqueAncestor;
- (struct CGSize { double x1; double x2; })resizeIncrements;
- (void)rightMouseDown:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)setAspectRatio:(struct CGSize { double x1; double x2; })arg1;
- (id)setCloseAction:(SEL)arg1;
- (id)setCloseTarget:(id)arg1;
- (void)setDocumentEdited:(BOOL)arg1;
- (void)setFrameOrigin:(struct CGPoint { double x1; double x2; })arg1;
- (void)setFrameSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setRepresentedFilename:(id)arg1;
- (void)setResizeIncrements:(struct CGSize { double x1; double x2; })arg1;
- (void)setStyleMask:(unsigned long long)arg1;
- (void)setTitle:(id)arg1;
- (void)setTitle:(id)arg1 andDefeatWrap:(BOOL)arg2;
- (void)setWantsLayer:(BOOL)arg1;
- (void)shapeWindow;
- (unsigned long long)styleMask;
- (void)tile;
- (id)title;
- (id)titleFont;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })titleRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })titlebarRect;
- (void)updateLayer;
- (void)updateTrackingAreas;
- (BOOL)usesCustomDrawing;
- (void)viewDidEndLiveResize;
- (BOOL)wantsUpdateLayer;
- (BOOL)worksWhenModal;
- (id)zoomButton;

@end
