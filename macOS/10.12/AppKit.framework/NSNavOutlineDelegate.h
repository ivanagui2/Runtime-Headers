/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSNavOutlineDelegate : NSNavFileListDelegate <NSNavOutlineViewDelegate, NSOutlineViewDataSource> {
    unsigned int  _calculateFolderSizes;
    NSNavNode * _currentDirectoryNode;
    NSArray * _highlightedNodesToRestore;
    double  _normalIndentationPerLevel;
    NSOutlineView * _outline;
    unsigned int  _reserved;
    unsigned int  _showIconThumbnails;
    NSNavNode * _topNodeBeforeReload;
    unsigned int  _useRelativeDates;
}

@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readonly) Class superclass;

- (id)_cachedChildrenForNode:(id)arg1 allowInteraction:(BOOL)arg2;
- (void)_debug;
- (id)_doFindIndexesOfNodes:(id)arg1 inDirectory:(id)arg2 visitedNodes:(id)arg3;
- (void)_ejectButtonClicked:(id)arg1;
- (id)_highlightedNodes;
- (BOOL)_maintainHighlightSelection;
- (void)_outlineAction:(id)arg1;
- (void)_outlineDoubleAction:(id)arg1;
- (void)_readDefaultsFromFinder;
- (id)_selectedNodesWithEntireSelection:(BOOL)arg1;
- (BOOL)_setCurrentDirectoryNode:(id)arg1;
- (void)_setHighlightedRowsFromNodes:(id)arg1 maintainFirstVisibleRow:(BOOL)arg2;
- (void)_synchronizeExpandedNodesWithOutlineExpandedItems;
- (BOOL)_userClickedInEjectButtonFrame;
- (void)configureForActiveState;
- (void)configureForAllowsExpandingMultipleDirectories:(BOOL)arg1;
- (void)configureForAllowsMultipleSelection:(BOOL)arg1;
- (void)configureForCanChooseDirectories:(BOOL)arg1;
- (void)configureForCanChooseFiles:(BOOL)arg1;
- (void)configureForDisplayedFileProperties:(id)arg1;
- (void)configureForInactiveState;
- (void)configureForSortedByFileProperty:(id)arg1 ascending:(BOOL)arg2 caseSensitive:(BOOL)arg3;
- (id)currentDirectoryNode;
- (id)currentTypeSelectSearchString;
- (void)dealloc;
- (BOOL)lightweightHandleChildChanged:(id)arg1 parent:(id)arg2 property:(id)arg3;
- (void)loadAndRestoreCurrentBrowsingNodePath:(id)arg1 selectedNodes:(id)arg2;
- (int)navOutlineView:(id)arg1 displayStateForItem:(id)arg2;
- (long long)navOutlineView:(id)arg1 labelColorIndexForItem:(id)arg2;
- (id)outline;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (void)outlineView:(id)arg1 didClickOnDisabledCell:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(id)arg4;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 performKeyEquivalent:(id)arg2;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (BOOL)outlineView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (void)outlineView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (BOOL)outlineView:(id)arg1 wantsTrackingAreasForRow:(long long)arg2 column:(long long)arg3;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (void)prepareForReloadChildrenForNode:(id)arg1;
- (void)reloadChildrenForNode:(id)arg1;
- (void)reloadDisplayState;
- (id)selectedNodes;
- (id)selectedNodesIncludingDirectories;
- (void)sendSelectionChangedNotification;
- (void)setCurrentBrowsingNodePath:(id)arg1;
- (void)setCurrentDirectoryNode:(id)arg1;
- (void)setOutline:(id)arg1;
- (id)showNode:(id)arg1 inDirectory:(id)arg2 selectIfEnabled:(BOOL)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })sourceFrameOnScreenForNavNode:(id)arg1;
- (BOOL)supportsSortingByFileProperties;
- (id)view;
- (id)visualRootNode;

@end
