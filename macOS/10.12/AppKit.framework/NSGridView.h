/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSGridView : NSView {
    NSMapTable * _cellTable;
    double  _colSpacing;
    NSMutableArray * _columns;
    long long  _currentConstraintGeneration;
    id  _reserved;
    id  _reserved2;
    id  _reserved3;
    long long  _rowAlignment;
    double  _rowSpacing;
    NSMutableArray * _rows;
    long long  _xPlacement;
    long long  _yPlacement;
}

@property (atomic, readwrite) double columnSpacing;
@property (atomic, readonly) long long numberOfColumns;
@property (atomic, readonly) long long numberOfRows;
@property (atomic, readwrite) long long rowAlignment;
@property (atomic, readwrite) double rowSpacing;
@property (atomic, readwrite) long long xPlacement;
@property (atomic, readwrite) long long yPlacement;

+ (id)gridViewWithNumberOfColumns:(long long)arg1 rows:(long long)arg2;
+ (id)gridViewWithViews:(id)arg1;
+ (BOOL)requiresConstraintBasedLayout;

- (BOOL)_cellTableContainsCell:(id)arg1;
- (void)_commonInit;
- (struct CGSize { double x1; double x2; })_defaultContentCompressionResistancePriorities;
- (struct CGSize { double x1; double x2; })_defaultContentHuggingPriorities;
- (BOOL)_expandMergeBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 ifNeededForCell:(id)arg2;
- (BOOL)_expandMergeBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 ifNeededForColumnAtIndex:(long long)arg2;
- (BOOL)_expandMergeBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 ifNeededForRow:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_expandMergeBoundsIfNeeded:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_findVisibleThingNear:(id)arg1 after:(BOOL)arg2 searchRows:(BOOL)arg3;
- (id)_insertColumnAtIndex:(long long)arg1 withViews:(id)arg2;
- (void)_insertColumnCells:(id)arg1 atIndex:(long long)arg2;
- (id)_insertRowAtIndex:(long long)arg1 withViews:(id)arg2;
- (void)_mergeCellsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_rawCellAtColumnIndex:(long long)arg1 rowIndex:(long long)arg2 allocatingIfNeeded:(BOOL)arg3;
- (id)_removeColumnCellsAtIndex:(long long)arg1;
- (void)_sanityCheck;
- (void)_setCell:(id)arg1 forContentView:(id)arg2;
- (void)_unmergeCellsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)_verifyInsertionOfColumnAtIndex:(long long)arg1;
- (BOOL)_verifyInsertionOfRowAtIndex:(long long)arg1;
- (void)_verifyMergedRegionWithHead:(id)arg1;
- (BOOL)_verifyRemovalOfRowColumn:(id)arg1;
- (id)addColumnWithViews:(id)arg1;
- (id)addRowWithViews:(id)arg1;
- (id)cellAtColumnIndex:(long long)arg1 rowIndex:(long long)arg2;
- (id)cellForView:(id)arg1;
- (id)columnAtIndex:(long long)arg1;
- (double)columnSpacing;
- (void)dealloc;
- (id)declaredLayoutConstraints;
- (void)deleteColumn:(id)arg1;
- (void)deleteRow:(id)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (long long)indexOfColumn:(id)arg1;
- (long long)indexOfRow:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)insertColumnAtIndex:(long long)arg1 withViews:(id)arg2;
- (id)insertRowAtIndex:(long long)arg1 withViews:(id)arg2;
- (void)mergeCellsInHorizontalRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 verticalRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)moveColumnAtIndex:(long long)arg1 toIndex:(long long)arg2;
- (void)moveRowAtIndex:(long long)arg1 toIndex:(long long)arg2;
- (long long)numberOfColumns;
- (long long)numberOfRows;
- (void)removeColumnAtIndex:(long long)arg1;
- (void)removeRowAtIndex:(long long)arg1;
- (long long)rowAlignment;
- (id)rowAtIndex:(long long)arg1;
- (double)rowSpacing;
- (void)setColumnSpacing:(double)arg1;
- (void)setRowAlignment:(long long)arg1;
- (void)setRowSpacing:(double)arg1;
- (void)setXPlacement:(long long)arg1;
- (void)setYPlacement:(long long)arg1;
- (void)willRemoveSubview:(id)arg1;
- (long long)xPlacement;
- (long long)yPlacement;

@end
