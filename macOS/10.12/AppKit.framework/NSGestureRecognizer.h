/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSGestureRecognizer : NSObject <NSCoding> {
    SEL  _action;
    unsigned long long  _delayFlags;
    NSMutableArray * _delayedEvents;
    <NSGestureRecognizerDelegate> * _delegate;
    NSMutableSet * _dynamicFailureDependents;
    NSMutableSet * _dynamicFailureRequirements;
    NSMutableSet * _failureDependents;
    id  _failureMap;
    NSMutableSet * _failureRequirements;
    NSMutableSet * _friends;
    unsigned long long  _gestureFlags;
    id  _reserved;
    long long  _state;
    id  _target;
    NSMutableArray * _targets;
    NSEvent * _updateEvent;
    NSView * _view;
}

@property (nonatomic, readonly) NSMutableSet *_dynamicFailureDependents;
@property (nonatomic, readonly) NSMutableSet *_dynamicFailureRequirements;
@property (nonatomic, readonly) NSMutableSet *_failureDependents;
@property (nonatomic, readonly) NSMutableSet *_failureRequirements;
@property (atomic, readwrite) SEL action;
@property (atomic, readwrite) BOOL delaysKeyEvents;
@property (atomic, readwrite) BOOL delaysMagnificationEvents;
@property (atomic, readwrite) BOOL delaysOtherMouseButtonEvents;
@property (atomic, readwrite) BOOL delaysPrimaryMouseButtonEvents;
@property (atomic, readwrite) BOOL delaysRotationEvents;
@property (atomic, readwrite) BOOL delaysSecondaryMouseButtonEvents;
@property (atomic, readwrite) <NSGestureRecognizerDelegate> *delegate;
@property (getter=isEnabled, atomic, readwrite) BOOL enabled;
@property (atomic, readwrite, retain) NSPressureConfiguration *pressureConfiguration;
@property (atomic, readonly) long long state;
@property (atomic, readwrite) id target;
@property (atomic, readonly) NSView *view;

+ (id)_mostCompatibleRecognizerFromConfigured:(id)arg1;

- (unsigned long long)_acceptedEventMask;
- (BOOL)_acceptsFailureRequirements;
- (id)_activePressureConfiguration;
- (void)_addDynamicFailureDependent:(id)arg1;
- (void)_addDynamicFailureRequirement:(id)arg1;
- (void)_addFailureDependent:(id)arg1;
- (void)_addFriendGesture:(id)arg1;
- (BOOL)_affectedByGesture:(id)arg1;
- (void)_appendDescription:(id)arg1 forDependencies:(id)arg2 toString:(id)arg3 atLevel:(int)arg4;
- (void)_appendDescriptionToString:(id)arg1 atLevel:(int)arg2 includingDependencies:(BOOL)arg3;
- (void)_appendSubclassDescription:(id)arg1;
- (id)_auxiliaryStorage;
- (id)_briefDescription;
- (void)_cancelRecognition;
- (void)_clearDelayedEvents;
- (void)_clearReferencesToRelatedGesture:(id)arg1;
- (void)_clearUpdateTimer;
- (void)_deallocAuxiliaryStorage;
- (BOOL)_delayEvent:(id)arg1;
- (id)_delayedEvents;
- (void)_delayedUpdateGesture;
- (BOOL)_delegateCanPreventGestureRecognizer:(id)arg1;
- (BOOL)_delegateShouldAttemptToRecognizeWithEvent:(id)arg1;
- (BOOL)_delegateShouldSendActionWhenPossibleConcurrentlyWithRecognizer:(id)arg1;
- (long long)_depthFirstViewCompare:(id)arg1;
- (id)_desiredPressureBehavior;
- (void)_didSendActions;
- (id)_dynamicFailureDependents;
- (id)_dynamicFailureRequirements;
- (void)_enqueueDelayedEventsToSend;
- (void)_eventWasCancelled:(id)arg1;
- (void)_exclude;
- (id)_failureDependents;
- (id)_failureMap;
- (void)_failureRequirementCompleted:(id)arg1 withEvent:(id)arg2;
- (id)_failureRequirements;
- (BOOL)_hasDelayedEvents;
- (BOOL)_hasTargets;
- (void)_invalidate;
- (BOOL)_isDirty;
- (BOOL)_isExcludedByGesture:(id)arg1;
- (BOOL)_isFriendWithGesture:(id)arg1;
- (BOOL)_isRecognized;
- (void)_noteDesiredPressureBehaviorChanged;
- (void)_queueForResetIfFinished;
- (void)_removeActiveGestureRecognizerFromTouchDevice;
- (void)_removeFailureDependent:(id)arg1;
- (BOOL)_requiresGestureRecognizerToFail:(id)arg1;
- (BOOL)_requiresSystemGesturesToFail;
- (void)_resetGestureRecognizer;
- (void)_resetIfFinished;
- (void)_setAcceptsFailureRequiments:(BOOL)arg1;
- (void)_setDirty;
- (void)_setFailureMap:(id)arg1;
- (void)_setRequiresSystemGesturesToFail:(BOOL)arg1;
- (void)_setTouchDevice:(id)arg1;
- (BOOL)_shouldBeRequiredToFailByGestureRecognizer:(id)arg1;
- (BOOL)_shouldBegin;
- (BOOL)_shouldRequireFailureOfGestureRecognizer:(id)arg1;
- (BOOL)_shouldSendActionWhenPossibleConcurrentlyWithRecognizer:(id)arg1;
- (id)_touchDevice;
- (void)_updateGestureStateWithEvent:(id)arg1 afterDelay:(BOOL)arg2;
- (void)_updateGestureWithEvent:(id)arg1;
- (void)_willBeginAfterSatisfyingFailureRequirements;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (SEL)action;
- (void)addTarget:(id)arg1 action:(SEL)arg2;
- (BOOL)canBePreventedByGestureRecognizer:(id)arg1;
- (BOOL)canPreventGestureRecognizer:(id)arg1;
- (void)dealloc;
- (BOOL)delaysKeyEvents;
- (BOOL)delaysMagnificationEvents;
- (BOOL)delaysOtherMouseButtonEvents;
- (BOOL)delaysPrimaryMouseButtonEvents;
- (BOOL)delaysRotationEvents;
- (BOOL)delaysSecondaryMouseButtonEvents;
- (id)delegate;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;
- (BOOL)isEnabled;
- (void)keyDown:(id)arg1;
- (void)keyUp:(id)arg1;
- (struct CGPoint { double x1; double x2; })locationInView:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (unsigned long long)modifierFlags;
- (void)mouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)otherMouseDown:(id)arg1;
- (void)otherMouseDragged:(id)arg1;
- (void)otherMouseUp:(id)arg1;
- (void)pressureChangeWithEvent:(id)arg1;
- (id)pressureConfiguration;
- (void)quickLookWithEvent:(id)arg1;
- (void)removeFailureRequirement:(id)arg1;
- (void)removeTarget:(id)arg1 action:(SEL)arg2;
- (void)requireOtherGestureToFail:(id)arg1;
- (void)reset;
- (void)rightMouseDown:(id)arg1;
- (void)rightMouseDragged:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)rotateWithEvent:(id)arg1;
- (BOOL)sendsActionWhenPossible;
- (void)setAction:(SEL)arg1;
- (void)setDelaysKeyEvents:(BOOL)arg1;
- (void)setDelaysMagnificationEvents:(BOOL)arg1;
- (void)setDelaysOtherMouseButtonEvents:(BOOL)arg1;
- (void)setDelaysPrimaryMouseButtonEvents:(BOOL)arg1;
- (void)setDelaysRotationEvents:(BOOL)arg1;
- (void)setDelaysSecondaryMouseButtonEvents:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEnabled:(BOOL)arg1;
- (void)setPressureConfiguration:(id)arg1;
- (void)setSendsActionWhenPossible:(BOOL)arg1;
- (void)setState:(long long)arg1;
- (void)setTarget:(id)arg1;
- (void)setView:(id)arg1;
- (BOOL)shouldBeArchived;
- (BOOL)shouldBeRequiredToFailByGestureRecognizer:(id)arg1;
- (BOOL)shouldRequireFailureOfGestureRecognizer:(id)arg1;
- (long long)state;
- (void)tabletPoint:(id)arg1;
- (id)target;
- (void)touchesBeganWithEvent:(id)arg1;
- (void)touchesCancelledWithEvent:(id)arg1;
- (void)touchesEndedWithEvent:(id)arg1;
- (void)touchesMovedWithEvent:(id)arg1;
- (void)translateWithEvent:(id)arg1;
- (id)view;
- (BOOL)wantsForceGestureEvents;

@end
