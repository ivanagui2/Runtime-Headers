/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation
 */

@interface NSCTFont : NSFont

- (BOOL)__isSystemFont;
- (double)_ascenderDeltaForBehavior:(long long)arg1;
- (unsigned int)_atsFontID;
- (struct CGFont { }*)_backingCGSFont;
- (double)_baseLineHeightForFont:(BOOL)arg1;
- (unsigned long long)_cfTypeID;
- (double)_defaultLineHeightForUILayout;
- (double)_descenderDeltaForBehavior:(long long)arg1;
- (bool)_getLatin1GlyphMapping:(const unsigned short**)arg1 andAdvanceMapping:(const struct CGSize {}**)arg2;
- (BOOL)_hasColorGlyphs;
- (BOOL)_hasNonNominalDescriptor;
- (BOOL)_isDefaultFace;
- (BOOL)_isHiraginoFont;
- (BOOL)_isIdealMetricsOnly;
- (id)_kernOverride;
- (const unsigned short*)_latin1MappingTable:(bool*)arg1;
- (double)_leading;
- (unsigned long long)_metaType;
- (id)_safeFontDescriptor;
- (id)_sharedFontInstanceInfo;
- (id)_similarFontWithName:(id)arg1;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_textMatrixTransformForContext:(id)arg1;
- (double)_totalAdvancementForNativeGlyphs:(const unsigned short*)arg1 count:(long long)arg2;
- (BOOL)_usesAppearanceFontSize;
- (struct CGSize { double x1; double x2; })advancementForGlyph:(unsigned int)arg1;
- (BOOL)allowsWeakReference;
- (double)ascender;
- (id)bestMatchingFontForCharacters:(const unsigned short*)arg1 length:(unsigned long long)arg2 attributes:(id)arg3 actualCoveredLength:(unsigned long long*)arg4;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundingRectForFont;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundingRectForGlyph:(unsigned int)arg1;
- (double)capHeight;
- (id)coveredCharacterSet;
- (const void*)ctFontRef;
- (double)descender;
- (id)description;
- (id)displayName;
- (void)encodeWithCoder:(id)arg1;
- (id)familyName;
- (id)fontDescriptor;
- (id)fontForAppearance:(id)arg1;
- (id)fontName;
- (id)fontWithSize:(double)arg1;
- (void)getAdvancements:(struct CGSize { double x1; double x2; }*)arg1 forCGGlyphs:(const unsigned short*)arg2 count:(unsigned long long)arg3;
- (void)getAdvancements:(struct CGSize { double x1; double x2; }*)arg1 forGlyphs:(const unsigned int*)arg2 count:(unsigned long long)arg3;
- (void)getAdvancements:(struct CGSize { double x1; double x2; }*)arg1 forPackedGlyphs:(const void*)arg2 length:(unsigned long long)arg3;
- (void)getBoundingRects:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 forCGGlyphs:(const unsigned short*)arg2 count:(unsigned long long)arg3;
- (void)getBoundingRects:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 forGlyphs:(const unsigned int*)arg2 count:(unsigned long long)arg3;
- (unsigned int)glyphWithName:(id)arg1;
- (unsigned long long)hash;
- (unsigned int)hyphenGlyphForLocale:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isFixedPitch;
- (BOOL)isVertical;
- (double)italicAngle;
- (id)lastResortFont;
- (double)leading;
- (const double*)matrix;
- (struct CGSize { double x1; double x2; })maximumAdvancement;
- (unsigned long long)mostCompatibleStringEncoding;
- (id)nameOfGlyph:(unsigned int)arg1;
- (unsigned long long)numberOfGlyphs;
- (double)pointSize;
- (id)printerFont;
- (oneway void)release;
- (unsigned long long)renderingMode;
- (id)retain;
- (unsigned long long)retainCount;
- (BOOL)retainWeakReference;
- (id)screenFont;
- (id)screenFontWithRenderingMode:(unsigned long long)arg1;
- (void)setInContext:(id)arg1;
- (id)textTransform;
- (double)underlinePosition;
- (double)underlineThickness;
- (id)verticalFont;
- (double)xHeight;

@end
