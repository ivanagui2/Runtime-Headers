/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth
 */

@interface BroadcomHostController : IOBluetoothHostController

+ (id)defaultController;

- (int)BluetoothHCIBroadcomARMMemoryPeek:(unsigned int)arg1 outValue:(char *)arg2;
- (int)BluetoothHCIBroadcomARMMemoryPoke:(unsigned int)arg1 inValue:(unsigned int)arg2 outValue:(char *)arg3;
- (int)BluetoothHCIBroadcomBFCCreateConnection:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inPacketType:(unsigned short)arg2 outConnectionCompleteResults:(struct BluetoothHCIEventConnectionCompleteResults { unsigned short x1; struct BluetoothDeviceAddress { unsigned char x_2_1_1[6]; } x2; unsigned char x3; unsigned char x4; }*)arg3;
- (int)BluetoothHCIBroadcomBFCIsConnectionTBFCSuspended:(unsigned short)arg1 outBFCConnectionInfo:(struct BluetoothBroadcomBFCConnectionTBFCSuspendedInfo { unsigned short x1; unsigned char x2; }*)arg2;
- (int)BluetoothHCIBroadcomBFCReadParams:(struct BluetoothBroadcomBFCParams { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned char x9; unsigned char x10; unsigned char x11; }*)arg1;
- (int)BluetoothHCIBroadcomBFCReadRemoteBPCSFeatures:(unsigned short)arg1 outBPCSFeatures:(struct BluetoothBroadcomBFCRemoteBPCSFeatures { unsigned short x1; unsigned int x2; }*)arg2;
- (int)BluetoothHCIBroadcomBFCReadScanEnable:(char *)arg1;
- (int)BluetoothHCIBroadcomBFCResume:(unsigned short)arg1 inDeviceAddress:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg2 inBFCResume:(struct BluetoothBroadcomBFCReconnectData { unsigned char x1[33]; }*)arg3;
- (int)BluetoothHCIBroadcomBFCSetParams:(struct BluetoothBroadcomBFCParams { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned char x9; unsigned char x10; unsigned char x11; }*)arg1;
- (int)BluetoothHCIBroadcomBFCSuspend:(unsigned short)arg1;
- (int)BluetoothHCIBroadcomBFCWriteScanEnable:(unsigned char)arg1;
- (int)BluetoothHCIBroadcomChangeLNAGainCoexsECI:(unsigned char)arg1;
- (int)BluetoothHCIBroadcomDownloadMiniDriver;
- (int)BluetoothHCIBroadcomEnableWBS:(unsigned char)arg1 inUUIDWBS:(unsigned short)arg2;
- (int)BluetoothHCIBroadcomFactoryCalReadTable:(unsigned char)arg1 outChoice:(char *)arg2 outTable:(char *)arg3;
- (int)BluetoothHCIBroadcomFactoryCalReadTemp:(char *)arg1;
- (int)BluetoothHCIBroadcomFactoryCalRxRSSITable:(char *)arg1;
- (int)BluetoothHCIBroadcomFactoryCalRxRSSITest:(unsigned char)arg1 inChannel:(unsigned char)arg2 inPower:(unsigned char)arg3 inGainRange:(unsigned char)arg4 inMode:(unsigned char)arg5 outCalStatus:(char *)arg6 outTCARSSIIL0P1db:(char *)arg7;
- (int)BluetoothHCIBroadcomFactoryCalSetTxPower:(unsigned char)arg1 inChannel:(unsigned char)arg2 inTransmitPower:(unsigned char)arg3 inPadVal:(unsigned char)arg4 outPadVal:(char *)arg5;
- (int)BluetoothHCIBroadcomFactoryCalTrimTxPower:(unsigned char)arg1 outPadVal:(char *)arg2;
- (int)BluetoothHCIBroadcomFactoryCalUpdateTxTable:(char *)arg1;
- (int)BluetoothHCIBroadcomFactoryCommitBDADDR:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inCommitBTWSecurityKey:(unsigned char)arg2 inBTWSecurityKey:(char *)arg3;
- (int)BluetoothHCIBroadcomGetBasicRateACLConnectionStats;
- (int)BluetoothHCIBroadcomGetEDRACLConnectionStats;
- (int)BluetoothHCIBroadcomHPBTControl:(char *)arg1;
- (int)BluetoothHCIBroadcomIgnoreUSBReset:(char *)arg1;
- (int)BluetoothHCIBroadcomIncreaseDecreasePowerLevel:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 increase:(unsigned char)arg2;
- (int)BluetoothHCIBroadcomLaunchRAM:(unsigned int)arg1;
- (int)BluetoothHCIBroadcomNumberCompletedPacketsThreshold:(unsigned long long)arg1;
- (int)BluetoothHCIBroadcomRSSIMeasurements:(unsigned int)arg1 inFrequency:(unsigned short)arg2 inAGCGainSetting:(unsigned char)arg3 outRSSIValue:(char *)arg4;
- (int)BluetoothHCIBroadcomReadLocalFirmwareInfo:(unsigned char)arg1 outLocalFirmwareInfo:(struct BluetoothBroadcomLocalFirmwareInfo { unsigned char x1; unsigned char x2; unsigned long long x3; }*)arg2;
- (int)BluetoothHCIBroadcomReadRAM:(unsigned int)arg1 inLength:(unsigned char)arg2 outData:(char *)arg3;
- (int)BluetoothHCIBroadcomReadRawRSSI:(unsigned short)arg1 outRSSI:(char *)arg2;
- (int)BluetoothHCIBroadcomReadRetransmissionStatus:(unsigned char)arg1 inConnectionHandle:(unsigned short)arg2 inNotificationEnable:(unsigned char)arg3 inNotificationThreshold:(unsigned char)arg4 outConnectionHandle:(unsigned short*)arg5 outRetransmissionCounter:(unsigned int*)arg6 outRetransmissionPercentage:(char *)arg7;
- (int)BluetoothHCIBroadcomResetBasicRateACLConnectionStats;
- (int)BluetoothHCIBroadcomSectorErase:(unsigned int)arg1;
- (int)BluetoothHCIBroadcomSetEventMask:(const struct BluetoothBroadcomSetEventMask { unsigned char x1[32]; }*)arg1;
- (int)BluetoothHCIBroadcomSetProximityTable:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inPowerSteps:(unsigned char)arg2 inAwayTriggerValues:(struct BluetoothBroadcomRSSITriggerValue { BOOL x1[20]; }*)arg3 inPresentTriggerValues:(struct BluetoothBroadcomRSSITriggerValue { BOOL x1[20]; }*)arg4;
- (int)BluetoothHCIBroadcomSetProximityTrigger:(unsigned char)arg1 inEnableAwayTrigger:(unsigned char)arg2;
- (int)BluetoothHCIBroadcomSetTransmitCarrierFrequencyARM:(unsigned char)arg1 inCarrierFrequencyEncoded:(unsigned char)arg2 inMode:(unsigned char)arg3 inModulationType:(unsigned char)arg4 inTransmitPower:(unsigned char)arg5 inTXPowerdBm:(unsigned char)arg6 inTXPowerTableIndex:(unsigned char)arg7;
- (int)BluetoothHCIBroadcomSetTransmitPower:(unsigned short)arg1 inPower:(BOOL)arg2;
- (int)BluetoothHCIBroadcomSetTransmitPowerRange:(unsigned short)arg1 inMaxTxPower:(BOOL)arg2 inMinTxPower:(BOOL)arg3;
- (int)BluetoothHCIBroadcomSetUSBAutoResume:(unsigned short)arg1;
- (int)BluetoothHCIBroadcomStoreFactoryCalibrationData:(unsigned char)arg1 inVersion:(unsigned char)arg2 inLength:(unsigned short)arg3 inCalData:(char *)arg4;
- (int)BluetoothHCIBroadcomTagLEA:(unsigned long long)arg1 connectionHandle:(unsigned short)arg2 input:(BOOL)arg3 channel:(BOOL)arg4;
- (int)BluetoothHCIBroadcomTurnOFFDynamicPowerControl:(unsigned char)arg1 inDeviceAddress:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg2;
- (int)BluetoothHCIBroadcomUARTSetSleepmodeParam:(unsigned char)arg1 inIdleThresholdHost:(unsigned char)arg2 inIdleThresholdHC:(unsigned char)arg3 inBTWAKEActiveMode:(unsigned char)arg4 inHOSTWAKEActiveMode:(unsigned char)arg5 inAllowHostSleepDuringSCO:(unsigned char)arg6 inCombineSleepModeAndLPM:(unsigned char)arg7 inEnableTristateControlOfUARTTxLine:(unsigned int)arg8 inPulsedHOSTWAKE:(unsigned char)arg9;
- (int)BluetoothHCIBroadcomWriteRAM:(unsigned int)arg1 inLength:(unsigned char)arg2 inData:(char *)arg3;
- (int)BluetoothHCIBroadcomWriteSCOPCMIntParam:(unsigned char)arg1 inPCMInterfaceRate:(unsigned char)arg2 inFrameType:(unsigned char)arg3 inSyncMode:(unsigned char)arg4 inClockMode:(unsigned char)arg5;
- (int)BluetoothHCIChangeConnectionPriority:(unsigned short)arg1 option:(unsigned char)arg2;
- (int)BluetoothHCICommandWriteClass15PowerTable:(unsigned char)arg1 radioTXPowerMode:(unsigned char)arg2 powerTableLength:(unsigned char)arg3 testModePowerTableLength:(unsigned char)arg4 powerTable:(char *)arg5 testPowerTable:(char *)arg6;
- (int)BluetoothHCILEAdvPacketContentFilterFeatureSectionClear:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 addressType:(unsigned char)arg2 outLEextOpcode:(char *)arg3 outAction:(char *)arg4;
- (int)BluetoothHCILEAdvPacketContentFilterFeatureSectionRead:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 addressType:(unsigned char)arg2 outLEextOpcode:(char *)arg3 outAction:(char *)arg4 outFeatureSelection:(unsigned int*)arg5 outLogicalType:(char *)arg6;
- (int)BluetoothHCILEAdvPacketContentFilterFeatureSectionWrite:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 addressType:(unsigned char)arg2 featureSelection:(unsigned int)arg3 logicalType:(unsigned char)arg4 outLEextOpcode:(char *)arg5 outAction:(char *)arg6;
- (int)BluetoothHCILEAdvPacketPacketFilterServiceUUIDClear:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 addressType:(unsigned char)arg2 outLEextOpcode:(char *)arg3 outAction:(char *)arg4;
- (int)BluetoothHCILEAdvPacketPacketFilterServiceUUIDWrite:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 addressType:(unsigned char)arg2 logicalType:(unsigned char)arg3 outLEextOpcode:(char *)arg4 outAction:(char *)arg5 UUID:(char *)arg6;
- (int)BluetoothHCILEBroadcomAddIRKToList:(char *)arg1 addressType:(unsigned char)arg2 address:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg3 outLEextOpcode:(char *)arg4 outIRKListAvailableSpace:(char *)arg5;
- (int)BluetoothHCILEBroadcomClearIRKList:(char *)arg1 outIRKListAvailableSpace:(char *)arg2;
- (int)BluetoothHCILEBroadcomEnableCustomerSpecificFeatures:(unsigned int)arg1 outLEextOpcode:(char *)arg2;
- (int)BluetoothHCILEBroadcomReadIRKList:(unsigned char)arg1 outLEextOpcode:(char *)arg2 outIRKListIndex:(char *)arg3 outIRK:(char *)arg4 outAddressType:(char *)arg5 outAddress:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg6 outResolvedPrivateAddress:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg7;
- (int)BluetoothHCILEBroadcomRemoveIRKFromList:(unsigned char)arg1 address:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg2 outLEextOpcode:(char *)arg3 outIRKListAvailableSpace:(char *)arg4;
- (int)BluetoothHCILECreateExtendedAdvertisingInstance:(unsigned char)arg1 address:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg2 outLEextOpcode:(char *)arg3 outHandle:(char *)arg4;
- (int)BluetoothHCILEExtendedDuplicateFilter:(char *)arg1 outAction:(unsigned char)arg2;
- (int)BluetoothHCILEReadSuggestedDefaultDataLength:(unsigned short*)arg1 maxTxTime:(unsigned short*)arg2;
- (int)BluetoothHCILERemoveExtendedAdvertisingInstance:(unsigned char)arg1 outLEextOpcode:(char *)arg2;
- (int)BluetoothHCILEScanCache:(unsigned char)arg1;
- (int)BluetoothHCILEScanRSSIThresholdRead:(char *)arg1 outMode:(char *)arg2 outRSSIThreshold:(char *)arg3;
- (int)BluetoothHCILEScanRSSIThresholdWrite:(unsigned char)arg1 rssiThresdhold:(BOOL)arg2 outAction:(char *)arg3;
- (int)BluetoothHCILESetDataLength:(unsigned short)arg1 maxTxOctets:(unsigned short)arg2 maxTxTime:(unsigned short)arg3 connectionHandle:(unsigned short*)arg4;
- (int)BluetoothHCILESetExtendedAdvertiseEnable:(unsigned char)arg1 advertiseEnable:(unsigned char)arg2 timeout:(unsigned int)arg3 timeoutEvent:(unsigned char)arg4;
- (int)BluetoothHCILESetExtendedAdvertisingData:(unsigned char)arg1 advertisingDataLength:(unsigned char)arg2 advertsingData:(char *)arg3;
- (int)BluetoothHCILESetExtendedAdvertisingParameters:(unsigned char)arg1 advertisingIntervalMin:(unsigned short)arg2 advertisingIntervalMax:(unsigned short)arg3 advertisingType:(unsigned char)arg4 advertisingChannelMap:(unsigned char)arg5 advertisingFilterPolicy:(unsigned char)arg6;
- (int)BluetoothHCILESetExtendedScanResponseData:(unsigned char)arg1 scanResponseDataLength:(unsigned char)arg2 scanResponseData:(char *)arg3;
- (int)BluetoothHCILETrackSensor:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 addressType:(unsigned char)arg2 timeoutValue:(unsigned char)arg3 outLEextOpcode:(char *)arg4;
- (int)BluetoothHCILEWriteSuggestedDefaultDataLength:(unsigned short)arg1 suggestedMaxTxTime:(unsigned short)arg2;
- (int)BluetoothHCISetSpecialSniffTransitionEnable:(unsigned short)arg1 enable:(unsigned char)arg2;
- (int)BluetoothHCIWriteHighPriorityConnection:(unsigned short)arg1 priority:(unsigned char)arg2;
- (int)BroadcomHCILEAddAdvancedMatchingRule:(struct { unsigned char x1[22]; })arg1 mask:(struct { unsigned char x1[22]; })arg2 RSSIThreshold:(BOOL)arg3 packetType:(unsigned char)arg4 matchingCapacity:(char *)arg5 matchingRemaining:(char *)arg6;
- (int)BroadcomHCILEAddAdvancedMatchingRuleWithAddress:(BOOL)arg1 address:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg2 blob:(struct { unsigned char x1[22]; })arg3 mask:(struct { unsigned char x1[22]; })arg4 RSSIThreshold:(BOOL)arg5 packetType:(unsigned char)arg6 matchingCapacity:(char *)arg7 matchingRemaining:(char *)arg8;
- (int)BroadcomHCILERemoveAdvancedMatchingRule:(struct { unsigned char x1[22]; })arg1 mask:(struct { unsigned char x1[22]; })arg2 RSSIThreshold:(BOOL)arg3 packetType:(unsigned char)arg4 matchingCapacity:(char *)arg5 matchingRemaining:(char *)arg6;
- (int)BroadcomHCILERemoveAdvancedMatchingRuleWithAddress:(BOOL)arg1 address:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg2 blob:(struct { unsigned char x1[22]; })arg3 mask:(struct { unsigned char x1[22]; })arg4 RSSIThreshold:(BOOL)arg5 packetType:(unsigned char)arg6 matchingCapacity:(char *)arg7 matchingRemaining:(char *)arg8;
- (int)BroadcomHCILEResetAdvancedMatchingRules:(char *)arg1 matchingRemaining:(char *)arg2;
- (int)addHIDEmulationDevice:(struct BluetoothDeviceAddress { unsigned char x1[6]; })arg1 classOfDevice:(unsigned int)arg2 linkKey:(struct BluetoothKey { unsigned char x1[16]; })arg3;
- (int)getControllerManufacturerName;
- (id)init;
- (void)processRawEventData:(const void*)arg1 dataSize:(unsigned long long)arg2;
- (int)readHIDEmulationDevices;
- (int)readRawRSSIForDevice:(id)arg1;
- (int)readVerboseConfigVersionInfo:(char *)arg1 outTargetID:(char *)arg2 outBaseline:(unsigned short*)arg3 outBuild:(unsigned short*)arg4;
- (int)removeHIDEmulationDevice:(struct BluetoothDeviceAddress { unsigned char x1[6]; })arg1;
- (int)setTransmitPowerForDevice:(id)arg1 toLevel:(unsigned char)arg2;
- (int)startReceiveTest:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 reportPeriod:(unsigned short)arg2 frequency:(unsigned char)arg3 modulationType:(unsigned char)arg4 logicalChannel:(unsigned char)arg5 packetType:(unsigned char)arg6 packetLength:(unsigned short)arg7;
- (int)startTransmitTest:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 hoppingMode:(unsigned char)arg2 frequency:(unsigned char)arg3 modulationType:(unsigned char)arg4 logicalChannel:(unsigned char)arg5 packetType:(unsigned char)arg6 packetLength:(unsigned short)arg7 transmitPower:(unsigned char)arg8 transmitPowerdBm:(unsigned char)arg9 transmitPowerTableIndex:(unsigned char)arg10 transmitConnectionInterval:(unsigned char)arg11;
- (int)superPeekPoke:(unsigned char)arg1 address:(unsigned int)arg2 outValue:(unsigned int*)arg3;
- (int)triStateEnabled:(BOOL)arg1;

@end
