/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth
 */

@interface IOBluetoothHostController : NSObject {
    unsigned int  _cachedClassOfDevice;
    id  _delegate;
    unsigned long long  _eventCodeMask;
    void * _eventListener;
    id  _mReserved;
    id  _mUnused000;
    id  _mUnused001;
    id  _mUnused002;
    NSTimer * _timerClassOfDeviceSetting;
}

@property (atomic, readwrite) id delegate;
@property (atomic, readonly) int powerState;

+ (id)controllers;
+ (id)defaultController;
+ (void)enableNotifications;
+ (id)getPropertyObjectFromIOServiceNamed:(const char *)arg1 forKey:(id)arg2;
+ (void)initialize;

- (int)BluetoothHCIAcceptConnectionRequest:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inRole:(unsigned char)arg2 outConnectionCompleteResults:(struct BluetoothHCIEventConnectionCompleteResults { unsigned short x1; struct BluetoothDeviceAddress { unsigned char x_2_1_1[6]; } x2; unsigned char x3; unsigned char x4; }*)arg3;
- (int)BluetoothHCIAcceptSynchronousConnectionRequest:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inTransmitBandwidth:(unsigned int)arg2 inReceiveBandwidth:(unsigned int)arg3 inMaxLatency:(unsigned short)arg4 inContentFormat:(unsigned short)arg5 inRetransmissionEffort:(unsigned char)arg6 inPacketType:(unsigned short)arg7 outSynchronousConnectionCompleteResults:(struct BluetoothHCIEventSynchronousConnectionCompleteResults { unsigned short x1; struct BluetoothDeviceAddress { unsigned char x_2_1_1[6]; } x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned short x6; unsigned short x7; unsigned char x8; }*)arg8;
- (int)BluetoothHCIAtherosReadRawRSSI:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 outRSSI:(char *)arg2;
- (int)BluetoothHCIAuthenticationRequested:(unsigned short)arg1 outAuthenticationCompleteResults:(struct BluetoothHCIEventAuthenticationCompleteResults { unsigned short x1; }*)arg2;
- (int)BluetoothHCIBroadcomARMMemoryPeek:(unsigned int)arg1 outValue:(char *)arg2;
- (int)BluetoothHCIBroadcomBFCCreateConnection:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inPacketType:(unsigned short)arg2 outConnectionCompleteResults:(struct BluetoothHCIEventConnectionCompleteResults { unsigned short x1; struct BluetoothDeviceAddress { unsigned char x_2_1_1[6]; } x2; unsigned char x3; unsigned char x4; }*)arg3;
- (int)BluetoothHCIBroadcomBFCIsConnectionTBFCSuspended:(unsigned short)arg1 outBFCConnectionInfo:(struct BluetoothBroadcomBFCConnectionTBFCSuspendedInfo { unsigned short x1; unsigned char x2; }*)arg2;
- (int)BluetoothHCIBroadcomBFCReadParams:(struct BluetoothBroadcomBFCParams { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned char x9; unsigned char x10; unsigned char x11; }*)arg1;
- (int)BluetoothHCIBroadcomBFCReadRemoteBPCSFeatures:(unsigned short)arg1 outBPCSFeatures:(struct BluetoothBroadcomBFCRemoteBPCSFeatures { unsigned short x1; unsigned int x2; }*)arg2;
- (int)BluetoothHCIBroadcomBFCReadScanEnable:(char *)arg1;
- (int)BluetoothHCIBroadcomBFCResume:(unsigned short)arg1 inDeviceAddress:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg2 inBFCResume:(struct BluetoothBroadcomBFCReconnectData { unsigned char x1[33]; }*)arg3;
- (int)BluetoothHCIBroadcomBFCSetParams:(struct BluetoothBroadcomBFCParams { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned char x9; unsigned char x10; unsigned char x11; }*)arg1;
- (int)BluetoothHCIBroadcomBFCSuspend:(unsigned short)arg1;
- (int)BluetoothHCIBroadcomBFCWriteScanEnable:(unsigned char)arg1;
- (int)BluetoothHCIBroadcomChangeLNAGainCoexsECI:(unsigned char)arg1;
- (int)BluetoothHCIBroadcomGetBasicRateACLConnectionStats;
- (int)BluetoothHCIBroadcomGetEDRACLConnectionStats;
- (int)BluetoothHCIBroadcomIgnoreUSBReset:(char *)arg1;
- (int)BluetoothHCIBroadcomIncreaseDecreasePowerLevel:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 increase:(unsigned char)arg2;
- (int)BluetoothHCIBroadcomNumberCompletedPacketsThreshold:(unsigned long long)arg1;
- (int)BluetoothHCIBroadcomReadLocalFirmwareInfo:(unsigned char)arg1 outLocalFirmwareInfo:(struct BluetoothBroadcomLocalFirmwareInfo { unsigned char x1; unsigned char x2; unsigned long long x3; }*)arg2;
- (int)BluetoothHCIBroadcomReadRawRSSI:(unsigned short)arg1 outRSSI:(char *)arg2;
- (int)BluetoothHCIBroadcomReadRetransmissionStatus:(unsigned char)arg1 inConnectionHandle:(unsigned short)arg2 inNotificationEnable:(unsigned char)arg3 inNotificationThreshold:(unsigned char)arg4 outConnectionHandle:(unsigned short*)arg5 outRetransmissionCounter:(unsigned int*)arg6 outRetransmissionPercentage:(char *)arg7;
- (int)BluetoothHCIBroadcomResetBasicRateACLConnectionStats;
- (int)BluetoothHCIBroadcomSetEventMask:(const struct BluetoothBroadcomSetEventMask { unsigned char x1[32]; }*)arg1;
- (int)BluetoothHCIBroadcomSetProximityTable:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inPowerSteps:(unsigned char)arg2 inAwayTriggerValues:(struct BluetoothBroadcomRSSITriggerValue { BOOL x1[20]; }*)arg3 inPresentTriggerValues:(struct BluetoothBroadcomRSSITriggerValue { BOOL x1[20]; }*)arg4;
- (int)BluetoothHCIBroadcomSetProximityTrigger:(unsigned char)arg1 inEnableAwayTrigger:(unsigned char)arg2;
- (int)BluetoothHCIBroadcomSetTransmitPower:(unsigned short)arg1 inPower:(BOOL)arg2;
- (int)BluetoothHCIBroadcomSetUSBAutoResume:(unsigned short)arg1;
- (int)BluetoothHCIBroadcomTagLEA:(unsigned long long)arg1 connectionHandle:(unsigned short)arg2 input:(BOOL)arg3 channel:(BOOL)arg4;
- (int)BluetoothHCIBroadcomTurnOFFDynamicPowerControl:(unsigned char)arg1 inDeviceAddress:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg2;
- (int)BluetoothHCICSRReadRawRSSI:(unsigned short)arg1 outRSSI:(char *)arg2;
- (int)BluetoothHCIChangeConnectionLinkKey:(unsigned short)arg1 outChangeConnectionLinkKeyCompleteResults:(struct BluetoothHCIEventChangeConnectionLinkKeyCompleteResults { unsigned short x1; }*)arg2;
- (int)BluetoothHCIChangeConnectionPacketType:(unsigned short)arg1 inPacketType:(unsigned short)arg2 outConnectionPacketTypeChangedResults:(struct BluetoothHCIEventConnectionPacketTypeResults { unsigned short x1; unsigned short x2; }*)arg3;
- (int)BluetoothHCIChangeConnectionPriority:(unsigned short)arg1 option:(unsigned char)arg2;
- (int)BluetoothHCICommandWriteClass15PowerTable:(unsigned char)arg1 radioTXPowerMode:(unsigned char)arg2 powerTableLength:(unsigned char)arg3 testModePowerTableLength:(unsigned char)arg4 powerTable:(char *)arg5 testPowerTable:(char *)arg6;
- (int)BluetoothHCICreateConnection:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inPacketType:(unsigned short)arg2 inPageScanRepetitionMode:(unsigned char)arg3 inReserved:(unsigned char)arg4 inClockOffset:(unsigned short)arg5 inAllowRoleSwitch:(unsigned char)arg6 outConnectionCompleteResults:(struct BluetoothHCIEventConnectionCompleteResults { unsigned short x1; struct BluetoothDeviceAddress { unsigned char x_2_1_1[6]; } x2; unsigned char x3; unsigned char x4; }*)arg7;
- (int)BluetoothHCICreateConnectionCancel:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1;
- (int)BluetoothHCICreateNewUnitKey;
- (int)BluetoothHCIDeleteStoredLinkKey:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inDeleteAllFlag:(unsigned char)arg2 outNumKeysDeleted:(unsigned short*)arg3;
- (int)BluetoothHCIDisconnect:(unsigned short)arg1 inReason:(unsigned char)arg2 outDisconnectionCompleteResults:(struct BluetoothHCIEventDisconnectionCompleteResults { unsigned short x1; unsigned char x2; }*)arg3;
- (int)BluetoothHCIEnableDeviceUnderTestMode;
- (int)BluetoothHCIEnhancedAcceptSynchronousConnection:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inTransmitBandwidth:(unsigned int)arg2 inReceiveBandwidth:(unsigned int)arg3 inTransmitCodingFormat:(unsigned long long)arg4 inReceiveCodingFormat:(unsigned long long)arg5 inTransmitCodecFrameSize:(unsigned short)arg6 inReceiveCodecFrameSize:(unsigned short)arg7 inInputBandwith:(unsigned int)arg8 inOutputBandwth:(unsigned int)arg9 inInputCodingFormat:(unsigned long long)arg10 inOutputCodingFormat:(unsigned long long)arg11 inInputCodedDataSize:(unsigned short)arg12 inOutputCodedDataSize:(unsigned short)arg13 inInputPCMDataFormat:(unsigned char)arg14 inOutputPCMDataFormat:(unsigned char)arg15 inInputPCMSamplePayloadMSBPosition:(unsigned char)arg16 inOutputPCMSamplePayloadMSBPosition:(unsigned char)arg17 inInputDataPath:(unsigned char)arg18 inOutputDataPath:(unsigned char)arg19 inInputTransportUnitSize:(unsigned char)arg20 inOutputTransportUnitSize:(unsigned char)arg21 inMaxLatency:(unsigned short)arg22 inVoiceSetting:(unsigned short)arg23 inRetransmissionEffort:(unsigned char)arg24 inPacketType:(unsigned short)arg25 outSynchronousConnectionCompleteResults:(struct BluetoothHCIEventSynchronousConnectionCompleteResults { unsigned short x1; struct BluetoothDeviceAddress { unsigned char x_2_1_1[6]; } x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned short x6; unsigned short x7; unsigned char x8; }*)arg26;
- (int)BluetoothHCIEnhancedFlush:(unsigned short)arg1 inPacketType:(unsigned char)arg2 outConnectionHandle:(unsigned short*)arg3;
- (int)BluetoothHCIEnhancedSetupSynchronousConnection:(unsigned short)arg1 inTransmitBandwidth:(unsigned int)arg2 inReceiveBandwidth:(unsigned int)arg3 inTransmitCodingFormat:(unsigned long long)arg4 inReceiveCodingFormat:(unsigned long long)arg5 inTransmitCodecFrameSize:(unsigned short)arg6 inReceiveCodecFrameSize:(unsigned short)arg7 inInputBandwith:(unsigned int)arg8 inOutputBandwth:(unsigned int)arg9 inInputCodingFormat:(unsigned long long)arg10 inOutputCodingFormat:(unsigned long long)arg11 inInputCodedDataSize:(unsigned short)arg12 inOutputCodedDataSize:(unsigned short)arg13 inInputPCMDataFormat:(unsigned char)arg14 inOutputPCMDataFormat:(unsigned char)arg15 inInputPCMSamplePayloadMSBPosition:(unsigned char)arg16 inOutputPCMSamplePayloadMSBPosition:(unsigned char)arg17 inInputDataPath:(unsigned char)arg18 inOutputDataPath:(unsigned char)arg19 inInputTransportUnitSize:(unsigned char)arg20 inOutputTransportUnitSize:(unsigned char)arg21 inMaxLatency:(unsigned short)arg22 inVoiceSetting:(unsigned short)arg23 inRetransmissionEffort:(unsigned char)arg24 inPacketType:(unsigned short)arg25 outSynchronousConnectionCompleteResults:(struct BluetoothHCIEventSynchronousConnectionCompleteResults { unsigned short x1; struct BluetoothDeviceAddress { unsigned char x_2_1_1[6]; } x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned short x6; unsigned short x7; unsigned char x8; }*)arg26;
- (void)BluetoothHCIEventNotification:(const struct IOBluetoothHCIEventNotificationMessage { struct BluetoothHCIUserClientNotificationDataInfo { unsigned long long x_1_1_1; unsigned long long x_1_1_2; struct BluetoothHCIRequestCallbackInfo { unsigned long long x_3_2_1; unsigned long long x_3_2_2; unsigned long long x_3_2_3; unsigned long long x_3_2_4; unsigned long long x_3_2_5; } x_1_1_3; unsigned int x_1_1_4; unsigned int x_1_1_5; unsigned short x_1_1_6; unsigned char x_1_1_7; unsigned char x_1_1_8; unsigned char x_1_1_9; unsigned char x_1_1_10; unsigned char x_1_1_11; unsigned char x_1_1_12; } x1; void *x2; }*)arg1;
- (int)BluetoothHCIExitParkState:(unsigned short)arg1 outModeChangeResults:(struct BluetoothHCIEventModeChangeResults { unsigned short x1; unsigned char x2; unsigned short x3; }*)arg2;
- (int)BluetoothHCIExitPeriodicInquiryMode;
- (int)BluetoothHCIExitSniffMode:(unsigned short)arg1 outModeChangeResults:(struct BluetoothHCIEventModeChangeResults { unsigned short x1; unsigned char x2; unsigned short x3; }*)arg2;
- (int)BluetoothHCIFlowSpecification:(struct BluetoothHCIEventFlowSpecificationData { unsigned short x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; }*)arg1 outFlowSpecificationCompleteResults:(struct BluetoothHCIEventFlowSpecificationData { unsigned short x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; }*)arg2;
- (int)BluetoothHCIFlush:(unsigned short)arg1;
- (int)BluetoothHCIHoldMode:(unsigned short)arg1 inHoldModeMaxInterval:(unsigned short)arg2 inHoldModeMinInterval:(unsigned short)arg3 outModeChangeResults:(struct BluetoothHCIEventModeChangeResults { unsigned short x1; unsigned char x2; unsigned short x3; }*)arg4;
- (int)BluetoothHCIHostBufferSize:(unsigned short)arg1 inHostSynchronousDataPacketLength:(unsigned char)arg2 inHostTotalNumACLDataPackets:(unsigned short)arg3 inHostTotalNumSynchronousDataPackets:(unsigned short)arg4;
- (int)BluetoothHCIHostNumberOfCompletedPackets:(unsigned char)arg1 inHandle:(const unsigned short*)arg2 inHostNumOfCompletedPackets:(const unsigned short*)arg3;
- (int)BluetoothHCIIOCapabilityRequestNegativeReply:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inReason:(unsigned char)arg2;
- (int)BluetoothHCIIOCapabilityRequestReply:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inIOCapability:(unsigned char)arg2 inOOBDataPresent:(unsigned char)arg3 inAuthenticationRequirements:(unsigned char)arg4;
- (int)BluetoothHCIInquiry:(unsigned int)arg1 inInquiryLength:(unsigned char)arg2 inNumResponses:(unsigned char)arg3 outInquiryResults:(struct BluetoothHCIInquiryResults { struct BluetoothHCIInquiryResult { struct BluetoothDeviceAddress { unsigned char x_1_2_1[6]; } x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; unsigned char x_1_1_4; unsigned int x_1_1_5; unsigned short x_1_1_6; } x1[50]; unsigned int x2; }*)arg4;
- (int)BluetoothHCIInquiryCancel;
- (int)BluetoothHCILEAddDeviceToWhiteList:(unsigned char)arg1 address:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg2;
- (int)BluetoothHCILEAdvPacketContentFilterFeatureSectionClear:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 addressType:(unsigned char)arg2 outLEextOpcode:(char *)arg3 outAction:(char *)arg4;
- (int)BluetoothHCILEAdvPacketContentFilterFeatureSectionRead:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 addressType:(unsigned char)arg2 outLEextOpcode:(char *)arg3 outAction:(char *)arg4 outFeatureSelection:(unsigned int*)arg5 outLogicalType:(char *)arg6;
- (int)BluetoothHCILEAdvPacketContentFilterFeatureSectionWrite:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 addressType:(unsigned char)arg2 featureSelection:(unsigned int)arg3 logicalType:(unsigned char)arg4 outLEextOpcode:(char *)arg5 outAction:(char *)arg6;
- (int)BluetoothHCILEAdvPacketPacketFilterServiceUUIDClear:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 addressType:(unsigned char)arg2 outLEextOpcode:(char *)arg3 outAction:(char *)arg4;
- (int)BluetoothHCILEAdvPacketPacketFilterServiceUUIDWrite:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 addressType:(unsigned char)arg2 logicalType:(unsigned char)arg3 outLEextOpcode:(char *)arg4 outAction:(char *)arg5 UUID:(char *)arg6;
- (int)BluetoothHCILEBroadcomAddIRKToList:(char *)arg1 addressType:(unsigned char)arg2 address:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg3 outLEextOpcode:(char *)arg4 outIRKListAvailableSpace:(char *)arg5;
- (int)BluetoothHCILEBroadcomClearIRKList:(char *)arg1 outIRKListAvailableSpace:(char *)arg2;
- (int)BluetoothHCILEBroadcomEnableCustomerSpecificFeatures:(unsigned int)arg1 outLEextOpcode:(char *)arg2;
- (int)BluetoothHCILEBroadcomReadIRKList:(unsigned char)arg1 outLEextOpcode:(char *)arg2 outIRKListIndex:(char *)arg3 outIRK:(char *)arg4 outAddressType:(char *)arg5 outAddress:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg6 outResolvedPrivateAddress:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg7;
- (int)BluetoothHCILEBroadcomRemoveIRKFromList:(unsigned char)arg1 address:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg2 outLEextOpcode:(char *)arg3 outIRKListAvailableSpace:(char *)arg4;
- (int)BluetoothHCILEClearWhiteList;
- (int)BluetoothHCILEConnectionUpdate:(unsigned short)arg1 connectionIntervalMin:(unsigned short)arg2 connectionIntervalMax:(unsigned short)arg3 connectionLatency:(unsigned short)arg4 supervisionTimeout:(unsigned short)arg5 minimumCELength:(unsigned short)arg6 maximumCELength:(unsigned short)arg7;
- (int)BluetoothHCILECreateConnection:(unsigned short)arg1 LEScanWindow:(unsigned short)arg2 initiatorFilterPolicy:(unsigned char)arg3 peerAddressType:(unsigned char)arg4 peerAddress:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg5 ownAddressType:(unsigned char)arg6 connectionIntervalMin:(unsigned short)arg7 connectionIntervalMax:(unsigned short)arg8 connectionLatency:(unsigned short)arg9 supervisionTimeout:(unsigned short)arg10 minimumCELength:(unsigned short)arg11 maximumCELength:(unsigned short)arg12;
- (int)BluetoothHCILECreateConnectionCancel;
- (int)BluetoothHCILECreateExtendedAdvertisingInstance:(unsigned char)arg1 address:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg2 outLEextOpcode:(char *)arg3 outHandle:(char *)arg4;
- (int)BluetoothHCILEEncrypt:(char *)arg1 plaintextData:(char *)arg2 encryptedData:(char *)arg3;
- (int)BluetoothHCILEExtendedDuplicateFilter:(char *)arg1 outAction:(unsigned char)arg2;
- (int)BluetoothHCILELongTermKeyRequestNegativeReply:(unsigned short)arg1;
- (int)BluetoothHCILELongTermKeyRequestReply:(unsigned short)arg1 longTermKey:(char *)arg2;
- (int)BluetoothHCILERand:(unsigned long long*)arg1;
- (int)BluetoothHCILEReadAdvertisingChannelTxPower:(char *)arg1;
- (int)BluetoothHCILEReadBufferSize:(unsigned short*)arg1 totalNumberLEDataPackets:(char *)arg2;
- (int)BluetoothHCILEReadChannelMap:(unsigned short)arg1 channelMap:(unsigned long long*)arg2;
- (int)BluetoothHCILEReadLocalSupportedFeatures:(unsigned long long*)arg1;
- (int)BluetoothHCILEReadMaximumDataLength:(unsigned short*)arg1 supportedMaxTxTime:(unsigned short*)arg2 supportedMaxRxOctets:(unsigned short*)arg3 supportedMaxRxTime:(unsigned short*)arg4;
- (int)BluetoothHCILEReadRemoteUsedFeatures:(unsigned short)arg1;
- (int)BluetoothHCILEReadSuggestedDefaultDataLength:(unsigned short*)arg1 maxTxTime:(unsigned short*)arg2;
- (int)BluetoothHCILEReadSupportedStates:(unsigned long long*)arg1;
- (int)BluetoothHCILEReadWhiteListSize:(char *)arg1;
- (int)BluetoothHCILEReceiverTest:(unsigned char)arg1;
- (int)BluetoothHCILERemoveDeviceFromWhiteList:(unsigned char)arg1 address:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg2;
- (int)BluetoothHCILERemoveExtendedAdvertisingInstance:(unsigned char)arg1 outLEextOpcode:(char *)arg2;
- (int)BluetoothHCILEScanCache:(unsigned char)arg1;
- (int)BluetoothHCILEScanRSSIThresholdRead:(char *)arg1 outMode:(char *)arg2 outRSSIThreshold:(char *)arg3;
- (int)BluetoothHCILEScanRSSIThresholdWrite:(unsigned char)arg1 rssiThresdhold:(BOOL)arg2 outAction:(char *)arg3;
- (int)BluetoothHCILESetAdvertiseEnable:(unsigned char)arg1;
- (int)BluetoothHCILESetAdvertisingData:(unsigned char)arg1 advertsingData:(char *)arg2;
- (int)BluetoothHCILESetAdvertisingParameters:(unsigned short)arg1 advertisingIntervalMax:(unsigned short)arg2 advertisingType:(unsigned char)arg3 ownAddressType:(unsigned char)arg4 directAddressType:(unsigned char)arg5 directAddress:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg6 advertisingChannelMap:(unsigned char)arg7 advertisingFilterPolicy:(unsigned char)arg8;
- (int)BluetoothHCILESetDataLength:(unsigned short)arg1 maxTxOctets:(unsigned short)arg2 maxTxTime:(unsigned short)arg3 connectionHandle:(unsigned short*)arg4;
- (int)BluetoothHCILESetEventMask:(unsigned long long)arg1;
- (int)BluetoothHCILESetExtendedAdvertiseEnable:(unsigned char)arg1 advertiseEnable:(unsigned char)arg2 timeout:(unsigned int)arg3 timeoutEvent:(unsigned char)arg4;
- (int)BluetoothHCILESetExtendedAdvertisingData:(unsigned char)arg1 advertisingDataLength:(unsigned char)arg2 advertsingData:(char *)arg3;
- (int)BluetoothHCILESetExtendedAdvertisingParameters:(unsigned char)arg1 advertisingIntervalMin:(unsigned short)arg2 advertisingIntervalMax:(unsigned short)arg3 advertisingType:(unsigned char)arg4 advertisingChannelMap:(unsigned char)arg5 advertisingFilterPolicy:(unsigned char)arg6;
- (int)BluetoothHCILESetExtendedScanResponseData:(unsigned char)arg1 scanResponseDataLength:(unsigned char)arg2 scanResponseData:(char *)arg3;
- (int)BluetoothHCILESetHostChannelClassification:(unsigned long long)arg1;
- (int)BluetoothHCILESetRandomAddress:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1;
- (int)BluetoothHCILESetScanEnable:(unsigned char)arg1 filterDuplicates:(unsigned char)arg2;
- (int)BluetoothHCILESetScanParameters:(unsigned char)arg1 LEScanInterval:(unsigned short)arg2 LEScanWindow:(unsigned short)arg3 ownAddressType:(unsigned char)arg4 scanningFilterPolicy:(unsigned char)arg5;
- (int)BluetoothHCILESetScanResponseData:(unsigned char)arg1 scanResponseData:(char *)arg2;
- (int)BluetoothHCILEStartEncryption:(unsigned short)arg1 randomNumber:(unsigned long long)arg2 encryptedDiversifier:(unsigned short)arg3 longTermKey:(char *)arg4;
- (int)BluetoothHCILETestEnd:(unsigned short*)arg1;
- (int)BluetoothHCILETrackSensor:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 addressType:(unsigned char)arg2 timeoutValue:(unsigned char)arg3 outLEextOpcode:(char *)arg4;
- (int)BluetoothHCILETransmitterTest:(unsigned char)arg1 lengthOfTestData:(unsigned char)arg2 packetPayload:(unsigned char)arg3;
- (int)BluetoothHCILEWriteSuggestedDefaultDataLength:(unsigned short)arg1 suggestedMaxTxTime:(unsigned short)arg2;
- (int)BluetoothHCILinkKeyRequestNegativeReply:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1;
- (int)BluetoothHCILinkKeyRequestReply:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inLinkKey:(const struct BluetoothKey { unsigned char x1[16]; }*)arg2;
- (int)BluetoothHCIMasterLinkKey:(unsigned char)arg1 outMasterLinkKeyCompleteResults:(struct BluetoothHCIEventMasterLinkKeyCompleteResults { unsigned short x1; unsigned char x2; }*)arg2;
- (int)BluetoothHCIPINCodeRequestNegativeReply:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1;
- (int)BluetoothHCIPINCodeRequestReply:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inPINCodeLength:(unsigned long long)arg2 inPINCode:(const struct BluetoothPINCode { unsigned char x1[16]; }*)arg3;
- (int)BluetoothHCIParkState:(unsigned short)arg1 inBeaconMaxInterval:(unsigned short)arg2 inBeaconMinInterval:(unsigned short)arg3 outModeChangeResults:(struct BluetoothHCIEventModeChangeResults { unsigned short x1; unsigned char x2; unsigned short x3; }*)arg4;
- (int)BluetoothHCIPeriodicInquiryMode:(unsigned char)arg1 inMinPeriodLength:(unsigned char)arg2 inLAP:(unsigned int)arg3 inInquiryLength:(unsigned char)arg4 inNumResponses:(unsigned char)arg5 outInquiryResults:(struct BluetoothHCIInquiryResults { struct BluetoothHCIInquiryResult { struct BluetoothDeviceAddress { unsigned char x_1_2_1[6]; } x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; unsigned char x_1_1_4; unsigned int x_1_1_5; unsigned short x_1_1_6; } x1[50]; unsigned int x2; }*)arg6;
- (int)BluetoothHCIQoSSetup:(unsigned short)arg1 inFlags:(unsigned char)arg2 inServiceType:(unsigned char)arg3 inTokenRate:(unsigned int)arg4 inPeakBandwidth:(unsigned int)arg5 inLatency:(unsigned int)arg6 inDelayVariation:(unsigned int)arg7 outQoSSetupCompleteResults:(struct BluetoothHCIEventQoSSetupCompleteResults { unsigned short x1; struct BluetoothHCIQualityOfServiceSetupParams { unsigned char x_2_1_1; unsigned char x_2_1_2; unsigned int x_2_1_3; unsigned int x_2_1_4; unsigned int x_2_1_5; unsigned int x_2_1_6; } x2; }*)arg8;
- (int)BluetoothHCIReadAFHChannelAssessmentMode:(char *)arg1;
- (int)BluetoothHCIReadAFHChannelMap:(unsigned short)arg1 outAFHMode:(char *)arg2 outAFHChannelMap:(unsigned char)arg3;
- (int)BluetoothHCIReadAuthenticationEnable:(char *)arg1;
- (int)BluetoothHCIReadAutomaticFlushTimeout:(unsigned short)arg1 outFlushTimeout:(unsigned short*)arg2;
- (int)BluetoothHCIReadBufferSize:(unsigned short*)arg1 outHCSynchronousDataPacketLength:(char *)arg2 outHCTotalNumACLDataPackets:(unsigned short*)arg3 outHCTotalNumSynchronousDataPackets:(unsigned short*)arg4;
- (int)BluetoothHCIReadClassOfDevice:(unsigned int*)arg1;
- (int)BluetoothHCIReadClock:(unsigned short)arg1 inWhichClock:(unsigned char)arg2 outReadClockInfo:(struct BluetoothReadClockInfo { unsigned short x1; unsigned int x2; unsigned short x3; }*)arg3;
- (int)BluetoothHCIReadClockOffset:(unsigned short)arg1 outReadClockOffsetCompleteResults:(unsigned short*)arg2;
- (int)BluetoothHCIReadConnectionAcceptTimeout:(unsigned short*)arg1;
- (int)BluetoothHCIReadCurrentIACLAP:(struct BluetoothHCICurrentInquiryAccessCodes { unsigned char x1; struct BluetoothHCIInquiryAccessCode {} *x2; }*)arg1;
- (int)BluetoothHCIReadDefaultErroneousDataReporting:(char *)arg1;
- (int)BluetoothHCIReadDefaultLinkPolicySettings:(unsigned short*)arg1;
- (int)BluetoothHCIReadDeviceAddress:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1;
- (int)BluetoothHCIReadExtendedInquiryResponse:(char *)arg1 outExtendedInquiryResponse:(struct BluetoothHCIExtendedInquiryResponse { unsigned char x1[240]; }*)arg2;
- (int)BluetoothHCIReadFailedContactCounter:(unsigned short)arg1 outFailedContactCounter:(unsigned short*)arg2;
- (int)BluetoothHCIReadHoldModeActivity:(char *)arg1;
- (int)BluetoothHCIReadInquiryMode:(char *)arg1;
- (int)BluetoothHCIReadInquiryResponseTransmitPowerLevel:(char *)arg1;
- (int)BluetoothHCIReadInquiryScanActivity:(unsigned short*)arg1 outInquiryScanWindow:(unsigned short*)arg2;
- (int)BluetoothHCIReadInquiryScanType:(char *)arg1;
- (int)BluetoothHCIReadLEHostSupported:(char *)arg1 simultaneousLEHost:(char *)arg2;
- (int)BluetoothHCIReadLMPHandle:(unsigned short)arg1 outReadLMPHandleResults:(struct BluetoothHCIReadLMPHandleResults { unsigned short x1; unsigned char x2; unsigned int x3; }*)arg2;
- (int)BluetoothHCIReadLinkPolicySettings:(unsigned short)arg1 outLinkPolicySettings:(unsigned short*)arg2;
- (int)BluetoothHCIReadLinkQuality:(unsigned short)arg1 outLinkQuality:(char *)arg2;
- (int)BluetoothHCIReadLinkSupervisionTimeout:(unsigned short)arg1 outLinkSupervisionTimeout:(unsigned short*)arg2;
- (int)BluetoothHCIReadLocalExtendedFeatures:(unsigned char)arg1 outMaximumPageNumber:(char *)arg2 outExtendedLMPFeatures:(struct BluetoothHCISupportedFeatures { unsigned char x1[8]; }*)arg3;
- (int)BluetoothHCIReadLocalName:(unsigned char)arg1;
- (int)BluetoothHCIReadLocalOOBData:(struct BluetoothHCISimplePairingOOBData { unsigned char x1[16]; }*)arg1 outR:(struct BluetoothHCISimplePairingOOBData { unsigned char x1[16]; }*)arg2;
- (int)BluetoothHCIReadLocalSupportedCommands:(struct BluetoothHCISupportedCommands { unsigned char x1[64]; }*)arg1;
- (int)BluetoothHCIReadLocalSupportedFeatures:(struct BluetoothHCISupportedFeatures { unsigned char x1[8]; }*)arg1;
- (int)BluetoothHCIReadLocalVersionInformation:(char *)arg1 outHCIRevision:(unsigned short*)arg2 outLMPVersion:(char *)arg3 outManufacturerName:(unsigned short*)arg4 outLMPSubversion:(unsigned short*)arg5;
- (int)BluetoothHCIReadLoopbackMode:(char *)arg1;
- (int)BluetoothHCIReadNumBroadcastRetransmissions:(char *)arg1;
- (int)BluetoothHCIReadNumberOfSupportedIAC:(char *)arg1;
- (int)BluetoothHCIReadPINType:(char *)arg1;
- (int)BluetoothHCIReadPageScanActivity:(unsigned short*)arg1 outPageScanWindow:(unsigned short*)arg2;
- (int)BluetoothHCIReadPageScanType:(char *)arg1;
- (int)BluetoothHCIReadPageTimeout:(unsigned short*)arg1;
- (int)BluetoothHCIReadRSSI:(unsigned short)arg1 outRSSI:(char *)arg2;
- (int)BluetoothHCIReadRemoteExtendedFeatures:(unsigned short)arg1 inPageNumber:(unsigned char)arg2 outReadRemoteExtendedFeaturesCompleteResults:(struct BluetoothHCIEventReadRemoteExtendedFeaturesResults { unsigned char x1; unsigned short x2; unsigned char x3; unsigned char x4; struct BluetoothHCISupportedFeatures { unsigned char x_5_1_1[8]; } x5; }*)arg3;
- (int)BluetoothHCIReadRemoteSupportedFeatures:(unsigned short)arg1 outReadRemoteSupportedFeaturesCompleteResults:(struct BluetoothHCIEventReadRemoteSupportedFeaturesResults { unsigned char x1; unsigned short x2; struct BluetoothHCISupportedFeatures { unsigned char x_3_1_1[8]; } x3; }*)arg2;
- (int)BluetoothHCIReadRemoteVersionInformation:(unsigned short)arg1 outReadRemoteVersionInformationCompleteResults:(struct BluetoothHCIEventReadRemoteVersionInfoResults { unsigned short x1; unsigned char x2; unsigned short x3; unsigned short x4; }*)arg2;
- (int)BluetoothHCIReadScanEnable:(char *)arg1;
- (int)BluetoothHCIReadSimplePairingMode:(char *)arg1;
- (int)BluetoothHCIReadStoredLinkKey:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inReadAllFlag:(unsigned char)arg2 outStoredLinkKeysInfo:(struct BluetoothHCIStoredLinkKeysInfo { unsigned short x1; unsigned short x2; }*)arg3;
- (int)BluetoothHCIReadSynchronousFlowControlEnable:(char *)arg1;
- (int)BluetoothHCIReadTransmitPowerLevel:(unsigned short)arg1 inType:(unsigned char)arg2 outTransmitPowerLevel:(char *)arg3;
- (int)BluetoothHCIReadVoiceSetting:(unsigned short*)arg1;
- (int)BluetoothHCIRefreshEncryptionKey:(unsigned short)arg1 outRefreshEncryptionKeyResults:(struct BluetoothHCIEventEncryptionKeyRefreshCompleteResults { unsigned short x1; }*)arg2;
- (int)BluetoothHCIRejectConnectionRequest:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inReason:(unsigned char)arg2 outConnectionCompleteResults:(struct BluetoothHCIEventConnectionCompleteResults { unsigned short x1; struct BluetoothDeviceAddress { unsigned char x_2_1_1[6]; } x2; unsigned char x3; unsigned char x4; }*)arg3;
- (int)BluetoothHCIRejectSynchronousConnectionRequest:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inReason:(unsigned char)arg2 outSynchronousConnectionCompleteResults:(struct BluetoothHCIEventSynchronousConnectionCompleteResults { unsigned short x1; struct BluetoothDeviceAddress { unsigned char x_2_1_1[6]; } x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned short x6; unsigned short x7; unsigned char x8; }*)arg3;
- (int)BluetoothHCIRemoteNameRequest:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inPageScanRepetitionMode:(unsigned char)arg2 inReserved:(unsigned char)arg3 inClockOffset:(unsigned short)arg4 outRemoteNameRequestCompleteResults:(struct BluetoothHCIEventRemoteNameRequestResults { struct BluetoothDeviceAddress { unsigned char x_1_1_1[6]; } x1; unsigned char x2[248]; }*)arg5;
- (int)BluetoothHCIRemoteNameRequestCancel:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1;
- (int)BluetoothHCIRemoteOOBDataRequestNegativeReply:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1;
- (int)BluetoothHCIRemoteOOBDataRequestReply:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inC:(const struct BluetoothHCISimplePairingOOBData { unsigned char x1[16]; }*)arg2 inR:(const struct BluetoothHCISimplePairingOOBData { unsigned char x1[16]; }*)arg3;
- (int)BluetoothHCIReset;
- (int)BluetoothHCIResetFailedContactCounter:(unsigned short)arg1;
- (int)BluetoothHCIRoleDiscovery:(unsigned short)arg1 outCurrentRole:(char *)arg2;
- (int)BluetoothHCISendKeypressNotification:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inNotificationType:(unsigned char)arg2;
- (int)BluetoothHCISetAFHHostChannelClassification:(const struct BluetoothAFHHostChannelClassification { unsigned char x1[10]; }*)arg1;
- (int)BluetoothHCISetConnectionEncryption:(unsigned short)arg1 inEncryptionEnable:(unsigned char)arg2 outEncryptionChangeResults:(struct BluetoothHCIEventEncryptionChangeResults { unsigned short x1; unsigned char x2; }*)arg3;
- (int)BluetoothHCISetControllerToHostFlowControl:(unsigned char)arg1;
- (int)BluetoothHCISetEventFilter:(unsigned char)arg1 inFilterConditionType:(unsigned char)arg2 inCondition:(struct BluetoothEventFilterCondition { unsigned char x1[7]; }*)arg3;
- (int)BluetoothHCISetEventMask:(const struct BluetoothSetEventMask { unsigned char x1[8]; }*)arg1;
- (int)BluetoothHCISetSpecialSniffTransitionEnable:(unsigned short)arg1 enable:(unsigned char)arg2;
- (int)BluetoothHCISetupSynchronousConnection:(unsigned short)arg1 inTransmitBandwidth:(unsigned int)arg2 inReceiveBandwidth:(unsigned int)arg3 inMaxLatency:(unsigned short)arg4 inVoiceSetting:(unsigned short)arg5 inRetransmissionEffort:(unsigned char)arg6 inPacketType:(unsigned short)arg7 outSynchronousConnectionCompleteResults:(struct BluetoothHCIEventSynchronousConnectionCompleteResults { unsigned short x1; struct BluetoothDeviceAddress { unsigned char x_2_1_1[6]; } x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned short x6; unsigned short x7; unsigned char x8; }*)arg8;
- (int)BluetoothHCISniffMode:(unsigned short)arg1 inSniffMaxInterval:(unsigned short)arg2 inSniffMinInterval:(unsigned short)arg3 inSniffAttempt:(unsigned short)arg4 inSniffTimeout:(unsigned short)arg5 outModeChangeResults:(struct BluetoothHCIEventModeChangeResults { unsigned short x1; unsigned char x2; unsigned short x3; }*)arg6;
- (int)BluetoothHCISniffSubrating:(unsigned short)arg1 inMaximumLatency:(unsigned short)arg2 inMinimumRemoteTimeout:(unsigned short)arg3 inMinimumLocalTimeout:(unsigned short)arg4 outConnectionHandle:(unsigned short*)arg5;
- (int)BluetoothHCISwitchRole:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inRole:(unsigned char)arg2 outRoleChangeResults:(struct BluetoothHCIEventRoleChangeResults { unsigned short x1; struct BluetoothDeviceAddress { unsigned char x_2_1_1[6]; } x2; unsigned char x3; }*)arg3;
- (int)BluetoothHCIUserConfirmationRequestNegativeReply:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1;
- (int)BluetoothHCIUserConfirmationRequestReply:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1;
- (int)BluetoothHCIUserPasskeyRequestNegativeReply:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1;
- (int)BluetoothHCIUserPasskeyRequestReply:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 inNumericValue:(unsigned int)arg2;
- (int)BluetoothHCIWriteAFHChannelAssessmentMode:(unsigned char)arg1;
- (int)BluetoothHCIWriteAuthenticationEnable:(unsigned char)arg1;
- (int)BluetoothHCIWriteAutomaticFlushTimeout:(unsigned short)arg1 inFlushTimeout:(unsigned short)arg2;
- (int)BluetoothHCIWriteClassOfDevice:(unsigned int)arg1;
- (int)BluetoothHCIWriteConnectionAcceptTimeout:(unsigned short)arg1;
- (int)BluetoothHCIWriteCurrentIACLAP:(const struct BluetoothHCICurrentInquiryAccessCodesForWrite { unsigned char x1; unsigned char x2[192]; }*)arg1;
- (int)BluetoothHCIWriteDefaultErroneousDataReporting:(unsigned char)arg1;
- (int)BluetoothHCIWriteDefaultLinkPolicySettings:(unsigned short)arg1;
- (int)BluetoothHCIWriteExtendedInquiryResponse:(unsigned char)arg1 inExtendedInquiryResponse:(const struct BluetoothHCIExtendedInquiryResponse { unsigned char x1[240]; }*)arg2;
- (int)BluetoothHCIWriteHoldModeActivity:(unsigned char)arg1;
- (int)BluetoothHCIWriteInquiryMode:(unsigned char)arg1;
- (int)BluetoothHCIWriteInquiryScanActivity:(unsigned short)arg1 inInquiryScanWindow:(unsigned short)arg2;
- (int)BluetoothHCIWriteInquiryScanType:(unsigned char)arg1;
- (int)BluetoothHCIWriteInquiryTransmitPowerLevel:(BOOL)arg1;
- (int)BluetoothHCIWriteLEHostSupported:(unsigned char)arg1 simultaneousLEHost:(unsigned char)arg2;
- (int)BluetoothHCIWriteLinkPolicySettings:(unsigned short)arg1 inLinkPolicySettings:(unsigned short)arg2;
- (int)BluetoothHCIWriteLinkSupervisionTimeout:(unsigned short)arg1 inLinkSupervisionTimeout:(unsigned short)arg2;
- (int)BluetoothHCIWriteLocalName:(unsigned char)arg1;
- (int)BluetoothHCIWriteLoopbackMode:(unsigned char)arg1;
- (int)BluetoothHCIWriteNumBroadcastRetransmissions:(unsigned char)arg1;
- (int)BluetoothHCIWritePINType:(unsigned char)arg1;
- (int)BluetoothHCIWritePageScanActivity:(unsigned short)arg1 inPageScanWindow:(unsigned short)arg2;
- (int)BluetoothHCIWritePageScanType:(unsigned char)arg1;
- (int)BluetoothHCIWritePageTimeout:(unsigned short)arg1;
- (int)BluetoothHCIWriteScanEnable:(unsigned char)arg1;
- (int)BluetoothHCIWriteSimplePairingDebugMode:(unsigned char)arg1;
- (int)BluetoothHCIWriteSimplePairingMode:(unsigned char)arg1;
- (int)BluetoothHCIWriteStoredLinkKey:(unsigned int)arg1 inDeviceAddress:(const struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg2 inLinkKey:(const struct BluetoothKey { unsigned char x1[16]; }*)arg3 outNumKeysWritten:(char *)arg4;
- (int)BluetoothHCIWriteSynchronousFlowControlEnable:(unsigned char)arg1;
- (int)BluetoothHCIWriteVoiceSetting:(unsigned short)arg1;
- (void)BluetoothHostControllerDoNotTickleDisplay;
- (void)BluetoothHostControllerSetupCompleted;
- (int)BroadcomHCILEAddAdvancedMatchingRule:(struct { unsigned char x1[22]; })arg1 mask:(struct { unsigned char x1[22]; })arg2 RSSIThreshold:(BOOL)arg3 packetType:(unsigned char)arg4 matchingCapacity:(char *)arg5 matchingRemaining:(char *)arg6;
- (int)BroadcomHCILEAddAdvancedMatchingRuleWithAddress:(BOOL)arg1 address:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg2 blob:(struct { unsigned char x1[22]; })arg3 mask:(struct { unsigned char x1[22]; })arg4 RSSIThreshold:(BOOL)arg5 packetType:(unsigned char)arg6 matchingCapacity:(char *)arg7 matchingRemaining:(char *)arg8;
- (int)BroadcomHCILERemoveAdvancedMatchingRule:(struct { unsigned char x1[22]; })arg1 mask:(struct { unsigned char x1[22]; })arg2 RSSIThreshold:(BOOL)arg3 packetType:(unsigned char)arg4 matchingCapacity:(char *)arg5 matchingRemaining:(char *)arg6;
- (int)BroadcomHCILERemoveAdvancedMatchingRuleWithAddress:(BOOL)arg1 address:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg2 blob:(struct { unsigned char x1[22]; })arg3 mask:(struct { unsigned char x1[22]; })arg4 RSSIThreshold:(BOOL)arg5 packetType:(unsigned char)arg6 matchingCapacity:(char *)arg7 matchingRemaining:(char *)arg8;
- (int)BroadcomHCILEResetAdvancedMatchingRules:(char *)arg1 matchingRemaining:(char *)arg2;
- (unsigned short)USBProductID;
- (unsigned short)USBVendorID;
- (void)addDeviceToOutstandingRequests:(id)arg1 forHCIRequestID:(unsigned int)arg2;
- (int)addHIDEmulationDevice:(struct BluetoothDeviceAddress { unsigned char x1[6]; })arg1 classOfDevice:(unsigned int)arg2 linkKey:(struct BluetoothKey { unsigned char x1[16]; })arg3;
- (id)addressAsString;
- (void)asyncHCIEventNotificationWithRef:(struct OpaqueIOBluetoothNotificationRef { }*)arg1 subClass:(unsigned int)arg2 data:(const void*)arg3 dataSize:(unsigned long long)arg4;
- (id)cachedDeviceAddress;
- (id)cachedDeviceAddressString;
- (unsigned char)cachedHCIVersion;
- (unsigned int)classOfDevice;
- (BOOL)concurrentCreateConnectionSupported;
- (int)configState;
- (void)dealloc;
- (id)delegate;
- (int)enableRemoteWake:(BOOL)arg1;
- (unsigned int)featureFlags;
- (void)finalize;
- (int)getAddress:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1;
- (int)getControllerManufacturerName;
- (id)getDeviceForHCIRequestID:(unsigned int)arg1 removeIfFound:(BOOL)arg2;
- (int)getDiagnosticInfo;
- (id)init;
- (BOOL)isLEASupported;
- (BOOL)isReady;
- (BOOL)lowEnergySupported;
- (id)nameAsString;
- (BOOL)pairedDeviceSupportTBFCPage;
- (BOOL)powerChangeSupported;
- (int)powerState;
- (void)processRawEventData:(const void*)arg1 dataSize:(unsigned long long)arg2;
- (int)readHIDEmulationDevices;
- (int)readRawRSSIForDevice:(id)arg1;
- (int)readVerboseConfigVersionInfo:(char *)arg1 outTargetID:(char *)arg2 outBaseline:(unsigned short*)arg3 outBuild:(unsigned short*)arg4;
- (void)releaseRequest:(unsigned int)arg1;
- (int)removeHIDEmulationDevice:(struct BluetoothDeviceAddress { unsigned char x1[6]; })arg1;
- (unsigned int)requestWithTimeout:(int)arg1 isSynchronous:(BOOL)arg2 device:(id)arg3;
- (void)sendInquiryResultToDelegate:(struct IOBluetoothHCIEventNotificationMessage { struct BluetoothHCIUserClientNotificationDataInfo { unsigned long long x_1_1_1; unsigned long long x_1_1_2; struct BluetoothHCIRequestCallbackInfo { unsigned long long x_3_2_1; unsigned long long x_3_2_2; unsigned long long x_3_2_3; unsigned long long x_3_2_4; unsigned long long x_3_2_5; } x_1_1_3; unsigned int x_1_1_4; unsigned int x_1_1_5; unsigned short x_1_1_6; unsigned char x_1_1_7; unsigned char x_1_1_8; unsigned char x_1_1_9; unsigned char x_1_1_10; unsigned char x_1_1_11; unsigned char x_1_1_12; } x1; void *x2; }*)arg1;
- (int)setClassOfDevice:(unsigned int)arg1 forTimeInterval:(double)arg2;
- (void)setDelegate:(id)arg1;
- (int)setPowerState:(int)arg1;
- (int)setProperty:(id)arg1 forKey:(id)arg2;
- (int)setTransmitPowerForDevice:(id)arg1 toLevel:(unsigned char)arg2;
- (int)softwareVersion:(struct NumVersion { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; }*)arg1 firmwareVersion:(struct BluetoothHCIVersionInfo { unsigned short x1; unsigned char x2; unsigned short x3; unsigned char x4; unsigned short x5; }*)arg2;
- (int)startReceiveTest:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 reportPeriod:(unsigned short)arg2 frequency:(unsigned char)arg3 modulationType:(unsigned char)arg4 logicalChannel:(unsigned char)arg5 packetType:(unsigned char)arg6 packetLength:(unsigned short)arg7;
- (int)startTransmitTest:(struct BluetoothDeviceAddress { unsigned char x1[6]; }*)arg1 hoppingMode:(unsigned char)arg2 frequency:(unsigned char)arg3 modulationType:(unsigned char)arg4 logicalChannel:(unsigned char)arg5 packetType:(unsigned char)arg6 packetLength:(unsigned short)arg7 transmitPower:(unsigned char)arg8 transmitPowerdBm:(unsigned char)arg9 transmitPowerTableIndex:(unsigned char)arg10 transmitConnectionInterval:(unsigned char)arg11;
- (void)stopHCIEventListener;
- (int)superPeekPoke:(unsigned char)arg1 address:(unsigned int)arg2 outValue:(unsigned int*)arg3;
- (struct BluetoothHCISupportedFeatures { unsigned char x1[8]; })supportedFeatures;
- (BOOL)tbfcPageSupported;
- (BOOL)tbfcSupported;
- (int)triStateEnabled:(BOOL)arg1;

@end
