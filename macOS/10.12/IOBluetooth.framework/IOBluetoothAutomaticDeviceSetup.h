/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth
 */

@interface IOBluetoothAutomaticDeviceSetup : NSObject {
    NSString * _PINCodeString;
    BOOL  _automaticDeviceSetupBluetoothKeyboardConnected;
    BOOL  _automaticDeviceSetupBluetoothMouseBeingPairedConnected;
    BOOL  _automaticDeviceSetupBluetoothMouseConnected;
    BOOL  _automaticDeviceSetupComplete;
    BOOL  _automaticDeviceSetupDiscoveringDevicesComplete;
    BOOL  _automaticDeviceSetupDiscoveringDevicesFound;
    BOOL  _automaticDeviceSetupDiscoveringDevicesStarted;
    BOOL  _automaticDeviceSetupDiscoveringDevicesUpdated;
    BOOL  _automaticDeviceSetupPairingDeviceConnected;
    BOOL  _automaticDeviceSetupPairingDeviceFailed;
    BOOL  _automaticDeviceSetupPairingDeviceKeyPressNotification;
    BOOL  _automaticDeviceSetupPairingDeviceStarted;
    BOOL  _automaticDeviceSetupPairingDeviceSuccessful;
    BOOL  _automaticDeviceSetupPairingDeviceUserPasskeyNotification;
    BOOL  _automaticDeviceSetupPairingWaitingForUserAck;
    BOOL  _automaticDeviceSetupStarted;
    BOOL  _automaticDeviceSetupStopped;
    BOOL  _automaticDeviceSetupUSBKeyboardConnected;
    BOOL  _automaticDeviceSetupUSBMouseConnected;
    BOOL  _automaticDeviceSetupUSBPairingSuccessful;
    NSTimer * _bluetoothDeviceAppearanceTimeoutTimer;
    IOBluetoothDevicePair * _bluetoothDevicePair;
    BluetoothHIDDeviceController * _bluetoothHIDDeviceController;
    struct OpaqueIOBluetoothNotificationRef { } * _bluetoothNotificationRef;
    NSTimer * _bluetoothUpdateSystemActivityTimer;
    NSTimer * _bluetoothUserAckTimer;
    IOBluetoothDevice * _currentPairingDevice;
    id  _delegate;
    NSMutableArray * _deviceArray;
    unsigned int  _deviceClassMajor;
    unsigned int  _deviceClassMinor;
    unsigned int  _deviceServiceClassMajor;
    BOOL  _discovering;
    IOBluetoothDeviceInquiry * _inquiry;
    int  _inquiryLength;
    struct __IOHIDEventSystemClient { } * _keyboardNotifier;
    struct __IOHIDEventSystemClient { } * _mouseNotifier;
    BOOL  _notifyOnKeyboard;
    BOOL  _notifyOnMouse;
    int  _numberOfPairingAttemptsPerDevice;
    BOOL  _pairing;
    int  _pairingAttemptsForCurrentDevice;
    int  _pairingDeviceIndex;
    int  _preventSleepFor;
    BOOL  _preventingSleep;
    long long  _startTime;
    SystemPowerNotifier * _systemPowerNotifier;
    id  _textFieldTestingStatus;
    BOOL  _usbPairing;
    BOOL  _userAckTimeLimit;
    int  _userAckTimeRemaining;
}

+ (BOOL)bluetoothIsAvailableAndPowerIsOn:(BOOL)arg1;
+ (id)deviceSetupWithDelegate:(id)arg1 findDevicesOfServiceClass:(unsigned int)arg2 findDevicesOfMajorDeviceClass:(unsigned int)arg3 findDevicesOfMinorDeviceClass:(unsigned int)arg4 afterPairUserAcknowledgmentTimeLimit:(int)arg5 notifyWhenMousePluggedIn:(BOOL)arg6 notifyWhenKeyboardPluggedIn:(BOOL)arg7 preventSleepFor:(int)arg8;

- (void)bluetoothDone:(id)arg1;
- (void)bluetoothHCIControllerTerminated;
- (void)clearCurrentDevice;
- (id)currentPairingDevice;
- (void)dealloc;
- (void)deviceAppearanceTimeoutTimerFired;
- (void)deviceInquiryComplete:(id)arg1 error:(int)arg2 aborted:(BOOL)arg3;
- (void)deviceInquiryDeviceFound:(id)arg1 device:(id)arg2;
- (void)deviceInquiryDeviceNameUpdated:(id)arg1 device:(id)arg2 devicesRemaining:(unsigned int)arg3;
- (void)deviceInquiryStarted:(id)arg1;
- (void)deviceInquiryUpdatingDeviceNamesStarted:(id)arg1 devicesRemaining:(unsigned int)arg2;
- (void)devicePairingConnecting:(id)arg1;
- (void)devicePairingFinished:(id)arg1 error:(int)arg2;
- (void)devicePairingKeypressNotification:(id)arg1 type:(unsigned char)arg2;
- (void)devicePairingPINCodeRequest:(id)arg1;
- (void)devicePairingStarted:(id)arg1;
- (void)devicePairingUserPasskeyNotification:(id)arg1 passkey:(unsigned int)arg2;
- (void)finalize;
- (id)init;
- (void)keyboardConnectNotification:(struct __IOHIDServiceClient { }*)arg1;
- (void)mouseConnectNotification:(struct __IOHIDServiceClient { }*)arg1;
- (void)newBluetoothHIDDevice:(id)arg1;
- (void)newBluetoothHIDDeviceDisconnected:(id)arg1;
- (void)pairWithNextDevice;
- (void)performUSBPairing;
- (void)registerForKeyboardNotifications;
- (void)registerForMouseNotifications;
- (void)registerForSystemSleepNotifications;
- (void)registerForUSBPairingNotifications;
- (void)setAfterPairUserAcknowledgementTimeLimit:(int)arg1;
- (void)setDelegate:(id)arg1;
- (void)setInquiryLength:(int)arg1;
- (void)setNonNULLPIN:(id)arg1;
- (void)setNotifyOnKeyboard:(BOOL)arg1;
- (void)setNotifyOnMouse:(BOOL)arg1;
- (void)setNumberOfPairingAttemptsPerDevice:(int)arg1;
- (void)setPreventSleepFor:(int)arg1;
- (void)setSearchCriteria:(unsigned int)arg1 majorDeviceClass:(unsigned int)arg2 minorDeviceClass:(unsigned int)arg3;
- (void)skipCurrentDevice;
- (int)start;
- (void)startDeviceAppearanceTimeoutTimer;
- (int)startInquiry;
- (void)startUpdateSystemActivityTimer;
- (void)startUserAckTimer;
- (void)stopAllBluetooth:(BOOL)arg1 clearInquiry:(BOOL)arg2 clearCurrentDevice:(BOOL)arg3;
- (int)stopAndAcceptCurrentDevice;
- (int)stopAndUnPairCurrentDevice:(BOOL)arg1;
- (void)stopDeviceAppearanceTimeoutTimer;
- (void)stopInquiry;
- (void)stopUpdateSystemActivityTimer;
- (void)stopUserAckTimer;
- (BOOL)systemPowerNotification:(unsigned int)arg1;
- (void)unregisterForKeyboardNotifications;
- (void)unregisterForMouseNotifications;
- (void)unregisterForSystemSleepNotifications;
- (void)updateSystemActivityTimerFired:(id)arg1;
- (void)usbHIDDeviceConnected:(void*)arg1 result:(int)arg2 sender:(void*)arg3 device:(struct __IOHIDDevice { }*)arg4;
- (void)userAckTimerFired;

@end
