/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup
 */

@interface BU_TScreen : NSObject

+ (struct set<double, std::__1::less<double>, std::__1::allocator<double> > { struct __tree<double, std::__1::less<double>, std::__1::allocator<double> > { struct __tree_node<double, void *> {} *x_1_1_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<double, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::less<double> > { unsigned long long x_3_2_1; } x_1_1_3; } x1; })availableScaleFactors;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })availableWindowPositioningBoundsForPoint:(const struct CGPoint { double x1; double x2; }*)arg1;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })availableWindowPositioningBoundsForRect:(const struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1;
+ (double)cgScaleFactorForGreatestAreaScreenRect:(const struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1;
+ (double)cgScaleFactorForScreen:(id)arg1;
+ (id)closestScreenForOffScreenPoint:(const struct CGPoint { double x1; double x2; }*)arg1;
+ (id)closestScreenForOffScreenRect:(const struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1;
+ (bool)forceWindowOntoPrimaryDisplay:(id)arg1 offsetFromBottom:(double)arg2;
+ (id)greatestAreaScreenForPoint:(const struct CGPoint { double x1; double x2; }*)arg1;
+ (id)greatestAreaScreenForRect:(const struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1;
+ (id)primaryScreen;
+ (double)primaryScreenCGScaleFactor;
+ (unsigned int)primaryScreenDisplayID;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })primaryScreenFrame;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })primaryScreenVisibleFrame;
+ (id)screenWithDisplayID:(unsigned int)arg1;

@end
