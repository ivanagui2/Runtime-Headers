/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup
 */

@interface BU_TPrefsObserverBridge : NSObject {
    struct set<TString, std::__1::less<TString>, std::__1::allocator<TString> > { 
        struct __tree<TString, std::__1::less<TString>, std::__1::allocator<TString> > { 
            struct __tree_node<TString, void *> {} *__begin_node_; 
            struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<TString, void *> > > { 
                struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                    struct __tree_node_base<void *> {} *__left_; 
                } __first_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__1::less<TString> > { 
                unsigned long long __first_; 
            } __pair3_; 
        } __tree_; 
    }  _globalKeysBeingObserved;
    /* Warning: unhandled struct encoding: '{IPrefsObserver=^^?{TNSRef<BU_TPrefsObserverBridge *, void>=@}}' */ struct IPrefsObserver { int (**x1)(); struct TNSRef<BU_TPrefsObserverBridge *, void> { id x_2_1_1; } x2; } * _observer;
    struct set<UDefaults::RegistryID, std::__1::less<UDefaults::RegistryID>, std::__1::allocator<UDefaults::RegistryID> > { 
        struct __tree<UDefaults::RegistryID, std::__1::less<UDefaults::RegistryID>, std::__1::allocator<UDefaults::RegistryID> > { 
            struct __tree_node<UDefaults::RegistryID, void *> {} *__begin_node_; 
            struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<UDefaults::RegistryID, void *> > > { 
                struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                    struct __tree_node_base<void *> {} *__left_; 
                } __first_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__1::less<UDefaults::RegistryID> > { 
                unsigned long long __first_; 
            } __pair3_; 
        } __tree_; 
    }  _regIDsBeingObserved;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)aboutToTearDown;
- (void)finderPrefChanged:(id)arg1;
- (void)globalPrefChanged:(id)arg1;
- (id)initWithObserver:(/* Warning: unhandled struct encoding: '{IPrefsObserver=^^?{TNSRef<BU_TPrefsObserverBridge *, void>=@}}' */ struct IPrefsObserver { int (**x1)(); struct TNSRef<BU_TPrefsObserverBridge *, void> { id x_2_1_1; } x2; }*)arg1;
- (void)startObservingFinderPrefsResetNotification;
- (void)startObservingGlobalPrefChanges:(const struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef> > { struct __CFString {} *x_1_1_1; } x1; }*)arg1;
- (void)startObservingRegIDChanges:(int)arg1;
- (void)stopObservingAllPrefsChanges;
- (void)stopObservingFinderPrefsResetNotification;
- (void)stopObservingGlobalPrefChanges:(const struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef> > { struct __CFString {} *x_1_1_1; } x1; }*)arg1;
- (void)stopObservingRegIDChanges:(int)arg1;

@end
