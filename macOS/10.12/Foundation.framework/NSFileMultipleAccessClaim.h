/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
 */

@interface NSFileMultipleAccessClaim : NSFileAccessClaim {
    unsigned long long  _currentlyLinkResolvingURLIndex;
    long long  _readingLinkResolutionCount;
    NSMutableArray * _readingLocations;
    unsigned long long * _readingOptions;
    NSMutableArray * _readingURLs;
    BOOL * _readingURLsDidChange;
    NSFileAccessNode * _rootNode;
    NSMutableArray * _writingLocations;
    unsigned long long * _writingOptions;
    NSMutableArray * _writingURLs;
    BOOL * _writingURLsDidChange;
}

+ (BOOL)supportsSecureCoding;

- (id)allURLs;
- (BOOL)blocksClaim:(id)arg1;
- (void)dealloc;
- (void)devalueSelf;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)evaluateSelfWithRootNode:(id)arg1 checkSubarbitrability:(BOOL)arg2;
- (void)forwardUsingConnection:(id)arg1 crashHandler:(id)arg2;
- (void)granted;
- (id)initWithCoder:(id)arg1;
- (id)initWithPurposeID:(id)arg1 intents:(id)arg2 claimer:(id)arg3;
- (void)invokeClaimer;
- (BOOL)isBlockedByReadingItemAtLocation:(id)arg1 options:(unsigned long long)arg2;
- (BOOL)isBlockedByWritingItemAtLocation:(id)arg1 options:(unsigned long long)arg2;
- (void)itemAtLocation:(id)arg1 wasReplacedByItemAtLocation:(id)arg2;
- (void)resolveURLsThenMaybeContinueInvokingClaimer:(id)arg1;
- (BOOL)shouldBeRevokedPriorToInvokingAccessor;
- (BOOL)shouldCancelInsteadOfWaiting;

@end
