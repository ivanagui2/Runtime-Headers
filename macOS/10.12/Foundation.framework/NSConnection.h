/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
 */

@interface NSConnection : NSObject {
    id  ___1;
    id  ___2;
    unsigned int  _reserved1;
    unsigned int  _reserved2;
    unsigned int  authCheck;
    unsigned int  authGen;
    int  busy;
    id  classInfoImported;
    id  delayedRL;
    id  delegate;
    unsigned int  doRequest;
    unsigned int  invalidateRP;
    unsigned char  isDead;
    unsigned int  isMulti;
    unsigned int  isQueueing;
    unsigned char  isValid;
    int  localProxyCount;
    id  receivePort;
    void * registerInfo;
    id  releasedProxies;
    id  replMode;
    id  requestModes;
    id  reserved;
    id  rootObject;
    id  runLoops;
    id  sendPort;
    id  statistics;
    int  waitCount;
    unsigned char  wantsInvalid;
}

@property (atomic, readwrite) <NSConnectionDelegate> *delegate;
@property (atomic, readwrite) BOOL independentConversationQueueing;
@property (atomic, readonly, copy) NSArray *localObjects;
@property (atomic, readonly) BOOL multipleThreadsEnabled;
@property (atomic, readonly, retain) NSPort *receivePort;
@property (atomic, readonly, copy) NSArray *remoteObjects;
@property (atomic, readwrite) double replyTimeout;
@property (atomic, readonly, copy) NSArray *requestModes;
@property (atomic, readwrite) double requestTimeout;
@property (atomic, readwrite, retain) id rootObject;
@property (atomic, readonly, retain) NSDistantObject *rootProxy;
@property (atomic, readonly, retain) NSPort *sendPort;
@property (atomic, readonly, copy) NSDictionary *statistics;
@property (getter=isValid, atomic, readonly) BOOL valid;

+ (void)_enableLogging:(BOOL)arg1;
+ (void)_toggleLogging;
+ (id)allConnections;
+ (id)connectionWithPrivilegedName:(id)arg1;
+ (id)connectionWithReceivePort:(id)arg1 sendPort:(id)arg2;
+ (id)connectionWithRegisteredName:(id)arg1 host:(id)arg2;
+ (id)connectionWithRegisteredName:(id)arg1 host:(id)arg2 usingNameServer:(id)arg3;
+ (id)currentConversation;
+ (id)defaultConnection;
+ (void)initialize;
+ (id)lookUpConnectionWithReceivePort:(id)arg1 sendPort:(id)arg2;
+ (id)rootProxyForConnectionWithPrivilegedName:(id)arg1;
+ (id)rootProxyForConnectionWithRegisteredName:(id)arg1 host:(id)arg2;
+ (id)rootProxyForConnectionWithRegisteredName:(id)arg1 host:(id)arg2 usingNameServer:(id)arg3;
+ (id)serviceConnectionWithName:(id)arg1 rootObject:(id)arg2;
+ (id)serviceConnectionWithName:(id)arg1 rootObject:(id)arg2 usingNameServer:(id)arg3;
+ (id)statistics;

- (void)_authenticateComponents:(id)arg1;
- (void)_decrementLocalProxyCount;
- (void)_encodeProxyList:(id)arg1 forCoder:(id)arg2;
- (void)_incrementLocalProxyCount;
- (Class)_portCoderClass;
- (Class)_portCoderClassWithComponents:(id)arg1;
- (void)_portInvalidated:(id)arg1;
- (void)_sendBeforeTime:(double)arg1 coder:(id)arg2 doAuthenticationCheck:(BOOL)arg3;
- (void)_setUseKC:(BOOL)arg1;
- (void)_setWhitelist:(id)arg1;
- (BOOL)_shouldDispatch:(id*)arg1 invocation:(id)arg2 sequence:(unsigned int)arg3 coder:(id)arg4;
- (BOOL)_verifyComponents:(id)arg1;
- (void)addClassNamed:(char *)arg1 version:(unsigned long long)arg2;
- (void)addPortsToRunLoop:(id)arg1;
- (void)addRequestMode:(id)arg1;
- (void)addRunLoop:(id)arg1;
- (void)dealloc;
- (void)decodeReleasedProxies:(id)arg1;
- (id)delegate;
- (id)description;
- (id)dispatchInvocation:(id)arg1;
- (void)dispatchWithComponents:(id)arg1;
- (void)enableMultipleThreads;
- (void)encodeReleasedProxies:(id)arg1;
- (void)handleKeyedReleasedProxies:(id)arg1;
- (void)handlePortCoder:(id)arg1;
- (void)handlePortMessage:(id)arg1;
- (void)handleRequest:(id)arg1 sequence:(unsigned int)arg2;
- (void)handleUnkeyedReleasedProxies:(char *)arg1 length:(unsigned long long)arg2;
- (BOOL)hasRunLoop:(id)arg1;
- (BOOL)independentConversationQueueing;
- (id)init;
- (id)initWithReceivePort:(id)arg1 sendPort:(id)arg2;
- (void)invalidate;
- (BOOL)isValid;
- (id)keyedRootObject;
- (id)localObjects;
- (BOOL)multipleThreadsEnabled;
- (id)newConversation;
- (id)portCoderWithComponents:(id)arg1;
- (id)receivePort;
- (BOOL)registerName:(id)arg1;
- (BOOL)registerName:(id)arg1 withNameServer:(id)arg2;
- (oneway void)release;
- (void)releaseWireID:(unsigned int)arg1 count:(unsigned long long)arg2;
- (id)remoteObjects;
- (void)removePortsFromRunLoop:(id)arg1;
- (void)removeRequestMode:(id)arg1;
- (void)removeRunLoop:(id)arg1;
- (id)replyMode;
- (double)replyTimeout;
- (id)requestModes;
- (double)requestTimeout;
- (id)retain;
- (void)returnResult:(id)arg1 exception:(id)arg2 sequence:(unsigned int)arg3 imports:(id)arg4;
- (id)rootObject;
- (id)rootProxy;
- (void)run;
- (void)runInNewThread;
- (void)sendInvocation:(id)arg1;
- (void)sendInvocation:(id)arg1 internal:(BOOL)arg2;
- (id)sendPort;
- (void)sendReleasedProxies;
- (BOOL)sendWireCountForWireID:(unsigned int)arg1 port:(id)arg2;
- (void)setDelegate:(id)arg1;
- (void)setIndependentConversationQueueing:(BOOL)arg1;
- (void)setReplyMode:(id)arg1;
- (void)setReplyTimeout:(double)arg1;
- (void)setRequestTimeout:(double)arg1;
- (void)setRootObject:(id)arg1;
- (id)statistics;
- (unsigned long long)versionForClassNamed:(id)arg1;

@end
