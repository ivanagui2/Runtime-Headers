/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData
 */

@interface PFUbiquityStoreMetadata : NSManagedObject

@property (nonatomic, readwrite, retain) NSString *modelVersionHashString;
@property (nonatomic, readwrite, retain) NSSet *peerStates;
@property (nonatomic, readwrite, retain) NSSet *primaryKeyRanges;
@property (nonatomic, readwrite, retain) NSString *storeIdentifier;
@property (nonatomic, readwrite, retain) NSDictionary *storeOptions;
@property (nonatomic, readwrite, retain) NSData *storeOptionsBinaryPlistData;
@property (nonatomic, readwrite, retain) NSString *storeType;
@property (nonatomic, readwrite, retain) NSString *storeURLString;
@property (nonatomic, readwrite, retain) NSSet *transactionEntries;
@property (nonatomic, readwrite, retain) NSString *ubiquityName;
@property (nonatomic, readwrite, retain) NSString *ubiquityRelativePath;
@property (atomic, readonly) PFUbiquityLocation *ubiquityRootLocation;
@property (nonatomic, readonly) NSURL *ubiquityRootURL;
@property (nonatomic, readwrite, retain) NSString *ubiquityRootURLString;

// PFUbiquityStoreMetadata (UbiquityMethods)

+ (id)allStoreMetadataInManagedObjectContext:(id)arg1;
+ (id)baselineGCModelURLForUbiquityName:(id)arg1 andUbiquityLogURL:(id)arg2;
+ (id)baselineMetaFileURLForUbiquityName:(id)arg1 andUbiquityLogURL:(id)arg2;
+ (id)baselineModelURLForUbiquityName:(id)arg1 andUbiquityLogURL:(id)arg2;
+ (id)baselineRootDirectoryForUbiquityName:(id)arg1 andUbiquityLogURL:(id)arg2;
+ (id)baselineStoreURLForUbiquityName:(id)arg1 andUbiquityLogURL:(id)arg2;
+ (BOOL)isBaselineRootURL:(id)arg1;
+ (id)metadataForStoreWithName:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)storeMetadatasWithName:(id)arg1 inManagedObjectContext:(id)arg2;

- (id)initWithUbiquityName:(id)arg1 andUbiquityRootLocation:(id)arg2 insertIntoManagedObjectContext:(id)arg3;
- (void)loadFromBaselineMetadata:(id)arg1 withLocalPeerID:(id)arg2;
- (id)peerStateForPeerID:(id)arg1;
- (void)setStoreOptions:(id)arg1;
- (id)storeOptions;
- (id)ubiquityRootLocation;
- (id)ubiquityRootURL;
- (void)updatePeerStatesToMatchKnowledgeVector:(id)arg1;
- (void)updateWithStore:(id)arg1 andRootLocation:(id)arg2;

@end
