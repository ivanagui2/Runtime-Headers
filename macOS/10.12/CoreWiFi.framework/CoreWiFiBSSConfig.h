/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi
 */

@interface CoreWiFiBSSConfig : NSObject {
    BOOL  allowAuthenticationLEAP;
    BOOL  allowAuthenticationOpen;
    BOOL  allowAuthenticationSharedKey;
    BOOL  allowKeyManagement8021X;
    BOOL  allowKeyManagementPSK;
    BOOL  allowMulticastCipherCCMP;
    BOOL  allowMulticastCipherTKIP;
    BOOL  allowMulticastCipherWEP104;
    BOOL  allowMulticastCipherWEP40;
    BOOL  allowPIN;
    BOOL  allowPhy80211a;
    BOOL  allowPhy80211ac;
    BOOL  allowPhy80211b;
    BOOL  allowPhy80211g;
    BOOL  allowPhy80211n;
    BOOL  allowPushbutton;
    BOOL  allowSecurityOpen;
    BOOL  allowSecurityWEP;
    BOOL  allowSecurityWPA;
    BOOL  allowSecurityWPA2;
    BOOL  allowSecurityWPS;
    BOOL  allowUnicastCipherCCMP;
    BOOL  allowUnicastCipherTKIP;
    BOOL  allowUnicastCipherUseGroup;
    long long  channel;
    long long  channelWidth;
    NSString * country;
    long long  eapolGTKRotation;
    long long  eapolRetryCount;
    long long  eapolRetryInterval;
    NSData * passphrase;
    NSData * ssid;
    BOOL  useAppleSWAPIE;
    NSString * wpsDeviceName;
    NSString * wpsManufacturerName;
    NSString * wpsModelName;
    NSString * wpsModelNumber;
    long long  wpsPIN;
    NSString * wpsSerialNumber;
}

@property (nonatomic, readwrite) BOOL allowAuthenticationLEAP;
@property (nonatomic, readwrite) BOOL allowAuthenticationOpen;
@property (nonatomic, readwrite) BOOL allowAuthenticationSharedKey;
@property (nonatomic, readwrite) BOOL allowKeyManagement8021X;
@property (nonatomic, readwrite) BOOL allowKeyManagementPSK;
@property (nonatomic, readwrite) BOOL allowMulticastCipherCCMP;
@property (nonatomic, readwrite) BOOL allowMulticastCipherTKIP;
@property (nonatomic, readwrite) BOOL allowMulticastCipherWEP104;
@property (nonatomic, readwrite) BOOL allowMulticastCipherWEP40;
@property (nonatomic, readwrite) BOOL allowPIN;
@property (nonatomic, readwrite) BOOL allowPhy80211a;
@property (nonatomic, readwrite) BOOL allowPhy80211ac;
@property (nonatomic, readwrite) BOOL allowPhy80211b;
@property (nonatomic, readwrite) BOOL allowPhy80211g;
@property (nonatomic, readwrite) BOOL allowPhy80211n;
@property (nonatomic, readwrite) BOOL allowPushbutton;
@property (nonatomic, readwrite) BOOL allowSecurityOpen;
@property (nonatomic, readwrite) BOOL allowSecurityWEP;
@property (nonatomic, readwrite) BOOL allowSecurityWPA;
@property (nonatomic, readwrite) BOOL allowSecurityWPA2;
@property (nonatomic, readwrite) BOOL allowSecurityWPS;
@property (nonatomic, readwrite) BOOL allowUnicastCipherCCMP;
@property (nonatomic, readwrite) BOOL allowUnicastCipherTKIP;
@property (nonatomic, readwrite) BOOL allowUnicastCipherUseGroup;
@property (nonatomic, readwrite) long long channel;
@property (nonatomic, readwrite) long long channelWidth;
@property (nonatomic, readonly, retain) NSString *country;
@property (nonatomic, readwrite) long long eapolGTKRotation;
@property (nonatomic, readwrite) long long eapolRetryCount;
@property (nonatomic, readwrite) long long eapolRetryInterval;
@property (nonatomic, readwrite, retain) NSData *passphrase;
@property (nonatomic, readwrite, retain) NSData *ssid;
@property (nonatomic, readwrite) BOOL useAppleSWAPIE;
@property (nonatomic, readwrite, retain) NSString *wpsDeviceName;
@property (nonatomic, readwrite, retain) NSString *wpsManufacturerName;
@property (nonatomic, readwrite, retain) NSString *wpsModelName;
@property (nonatomic, readwrite, retain) NSString *wpsModelNumber;
@property (nonatomic, readwrite) long long wpsPIN;
@property (nonatomic, readwrite, retain) NSString *wpsSerialNumber;

+ (id)configWithScanResult:(id)arg1;

- (BOOL)allowAuthenticationLEAP;
- (BOOL)allowAuthenticationOpen;
- (BOOL)allowAuthenticationSharedKey;
- (BOOL)allowKeyManagement8021X;
- (BOOL)allowKeyManagementPSK;
- (BOOL)allowMulticastCipherCCMP;
- (BOOL)allowMulticastCipherTKIP;
- (BOOL)allowMulticastCipherWEP104;
- (BOOL)allowMulticastCipherWEP40;
- (BOOL)allowPIN;
- (BOOL)allowPhy80211a;
- (BOOL)allowPhy80211ac;
- (BOOL)allowPhy80211b;
- (BOOL)allowPhy80211g;
- (BOOL)allowPhy80211n;
- (BOOL)allowPushbutton;
- (BOOL)allowSecurityOpen;
- (BOOL)allowSecurityWEP;
- (BOOL)allowSecurityWPA;
- (BOOL)allowSecurityWPA2;
- (BOOL)allowSecurityWPS;
- (BOOL)allowUnicastCipherCCMP;
- (BOOL)allowUnicastCipherTKIP;
- (BOOL)allowUnicastCipherUseGroup;
- (long long)channel;
- (long long)channelWidth;
- (id)country;
- (void)dealloc;
- (void)defaults;
- (id)description;
- (long long)eapolGTKRotation;
- (long long)eapolRetryCount;
- (long long)eapolRetryInterval;
- (id)init;
- (id)initWithSkeleton:(id)arg1;
- (id)passphrase;
- (void)setAllowAuthenticationLEAP:(BOOL)arg1;
- (void)setAllowAuthenticationOpen:(BOOL)arg1;
- (void)setAllowAuthenticationSharedKey:(BOOL)arg1;
- (void)setAllowKeyManagement8021X:(BOOL)arg1;
- (void)setAllowKeyManagementPSK:(BOOL)arg1;
- (void)setAllowMulticastCipherCCMP:(BOOL)arg1;
- (void)setAllowMulticastCipherTKIP:(BOOL)arg1;
- (void)setAllowMulticastCipherWEP104:(BOOL)arg1;
- (void)setAllowMulticastCipherWEP40:(BOOL)arg1;
- (void)setAllowPIN:(BOOL)arg1;
- (void)setAllowPhy80211a:(BOOL)arg1;
- (void)setAllowPhy80211ac:(BOOL)arg1;
- (void)setAllowPhy80211b:(BOOL)arg1;
- (void)setAllowPhy80211g:(BOOL)arg1;
- (void)setAllowPhy80211n:(BOOL)arg1;
- (void)setAllowPushbutton:(BOOL)arg1;
- (void)setAllowSecurityOpen:(BOOL)arg1;
- (void)setAllowSecurityWEP:(BOOL)arg1;
- (void)setAllowSecurityWPA2:(BOOL)arg1;
- (void)setAllowSecurityWPA:(BOOL)arg1;
- (void)setAllowSecurityWPS:(BOOL)arg1;
- (void)setAllowUnicastCipherCCMP:(BOOL)arg1;
- (void)setAllowUnicastCipherTKIP:(BOOL)arg1;
- (void)setAllowUnicastCipherUseGroup:(BOOL)arg1;
- (BOOL)setAuthenticationWithOptionString:(id)arg1 error:(id*)arg2;
- (void)setChannel:(long long)arg1;
- (void)setChannelWidth:(long long)arg1;
- (BOOL)setCountry:(id)arg1 error:(id*)arg2;
- (void)setEapolGTKRotation:(long long)arg1;
- (void)setEapolRetryCount:(long long)arg1;
- (void)setEapolRetryInterval:(long long)arg1;
- (BOOL)setKeyManagementWithOptionString:(id)arg1 error:(id*)arg2;
- (BOOL)setMulticastCipherWithOptionString:(id)arg1 error:(id*)arg2;
- (void)setPassphrase:(id)arg1;
- (BOOL)setPhyModeWithOptionString:(id)arg1 error:(id*)arg2;
- (BOOL)setSSID:(id)arg1 error:(id*)arg2;
- (BOOL)setSSIDFromHexString:(id)arg1 error:(id*)arg2;
- (BOOL)setSecurityWithOptionString:(id)arg1 error:(id*)arg2;
- (void)setSsid:(id)arg1;
- (BOOL)setUnicastCipherWithOptionString:(id)arg1 error:(id*)arg2;
- (void)setUseAppleSWAPIE:(BOOL)arg1;
- (BOOL)setWPSConfigurationMethodsString:(id)arg1 error:(id*)arg2;
- (BOOL)setWirelessPassphrase:(id)arg1 error:(id*)arg2;
- (BOOL)setWirelessPassphraseFromHexString:(id)arg1 error:(id*)arg2;
- (void)setWpsDeviceName:(id)arg1;
- (void)setWpsManufacturerName:(id)arg1;
- (void)setWpsModelName:(id)arg1;
- (void)setWpsModelNumber:(id)arg1;
- (void)setWpsPIN:(long long)arg1;
- (void)setWpsSerialNumber:(id)arg1;
- (id)skeleton;
- (id)ssid;
- (BOOL)updateConfig:(id)arg1;
- (BOOL)useAppleSWAPIE;
- (unsigned long long)wifiSecurity;
- (id)wpsDeviceName;
- (id)wpsManufacturerName;
- (id)wpsModelName;
- (id)wpsModelNumber;
- (long long)wpsPIN;
- (id)wpsSerialNumber;

// CoreWiFiBSSConfig (CoreWiFiBSSConfigXPCs)

+ (id)queryList:(id)arg1 error:(id*)arg2;

- (BOOL)addToInterface:(id)arg1 error:(id*)arg2;
- (BOOL)removeFromInterface:(id)arg1 error:(id*)arg2;

@end
