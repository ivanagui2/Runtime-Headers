/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi
 */

@interface CoreWiFiWPSTLVs : NSObject {
    NSData * EAPIdentity;
    NSData * EAPType;
    NSData * MACAddress;
    NSNumber * apChannel;
    NSNumber * apSetupLocked;
    NSData * appSessionKey;
    NSData * applicationExtension;
    NSNumber * associationState;
    NSNumber * authenticationType;
    NSNumber * authenticationTypeFlags;
    NSData * authenticator;
    NSNumber * configMethods;
    NSNumber * configurationError;
    NSData * confirmationURL4;
    NSData * confirmationURL6;
    NSNumber * connectionType;
    NSNumber * connectionTypeFlags;
    NSMutableArray * credentials;
    NSMutableData * decryptedSettings;
    NSData * deviceName;
    NSNumber * devicePasswordID;
    NSNumber * enabled8021X;
    NSData * encryptedSettings;
    NSNumber * encryptionType;
    NSNumber * encryptionTypeFlags;
    NSData * enrolleeHash1;
    NSData * enrolleeHash2;
    NSData * enrolleeNonce;
    NSData * enrolleeSNonce1;
    NSData * enrolleeSNonce2;
    NSData * enrolleeUUID;
    NSNumber * featureID;
    NSData * identity;
    NSData * identityProof;
    NSData * initializationVector;
    BOOL  isValid;
    NSData * keyIdentifier;
    NSNumber * keyLifetime;
    NSNumber * keyProvidedAutomatically;
    NSData * keyWrapAuthenticator;
    NSData * manufacturer;
    NSData * messageCounter;
    NSNumber * messageType;
    NSData * modelName;
    NSData * modelNumber;
    NSNumber * networkIndex;
    NSData * networkKey;
    NSNumber * networkKeyIndex;
    NSData * oobDevicePassword;
    NSNumber * osVersion;
    NSNumber * permittedConfigMethods;
    NSNumber * portableDevice;
    NSNumber * powerLevel;
    NSMutableArray * primaryDeviceTypes;
    NSNumber * pskCurrent;
    NSNumber * pskMax;
    NSData * publicKey;
    NSData * publicKeyHash;
    NSNumber * radioEnabled;
    NSData * rawTLVs;
    NSNumber * rebootRequest;
    NSNumber * registrarCurrent;
    NSNumber * registrarEstablished;
    NSData * registrarHash1;
    NSData * registrarHash2;
    NSData * registrarList;
    NSNumber * registrarMax;
    NSData * registrarNonce;
    NSData * registrarSNonce1;
    NSData * registrarSNonce2;
    NSData * registrarUUID;
    NSData * rekeyKey;
    NSNumber * requestType;
    NSNumber * responseType;
    NSNumber * rfBands;
    NSMutableArray * secondaryDeviceTypes;
    NSNumber * selectedRegistrar;
    NSNumber * selectedRegistrarConfigMethods;
    NSData * serialNumber;
    NSData * ssid;
    NSNumber * totalNetworks;
    NSData * updatedDeviceName;
    NSData * updatedPassword;
    NSMutableArray * vendorExtensions;
    NSNumber * version;
    NSNumber * wepTransmitKey;
    NSNumber * wpsSetupState;
    NSData * x509Certificate;
    NSData * x509CertificateRequest;
}

@property (nonatomic, readwrite, retain) NSData *EAPIdentity;
@property (nonatomic, readwrite, retain) NSData *EAPType;
@property (nonatomic, readwrite, retain) NSData *MACAddress;
@property (nonatomic, readwrite, retain) NSNumber *apChannel;
@property (nonatomic, readwrite, retain) NSNumber *apSetupLocked;
@property (nonatomic, readwrite, retain) NSData *appSessionKey;
@property (nonatomic, readwrite, retain) NSData *applicationExtension;
@property (nonatomic, readwrite, retain) NSNumber *associationState;
@property (nonatomic, readwrite, retain) NSNumber *authenticationType;
@property (nonatomic, readwrite, retain) NSNumber *authenticationTypeFlags;
@property (nonatomic, readwrite, retain) NSData *authenticator;
@property (nonatomic, readwrite, retain) NSNumber *configMethods;
@property (nonatomic, readwrite, retain) NSNumber *configurationError;
@property (nonatomic, readwrite, retain) NSData *confirmationURL4;
@property (nonatomic, readwrite, retain) NSData *confirmationURL6;
@property (nonatomic, readwrite, retain) NSNumber *connectionType;
@property (nonatomic, readwrite, retain) NSNumber *connectionTypeFlags;
@property (nonatomic, readwrite, retain) NSMutableArray *credentials;
@property (nonatomic, readwrite, retain) NSMutableData *decryptedSettings;
@property (nonatomic, readwrite, retain) NSData *deviceName;
@property (nonatomic, readwrite, retain) NSNumber *devicePasswordID;
@property (nonatomic, readwrite, retain) NSNumber *enabled8021X;
@property (nonatomic, readwrite, retain) NSData *encryptedSettings;
@property (nonatomic, readwrite, retain) NSNumber *encryptionType;
@property (nonatomic, readwrite, retain) NSNumber *encryptionTypeFlags;
@property (nonatomic, readwrite, retain) NSData *enrolleeHash1;
@property (nonatomic, readwrite, retain) NSData *enrolleeHash2;
@property (nonatomic, readwrite, retain) NSData *enrolleeNonce;
@property (nonatomic, readwrite, retain) NSData *enrolleeSNonce1;
@property (nonatomic, readwrite, retain) NSData *enrolleeSNonce2;
@property (nonatomic, readwrite, retain) NSData *enrolleeUUID;
@property (nonatomic, readwrite, retain) NSNumber *featureID;
@property (nonatomic, readwrite, retain) NSData *identity;
@property (nonatomic, readwrite, retain) NSData *identityProof;
@property (nonatomic, readwrite, retain) NSData *initializationVector;
@property (nonatomic, readonly) BOOL isValid;
@property (nonatomic, readwrite, retain) NSData *keyIdentifier;
@property (nonatomic, readwrite, retain) NSNumber *keyLifetime;
@property (nonatomic, readwrite, retain) NSNumber *keyProvidedAutomatically;
@property (nonatomic, readwrite, retain) NSData *keyWrapAuthenticator;
@property (nonatomic, readwrite, retain) NSData *manufacturer;
@property (nonatomic, readwrite, retain) NSData *messageCounter;
@property (nonatomic, readwrite, retain) NSNumber *messageType;
@property (nonatomic, readwrite, retain) NSData *modelName;
@property (nonatomic, readwrite, retain) NSData *modelNumber;
@property (nonatomic, readwrite, retain) NSNumber *networkIndex;
@property (nonatomic, readwrite, retain) NSData *networkKey;
@property (nonatomic, readwrite, retain) NSNumber *networkKeyIndex;
@property (nonatomic, readwrite, retain) NSData *oobDevicePassword;
@property (nonatomic, readwrite, retain) NSNumber *osVersion;
@property (nonatomic, readwrite, retain) NSNumber *permittedConfigMethods;
@property (nonatomic, readwrite, retain) NSNumber *portableDevice;
@property (nonatomic, readwrite, retain) NSNumber *powerLevel;
@property (nonatomic, readwrite, retain) NSMutableArray *primaryDeviceTypes;
@property (nonatomic, readwrite, retain) NSNumber *pskCurrent;
@property (nonatomic, readwrite, retain) NSNumber *pskMax;
@property (nonatomic, readwrite, retain) NSData *publicKey;
@property (nonatomic, readwrite, retain) NSData *publicKeyHash;
@property (nonatomic, readwrite, retain) NSNumber *radioEnabled;
@property (nonatomic, readonly, retain) NSData *rawTLVs;
@property (nonatomic, readwrite, retain) NSNumber *rebootRequest;
@property (nonatomic, readwrite, retain) NSNumber *registrarCurrent;
@property (nonatomic, readwrite, retain) NSNumber *registrarEstablished;
@property (nonatomic, readwrite, retain) NSData *registrarHash1;
@property (nonatomic, readwrite, retain) NSData *registrarHash2;
@property (nonatomic, readwrite, retain) NSData *registrarList;
@property (nonatomic, readwrite, retain) NSNumber *registrarMax;
@property (nonatomic, readwrite, retain) NSData *registrarNonce;
@property (nonatomic, readwrite, retain) NSData *registrarSNonce1;
@property (nonatomic, readwrite, retain) NSData *registrarSNonce2;
@property (nonatomic, readwrite, retain) NSData *registrarUUID;
@property (nonatomic, readwrite, retain) NSData *rekeyKey;
@property (nonatomic, readwrite, retain) NSNumber *requestType;
@property (nonatomic, readwrite, retain) NSNumber *responseType;
@property (nonatomic, readwrite, retain) NSNumber *rfBands;
@property (nonatomic, readwrite, retain) NSMutableArray *secondaryDeviceTypes;
@property (nonatomic, readwrite, retain) NSNumber *selectedRegistrar;
@property (nonatomic, readwrite, retain) NSNumber *selectedRegistrarConfigMethods;
@property (nonatomic, readwrite, retain) NSData *serialNumber;
@property (nonatomic, readwrite, retain) NSData *ssid;
@property (nonatomic, readwrite, retain) NSNumber *totalNetworks;
@property (nonatomic, readwrite, retain) NSData *updatedDeviceName;
@property (nonatomic, readwrite, retain) NSData *updatedPassword;
@property (nonatomic, readwrite, retain) NSMutableArray *vendorExtensions;
@property (nonatomic, readwrite, retain) NSNumber *version;
@property (nonatomic, readwrite, retain) NSNumber *wepTransmitKey;
@property (nonatomic, readwrite, retain) NSNumber *wpsSetupState;
@property (nonatomic, readwrite, retain) NSData *x509Certificate;
@property (nonatomic, readwrite, retain) NSData *x509CertificateRequest;

+ (id)packageTLV:(unsigned long long)arg1 withBytes:(const void*)arg2 withLength:(unsigned long long)arg3;
+ (id)packageTLV:(unsigned long long)arg1 withData:(id)arg2;
+ (id)packageTLV:(unsigned long long)arg1 withDeviceTypeArray:(id)arg2;
+ (id)packageTLV:(unsigned long long)arg1 withNumber16:(id)arg2;
+ (id)packageTLV:(unsigned long long)arg1 withNumber32:(id)arg2;
+ (id)packageTLV:(unsigned long long)arg1 withNumber8:(id)arg2;
+ (id)packageTLV:(unsigned long long)arg1 withString:(id)arg2;
+ (id)parseDataElement8021XEnabled:(char *)arg1 withLength:(unsigned long long)arg2;
+ (id)parseDataElementAuthenticationType:(char *)arg1 withLength:(unsigned long long)arg2;
+ (id)parseDataElementEAPIdentitity:(char *)arg1 withLength:(unsigned long long)arg2;
+ (id)parseDataElementEAPType:(char *)arg1 withLength:(unsigned long long)arg2;
+ (id)parseDataElementEncryptionType:(char *)arg1 withLength:(unsigned long long)arg2;
+ (id)parseDataElementKeyProvidedAutomatically:(char *)arg1 withLength:(unsigned long long)arg2;
+ (id)parseDataElementMACAddress:(char *)arg1 withLength:(unsigned long long)arg2;
+ (id)parseDataElementNetworkIndex:(char *)arg1 withLength:(unsigned long long)arg2;
+ (id)parseDataElementNetworkKey:(char *)arg1 withLength:(unsigned long long)arg2;
+ (id)parseDataElementNetworkKeyIndex:(char *)arg1 withLength:(unsigned long long)arg2;
+ (id)parseDataElementSSID:(char *)arg1 withLength:(unsigned long long)arg2;

- (id)EAPIdentity;
- (id)EAPIdentityTLV;
- (id)EAPType;
- (id)EAPTypeTLV;
- (id)MACAddress;
- (id)MACAddressTLV;
- (id)apChannel;
- (id)apChannelTLV;
- (id)apSetupLocked;
- (id)apSetupLockedTLV;
- (id)appSessionKey;
- (id)appSessionKeyTLV;
- (id)applicationExtension;
- (id)applicationExtensionTLV;
- (id)associationState;
- (id)associationStateTLV;
- (id)authenticationType;
- (id)authenticationTypeFlags;
- (id)authenticationTypeFlagsTLV;
- (id)authenticationTypeTLV;
- (id)authenticator;
- (id)authenticatorTLV;
- (id)configMethods;
- (id)configMethodsTLV;
- (id)configurationError;
- (id)configurationErrorTLV;
- (id)confirmationURL4;
- (id)confirmationURL4TLV;
- (id)confirmationURL6;
- (id)confirmationURL6TLV;
- (id)connectionType;
- (id)connectionTypeFlags;
- (id)connectionTypeFlagsTLV;
- (id)connectionTypeTLV;
- (id)credentialTLV;
- (id)credentials;
- (void)dealloc;
- (id)decryptedSettings;
- (id)description;
- (id)deviceName;
- (id)deviceNameTLV;
- (id)devicePasswordID;
- (id)devicePasswordIDTLV;
- (id)enabled8021X;
- (id)enabled8021XTLV;
- (id)encryptedSettings;
- (id)encryptedSettingsTLV;
- (id)encryptionType;
- (id)encryptionTypeFlags;
- (id)encryptionTypeFlagsTLV;
- (id)encryptionTypeTLV;
- (id)enrolleeHash1;
- (id)enrolleeHash1TLV;
- (id)enrolleeHash2;
- (id)enrolleeHash2TLV;
- (id)enrolleeNonce;
- (id)enrolleeNonceTLV;
- (id)enrolleeSNonce1;
- (id)enrolleeSNonce1TLV;
- (id)enrolleeSNonce2;
- (id)enrolleeSNonce2TLV;
- (id)enrolleeUUID;
- (id)enrolleeUUIDTLV;
- (id)featureID;
- (id)featureIDTLV;
- (id)identity;
- (id)identityProof;
- (id)identityProofTLV;
- (id)identityTLV;
- (id)init;
- (id)initWithData:(id)arg1;
- (id)initializationVector;
- (id)initializationVectorTLV;
- (BOOL)isValid;
- (id)keyIdentifier;
- (id)keyIdentifierTLV;
- (id)keyLifetime;
- (id)keyLifetimeTLV;
- (id)keyProvidedAutomatically;
- (id)keyProvidedAutomaticallyTLV;
- (id)keyWrapAuthenticator;
- (id)keyWrapAuthenticatorTLV;
- (id)manufacturer;
- (id)manufacturerTLV;
- (id)messageCounter;
- (id)messageCounterTLV;
- (id)messageType;
- (id)messageTypeTLV;
- (id)modelName;
- (id)modelNameTLV;
- (id)modelNumber;
- (id)modelNumberTLV;
- (id)networkIndex;
- (id)networkIndexTLV;
- (id)networkKey;
- (id)networkKeyIndex;
- (id)networkKeyIndexTLV;
- (id)networkKeyTLV;
- (id)oobDevicePassword;
- (id)oobDevicePasswordTLV;
- (id)osVersion;
- (id)osVersionTLV;
- (void)parseBuffer:(id)arg1;
- (void)parseDataElementAPChannel:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementAPSetupLocked:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementAppSessionKey:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementApplicationExtension:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementAssociationState:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementAuthenticationTypeFlags:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementAuthenticator:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementConfigMethods:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementConfigurationError:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementConfirmationURL4:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementConfirmationURL6:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementConnectionType:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementConnectionTypeFlags:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementCredential:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementDeviceName:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementDevicePasswordID:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementEHash1:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementEHash2:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementESNonce1:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementESNonce2:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementEncryptedSettings:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementEncryptionTypeFlags:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementEnrolleeNonce:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementFeatureID:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementIdentity:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementIdentityProof:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementInitializationVector:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementKeyIdentifier:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementKeyLifetime:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementKeyWrapAuthenticator:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementManufacturer:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementMessageCounter:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementMessageType:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementModelName:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementModelNumber:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementNewDeviceName:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementNewPassword:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementOOBDevicePassword:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementOSVersion:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementPSKCurrent:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementPSKMax:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementPermittedConfigMethods:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementPortableDevice:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementPowerLevel:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementPrimaryDeviceType:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementPublicKey:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementPublicKeyHash:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementRFBands:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementRHash1:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementRHash2:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementRSNonce1:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementRSNonce2:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementRadioEnabled:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementReboot:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementRegistrarCurrent:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementRegistrarEstablished:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementRegistrarList:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementRegistrarMax:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementRegistrarNonce:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementRekeyKey:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementRequestType:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementResponseType:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementSecondaryDeviceTypeList:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementSelectedRegistrar:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementSelectedRegistrarConfigMethods:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementSerialNumber:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementTotalNetworks:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementUUIDE:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementUUIDR:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementVendorExtension:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementVersion:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementWEPTransmitKey:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementWiFiProtectedSetupState:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementX509Certificate:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDataElementX509CertificateRequest:(char *)arg1 withLength:(unsigned long long)arg2;
- (void)parseDecryptedSettings;
- (void)parseRawData;
- (id)permittedConfigMethods;
- (id)permittedConfigMethodsTLV;
- (id)portableDevice;
- (id)portableDeviceTLV;
- (id)powerLevel;
- (id)powerLevelTLV;
- (id)primaryDeviceTypes;
- (id)primaryDeviceTypesTLV;
- (id)pskCurrent;
- (id)pskCurrentTLV;
- (id)pskMax;
- (id)pskMaxTLV;
- (id)publicKey;
- (id)publicKeyHash;
- (id)publicKeyHashTLV;
- (id)publicKeyTLV;
- (id)radioEnabled;
- (id)radioEnabledTLV;
- (id)rawTLVs;
- (id)rebootRequest;
- (id)rebootRequestTLV;
- (id)registrarCurrent;
- (id)registrarCurrentTLV;
- (id)registrarEstablished;
- (id)registrarEstablishedTLV;
- (id)registrarHash1;
- (id)registrarHash1TLV;
- (id)registrarHash2;
- (id)registrarHash2TLV;
- (id)registrarList;
- (id)registrarListTLV;
- (id)registrarMax;
- (id)registrarMaxTLV;
- (id)registrarNonce;
- (id)registrarNonceTLV;
- (id)registrarSNonce1;
- (id)registrarSNonce1TLV;
- (id)registrarSNonce2;
- (id)registrarSNonce2TLV;
- (id)registrarUUID;
- (id)registrarUUIDTLV;
- (id)rekeyKey;
- (id)rekeyKeyTLV;
- (id)requestType;
- (id)requestTypeTLV;
- (id)responseType;
- (id)responseTypeTLV;
- (id)rfBands;
- (id)rfBandsTLV;
- (id)secondaryDeviceTypes;
- (id)secondaryDeviceTypesTLV;
- (id)selectedRegistrar;
- (id)selectedRegistrarConfigMethods;
- (id)selectedRegistrarConfigMethodsTLV;
- (id)selectedRegistrarTLV;
- (id)serialNumber;
- (id)serialNumberTLV;
- (void)setApChannel:(id)arg1;
- (void)setApSetupLocked:(id)arg1;
- (void)setAppSessionKey:(id)arg1;
- (void)setApplicationExtension:(id)arg1;
- (void)setAssociationState:(id)arg1;
- (void)setAuthenticationType:(id)arg1;
- (void)setAuthenticationTypeFlags:(id)arg1;
- (void)setAuthenticator:(id)arg1;
- (void)setConfigMethods:(id)arg1;
- (void)setConfigurationError:(id)arg1;
- (void)setConfirmationURL4:(id)arg1;
- (void)setConfirmationURL6:(id)arg1;
- (void)setConnectionType:(id)arg1;
- (void)setConnectionTypeFlags:(id)arg1;
- (void)setCredentials:(id)arg1;
- (void)setDecryptedSettings:(id)arg1;
- (void)setDeviceName:(id)arg1;
- (void)setDevicePasswordID:(id)arg1;
- (void)setEAPIdentity:(id)arg1;
- (void)setEAPType:(id)arg1;
- (void)setEnabled8021X:(id)arg1;
- (void)setEncryptedSettings:(id)arg1;
- (void)setEncryptionType:(id)arg1;
- (void)setEncryptionTypeFlags:(id)arg1;
- (void)setEnrolleeHash1:(id)arg1;
- (void)setEnrolleeHash2:(id)arg1;
- (void)setEnrolleeNonce:(id)arg1;
- (void)setEnrolleeSNonce1:(id)arg1;
- (void)setEnrolleeSNonce2:(id)arg1;
- (void)setEnrolleeUUID:(id)arg1;
- (void)setFeatureID:(id)arg1;
- (void)setIdentity:(id)arg1;
- (void)setIdentityProof:(id)arg1;
- (void)setInitializationVector:(id)arg1;
- (void)setKeyIdentifier:(id)arg1;
- (void)setKeyLifetime:(id)arg1;
- (void)setKeyProvidedAutomatically:(id)arg1;
- (void)setKeyWrapAuthenticator:(id)arg1;
- (void)setMACAddress:(id)arg1;
- (void)setManufacturer:(id)arg1;
- (void)setMessageCounter:(id)arg1;
- (void)setMessageType:(id)arg1;
- (void)setModelName:(id)arg1;
- (void)setModelNumber:(id)arg1;
- (void)setNetworkIndex:(id)arg1;
- (void)setNetworkKey:(id)arg1;
- (void)setNetworkKeyIndex:(id)arg1;
- (void)setOobDevicePassword:(id)arg1;
- (void)setOsVersion:(id)arg1;
- (void)setPermittedConfigMethods:(id)arg1;
- (void)setPortableDevice:(id)arg1;
- (void)setPowerLevel:(id)arg1;
- (void)setPrimaryDeviceTypes:(id)arg1;
- (void)setPskCurrent:(id)arg1;
- (void)setPskMax:(id)arg1;
- (void)setPublicKey:(id)arg1;
- (void)setPublicKeyHash:(id)arg1;
- (void)setRadioEnabled:(id)arg1;
- (void)setRebootRequest:(id)arg1;
- (void)setRegistrarCurrent:(id)arg1;
- (void)setRegistrarEstablished:(id)arg1;
- (void)setRegistrarHash1:(id)arg1;
- (void)setRegistrarHash2:(id)arg1;
- (void)setRegistrarList:(id)arg1;
- (void)setRegistrarMax:(id)arg1;
- (void)setRegistrarNonce:(id)arg1;
- (void)setRegistrarSNonce1:(id)arg1;
- (void)setRegistrarSNonce2:(id)arg1;
- (void)setRegistrarUUID:(id)arg1;
- (void)setRekeyKey:(id)arg1;
- (void)setRequestType:(id)arg1;
- (void)setResponseType:(id)arg1;
- (void)setRfBands:(id)arg1;
- (void)setSecondaryDeviceTypes:(id)arg1;
- (void)setSelectedRegistrar:(id)arg1;
- (void)setSelectedRegistrarConfigMethods:(id)arg1;
- (void)setSerialNumber:(id)arg1;
- (void)setSsid:(id)arg1;
- (void)setTotalNetworks:(id)arg1;
- (void)setUpdatedDeviceName:(id)arg1;
- (void)setUpdatedPassword:(id)arg1;
- (void)setVendorExtensions:(id)arg1;
- (void)setVersion:(id)arg1;
- (void)setWepTransmitKey:(id)arg1;
- (void)setWpsSetupState:(id)arg1;
- (void)setX509Certificate:(id)arg1;
- (void)setX509CertificateRequest:(id)arg1;
- (id)ssid;
- (id)ssidTLV;
- (id)totalNetworks;
- (id)totalNetworksTLV;
- (id)updatedDeviceName;
- (id)updatedDeviceNameTLV;
- (id)updatedPassword;
- (id)updatedPasswordTLV;
- (id)vendorExtensions;
- (id)vendorExtensionsTLV;
- (id)version;
- (id)versionTLV;
- (id)wepTransmitKey;
- (id)wepTransmitKeyTLV;
- (id)wpsSetupState;
- (id)wpsSetupStateTLV;
- (id)x509Certificate;
- (id)x509CertificateRequest;
- (id)x509CertificateRequestTLV;
- (id)x509CertificateTLV;

@end
