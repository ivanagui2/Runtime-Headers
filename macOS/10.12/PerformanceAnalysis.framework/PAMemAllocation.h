/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis
 */

@interface PAMemAllocation : PAMemRange {
    PAMemAllocationCategory * category;
    BOOL  isLeak;
    BOOL  purgeState;
    PAMallocStackTreeFrame * treeLocation;
}

@property (atomic, readwrite) PAMemAllocationCategory *category;
@property (atomic, readwrite) BOOL isLeak;
@property (atomic, readwrite) BOOL purgeState;
@property (atomic, readwrite) PAMallocStackTreeFrame *treeLocation;

- (id)binary;
- (id)category;
- (id)fullDescriptionString;
- (id)initWithAddress:(unsigned long long)arg1 andSize:(unsigned long long)arg2;
- (id)initWithPAMemAllocationSerialized:(struct PAMemAllocationSerialized { long long x1; long long x2; unsigned long long x3; unsigned long long x4; BOOL x5; BOOL x6; }*)arg1 WithIndexToMemCategoriesArray:(id*)arg2 WithIndexToStackArray:(id*)arg3 WithNonLeakMemAllocationCategories:(id)arg4 WithStringIndex:(id*)arg5;
- (id)initWithRawInfoOfMemAllocation:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isLeak;
- (id)mallocZone;
- (id)name;
- (BOOL)purgeState;
- (void)setCategory:(id)arg1;
- (void)setIsLeak:(BOOL)arg1;
- (void)setPurgeState:(BOOL)arg1;
- (void)setTreeLocation:(id)arg1;
- (id)treeLocation;
- (id)type;
- (void)writeContentsToBuffer:(void*)arg1 StringDict:(id)arg2;

// PAMemAllocation (PrivateInit)

+ (id)getStringCache;
+ (id)uniquedStringForString:(id)arg1;

@end
