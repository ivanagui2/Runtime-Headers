/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
 */

@interface NSData : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>

@property (atomic, readonly) const void*bytes;
@property (atomic, readonly) unsigned long long length;

// Image: /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation

+ (BOOL)supportsSecureCoding;

// Image: /Applications/Xcode.app/Contents/SharedFrameworks/DebugHierarchyFoundation.framework/Versions/A/DebugHierarchyFoundation

// NSData (Gzip)

- (id)dbg_gzipDeflate;
- (id)dbg_gzipInflate;

// Image: /System/Library/Frameworks/AddressBook.framework/Versions/A/AddressBook

// NSData (ABDataAdditions)

+ (unsigned long long)abEncodedBase64LengthForDataOfLength:(unsigned long long)arg1 breakingLines:(BOOL)arg2;
+ (unsigned long long)abMaxDataLengthFittingInBase64EncodingLength:(unsigned long long)arg1;

- (void)_ab_logWithTag:(id)arg1 extension:(id)arg2;
- (id)abEncodeBase64DataBreakLines:(BOOL)arg1 allowSlash:(BOOL)arg2 padChar:(BOOL)arg3;
- (id)abEncodeVCardBase64DataWithInitialLength:(unsigned long long)arg1;
- (id)abHexString;
- (id)abMD5Hash;

// Image: /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork

// NSData (NSURLSession_Additions)

- (BOOL)_isSafeResumeDataForBackgroundDownload;

// Image: /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList

// NSData (SFLBookmarkAdditions)

+ (id)__sfl_bookmarkDataWithURL:(id)arg1;
+ (id)__sfl_bookmarkDataWithURLString:(id)arg1;

- (BOOL)__sfl_isFileBookmark;
- (BOOL)__sfl_matchBookmark:(id)arg1 allowWeakMatch:(BOOL)arg2;
- (BOOL)__sfl_matchBookmark:(id)arg1 requiredMatchResult:(long long)arg2;
- (id)__sfl_resolveBookmark;
- (id)__sfl_resolveBookmarkDataIsStale:(BOOL*)arg1;
- (id)__sfl_resolveBookmarkWithOptions:(unsigned long long)arg1 relativeToURL:(id)arg2 bookmarkDataIsStale:(BOOL*)arg3 error:(id*)arg4;
- (id)__sfl_resourcePropertiesForKeys:(id)arg1;
- (id)__sfl_resourcePropertyForKey:(id)arg1;
- (id)__sfl_urlWithoutResolveing;

// Image: /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation

// NSData (NSData)

+ (BOOL)_base64DecodingAlwaysSucceedsForOptions:(unsigned long long)arg1;
+ (id)_newZeroingDataWithBytes:(const void*)arg1 length:(unsigned long long)arg2;
+ (id)_newZeroingDataWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 deallocator:(id)arg3;
+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (id)data;
+ (id)dataWithBytes:(const void*)arg1 length:(unsigned long long)arg2;
+ (id)dataWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2;
+ (id)dataWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 freeWhenDone:(BOOL)arg3;
+ (id)dataWithContentsOfFile:(id)arg1;
+ (id)dataWithContentsOfFile:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
+ (id)dataWithContentsOfMappedFile:(id)arg1;
+ (id)dataWithContentsOfURL:(id)arg1;
+ (id)dataWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
+ (id)dataWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 maxLength:(unsigned long long)arg3 error:(id*)arg4;
+ (id)dataWithData:(id)arg1;

- (BOOL)_allowsDirectEncoding;
- (id)_asciiDescription;
- (id)_base64EncodingAsString:(BOOL)arg1 withOptions:(unsigned long long)arg2;
- (BOOL)_canReplaceWithDispatchDataForXPCCoder;
- (unsigned long long)_cfTypeID;
- (BOOL)_copyWillRetain;
- (id)_createDispatchData;
- (BOOL)_decodeBase64EncodedCharacterBuffer:(const char *)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 buffer:(char *)arg4 bufferLength:(unsigned long long)arg5 state:(struct { BOOL x1; BOOL x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned int x6; }*)arg6;
- (id)_initWithBase64EncodedObject:(id)arg1 options:(unsigned long long)arg2;
- (BOOL)_isCompact;
- (BOOL)_isDispatchData;
- (BOOL)_providesConcreteBacking;
- (id)base64EncodedDataWithOptions:(unsigned long long)arg1;
- (id)base64EncodedStringWithOptions:(unsigned long long)arg1;
- (id)base64Encoding;
- (const void*)bytes;
- (Class)classForCoder;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (void)enumerateByteRangesUsingBlock:(id)arg1;
- (void)getBytes:(void*)arg1;
- (void)getBytes:(void*)arg1 length:(unsigned long long)arg2;
- (void)getBytes:(void*)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (unsigned long long)hash;
- (id)initWithBase64EncodedData:(id)arg1 options:(unsigned long long)arg2;
- (id)initWithBase64EncodedString:(id)arg1 options:(unsigned long long)arg2;
- (id)initWithBase64Encoding:(id)arg1;
- (id)initWithBytes:(const void*)arg1 length:(unsigned long long)arg2;
- (id)initWithBytes:(void*)arg1 length:(unsigned long long)arg2 copy:(BOOL)arg3 deallocator:(id)arg4;
- (id)initWithBytes:(void*)arg1 length:(unsigned long long)arg2 copy:(BOOL)arg3 freeWhenDone:(BOOL)arg4 bytesAreVM:(BOOL)arg5;
- (id)initWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2;
- (id)initWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 deallocator:(id)arg3;
- (id)initWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 freeWhenDone:(BOOL)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1 error:(id*)arg2;
- (id)initWithContentsOfFile:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
- (id)initWithContentsOfFile:(id)arg1 options:(unsigned long long)arg2 maxLength:(unsigned long long)arg3 error:(id*)arg4;
- (id)initWithContentsOfMappedFile:(id)arg1;
- (id)initWithContentsOfMappedFile:(id)arg1 error:(id*)arg2;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
- (id)initWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 maxLength:(unsigned long long)arg3 error:(id*)arg4;
- (id)initWithData:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToData:(id)arg1;
- (unsigned long long)length;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfData:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (id)replacementObjectForCoder:(id)arg1;
- (id)subdataWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2;
- (BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2 error:(id*)arg3;
- (BOOL)writeToFile:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
- (BOOL)writeToURL:(id)arg1 atomically:(BOOL)arg2;
- (BOOL)writeToURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;

// NSData (NSDataObjCTypeDeserialization)

- (void)deserializeDataAt:(void*)arg1 ofObjCType:(const char *)arg2 atCursor:(unsigned int*)arg3 context:(id)arg4;

// NSData (NSDataPortCoding)

- (id)replacementObjectForPortCoder:(id)arg1;

// NSData (NSDeserialization)

- (unsigned int)deserializeAlignedBytesLengthAtCursor:(unsigned int*)arg1;
- (void)deserializeBytes:(void*)arg1 length:(unsigned int)arg2 atCursor:(unsigned int*)arg3;
- (int)deserializeIntAtCursor:(unsigned int*)arg1;
- (int)deserializeIntAtIndex:(unsigned int)arg1;
- (void)deserializeInts:(int*)arg1 count:(unsigned int)arg2 atCursor:(unsigned int*)arg3;
- (void)deserializeInts:(int*)arg1 count:(unsigned int)arg2 atIndex:(unsigned int)arg3;

// NSData (NSKindOfAdditions)

- (BOOL)isNSData__;

// NSData (NSScriptAppleEventConversion)

+ (id)_scriptingPointWithDescriptor:(id)arg1;
+ (id)_scriptingRectangleWithDescriptor:(id)arg1;

- (id)_scriptingDebugDescription;
- (id)_scriptingPointDescriptor;
- (id)_scriptingRectangleDescriptor;

// NSData (NSURLExtras)

- (id)_replaceCString:(const char *)arg1 withCString:(const char *)arg2;
- (id)_web_guessedMIMEType;
- (id)_web_guessedMIMETypeForExtension:(id)arg1;
- (id)_web_guessedMIMETypeForXML;
- (id)_web_parseRFC822HeaderFields;

// Image: /System/Library/Frameworks/SceneKit.framework/Versions/A/SceneKit

// NSData (SCNExtensions)

- (id)_operateOnDataUsingCompressionAlgorithm:(int)arg1 operation:(int)arg2;
- (id)scn_compressedDataUsingCompressionAlgorithm:(int)arg1;
- (id)scn_indexedDataDecodingDeltaWithBytesPerIndex:(unsigned long long)arg1;
- (id)scn_indexedDataDecodingHighWatermarkWithBytesPerIndex:(unsigned long long)arg1;
- (id)scn_indexedDataDecodingTrianglePairsWithBytesPerIndex:(unsigned long long)arg1;
- (id)scn_indexedDataEncodingDeltaWithBytesPerIndex:(unsigned long long)arg1;
- (id)scn_indexedDataEncodingHighWatermarkWithBytesPerIndex:(unsigned long long)arg1;
- (id)scn_indexedDataEncodingTrianglePairsWithBytesPerIndex:(unsigned long long)arg1;
- (id)scn_uncompressedDataUsingCompressionAlgorithm:(int)arg1;

// Image: /System/Library/Frameworks/Security.framework/Versions/A/Security

// NSData (CKUtilsAdditions)

+ (id)CKDataWithHexString:(id)arg1;
+ (id)CKDataWithHexString:(id)arg1 stringIsUppercase:(BOOL)arg2;

- (id)CKHexString;
- (id)CKLowercaseHexStringWithoutSpaces;
- (id)CKUppercaseHexStringWithoutSpaces;

// Image: /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebKitLegacy.framework/Versions/A/WebKitLegacy

// NSData (WebKitExtras)

- (id)_webkit_guessedMIMEType;
- (id)_webkit_guessedMIMETypeForXML;

// NSData (WebNSDataExtras)

- (BOOL)_web_isCaseInsensitiveEqualToCString:(const char *)arg1;
- (long long)_web_locationAfterFirstBlankLine;
- (BOOL)_web_startsWithBlankLine;
- (id)_webkit_parseRFC822HeaderFields;

// Image: /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement

// NSData (BTMAdditions)

+ (id)__btm_bookmarkDataWithURL:(id)arg1;
+ (id)__btm_bookmarkDataWithURLString:(id)arg1;

- (id)__btm_displayName;
- (BOOL)__btm_isFileBookmark;
- (BOOL)__btm_matchBookmark:(id)arg1 requiredMatchResult:(long long)arg2;
- (id)__btm_resolveBookmark;
- (id)__btm_resolveBookmarkWithOptions:(unsigned long long)arg1 relativeToURL:(id)arg2 bookmarkDataIsStale:(BOOL*)arg3 error:(id*)arg4;
- (id)__btm_resourcePropertiesForKeys:(id)arg1;
- (id)__btm_resourcePropertyForKey:(id)arg1;

// Image: /System/Library/PrivateFrameworks/CommonUtilities.framework/Versions/A/CommonUtilities

- (id)_CUTCopyGzippedData;
- (id)_CUTDecompressData;
- (id)_CUTOptionallyDecompressData;
- (id)_CUTStringFromBaseData;

// Image: /System/Library/PrivateFrameworks/ContactsFoundation.framework/Versions/A/ContactsFoundation

// NSData (ContactsFoundation)

+ (id)_cn_dataFromHexString:(id)arg1;

- (id)_cn_SHA256HashDataWithSalt:(id)arg1;
- (BOOL)_cn_containsData:(id)arg1;
- (id)_cn_decodeBase64;
- (id)_cn_decodeBase64IgnoringWhitespace;
- (id)_cn_hexString;
- (id)_cn_md5Hash;
- (id)_cn_writeToURL:(id)arg1 options:(unsigned long long)arg2;

// Image: /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi

// NSData (NSData_CoreWiFi)

- (long long)compare:(id)arg1;

// Image: /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices

// NSData (CPlusPlusProtobuf)

+ (id)dataWithCPPData:(const struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned long long x_1_4_1; unsigned long long x_1_4_2; char *x_1_4_3; } x_1_3_1; struct __short { union { unsigned char x_1_5_1; BOOL x_1_5_2; } x_2_4_1; BOOL x_2_4_2[23]; } x_1_3_2; struct __raw { unsigned long long x_3_4_1[3]; } x_1_3_3; } x_1_2_1; } x_1_1_1; } x1; }*)arg1 copy:(BOOL)arg2;

- (struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned long long x_1_4_1; unsigned long long x_1_4_2; char *x_1_4_3; } x_1_3_1; struct __short { union { unsigned char x_1_5_1; BOOL x_1_5_2; } x_2_4_1; BOOL x_2_4_2[23]; } x_1_3_2; struct __raw { unsigned long long x_3_4_1[3]; } x_1_3_3; } x_1_2_1; } x_1_1_1; } x1; })cppData;
- (id)initWithCPPData:(const struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned long long x_1_4_1; unsigned long long x_1_4_2; char *x_1_4_3; } x_1_3_1; struct __short { union { unsigned char x_1_5_1; BOOL x_1_5_2; } x_2_4_1; BOOL x_2_4_2[23]; } x_1_3_2; struct __raw { unsigned long long x_3_4_1[3]; } x_1_3_3; } x_1_2_1; } x_1_1_1; } x1; }*)arg1 copy:(BOOL)arg2;

// NSData (GEOHashUtilities)

+ (id)_geo_dataForHexString:(id)arg1;

- (id)_geo_MD5Hash;
- (id)_geo_SHA1Hash;
- (id)_geo_hexString;
- (id)_geo_uppercaseMD5HashString;

// NSData (GEOMapService)

- (id)_geo_compressedDataViaAlgo:(int)arg1;
- (id)_geo_decompressedDataViaAlgo:(int)arg1;

// NSData (GEOXPCUtil)

+ (id)_geo_withXPCData:(id)arg1;

- (id)_geo_newXPCData;

// NSData (GeoServices_XPC)

- (id)_GEOCreateDispatchData;

// Image: /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices

// NSData (ISMutableStoreIndex)

+ (id)_ISMutableStoreIndex_mappedDataWithCapacity:(unsigned long long)arg1;
+ (id)_ISMutableStoreIndex_mappedDataWithURL:(id)arg1;

- (BOOL)_ISMutableStoreIndex_addValue:(struct { unsigned long long x1; unsigned char x2[16]; struct { double x_3_1_1; double x_3_1_2; } x3; double x4; unsigned int x5; struct { unsigned int x_6_1_1; unsigned int x_6_1_2; unsigned int x_6_1_3; } x6; unsigned long long x7; unsigned char x8[16]; }*)arg1 forKey:(unsigned long long)arg2;
- (BOOL)_ISMutableStoreIndex_makeBackedByFileAtURL:(id)arg1;

// NSData (ISStoreIndex)

+ (id)_ISStoreIndex_mappedDataWithURL:(id)arg1;

- (BOOL)_ISStoreIndex_enumerateValuesForKey:(unsigned long long)arg1 bock:(id)arg2;
- (void)_ISStoreIndex_enumerateValuesWithBock:(id)arg1;
- (unsigned int*)_ISStoreIndex_hashTable;
- (struct { unsigned int x1; bool x2; unsigned int x3; unsigned int x4; }*)_ISStoreIndex_header;
- (BOOL)_ISStoreIndex_isValid;
- (struct { unsigned long long x1; unsigned long long x2; unsigned int x3; bool x4; struct { unsigned long long x_5_1_1; unsigned char x_5_1_2[16]; struct { double x_3_2_1; double x_3_2_2; } x_5_1_3; double x_5_1_4; unsigned int x_5_1_5; struct { unsigned int x_6_2_1; unsigned int x_6_2_2; unsigned int x_6_2_3; } x_5_1_6; unsigned long long x_5_1_7; unsigned char x_5_1_8[16]; } x5; }*)_ISStoreIndex_nodeAtIndex:(unsigned int)arg1;
- (unsigned int)_ISStoreIndex_nodeIndexForKey:(unsigned long long)arg1;
- (struct { unsigned long long x1; unsigned long long x2; unsigned int x3; bool x4; struct { unsigned long long x_5_1_1; unsigned char x_5_1_2[16]; struct { double x_3_2_1; double x_3_2_2; } x_5_1_3; double x_5_1_4; unsigned int x_5_1_5; struct { unsigned int x_6_2_1; unsigned int x_6_2_2; unsigned int x_6_2_3; } x_5_1_6; unsigned long long x_5_1_7; unsigned char x_5_1_8[16]; } x5; }*)_ISStoreIndex_nodes;
- (BOOL)_ISStoreIndex_setNodeIndex:(unsigned int)arg1 forKey:(unsigned long long)arg2;

// NSData (IconServicesAdditions)

+ (id)__is__bookmarkDataWithContentsOfURL:(id)arg1;
+ (id)__is__dataWithContentsOfURL:(id)arg1;

- (id)__is__bookmarkResourcePropertyForKey:(id)arg1;

// Image: /System/Library/PrivateFrameworks/vCard.framework/Versions/A/vCard

// NSData (vCardAdditions)

+ (unsigned long long)_cn_maxDataLengthFittingInBase64EncodingLength:(unsigned long long)arg1;

- (id)_cn_MD5Hash;
- (id)_cn_encodeVCardBase64DataWithInitialLength:(unsigned long long)arg1;

@end
