/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaRemote.framework/Versions/A/MediaRemote
 */

@interface _MRGameControllerButtonsProtobuf : PBCodable <NSCopying> {
    float  _a;
    float  _b;
    float  _dPadX;
    float  _dPadY;
    struct { 
        unsigned int a : 1; 
        unsigned int b : 1; 
        unsigned int dPadX : 1; 
        unsigned int dPadY : 1; 
        unsigned int leftShoulder : 1; 
        unsigned int leftThumbstickX : 1; 
        unsigned int leftThumbstickY : 1; 
        unsigned int leftTrigger : 1; 
        unsigned int pause : 1; 
        unsigned int rightShoulder : 1; 
        unsigned int rightThumbstickX : 1; 
        unsigned int rightThumbstickY : 1; 
        unsigned int rightTrigger : 1; 
        unsigned int x : 1; 
        unsigned int y : 1; 
    }  _has;
    float  _leftShoulder;
    float  _leftThumbstickX;
    float  _leftThumbstickY;
    float  _leftTrigger;
    float  _pause;
    float  _rightShoulder;
    float  _rightThumbstickX;
    float  _rightThumbstickY;
    float  _rightTrigger;
    float  _x;
    float  _y;
}

@property (nonatomic, readwrite) float a;
@property (nonatomic, readwrite) float b;
@property (nonatomic, readwrite) float dPadX;
@property (nonatomic, readwrite) float dPadY;
@property (nonatomic, readwrite) BOOL hasA;
@property (nonatomic, readwrite) BOOL hasB;
@property (nonatomic, readwrite) BOOL hasDPadX;
@property (nonatomic, readwrite) BOOL hasDPadY;
@property (nonatomic, readwrite) BOOL hasLeftShoulder;
@property (nonatomic, readwrite) BOOL hasLeftThumbstickX;
@property (nonatomic, readwrite) BOOL hasLeftThumbstickY;
@property (nonatomic, readwrite) BOOL hasLeftTrigger;
@property (nonatomic, readwrite) BOOL hasPause;
@property (nonatomic, readwrite) BOOL hasRightShoulder;
@property (nonatomic, readwrite) BOOL hasRightThumbstickX;
@property (nonatomic, readwrite) BOOL hasRightThumbstickY;
@property (nonatomic, readwrite) BOOL hasRightTrigger;
@property (nonatomic, readwrite) BOOL hasX;
@property (nonatomic, readwrite) BOOL hasY;
@property (nonatomic, readwrite) float leftShoulder;
@property (nonatomic, readwrite) float leftThumbstickX;
@property (nonatomic, readwrite) float leftThumbstickY;
@property (nonatomic, readwrite) float leftTrigger;
@property (nonatomic, readwrite) float pause;
@property (nonatomic, readwrite) float rightShoulder;
@property (nonatomic, readwrite) float rightThumbstickX;
@property (nonatomic, readwrite) float rightThumbstickY;
@property (nonatomic, readwrite) float rightTrigger;
@property (nonatomic, readwrite) float x;
@property (nonatomic, readwrite) float y;

- (float)a;
- (float)b;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (float)dPadX;
- (float)dPadY;
- (id)description;
- (id)dictionaryRepresentation;
- (BOOL)hasA;
- (BOOL)hasB;
- (BOOL)hasDPadX;
- (BOOL)hasDPadY;
- (BOOL)hasLeftShoulder;
- (BOOL)hasLeftThumbstickX;
- (BOOL)hasLeftThumbstickY;
- (BOOL)hasLeftTrigger;
- (BOOL)hasPause;
- (BOOL)hasRightShoulder;
- (BOOL)hasRightThumbstickX;
- (BOOL)hasRightThumbstickY;
- (BOOL)hasRightTrigger;
- (BOOL)hasX;
- (BOOL)hasY;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (float)leftShoulder;
- (float)leftThumbstickX;
- (float)leftThumbstickY;
- (float)leftTrigger;
- (void)mergeFrom:(id)arg1;
- (float)pause;
- (BOOL)readFrom:(id)arg1;
- (float)rightShoulder;
- (float)rightThumbstickX;
- (float)rightThumbstickY;
- (float)rightTrigger;
- (void)setA:(float)arg1;
- (void)setB:(float)arg1;
- (void)setDPadX:(float)arg1;
- (void)setDPadY:(float)arg1;
- (void)setHasA:(BOOL)arg1;
- (void)setHasB:(BOOL)arg1;
- (void)setHasDPadX:(BOOL)arg1;
- (void)setHasDPadY:(BOOL)arg1;
- (void)setHasLeftShoulder:(BOOL)arg1;
- (void)setHasLeftThumbstickX:(BOOL)arg1;
- (void)setHasLeftThumbstickY:(BOOL)arg1;
- (void)setHasLeftTrigger:(BOOL)arg1;
- (void)setHasPause:(BOOL)arg1;
- (void)setHasRightShoulder:(BOOL)arg1;
- (void)setHasRightThumbstickX:(BOOL)arg1;
- (void)setHasRightThumbstickY:(BOOL)arg1;
- (void)setHasRightTrigger:(BOOL)arg1;
- (void)setHasX:(BOOL)arg1;
- (void)setHasY:(BOOL)arg1;
- (void)setLeftShoulder:(float)arg1;
- (void)setLeftThumbstickX:(float)arg1;
- (void)setLeftThumbstickY:(float)arg1;
- (void)setLeftTrigger:(float)arg1;
- (void)setPause:(float)arg1;
- (void)setRightShoulder:(float)arg1;
- (void)setRightThumbstickX:(float)arg1;
- (void)setRightThumbstickY:(float)arg1;
- (void)setRightTrigger:(float)arg1;
- (void)setX:(float)arg1;
- (void)setY:(float)arg1;
- (void)writeTo:(id)arg1;
- (float)x;
- (float)y;

@end
