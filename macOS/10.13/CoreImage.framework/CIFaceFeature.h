/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage
 */

@interface CIFaceFeature : CIFeature {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  bounds;
    float  faceAngle;
    BOOL  hasFaceAngle;
    BOOL  hasLeftEyePosition;
    BOOL  hasMouthPosition;
    BOOL  hasRightEyePosition;
    BOOL  hasSmile;
    BOOL  hasTrackingFrameCount;
    BOOL  hasTrackingID;
    BOOL  leftEyeClosed;
    struct CGPoint { 
        double x; 
        double y; 
    }  leftEyePosition;
    struct CGPoint { 
        double x; 
        double y; 
    }  mouthPosition;
    BOOL  rightEyeClosed;
    struct CGPoint { 
        double x; 
        double y; 
    }  rightEyePosition;
    int  trackingFrameCount;
    int  trackingID;
}

@property (atomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } bounds;
@property (atomic, readonly) float faceAngle;
@property (atomic, readonly) BOOL hasFaceAngle;
@property (atomic, readonly) BOOL hasLeftEyePosition;
@property (atomic, readonly) BOOL hasMouthPosition;
@property (atomic, readonly) BOOL hasRightEyePosition;
@property (atomic, readonly) BOOL hasSmile;
@property (atomic, readonly) BOOL hasTrackingFrameCount;
@property (atomic, readonly) BOOL hasTrackingID;
@property (atomic, readonly) BOOL leftEyeClosed;
@property (atomic, readonly) struct CGPoint { double x1; double x2; } leftEyePosition;
@property (atomic, readonly) struct CGPoint { double x1; double x2; } mouthPosition;
@property (atomic, readonly) BOOL rightEyeClosed;
@property (atomic, readonly) struct CGPoint { double x1; double x2; } rightEyePosition;
@property (atomic, readonly) int trackingFrameCount;
@property (atomic, readonly) int trackingID;

- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (float)faceAngle;
- (BOOL)hasFaceAngle;
- (BOOL)hasLeftEyePosition;
- (BOOL)hasMouthPosition;
- (BOOL)hasRightEyePosition;
- (BOOL)hasSmile;
- (BOOL)hasTrackingFrameCount;
- (BOOL)hasTrackingID;
- (id)initWithBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 hasLeftEyePosition:(BOOL)arg2 leftEyePosition:(struct CGPoint { double x1; double x2; })arg3 hasRightEyePosition:(BOOL)arg4 rightEyePosition:(struct CGPoint { double x1; double x2; })arg5 hasMouthPosition:(BOOL)arg6 mouthPosition:(struct CGPoint { double x1; double x2; })arg7 hasFaceAngle:(BOOL)arg8 faceAngle:(float)arg9 hasTrackingID:(BOOL)arg10 trackingID:(int)arg11 hasTrackingFrameCount:(BOOL)arg12 trackingFrameCount:(int)arg13 hasSmile:(BOOL)arg14 leftEyeClosed:(BOOL)arg15 rightEyeClosed:(BOOL)arg16;
- (BOOL)leftEyeClosed;
- (struct CGPoint { double x1; double x2; })leftEyePosition;
- (struct CGPoint { double x1; double x2; })mouthPosition;
- (BOOL)rightEyeClosed;
- (struct CGPoint { double x1; double x2; })rightEyePosition;
- (int)trackingFrameCount;
- (int)trackingID;
- (id)type;

@end
