/* Generated by RuntimeBrowser
   Image: /Applications/Xcode.app/Contents/SharedFrameworks/DebugHierarchyFoundation.framework/Versions/A/DebugHierarchyFoundation
 */

@interface DBGHierarchyRequest : NSObject {
    id  _completion;
    NSDate * _executionEndDate;
    NSDate * _executionStartDate;
    NSString * _identifier;
    NSArray * _logs;
    NSString * _name;
    NSDictionary * _payload;
    DebugHierarchyRequestPredicate * _predicate;
    long long  _priority;
    id  _progressHandler;
    BOOL  _spinTargetRunloopAfterRequest;
    long long  _status;
    NSString * _statusMessageActivityPhrase;
    double  _timeout;
    long long  _type;
    BOOL  _wantsUserFacingStatusUpdates;
}

@property (atomic, readwrite, copy) id completion;
@property (atomic, readwrite, retain) NSDate *executionEndDate;
@property (atomic, readwrite, retain) NSDate *executionStartDate;
@property (atomic, readonly) NSString *identifier;
@property (atomic, readwrite, retain) NSArray *logs;
@property (atomic, readwrite, retain) NSString *name;
@property (atomic, readonly) NSDictionary *payload;
@property (atomic, readonly) DebugHierarchyRequestPredicate *predicate;
@property (atomic, readonly) long long priority;
@property (atomic, readwrite, copy) id progressHandler;
@property (atomic, readwrite) BOOL spinTargetRunloopAfterRequest;
@property (atomic, readwrite) long long status;
@property (atomic, readwrite, retain) NSString *statusMessageActivityPhrase;
@property (atomic, readwrite) double timeout;
@property (atomic, readonly) long long type;
@property (atomic, readwrite) BOOL wantsUserFacingStatusUpdates;

+ (id)requestWithDictionary:(id)arg1;
+ (id)requestWithType:(long long)arg1 predicate:(id)arg2 completion:(id)arg3;

- (void).cxx_destruct;
- (id)_initWithType:(long long)arg1 predicate:(id)arg2 completion:(id)arg3;
- (void)addLogEntry:(id)arg1;
- (void)cancel;
- (id)completion;
- (id)debugDescription;
- (id)dictionaryRepresentation;
- (id)executionEndDate;
- (id)executionStartDate;
- (id)humanReadableStatusMessage;
- (id)identifier;
- (id)init;
- (id)initWithDictionary:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)logs;
- (id)name;
- (id)payload;
- (id)predicate;
- (long long)priority;
- (id)progressHandler;
- (void)setCompletion:(id)arg1;
- (void)setExecutionEndDate:(id)arg1;
- (void)setExecutionStartDate:(id)arg1;
- (void)setLogs:(id)arg1;
- (void)setName:(id)arg1;
- (void)setProgressHandler:(id)arg1;
- (void)setSpinTargetRunloopAfterRequest:(BOOL)arg1;
- (void)setStatus:(long long)arg1;
- (void)setStatusMessageActivityPhrase:(id)arg1;
- (void)setTimeout:(double)arg1;
- (void)setWantsUserFacingStatusUpdates:(BOOL)arg1;
- (BOOL)spinTargetRunloopAfterRequest;
- (long long)status;
- (id)statusMessageActivityPhrase;
- (double)timeout;
- (long long)type;
- (BOOL)wantsUserFacingStatusUpdates;

@end
