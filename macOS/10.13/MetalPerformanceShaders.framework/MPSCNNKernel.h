/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork
 */

@interface MPSCNNKernel : MPSKernel {
    int  _checkFlags;
    struct { 
        struct { 
            unsigned long long x; 
            unsigned long long y; 
            unsigned long long z; 
        } origin; 
        struct { 
            unsigned long long width; 
            unsigned long long height; 
            unsigned long long depth; 
        } size; 
    }  _clipRect;
    unsigned long long  _destinationFeatureChannelOffset;
    <MPSImageAllocator> * _destinationImageAllocator;
    unsigned long long  _dilationFactorX;
    unsigned long long  _dilationFactorY;
    unsigned long long  _edgeMode;
    int (* _encode;
    void * _encodeData;
    BOOL  _isBackwards;
    unsigned long long  _kernelHeight;
    unsigned long long  _kernelWidth;
    struct { 
        long long x; 
        long long y; 
        long long z; 
    }  _offset;
    <MPSNNPadding> * _padding;
    MPSExternalCNNUnary * _plugin;
    unsigned long long  _strideInPixelsX;
    unsigned long long  _strideInPixelsY;
}

@property (nonatomic, readwrite) struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; } clipRect;
@property (nonatomic, readwrite) unsigned long long destinationFeatureChannelOffset;
@property (nonatomic, readwrite, retain) <MPSImageAllocator> *destinationImageAllocator;
@property (nonatomic, readwrite) unsigned long long edgeMode;
@property (nonatomic, readonly) BOOL isBackwards;
@property (nonatomic, readonly) unsigned long long kernelHeight;
@property (nonatomic, readonly) unsigned long long kernelWidth;
@property (nonatomic, readwrite) struct { long long x1; long long x2; long long x3; } offset;
@property (nonatomic, readwrite, retain) <MPSNNPadding> *padding;
@property (nonatomic, readonly) unsigned long long strideInPixelsX;
@property (nonatomic, readonly) unsigned long long strideInPixelsY;

// MPSCNNKernel (null)

- (struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })clipRect;
- (id)copyWithZone:(struct _NSZone { }*)arg1 device:(id)arg2;
- (void)dealloc;
- (id)debugDescription;
- (unsigned long long)destinationFeatureChannelOffset;
- (id)destinationImageAllocator;
- (id)destinationImageDescriptorForSourceImages:(id)arg1 sourceStates:(id)arg2 paddingMethod:(unsigned long long)arg3 sourceOffset:(struct { long long x1; long long x2; long long x3; }*)arg4;
- (id)destinationImageDescriptorForSourceImages:(id)arg1 sourceStates:(id)arg2 updateOffset:(BOOL)arg3;
- (unsigned long long)edgeMode;
- (id)encodeToCommandBuffer:(id)arg1 sourceImage:(id)arg2;
- (void)encodeToCommandBuffer:(id)arg1 sourceImage:(id)arg2 destinationImage:(id)arg3;
- (void)encodeToCommandBuffer:(id)arg1 sourceImage:(id)arg2 destinationImage:(id)arg3 consumedState:(id)arg4;
- (id)encodeToCommandBuffer:(id)arg1 sourceImage:(id)arg2 inState:(id)arg3;
- (void)encodeToCommandBuffer:(id)arg1 sourceImage:(id)arg2 inState:(id)arg3 destinationImage:(id)arg4;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1 device:(id)arg2;
- (id)initWithDevice:(id)arg1;
- (BOOL)isBackwards;
- (unsigned long long)kernelHeight;
- (unsigned long long)kernelWidth;
- (struct { long long x1; long long x2; long long x3; })offset;
- (id)padding;
- (void)setClipRect:(struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })arg1;
- (void)setDestinationFeatureChannelOffset:(unsigned long long)arg1;
- (void)setDestinationImageAllocator:(id)arg1;
- (void)setEdgeMode:(unsigned long long)arg1;
- (void)setOffset:(struct { long long x1; long long x2; long long x3; })arg1;
- (void)setPadding:(id)arg1;
- (void)sourcePositionOfTopLeftCornerOfFilterWindow;
- (struct MPSRegion { struct MPSOrigin { double x_1_1_1; double x_1_1_2; double x_1_1_3; } x1; struct MPSSize { double x_2_1_1; double x_2_1_2; double x_2_1_3; } x2; })sourceRegionForDestinationSize:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg1;
- (unsigned long long)strideInPixelsX;
- (unsigned long long)strideInPixelsY;

@end
