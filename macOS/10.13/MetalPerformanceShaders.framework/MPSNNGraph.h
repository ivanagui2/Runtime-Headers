/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork
 */

@interface MPSNNGraph : MPSKernel <NSCopying, NSSecureCoding> {
    <MPSImageAllocator> * _destinationImageAllocator;
    struct Graph { 
        struct NodeList<ResourceGraphNode *> { 
            struct ResourceGraphNode {} **_items; 
            unsigned long long _count; 
            unsigned long long _storageSize; 
        } _graphSourceImages; 
        struct NodeList<ResourceGraphNode *> { 
            struct ResourceGraphNode {} **_items; 
            unsigned long long _count; 
            unsigned long long _storageSize; 
        } _graphSourceStates; 
        struct ResourceGraphNode {} *_graphResultImage; 
        struct NodeList<ResourceGraphNode *> { 
            struct ResourceGraphNode {} **_items; 
            unsigned long long _count; 
            unsigned long long _storageSize; 
        } _graphIntermediateImages; 
        struct NodeList<ResourceGraphNode *> { 
            struct ResourceGraphNode {} **_items; 
            unsigned long long _count; 
            unsigned long long _storageSize; 
        } _graphResultStates; 
        MPSNNGraph *_graph; 
        struct NodeList<FilterGraphNode *> { 
            struct FilterGraphNode {} **_items; 
            unsigned long long _count; 
            unsigned long long _storageSize; 
        } _filters; 
        struct NodeList<ResourceGraphNode *> { 
            struct ResourceGraphNode {} **_items; 
            unsigned long long _count; 
            unsigned long long _storageSize; 
        } _images; 
        struct NodeList<ResourceGraphNode *> { 
            struct ResourceGraphNode {} **_items; 
            unsigned long long _count; 
            unsigned long long _storageSize; 
        } _states; 
        NSNull *_graphNull; 
    }  _graph;
    BOOL  _outputStateIsTemporary;
}

@property (nonatomic, readwrite, retain) <MPSImageAllocator> *destinationImageAllocator;
@property (nonatomic, readonly, copy) NSArray *intermediateImageHandles;
@property (nonatomic, readwrite) BOOL outputStateIsTemporary;
@property (nonatomic, readonly) <MPSHandle> *resultHandle;
@property (nonatomic, readonly, copy) NSArray *resultStateHandles;
@property (nonatomic, readonly, copy) NSArray *sourceImageHandles;
@property (nonatomic, readonly, copy) NSArray *sourceStateHandles;

// MPSNNGraph (null)

+ (id)graphWithDevice:(id)arg1 resultImage:(id)arg2;
+ (const struct MPSLibraryInfo { int x1; unsigned int x2; char *x3; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_4_1_1; int (*x_4_1_2)(); unsigned long long x_4_1_3; } x4; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_5_1_1; int (*x_5_1_2)(); unsigned long long x_5_1_3; } x5; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_6_1_1; int (*x_6_1_2)(); unsigned long long x_6_1_3; } x6; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_7_1_1; int (*x_7_1_2)(); unsigned long long x_7_1_3; } x7; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_8_1_1; int (*x_8_1_2)(); unsigned long long x_8_1_3; } x8; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_9_1_1; int (*x_9_1_2)(); unsigned long long x_9_1_3; } x9; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_10_1_1; int (*x_10_1_2)(); unsigned long long x_10_1_3; } x10; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_11_1_1; int (*x_11_1_2)(); unsigned long long x_11_1_3; } x11; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_12_1_1; int (*x_12_1_2)(); unsigned long long x_12_1_3; } x12; }*)libraryInfo;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { }*)arg1 device:(id)arg2;
- (void)dealloc;
- (id)debugDescription;
- (id)destinationImageAllocator;
- (id)encodeToCommandBuffer:(id)arg1 sourceImages:(id)arg2;
- (id)encodeToCommandBuffer:(id)arg1 sourceImages:(id)arg2 sourceStates:(id)arg3 intermediateImages:(id)arg4 destinationStates:(id)arg5;
- (void)encodeWithCoder:(id)arg1;
- (id)executeAsyncWithSourceImages:(id)arg1 completionHandler:(id)arg2;
- (id)initWithCoder:(id)arg1 device:(id)arg2;
- (id)initWithDevice:(id)arg1 resultImage:(id)arg2;
- (id)intermediateImageHandles;
- (BOOL)outputStateIsTemporary;
- (id)resultHandle;
- (id)resultStateHandles;
- (void)setDestinationImageAllocator:(id)arg1;
- (void)setOptions:(unsigned long long)arg1;
- (void)setOutputStateIsTemporary:(BOOL)arg1;
- (id)sourceImageHandles;
- (id)sourceStateHandles;

@end
