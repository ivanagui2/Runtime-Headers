/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix
 */

@interface MPSMatrixMultiplication : MPSKernel {
    unsigned long long  _K;
    unsigned long long  _M;
    unsigned long long  _N;
    double  _alpha;
    unsigned long long  _batchSize;
    unsigned long long  _batchStart;
    double  _beta;
    int (* _encode;
    struct { 
        unsigned long long x; 
        unsigned long long y; 
        unsigned long long z; 
    }  _leftMatrixOrigin;
    <MPSExternalMatrixMultiplication> * _plugin;
    struct { 
        unsigned long long x; 
        unsigned long long y; 
        unsigned long long z; 
    }  _resultMatrixOrigin;
    struct { 
        unsigned long long x; 
        unsigned long long y; 
        unsigned long long z; 
    }  _rightMatrixOrigin;
    BOOL  _transA;
    BOOL  _transB;
    BOOL  _useTiling;
}

@property (nonatomic, readwrite) unsigned long long K;
@property (nonatomic, readwrite) unsigned long long M;
@property (nonatomic, readwrite) unsigned long long N;
@property (nonatomic, readonly) double alpha;
@property (nonatomic, readwrite) unsigned long long batchSize;
@property (nonatomic, readwrite) unsigned long long batchStart;
@property (nonatomic, readonly) double beta;
@property (nonatomic, readwrite) struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; } leftMatrixOrigin;
@property (nonatomic, readwrite) struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; } resultMatrixOrigin;
@property (nonatomic, readwrite) struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; } rightMatrixOrigin;
@property (nonatomic, readonly) BOOL transA;
@property (nonatomic, readonly) BOOL transB;

// MPSMatrixMultiplication (null)

+ (const struct MPSLibraryInfo { int x1; unsigned int x2; char *x3; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_4_1_1; int (*x_4_1_2)(); unsigned long long x_4_1_3; } x4; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_5_1_1; int (*x_5_1_2)(); unsigned long long x_5_1_3; } x5; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_6_1_1; int (*x_6_1_2)(); unsigned long long x_6_1_3; } x6; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_7_1_1; int (*x_7_1_2)(); unsigned long long x_7_1_3; } x7; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_8_1_1; int (*x_8_1_2)(); unsigned long long x_8_1_3; } x8; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_9_1_1; int (*x_9_1_2)(); unsigned long long x_9_1_3; } x9; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_10_1_1; int (*x_10_1_2)(); unsigned long long x_10_1_3; } x10; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_11_1_1; int (*x_11_1_2)(); unsigned long long x_11_1_3; } x11; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_12_1_1; int (*x_12_1_2)(); unsigned long long x_12_1_3; } x12; }*)libraryInfo;

- (unsigned long long)K;
- (unsigned long long)M;
- (unsigned long long)N;
- (double)alpha;
- (unsigned long long)batchSize;
- (unsigned long long)batchStart;
- (double)beta;
- (id)copyWithZone:(struct _NSZone { }*)arg1 device:(id)arg2;
- (id)debugDescription;
- (void)encodeToCommandBuffer:(id)arg1 encoder:(id)arg2 leftMatrix:(id)arg3 rightMatrix:(id)arg4 resultMatrix:(id)arg5;
- (void)encodeToCommandBuffer:(id)arg1 leftMatrix:(id)arg2 rightMatrix:(id)arg3 resultMatrix:(id)arg4;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1 device:(id)arg2;
- (id)initWithDevice:(id)arg1 resultRows:(unsigned long long)arg2 resultColumns:(unsigned long long)arg3 interiorColumns:(unsigned long long)arg4;
- (id)initWithDevice:(id)arg1 transposeLeft:(BOOL)arg2 transposeRight:(BOOL)arg3 resultRows:(unsigned long long)arg4 resultColumns:(unsigned long long)arg5 interiorColumns:(unsigned long long)arg6 alpha:(double)arg7 beta:(double)arg8;
- (struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })leftMatrixOrigin;
- (struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })resultMatrixOrigin;
- (struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })rightMatrixOrigin;
- (void)setBatchSize:(unsigned long long)arg1;
- (void)setBatchStart:(unsigned long long)arg1;
- (void)setK:(unsigned long long)arg1;
- (void)setLeftMatrixOrigin:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg1;
- (void)setM:(unsigned long long)arg1;
- (void)setN:(unsigned long long)arg1;
- (void)setResultMatrixOrigin:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg1;
- (void)setRightMatrixOrigin:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg1;
- (BOOL)transA;
- (BOOL)transB;

@end
