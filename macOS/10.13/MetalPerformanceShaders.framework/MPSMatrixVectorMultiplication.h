/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix
 */

@interface MPSMatrixVectorMultiplication : MPSMatrixBinaryKernel {
    unsigned long long  _M;
    unsigned long long  _N;
    double  _alpha;
    unsigned long long  _batchSize;
    unsigned long long  _batchStart;
    double  _beta;
    <MPSExternalMatrixVectorMultiplication> * _plugin;
    struct { 
        unsigned long long x; 
        unsigned long long y; 
        unsigned long long z; 
    }  _primarySourceMatrixOrigin;
    struct { 
        unsigned long long x; 
        unsigned long long y; 
        unsigned long long z; 
    }  _resultMatrixOrigin;
    struct { 
        unsigned long long x; 
        unsigned long long y; 
        unsigned long long z; 
    }  _secondarySourceMatrixOrigin;
    BOOL  _transpose;
}

@property (nonatomic, readwrite) unsigned long long M;
@property (nonatomic, readwrite) unsigned long long N;
@property (nonatomic, readonly) double alpha;
@property (nonatomic, readonly) double beta;
@property (nonatomic, readonly) BOOL transpose;

// MPSMatrixVectorMultiplication (null)

+ (const struct MPSLibraryInfo { int x1; unsigned int x2; char *x3; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_4_1_1; int (*x_4_1_2)(); unsigned long long x_4_1_3; } x4; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_5_1_1; int (*x_5_1_2)(); unsigned long long x_5_1_3; } x5; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_6_1_1; int (*x_6_1_2)(); unsigned long long x_6_1_3; } x6; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_7_1_1; int (*x_7_1_2)(); unsigned long long x_7_1_3; } x7; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_8_1_1; int (*x_8_1_2)(); unsigned long long x_8_1_3; } x8; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_9_1_1; int (*x_9_1_2)(); unsigned long long x_9_1_3; } x9; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_10_1_1; int (*x_10_1_2)(); unsigned long long x_10_1_3; } x10; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_11_1_1; int (*x_11_1_2)(); unsigned long long x_11_1_3; } x11; struct MPSDeviceSpecificInfo { struct MPSKernelInfo {} *x_12_1_1; int (*x_12_1_2)(); unsigned long long x_12_1_3; } x12; }*)libraryInfo;

- (unsigned long long)M;
- (unsigned long long)N;
- (double)alpha;
- (unsigned long long)batchSize;
- (unsigned long long)batchStart;
- (double)beta;
- (id)copyWithZone:(struct _NSZone { }*)arg1 device:(id)arg2;
- (void)encodeToCommandBuffer:(id)arg1 inputMatrix:(id)arg2 inputVector:(id)arg3 resultVector:(id)arg4;
- (id)initWithDevice:(id)arg1 rows:(unsigned long long)arg2 columns:(unsigned long long)arg3;
- (id)initWithDevice:(id)arg1 transpose:(BOOL)arg2 rows:(unsigned long long)arg3 columns:(unsigned long long)arg4 alpha:(double)arg5 beta:(double)arg6;
- (struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })primarySourceMatrixOrigin;
- (struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })resultMatrixOrigin;
- (struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })secondarySourceMatrixOrigin;
- (void)setBatchSize:(unsigned long long)arg1;
- (void)setBatchStart:(unsigned long long)arg1;
- (void)setM:(unsigned long long)arg1;
- (void)setN:(unsigned long long)arg1;
- (void)setPrimarySourceMatrixOrigin:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg1;
- (void)setResultMatrixOrigin:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg1;
- (void)setSecondarySourceMatrixOrigin:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg1;
- (BOOL)transpose;

@end
