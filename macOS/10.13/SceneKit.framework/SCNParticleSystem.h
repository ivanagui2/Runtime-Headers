/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SceneKit.framework/Versions/A/SceneKit
 */

@interface SCNParticleSystem : NSObject <NSCopying, NSSecureCoding, SCNAnimatable> {
    struct SCNVector3 { 
        double x; 
        double y; 
        double z; 
    }  _acceleration;
    BOOL  _affectedByGravity;
    BOOL  _affectedByPhysicsFields;
    SCNOrderedDictionary * _animations;
    NSMutableDictionary * _bindings;
    long long  _birthDirection;
    long long  _birthLocation;
    double  _birthRate;
    double  _birthRateVariation;
    BOOL  _blackPassEnabled;
    long long  _blendMode;
    NSArray * _colliderNodes;
    double  _dampingFactor;
    double  _emissionDuration;
    double  _emissionDurationVariation;
    SCNGeometry * _emitterShape;
    struct SCNVector3 { 
        double x; 
        double y; 
        double z; 
    }  _emittingDirection;
    double  _fixedTimeStep;
    double  _fresnelExponent;
    double  _idleDuration;
    double  _idleDurationVariation;
    long long  _imageSequenceAnimationMode;
    unsigned long long  _imageSequenceColumnCount;
    double  _imageSequenceFrameRate;
    double  _imageSequenceFrameRateVariation;
    double  _imageSequenceInitialFrame;
    double  _imageSequenceInitialFrameVariation;
    unsigned long long  _imageSequenceRowCount;
    BOOL  _isLocal;
    unsigned int  _isPresentationInstance;
    BOOL  _lightingEnabled;
    BOOL  _loops;
    NSString * _name;
    struct SCNVector3 { 
        double x; 
        double y; 
        double z; 
    }  _orientationDirection;
    long long  _orientationMode;
    double  _particleAngle;
    double  _particleAngleVariation;
    double  _particleAngularVelocity;
    double  _particleAngularVelocityVariation;
    double  _particleBounce;
    double  _particleBounceVariation;
    double  _particleCharge;
    double  _particleChargeVariation;
    NSColor * _particleColor;
    struct SCNVector4 { 
        double x; 
        double y; 
        double z; 
        double w; 
    }  _particleColorVariation;
    BOOL  _particleDiesOnCollision;
    double  _particleFriction;
    double  _particleFrictionVariation;
    NSArray * _particleGeometries;
    id  _particleImage;
    double  _particleIntensity;
    double  _particleIntensityVariation;
    double  _particleLifeSpan;
    double  _particleLifeSpanVariation;
    double  _particleMass;
    double  _particleMassVariation;
    double  _particleSize;
    double  _particleSizeVariation;
    struct __C3DParticleSystem { } * _particleSystem;
    double  _particleVelocity;
    double  _particleVelocityVariation;
    BOOL  _physicsCollisionsEnabled;
    NSDictionary * _propertyControllers;
    NSString * _referenceName;
    long long  _renderingMode;
    long long  _seed;
    BOOL  _softParticlesEnabled;
    long long  _sortingMode;
    double  _speedFactor;
    double  _spreadingAngle;
    double  _stretchFactor;
    SCNParticleSystem * _systemSpawnedOnCollision;
    SCNParticleSystem * _systemSpawnedOnDying;
    SCNParticleSystem * _systemSpawnedOnLiving;
    double  _warmupDuration;
}

@property (nonatomic, readwrite) struct SCNVector3 { double x1; double x2; double x3; } acceleration;
@property (nonatomic, readwrite) BOOL affectedByGravity;
@property (nonatomic, readwrite) BOOL affectedByPhysicsFields;
@property (atomic, readonly) NSArray *animationKeys;
@property (nonatomic, readwrite) long long birthDirection;
@property (nonatomic, readwrite) long long birthLocation;
@property (nonatomic, readwrite) double birthRate;
@property (nonatomic, readwrite) double birthRateVariation;
@property (getter=isBlackPassEnabled, nonatomic, readwrite) BOOL blackPassEnabled;
@property (nonatomic, readwrite) long long blendMode;
@property (nonatomic, readwrite, copy) NSArray *colliderNodes;
@property (nonatomic, readwrite) double dampingFactor;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (nonatomic, readwrite) double emissionDuration;
@property (nonatomic, readwrite) double emissionDurationVariation;
@property (nonatomic, readwrite, retain) SCNGeometry *emitterShape;
@property (nonatomic, readwrite) struct SCNVector3 { double x1; double x2; double x3; } emittingDirection;
@property (nonatomic, readwrite) double fresnelExponent;
@property (atomic, readonly) unsigned long long hash;
@property (nonatomic, readwrite) double idleDuration;
@property (nonatomic, readwrite) double idleDurationVariation;
@property (nonatomic, readwrite) long long imageSequenceAnimationMode;
@property (nonatomic, readwrite) unsigned long long imageSequenceColumnCount;
@property (nonatomic, readwrite) double imageSequenceFrameRate;
@property (nonatomic, readwrite) double imageSequenceFrameRateVariation;
@property (nonatomic, readwrite) double imageSequenceInitialFrame;
@property (nonatomic, readwrite) double imageSequenceInitialFrameVariation;
@property (nonatomic, readwrite) unsigned long long imageSequenceRowCount;
@property (getter=isLightingEnabled, nonatomic, readwrite) BOOL lightingEnabled;
@property (getter=isLocal, nonatomic, readwrite) BOOL local;
@property (nonatomic, readwrite) BOOL loops;
@property (nonatomic, readwrite) struct SCNVector3 { double x1; double x2; double x3; } orientationDirection;
@property (nonatomic, readwrite) long long orientationMode;
@property (nonatomic, readwrite) double particleAngle;
@property (nonatomic, readwrite) double particleAngleVariation;
@property (nonatomic, readwrite) double particleAngularVelocity;
@property (nonatomic, readwrite) double particleAngularVelocityVariation;
@property (nonatomic, readwrite) double particleBounce;
@property (nonatomic, readwrite) double particleBounceVariation;
@property (nonatomic, readwrite) double particleCharge;
@property (nonatomic, readwrite) double particleChargeVariation;
@property (nonatomic, readwrite, retain) NSColor *particleColor;
@property (nonatomic, readwrite) struct SCNVector4 { double x1; double x2; double x3; double x4; } particleColorVariation;
@property (nonatomic, readwrite) BOOL particleDiesOnCollision;
@property (nonatomic, readwrite) double particleFriction;
@property (nonatomic, readwrite) double particleFrictionVariation;
@property (nonatomic, readwrite, retain) id particleImage;
@property (nonatomic, readwrite) double particleIntensity;
@property (nonatomic, readwrite) double particleIntensityVariation;
@property (nonatomic, readwrite) double particleLifeSpan;
@property (nonatomic, readwrite) double particleLifeSpanVariation;
@property (nonatomic, readwrite) double particleMass;
@property (nonatomic, readwrite) double particleMassVariation;
@property (nonatomic, readwrite) double particleSize;
@property (nonatomic, readwrite) double particleSizeVariation;
@property (nonatomic, readwrite) double particleVelocity;
@property (nonatomic, readwrite) double particleVelocityVariation;
@property (nonatomic, readwrite, copy) NSDictionary *propertyControllers;
@property (nonatomic, readwrite) long long sortingMode;
@property (nonatomic, readwrite) double speedFactor;
@property (nonatomic, readwrite) double spreadingAngle;
@property (nonatomic, readwrite) double stretchFactor;
@property (atomic, readonly) Class superclass;
@property (nonatomic, readwrite, retain) SCNParticleSystem *systemSpawnedOnCollision;
@property (nonatomic, readwrite, retain) SCNParticleSystem *systemSpawnedOnDying;
@property (nonatomic, readwrite, retain) SCNParticleSystem *systemSpawnedOnLiving;
@property (nonatomic, readwrite) double warmupDuration;

+ (id)particleSystem;
+ (id)particleSystemNamed:(id)arg1 inDirectory:(id)arg2;
+ (id)particleSystemWithParticleSystemRef:(struct __C3DParticleSystem { }*)arg1;
+ (BOOL)supportsSecureCoding;

- (const void*)__CFObject;
- (BOOL)__removeAnimation:(id)arg1 forKey:(id)arg2;
- (void)_copyAnimationsFrom:(id)arg1;
- (void)_customDecodingOfSCNParticleSystem:(id)arg1;
- (void)_customEncodingOfSCNParticleSystem:(id)arg1;
- (BOOL)_isAReference;
- (void)_pauseAnimation:(BOOL)arg1 forKey:(id)arg2 pausedByNode:(BOOL)arg3;
- (id)_scnAnimationForKey:(id)arg1;
- (id)_scnBindings;
- (void)_setParticleImagePath:(id)arg1 withResolvedPath:(id)arg2;
- (void)_syncEntityObjCModel;
- (void)_syncObjCAnimations;
- (void)_syncObjCModel;
- (void)_updateParticleC3DImage:(id)arg1;
- (struct SCNVector3 { double x1; double x2; double x3; })acceleration;
- (void)addAnimation:(id)arg1;
- (void)addAnimation:(id)arg1 forKey:(id)arg2;
- (void)addAnimationPlayer:(id)arg1 forKey:(id)arg2;
- (void)addModifierForProperties:(id)arg1 atStage:(long long)arg2 withBlock:(id)arg3;
- (BOOL)affectedByGravity;
- (BOOL)affectedByPhysicsFields;
- (id)animationForKey:(id)arg1;
- (id)animationKeys;
- (struct __C3DAnimationManager { }*)animationManager;
- (id)animationPlayerForKey:(id)arg1;
- (BOOL)areSoftParticlesEnabled;
- (void)bindAnimatablePath:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (long long)birthDirection;
- (long long)birthLocation;
- (double)birthRate;
- (double)birthRateVariation;
- (BOOL)blackPassEnabled;
- (long long)blendMode;
- (id)colliderNodes;
- (id)copy;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (double)dampingFactor;
- (void)dealloc;
- (double)emissionDuration;
- (double)emissionDurationVariation;
- (id)emitterShape;
- (struct SCNVector3 { double x1; double x2; double x3; })emittingDirection;
- (void)encodeWithCoder:(id)arg1;
- (double)fixedTimeStep;
- (double)fresnelExponent;
- (void)handleEvent:(long long)arg1 forProperties:(id)arg2 withBlock:(id)arg3;
- (id)identifier;
- (double)idleDuration;
- (double)idleDurationVariation;
- (long long)imageSequenceAnimationMode;
- (unsigned long long)imageSequenceColumnCount;
- (double)imageSequenceFrameRate;
- (double)imageSequenceFrameRateVariation;
- (double)imageSequenceInitialFrame;
- (double)imageSequenceInitialFrameVariation;
- (unsigned long long)imageSequenceRowCount;
- (id)init;
- (id)initPresentationSystemWithSystemRef:(struct __C3DParticleSystem { }*)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithParticleSystemRef:(struct __C3DParticleSystem { }*)arg1;
- (BOOL)isAnimationForKeyPaused:(id)arg1;
- (BOOL)isBlackPassEnabled;
- (BOOL)isLightingEnabled;
- (BOOL)isLocal;
- (BOOL)isPausedOrPausedByInheritance;
- (BOOL)lightingEnabled;
- (BOOL)loops;
- (id)name;
- (struct SCNVector3 { double x1; double x2; double x3; })orientationDirection;
- (long long)orientationMode;
- (double)particleAngle;
- (double)particleAngleVariation;
- (double)particleAngularVelocity;
- (double)particleAngularVelocityVariation;
- (double)particleBounce;
- (double)particleBounceVariation;
- (double)particleCharge;
- (double)particleChargeVariation;
- (id)particleColor;
- (struct SCNVector4 { double x1; double x2; double x3; double x4; })particleColorVariation;
- (BOOL)particleDiesOnCollision;
- (double)particleFriction;
- (double)particleFrictionVariation;
- (id)particleGeometries;
- (id)particleImage;
- (double)particleIntensity;
- (double)particleIntensityVariation;
- (double)particleLifeSpan;
- (double)particleLifeSpanVariation;
- (double)particleMass;
- (double)particleMassVariation;
- (double)particleSize;
- (double)particleSizeVariation;
- (struct __C3DParticleSystem { }*)particleSystemRef;
- (double)particleVelocity;
- (double)particleVelocityVariation;
- (void)pauseAnimationForKey:(id)arg1;
- (BOOL)physicsCollisionsEnabled;
- (id)presentationInstance;
- (id)propertyControllers;
- (id)referenceName;
- (void)removeAllAnimations;
- (void)removeAllModifiers;
- (void)removeAnimationForKey:(id)arg1;
- (void)removeAnimationForKey:(id)arg1 blendOutDuration:(double)arg2;
- (void)removeAnimationForKey:(id)arg1 fadeOutDuration:(double)arg2;
- (void)removeModifiersOfStage:(long long)arg1;
- (long long)renderingMode;
- (void)reset;
- (void)resumeAnimationForKey:(id)arg1;
- (id)scene;
- (struct __C3DScene { }*)sceneRef;
- (long long)seed;
- (void)setAcceleration:(struct SCNVector3 { double x1; double x2; double x3; })arg1;
- (void)setAffectedByGravity:(BOOL)arg1;
- (void)setAffectedByPhysicsFields:(BOOL)arg1;
- (void)setBirthDirection:(long long)arg1;
- (void)setBirthLocation:(long long)arg1;
- (void)setBirthRate:(double)arg1;
- (void)setBirthRateVariation:(double)arg1;
- (void)setBlackPassEnabled:(BOOL)arg1;
- (void)setBlendMode:(long long)arg1;
- (void)setColliderNodes:(id)arg1;
- (void)setDampingFactor:(double)arg1;
- (void)setEmissionDuration:(double)arg1;
- (void)setEmissionDurationVariation:(double)arg1;
- (void)setEmitterShape:(id)arg1;
- (void)setEmittingDirection:(struct SCNVector3 { double x1; double x2; double x3; })arg1;
- (void)setFixedTimeStep:(double)arg1;
- (void)setFresnelExponent:(double)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setIdleDuration:(double)arg1;
- (void)setIdleDurationVariation:(double)arg1;
- (void)setImageSequenceAnimationMode:(long long)arg1;
- (void)setImageSequenceColumnCount:(unsigned long long)arg1;
- (void)setImageSequenceFrameRate:(double)arg1;
- (void)setImageSequenceFrameRateVariation:(double)arg1;
- (void)setImageSequenceInitialFrame:(double)arg1;
- (void)setImageSequenceInitialFrameVariation:(double)arg1;
- (void)setImageSequenceRowCount:(unsigned long long)arg1;
- (void)setIsLocal:(BOOL)arg1;
- (void)setLightingEnabled:(BOOL)arg1;
- (void)setLocal:(BOOL)arg1;
- (void)setLoops:(BOOL)arg1;
- (void)setName:(id)arg1;
- (void)setOrientationDirection:(struct SCNVector3 { double x1; double x2; double x3; })arg1;
- (void)setOrientationMode:(long long)arg1;
- (void)setParticleAngle:(double)arg1;
- (void)setParticleAngleVariation:(double)arg1;
- (void)setParticleAngularVelocity:(double)arg1;
- (void)setParticleAngularVelocityVariation:(double)arg1;
- (void)setParticleBounce:(double)arg1;
- (void)setParticleBounceVariation:(double)arg1;
- (void)setParticleCharge:(double)arg1;
- (void)setParticleChargeVariation:(double)arg1;
- (void)setParticleColor:(id)arg1;
- (void)setParticleColorVariation:(struct SCNVector4 { double x1; double x2; double x3; double x4; })arg1;
- (void)setParticleDiesOnCollision:(BOOL)arg1;
- (void)setParticleFriction:(double)arg1;
- (void)setParticleFrictionVariation:(double)arg1;
- (void)setParticleGeometries:(id)arg1;
- (void)setParticleImage:(id)arg1;
- (void)setParticleIntensity:(double)arg1;
- (void)setParticleIntensityVariation:(double)arg1;
- (void)setParticleLifeSpan:(double)arg1;
- (void)setParticleLifeSpanVariation:(double)arg1;
- (void)setParticleMass:(double)arg1;
- (void)setParticleMassVariation:(double)arg1;
- (void)setParticleSize:(double)arg1;
- (void)setParticleSizeVariation:(double)arg1;
- (void)setParticleVelocity:(double)arg1;
- (void)setParticleVelocityVariation:(double)arg1;
- (void)setPhysicsCollisionsEnabled:(BOOL)arg1;
- (void)setPropertyControllers:(id)arg1;
- (void)setReferenceName:(id)arg1;
- (void)setRenderingMode:(long long)arg1;
- (void)setSeed:(long long)arg1;
- (void)setSoftParticlesEnabled:(BOOL)arg1;
- (void)setSortingMode:(long long)arg1;
- (void)setSpeed:(double)arg1 forAnimationKey:(id)arg2;
- (void)setSpeedFactor:(double)arg1;
- (void)setSpreadingAngle:(double)arg1;
- (void)setStretchFactor:(double)arg1;
- (void)setSystemSpawnedOnCollision:(id)arg1;
- (void)setSystemSpawnedOnDying:(id)arg1;
- (void)setSystemSpawnedOnLiving:(id)arg1;
- (void)setWarmupDuration:(double)arg1;
- (BOOL)softParticlesEnabled;
- (long long)sortingMode;
- (double)speedFactor;
- (double)spreadingAngle;
- (double)stretchFactor;
- (id)systemSpawnedOnCollision;
- (id)systemSpawnedOnDying;
- (id)systemSpawnedOnLiving;
- (short)typeOfProperty:(id)arg1;
- (void)unbindAnimatablePath:(id)arg1;
- (double)warmupDuration;

@end
