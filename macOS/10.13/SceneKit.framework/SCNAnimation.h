/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SceneKit.framework/Versions/A/SceneKit
 */

@interface SCNAnimation : NSObject <NSCopying, NSSecureCoding, SCNAnimation> {
    BOOL  _additive;
    id  _animationDidStart;
    id  _animationDidStop;
    NSArray * _animationEvents;
    struct __C3DAnimation { } * _animationRef;
    BOOL  _applyOnCompletion;
    BOOL  _autoreverses;
    double  _beginTime;
    id  _caAnimation;
    BOOL  _cumulative;
    BOOL  _didMutate;
    double  _duration;
    double  _fadeInDuration;
    double  _fadeOutDuration;
    BOOL  _fillBackward;
    BOOL  _fillForward;
    NSString * _keyPath;
    BOOL  _removedOnCompletion;
    double  _repeatCount;
    double  _timeOffset;
    SCNTimingFunction * _timingFunction;
    id  _userAnimation;
    NSMutableDictionary * _userInfo;
    BOOL  _usesSceneTimeBase;
}

@property (getter=isAdditive, nonatomic, readwrite) BOOL additive;
@property (nonatomic, readwrite, copy) id animationDidStart;
@property (nonatomic, readwrite, copy) id animationDidStop;
@property (nonatomic, readwrite, copy) NSArray *animationEvents;
@property (getter=isAppliedOnCompletion, nonatomic, readwrite) BOOL appliedOnCompletion;
@property (nonatomic, readwrite) BOOL autoreverses;
@property (nonatomic, readwrite) double blendInDuration;
@property (nonatomic, readwrite) double blendOutDuration;
@property (getter=isCumulative, nonatomic, readwrite) BOOL cumulative;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (nonatomic, readwrite) double duration;
@property (nonatomic, readwrite) BOOL fillsBackward;
@property (nonatomic, readwrite) BOOL fillsForward;
@property (atomic, readonly) unsigned long long hash;
@property (nonatomic, readwrite, copy) NSString *keyPath;
@property (getter=isRemovedOnCompletion, nonatomic, readwrite) BOOL removedOnCompletion;
@property (nonatomic, readwrite) double repeatCount;
@property (nonatomic, readwrite) double startDelay;
@property (atomic, readonly) Class superclass;
@property (nonatomic, readwrite) double timeOffset;
@property (nonatomic, readwrite, retain) SCNTimingFunction *timingFunction;
@property (nonatomic, readwrite) BOOL usesSceneTimeBase;

+ (id)animationFromScene:(id)arg1;
+ (id)animationNamed:(id)arg1;
+ (id)animationWithC3DAnimation:(struct __C3DAnimation { }*)arg1;
+ (id)animationWithCAAnimation:(id)arg1;
+ (id)animationWithContentsOfURL:(id)arg1;
+ (BOOL)supportsSecureCoding;

- (const void*)__CFObject;
- (void)_didMutate;
- (void)_setAnimationRef:(struct __C3DAnimation { }*)arg1;
- (void)_syncObjCModel;
- (id)animationDidStart;
- (id)animationDidStop;
- (id)animationEvents;
- (struct __C3DAnimation { }*)animationRef;
- (BOOL)autoreverses;
- (double)blendInDuration;
- (double)blendOutDuration;
- (id)caAnimation;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (double)duration;
- (void)encodeWithCoder:(id)arg1;
- (double)fadeInDuration;
- (double)fadeOutDuration;
- (BOOL)fillsBackward;
- (BOOL)fillsForward;
- (id)initWithC3DAnimation:(struct __C3DAnimation { }*)arg1;
- (id)initWithCAAnimation:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isAdditive;
- (BOOL)isAppliedOnCompletion;
- (BOOL)isCumulative;
- (BOOL)isRemovedOnCompletion;
- (id)keyPath;
- (void)prepareWithTarget:(id)arg1 implicitDuration:(double)arg2;
- (double)repeatCount;
- (double)repeatDuration;
- (void)setAdditive:(BOOL)arg1;
- (void)setAnimationDidStart:(id)arg1;
- (void)setAnimationDidStop:(id)arg1;
- (void)setAnimationEvents:(id)arg1;
- (void)setAppliedOnCompletion:(BOOL)arg1;
- (void)setAutoreverses:(BOOL)arg1;
- (void)setBlendInDuration:(double)arg1;
- (void)setBlendOutDuration:(double)arg1;
- (void)setCumulative:(BOOL)arg1;
- (void)setDuration:(double)arg1;
- (void)setFadeInDuration:(double)arg1;
- (void)setFadeOutDuration:(double)arg1;
- (void)setFillsBackward:(BOOL)arg1;
- (void)setFillsForward:(BOOL)arg1;
- (void)setKeyPath:(id)arg1;
- (void)setRemovedOnCompletion:(BOOL)arg1;
- (void)setRepeatCount:(double)arg1;
- (void)setRepeatDuration:(double)arg1;
- (void)setStartDelay:(double)arg1;
- (void)setTimeOffset:(double)arg1;
- (void)setTimingFunction:(id)arg1;
- (void)setUsesSceneTimeBase:(BOOL)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (double)startDelay;
- (double)timeOffset;
- (id)timingFunction;
- (id)userAnimation;
- (BOOL)usesSceneTimeBase;
- (id)valueForUndefinedKey:(id)arg1;

@end
