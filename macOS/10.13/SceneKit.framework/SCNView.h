/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SceneKit.framework/Versions/A/SceneKit
 */

@interface SCNView : NSView <DebugHierarchyObject, SCNSceneRenderer, SCNTechniqueSupport> {
    unsigned long long  __ibPreferredRenderingAPI;
    NSString * __ibSceneName;
    NSColor * _backgroundColor;
    CALayer * _backingLayer;
    double  _currentSystemTime;
    id  _delegate;
    <MTLDevice> * _device;
    bool  _didTriggerRedrawWhileRendering;
    unsigned int  _disableLinearRendering;
    SCNDisplayLink * _displayLink;
    unsigned int  _drawOnMainThreadPending;
    unsigned int  _firstDrawDone;
    unsigned int  _ibNoMultisampling;
    unsigned int  _inRenderQueueForLayerBackedGLRendering;
    unsigned int  _isInLiveResize;
    unsigned int  _isOpaque;
    SCNJitterer * _jitterer;
    double  _lastUpdate;
    NSRecursiveLock * _lock;
    <SCNEventHandler> * _navigationCameraController;
    long long  _preferredFramePerSeconds;
    SCNRenderer * _renderer;
    unsigned long long  _renderingAPI;
    unsigned int  _rendersContinuously;
    SCNScene * _scene;
    char * _snapshotImageData;
    unsigned long long  _snapshotImageDataLength;
    SCNSpriteKitEventHandler * _spriteKitEventHandler;
    NSOpenGLPixelFormat * _userDefinedPixelFormat;
}

@property (nonatomic, readwrite) BOOL allowsCameraControl;
@property (nonatomic, readwrite) unsigned long long antialiasingMode;
@property (nonatomic, readonly) AVAudioEngine *audioEngine;
@property (nonatomic, readonly) AVAudioEnvironmentNode *audioEnvironmentNode;
@property (nonatomic, readwrite, retain) SCNNode *audioListener;
@property (nonatomic, readwrite) BOOL autoenablesDefaultLighting;
@property (nonatomic, readwrite, copy) NSColor *backgroundColor;
@property (nonatomic, readonly) <SCNCameraControlConfiguration> *cameraControlConfiguration;
@property (nonatomic, readonly) unsigned long long colorPixelFormat;
@property (nonatomic, readonly) <MTLCommandQueue> *commandQueue;
@property (nonatomic, readonly) void*context;
@property (nonatomic, readonly) <MTLRenderCommandEncoder> *currentRenderCommandEncoder;
@property (nonatomic, readwrite) double currentTime;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (nonatomic, readwrite) unsigned long long debugOptions;
@property (nonatomic, readonly) SCNCameraController *defaultCameraController;
@property (nonatomic, readwrite) <SCNSceneRendererDelegate> *delegate;
@property (nonatomic, readonly) unsigned long long depthPixelFormat;
@property (atomic, readonly, copy) NSString *description;
@property (nonatomic, readonly) <MTLDevice> *device;
@property (atomic, readonly) unsigned long long hash;
@property (getter=isJitteringEnabled, nonatomic, readwrite) BOOL jitteringEnabled;
@property (nonatomic, readwrite) BOOL loops;
@property (nonatomic, readwrite, retain) NSOpenGLContext *openGLContext;
@property (nonatomic, readwrite, retain) SKScene *overlaySKScene;
@property (nonatomic, readwrite, retain) NSOpenGLPixelFormat *pixelFormat;
@property (getter=isPlaying, atomic, readwrite) BOOL playing;
@property (nonatomic, readwrite, retain) SCNNode *pointOfView;
@property (nonatomic, readwrite) long long preferredFramesPerSecond;
@property (nonatomic, readonly) unsigned long long renderingAPI;
@property (nonatomic, readwrite) BOOL rendersContinuously;
@property (nonatomic, readwrite, retain) SCNScene *scene;
@property (nonatomic, readwrite) double sceneTime;
@property (nonatomic, readwrite) BOOL showsStatistics;
@property (nonatomic, readonly) unsigned long long stencilPixelFormat;
@property (atomic, readonly) Class superclass;
@property (nonatomic, readwrite, copy) SCNTechnique *technique;

// Image: /System/Library/Frameworks/SceneKit.framework/Versions/A/SceneKit

+ (id)_defaultPixelFormat;
+ (id)_defaultPixelFormatWithAPI:(unsigned long long)arg1 sampleCount:(unsigned long long)arg2 stencil:(BOOL)arg3;
+ (BOOL)_isMetalSupported;
+ (id)_kvoKeysForwardedToRenderer;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)deviceForOptions:(id)arg1;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (BOOL)lowLatency;
+ (unsigned long long)renderingAPIForOptions:(id)arg1;

- (void)SCN_displayLinkCallback:(double)arg1;
- (const void*)__CFObject;
- (void)_adjustBackingLayerPixelFormat;
- (id)_authoringEnvironment;
- (void)_backgroundDidChange;
- (void)_beginMouseMovedTracking;
- (BOOL)_canJitter;
- (void)_cancelJitterRedisplay;
- (void)_cancelMouseMovedTracking;
- (BOOL)_checkAndUpdateDisplayLinkStateIfNeeded;
- (void)_clearAppKitGLContext;
- (void)_commonInit:(id)arg1;
- (id)_defaultBackgroundColor;
- (BOOL)_disableLinearRendering;
- (void)_drawAtTime:(double)arg1 WithContext:(struct _CGLContextObject { struct __GLIContextRec {} *x1; struct __GLIFunctionDispatchRec { int (*x_2_1_1)(); int (*x_2_1_2)(); int (*x_2_1_3)(); int (*x_2_1_4)(); int (*x_2_1_5)(); int (*x_2_1_6)(); int (*x_2_1_7)(); int (*x_2_1_8)(); int (*x_2_1_9)(); int (*x_2_1_10)(); int (*x_2_1_11)(); int (*x_2_1_12)(); int (*x_2_1_13)(); int (*x_2_1_14)(); int (*x_2_1_15)(); int (*x_2_1_16)(); int (*x_2_1_17)(); int (*x_2_1_18)(); int (*x_2_1_19)(); int (*x_2_1_20)(); int (*x_2_1_21)(); int (*x_2_1_22)(); int (*x_2_1_23)(); int (*x_2_1_24)(); int (*x_2_1_25)(); int (*x_2_1_26)(); int (*x_2_1_27)(); int (*x_2_1_28)(); int (*x_2_1_29)(); int (*x_2_1_30)(); int (*x_2_1_31)(); int (*x_2_1_32)(); int (*x_2_1_33)(); int (*x_2_1_34)(); int (*x_2_1_35)(); int (*x_2_1_36)(); int (*x_2_1_37)(); int (*x_2_1_38)(); int (*x_2_1_39)(); int (*x_2_1_40)(); int (*x_2_1_41)(); int (*x_2_1_42)(); int (*x_2_1_43)(); int (*x_2_1_44)(); int (*x_2_1_45)(); int (*x_2_1_46)(); int (*x_2_1_47)(); int (*x_2_1_48)(); int (*x_2_1_49)(); int (*x_2_1_50)(); int (*x_2_1_51)(); int (*x_2_1_52)(); int (*x_2_1_53)(); int (*x_2_1_54)(); int (*x_2_1_55)(); } x2; }*)arg2;
- (void)_drawInBackingLayerWithCGLContext:(struct _CGLContextObject { struct __GLIContextRec {} *x1; struct __GLIFunctionDispatchRec { int (*x_2_1_1)(); int (*x_2_1_2)(); int (*x_2_1_3)(); int (*x_2_1_4)(); int (*x_2_1_5)(); int (*x_2_1_6)(); int (*x_2_1_7)(); int (*x_2_1_8)(); int (*x_2_1_9)(); int (*x_2_1_10)(); int (*x_2_1_11)(); int (*x_2_1_12)(); int (*x_2_1_13)(); int (*x_2_1_14)(); int (*x_2_1_15)(); int (*x_2_1_16)(); int (*x_2_1_17)(); int (*x_2_1_18)(); int (*x_2_1_19)(); int (*x_2_1_20)(); int (*x_2_1_21)(); int (*x_2_1_22)(); int (*x_2_1_23)(); int (*x_2_1_24)(); int (*x_2_1_25)(); int (*x_2_1_26)(); int (*x_2_1_27)(); int (*x_2_1_28)(); int (*x_2_1_29)(); int (*x_2_1_30)(); int (*x_2_1_31)(); int (*x_2_1_32)(); int (*x_2_1_33)(); int (*x_2_1_34)(); int (*x_2_1_35)(); int (*x_2_1_36)(); int (*x_2_1_37)(); int (*x_2_1_38)(); int (*x_2_1_39)(); int (*x_2_1_40)(); int (*x_2_1_41)(); int (*x_2_1_42)(); int (*x_2_1_43)(); int (*x_2_1_44)(); int (*x_2_1_45)(); int (*x_2_1_46)(); int (*x_2_1_47)(); int (*x_2_1_48)(); int (*x_2_1_49)(); int (*x_2_1_50)(); int (*x_2_1_51)(); int (*x_2_1_52)(); int (*x_2_1_53)(); int (*x_2_1_54)(); int (*x_2_1_55)(); } x2; }*)arg1 atTime:(double)arg2;
- (BOOL)_enablesDeferredShading;
- (int)_ibPreferredRenderingAPI;
- (id)_ibSceneName;
- (BOOL)_ibWantsMultisampling;
- (BOOL)_isEditor;
- (BOOL)_isGLLayerBacked;
- (void)_jitterRedisplayWithContext:(struct _CGLContextObject { struct __GLIContextRec {} *x1; struct __GLIFunctionDispatchRec { int (*x_2_1_1)(); int (*x_2_1_2)(); int (*x_2_1_3)(); int (*x_2_1_4)(); int (*x_2_1_5)(); int (*x_2_1_6)(); int (*x_2_1_7)(); int (*x_2_1_8)(); int (*x_2_1_9)(); int (*x_2_1_10)(); int (*x_2_1_11)(); int (*x_2_1_12)(); int (*x_2_1_13)(); int (*x_2_1_14)(); int (*x_2_1_15)(); int (*x_2_1_16)(); int (*x_2_1_17)(); int (*x_2_1_18)(); int (*x_2_1_19)(); int (*x_2_1_20)(); int (*x_2_1_21)(); int (*x_2_1_22)(); int (*x_2_1_23)(); int (*x_2_1_24)(); int (*x_2_1_25)(); int (*x_2_1_26)(); int (*x_2_1_27)(); int (*x_2_1_28)(); int (*x_2_1_29)(); int (*x_2_1_30)(); int (*x_2_1_31)(); int (*x_2_1_32)(); int (*x_2_1_33)(); int (*x_2_1_34)(); int (*x_2_1_35)(); int (*x_2_1_36)(); int (*x_2_1_37)(); int (*x_2_1_38)(); int (*x_2_1_39)(); int (*x_2_1_40)(); int (*x_2_1_41)(); int (*x_2_1_42)(); int (*x_2_1_43)(); int (*x_2_1_44)(); int (*x_2_1_45)(); int (*x_2_1_46)(); int (*x_2_1_47)(); int (*x_2_1_48)(); int (*x_2_1_49)(); int (*x_2_1_50)(); int (*x_2_1_51)(); int (*x_2_1_52)(); int (*x_2_1_53)(); int (*x_2_1_54)(); int (*x_2_1_55)(); } x2; }*)arg1;
- (void)_openGLContextDidChange:(id)arg1;
- (id)_openGLContextIfAny;
- (id)_pixelFormatByDefaultingIfNeeded;
- (id)_privateOpenGLContext;
- (id)_privateOpenGLContextIfAny;
- (id)_renderingQueue;
- (void)_resetContentsScaleFactor;
- (void)_reshape;
- (double)_runFPSTestWithDuration:(double)arg1;
- (void)_sceneDidUpdate:(id)arg1;
- (id)_scnlayerBackedOpenGLContext;
- (struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })_screenTransform;
- (void)_selectRenderingAPIWithOptions:(id)arg1;
- (void)_setNeedsDisplay;
- (BOOL)_showsAuthoringEnvironment;
- (double)_superSamplingFactor;
- (BOOL)_supportsJitteringSyncRedraw;
- (void)_systemTimeAnimationStarted:(id)arg1;
- (struct CGSize { double x1; double x2; })_updateBackingSize;
- (void)_updateContentsScaleFactor;
- (void)_updateOpacity;
- (void)_updateProbes:(id)arg1 withProgress:(id)arg2;
- (BOOL)_wantsSceneRendererDelegationMessages;
- (void)_windowBackingDidChange:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)allowsCameraControl;
- (unsigned long long)antialiasingMode;
- (id)audioEngine;
- (id)audioEnvironmentNode;
- (id)audioListener;
- (BOOL)autoAdjustCamera;
- (BOOL)autoenablesDefaultLighting;
- (id)backgroundColor;
- (BOOL)becomeFirstResponder;
- (id)cameraControlConfiguration;
- (unsigned long long)colorPixelFormat;
- (id)commandQueue;
- (id)contentLayer;
- (void*)context;
- (id)currentRenderCommandEncoder;
- (id)currentRenderPassDescriptor;
- (double)currentTime;
- (void)dealloc;
- (unsigned long long)debugOptions;
- (id)defaultCameraController;
- (id)delegate;
- (unsigned long long)depthPixelFormat;
- (id)description;
- (id)device;
- (id)displayLink;
- (void)drawForMetalBackingLayer;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)eventHandler;
- (void)eventHandlerWantsRedraw;
- (void)flagsChanged:(id)arg1;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 options:(id)arg2;
- (id)hitTestWithSegmentFromPoint:(struct SCNVector3 { double x1; double x2; double x3; })arg1 toPoint:(struct SCNVector3 { double x1; double x2; double x3; })arg2 options:(id)arg3;
- (int)ibPreferredRenderingAPI;
- (id)ibSceneName;
- (BOOL)ibWantsMultisampling;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 options:(id)arg2;
- (BOOL)isJitteringEnabled;
- (BOOL)isNodeInsideFrustum:(id)arg1 withPointOfView:(id)arg2;
- (BOOL)isOpaque;
- (BOOL)isPlaying;
- (void)keyDown:(id)arg1;
- (void)keyUp:(id)arg1;
- (void)lock;
- (BOOL)lockFocusIfCanDraw;
- (BOOL)loops;
- (void)magnifyWithEvent:(id)arg1;
- (id)makeBackingLayer;
- (void)mouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseUp:(id)arg1;
- (id)navigationCameraController;
- (id)nodesInsideFrustumWithPointOfView:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)openGLContext;
- (id)overlaySKScene;
- (void)pause:(id)arg1;
- (id)pixelFormat;
- (void)play:(id)arg1;
- (id)pointOfCulling;
- (id)pointOfView;
- (long long)preferredFramesPerSecond;
- (BOOL)prepareObject:(id)arg1 shouldAbortBlock:(id)arg2;
- (void)prepareObjects:(id)arg1 withCompletionHandler:(id)arg2;
- (void)presentScene:(id)arg1 withTransition:(id)arg2 incomingPointOfView:(id)arg3 completionHandler:(id)arg4;
- (struct SCNVector3 { double x1; double x2; double x3; })projectPoint:(struct SCNVector3 { double x1; double x2; double x3; })arg1;
- (id)renderer;
- (unsigned long long)renderingAPI;
- (BOOL)rendersContinuously;
- (void)reshape;
- (BOOL)resignFirstResponder;
- (void)rightMouseDown:(id)arg1;
- (void)rightMouseDragged:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)rotateOf:(double)arg1;
- (void)rotateWithEvent:(id)arg1;
- (id)scene;
- (double)sceneTime;
- (id)scn_backingLayer;
- (BOOL)scn_inLiveResize;
- (void)scn_setBackingLayer:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)setAllowsBrowsing:(BOOL)arg1;
- (void)setAllowsCameraControl:(BOOL)arg1;
- (void)setAntialiasingMode:(unsigned long long)arg1;
- (void)setAsynchronousLoading:(BOOL)arg1;
- (void)setAudioListener:(id)arg1;
- (void)setAutoAdjustCamera:(BOOL)arg1;
- (void)setAutoenablesDefaultLighting:(BOOL)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setCurrentTime:(double)arg1;
- (void)setDebugOptions:(unsigned long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEventHandler:(id)arg1;
- (void)setFrameSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setIbPreferredRenderingAPI:(int)arg1;
- (void)setIbSceneName:(id)arg1;
- (void)setIbWantsMultisampling:(BOOL)arg1;
- (void)setJitteringEnabled:(BOOL)arg1;
- (void)setLoops:(BOOL)arg1;
- (void)setNavigationCameraController:(id)arg1;
- (void)setNeedsDisplay:(BOOL)arg1;
- (void)setOpenGLContext:(id)arg1;
- (void)setOverlaySKScene:(id)arg1;
- (void)setPixelFormat:(id)arg1;
- (void)setPlaying:(BOOL)arg1;
- (void)setPointOfCulling:(id)arg1;
- (void)setPointOfView:(id)arg1;
- (void)setPointOfView:(id)arg1 animate:(BOOL)arg2;
- (void)setPreferredFramesPerSecond:(long long)arg1;
- (void)setRendersContinuously:(BOOL)arg1;
- (void)setScene:(id)arg1;
- (void)setSceneTime:(double)arg1;
- (void)setShowsStatistics:(BOOL)arg1;
- (void)setTechnique:(id)arg1;
- (void)setWantsBestResolutionOpenGLSurface:(BOOL)arg1;
- (void)setWantsLayer:(BOOL)arg1;
- (void)setZoomFactor:(double)arg1;
- (void)set_disableLinearRendering:(BOOL)arg1;
- (void)set_enablesDeferredShading:(BOOL)arg1;
- (void)set_ibPreferredRenderingAPI:(int)arg1;
- (void)set_ibSceneName:(id)arg1;
- (void)set_ibWantsMultisampling:(BOOL)arg1;
- (void)set_screenTransform:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg1;
- (void)set_showsAuthoringEnvironment:(BOOL)arg1;
- (void)set_superSamplingFactor:(double)arg1;
- (void)set_wantsSceneRendererDelegationMessages:(BOOL)arg1;
- (BOOL)showsStatistics;
- (id)snapshot;
- (unsigned long long)stencilPixelFormat;
- (void)stop:(id)arg1;
- (void)switchToCameraNamed:(id)arg1;
- (void)switchToNextCamera;
- (id)technique;
- (void)unlock;
- (struct SCNVector3 { double x1; double x2; double x3; })unprojectPoint:(struct SCNVector3 { double x1; double x2; double x3; })arg1;
- (void)update;
- (void)viewDidEndLiveResize;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewWillStartLiveResize;
- (void)windowChangedScreen:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (double)zoomFactor;

// Image: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Debugger/libViewDebuggerSupport.dylib

// SCNView (DebugHierarchyAdditions)

- (id)debugHierarchyAdditionalGroupingIDs;
- (id)debugHierarchyObjectsInGroupWithID:(id)arg1 outOptions:(id*)arg2;
- (id)debugHierarchyPropertyDescriptions;

// SCNView (DebugHierarchyHelpers)

- (id)__dbg_pointOfViewIndexPath;

@end
