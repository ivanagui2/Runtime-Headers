/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SceneKit.framework/Versions/A/SceneKit
 */

@interface SCNPhysicsConeTwistJoint : SCNPhysicsBehavior {
    struct btConeTwistConstraint { int (**x1)(); int x2; int x3; union { int x_4_1_1; void *x_4_1_2; } x4; float x5; bool x6; bool x7; int x8; struct btRigidBody {} *x9; struct btRigidBody {} *x10; float x11; float x12; struct btJointFeedback {} *x13; struct btJacobianEntry { struct btVector3 { union { float x_1_3_1[4]; } x_1_2_1; } x_14_1_1; struct btVector3 { union { float x_1_3_1[4]; } x_2_2_1; } x_14_1_2; struct btVector3 { union { float x_1_3_1[4]; } x_3_2_1; } x_14_1_3; struct btVector3 { union { float x_1_3_1[4]; } x_4_2_1; } x_14_1_4; struct btVector3 { union { float x_1_3_1[4]; } x_5_2_1; } x_14_1_5; float x_14_1_6; } x14[3]; struct btTransform { struct btMatrix3x3 { struct btVector3 { union { float x_1_4_1[4]; } x_1_3_1; } x_1_2_1[3]; } x_15_1_1; struct btVector3 { union { float x_1_3_1[4]; } x_2_2_1; } x_15_1_2; } x15; struct btTransform { struct btMatrix3x3 { struct btVector3 { union { float x_1_4_1[4]; } x_1_3_1; } x_1_2_1[3]; } x_16_1_1; struct btVector3 { union { float x_1_3_1[4]; } x_2_2_1; } x_16_1_2; } x16; float x17; float x18; } * _constraint;
    struct { 
        SCNPhysicsBody *bodyA; 
        struct CATransform3D { 
            double m11; 
            double m12; 
            double m13; 
            double m14; 
            double m21; 
            double m22; 
            double m23; 
            double m24; 
            double m31; 
            double m32; 
            double m33; 
            double m34; 
            double m41; 
            double m42; 
            double m43; 
            double m44; 
        } frameA; 
        SCNPhysicsBody *bodyB; 
        struct CATransform3D { 
            double m11; 
            double m12; 
            double m13; 
            double m14; 
            double m21; 
            double m22; 
            double m23; 
            double m24; 
            double m31; 
            double m32; 
            double m33; 
            double m34; 
            double m41; 
            double m42; 
            double m43; 
            double m44; 
        } frameB; 
        double maximumAngularLimit1; 
        double maximumAngularLimit2; 
        double maximumTwistAngle; 
    }  _definition;
    SCNPhysicsWorld * _world;
}

@property (nonatomic, readonly) SCNPhysicsBody *bodyA;
@property (nonatomic, readonly) SCNPhysicsBody *bodyB;
@property (nonatomic, readwrite) struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; } frameA;
@property (nonatomic, readwrite) struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; } frameB;
@property (nonatomic, readwrite) double maximumAngularLimit1;
@property (nonatomic, readwrite) double maximumAngularLimit2;
@property (nonatomic, readwrite) double maximumTwistAngle;

+ (id)jointWithBody:(id)arg1 frame:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg2;
+ (id)jointWithBodyA:(id)arg1 frameA:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg2 bodyB:(id)arg3 frameB:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg4;

- (void)_addToPhysicsWorld:(id)arg1;
- (void)_willRemoveFromPhysicsWorld:(id)arg1;
- (id)bodyA;
- (id)bodyB;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })frameA;
- (struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })frameB;
- (id)initWithBody:(id)arg1 frame:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg2;
- (id)initWithBodyA:(id)arg1 frameA:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg2 bodyB:(id)arg3 frameB:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg4;
- (id)initWithCoder:(id)arg1;
- (double)maximumAngularLimit1;
- (double)maximumAngularLimit2;
- (double)maximumTwistAngle;
- (void)setFrameA:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg1;
- (void)setFrameB:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg1;
- (void)setMaximumAngularLimit1:(double)arg1;
- (void)setMaximumAngularLimit2:(double)arg1;
- (void)setMaximumTwistAngle:(double)arg1;

@end
