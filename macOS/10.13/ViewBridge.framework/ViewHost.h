/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge
 */

@interface ViewHost : HostOrService <HostCallsAuxiliary> {
    unsigned int  _hostAppIsActive;
    unsigned int  _keyTestWindowIsKey;
    unsigned int  _mayAttemptCommandEquivalentAtWill;
    unsigned int  _mostRecentlyResignedFirstResponderInFavorOfAccessoryView;
    unsigned int  _remoteViewIsFirstResponder;
    unsigned int  _seed;
    unsigned int  _wantsAggressiveKeyboardFocusTheftCancellation;
}

@property (atomic, readonly) BOOL hostAppIsActive;
@property (atomic, readonly) BOOL keyTestWindowIsKey;
@property (atomic, readonly) BOOL mayAttemptCommandEquivalentAtWill;
@property (atomic, readonly) BOOL mostRecentlyResignedFirstResponderInFavorOfAccessoryView;
@property (atomic, readonly) BOOL remoteViewIsFirstResponder;
@property (atomic, readonly) unsigned int seed;
@property (atomic, readonly) BOOL wantsAggressiveKeyboardFocusTheftCancellation;

- (void)bumpSeed;
- (void)forwardEventToAccessoryView:(struct __CGEvent { }*)arg1 reply:(id)arg2;
- (BOOL)hostAppIsActive;
- (void)invalidate:(struct NSMutableDictionary { Class x1; }*)arg1;
- (void)joinPair:(id)arg1 reply:(id)arg2;
- (BOOL)keyTestWindowIsKey;
- (void)killViewService:(id)arg1;
- (BOOL)mayAttemptCommandEquivalentAtWill;
- (BOOL)mostRecentlyResignedFirstResponderInFavorOfAccessoryView;
- (void)potentialCommandEquivalentHitRemoteView:(id)arg1 reply:(id)arg2;
- (void)potentialCommandEquivalentHitServiceApp:(struct __CGEvent { }*)arg1 from:(id)arg2 reply:(id)arg3;
- (void)remoteViewBecameAssociatedWithWindow:(unsigned int)arg1;
- (void)remoteViewBecameFirstResponderForWindowWithKey:(BOOL)arg1 inActiveApp:(BOOL)arg2 wantsAggressiveKeyboardFocusTheftCancellation:(BOOL)arg3;
- (BOOL)remoteViewIsFirstResponder;
- (void)remoteViewKeyTestWindowBecameKeyWhileFirstResponder:(BOOL)arg1 inActiveApp:(BOOL)arg2 wantsAggressiveKeyboardFocusTheftCancellation:(BOOL)arg3;
- (void)remoteViewKeyTestWindowResignedKey;
- (void)remoteViewResignedFirstResponderInService:(id)arg1 forWindowWithKey:(BOOL)arg2 inActiveApp:(BOOL)arg3 wantsAggressiveKeyboardFocusTheftCancellation:(BOOL)arg4 inFavorOfAccessoryView:(BOOL)arg5;
- (unsigned int)seed;
- (struct __LSASN { }*)ultimateHostAppSerialNumber;
- (BOOL)wantsAggressiveKeyboardFocusTheftCancellation;

@end
