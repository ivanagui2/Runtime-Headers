/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge
 */

@interface NSRemoteView : NSView <AuxiliaryCallsHost, HasAuxiliaryConnection, NSVBDeallocOnAppKitThread, NSVBXPCConnectionClient, NSXPCListenerDelegate, _NSAlertSensitiveView> {
    NSRemoteViewMarshal * _rvm;
}

@property (atomic, readonly) NSString *_debuggingHint;
@property (atomic, readwrite, retain) NSView *accessoryView;
@property (nonatomic, readwrite, retain) NSAccessibilityRemoteUIElement *accessoryViewAccessibilityParent;
@property (nonatomic, readonly) NSXPCInterface *auxiliaryInterfaceIncoming;
@property (nonatomic, readonly) NSXPCInterface *auxiliaryInterfaceOutgoing;
@property (nonatomic, readwrite) NSXPCConnection *auxiliaryServiceConnection;
@property (atomic, readonly) id auxiliarySyncObject;
@property (atomic, readonly) NSViewBridge *bridge;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readwrite) NSObject<NSRemoteViewDelegate> *delegate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) BOOL hasBridge;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readonly) BOOL invalid;
@property (atomic, readonly) BOOL isValid;
@property (nonatomic, readwrite, copy) NSString *serviceName;
@property (nonatomic, readwrite, copy) NSString *serviceSubclassName;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite) BOOL trustsServiceKeyEvents;
@property (atomic, readonly) BOOL valid;
@property (atomic, readonly) BOOL wantsAlertStylePadding;

+ (id)_findFirstKeyViewInDirection:(unsigned long long)arg1 forKeyLoopGroupingView:(id)arg2;
+ (id)_remoteViewForIdentifier:(id)arg1;
+ (BOOL)allowSetObjectForKey:(id)arg1 bridge:(id)arg2 bridgePhase:(unsigned char)arg3 withReply:(id)arg4;
+ (void)deferBlockOntoMainThread:(id)arg1;
+ (void)initAll;
+ (BOOL)isFakeEvent:(id)arg1;
+ (struct __CFString { }*)privateRunLoopMode;

- (id)_accessibilityChildren:(id)arg1;
- (id)_accessibilityParentToken;
- (id)_accessibilityParentToken:(id)arg1;
- (id)_addChildWindow:(id)arg1 privateEventLoopKind:(int)arg2 windowBase:(unsigned char)arg3 ordered:(long long)arg4 content:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg5 remoteView:(id*)arg6;
- (void)_addPotentialKeyFocusThief:(int)arg1;
- (id)_adjustLoc:(struct CGPoint { double x1; double x2; }*)arg1 forWindow:(id)arg2 withAncestor:(id)arg3;
- (void)_adjustToServiceWindowBecomingKey;
- (void)_adjustToServiceWindowContentMinMaxSizes;
- (void)_adjustToServiceWindowKeyness;
- (void)_adjustToServiceWindowResigningKey;
- (BOOL)_adjustToServiceWindowStyleMask;
- (void)_advanceToConfigPhase:(id)arg1;
- (void)_advanceToConfigPhaseLegacy;
- (void)_advanceToRunPhase:(id)arg1;
- (BOOL)_advanceToRunPhaseLegacy;
- (void)_allowAuxiliaryAppNap:(id)arg1;
- (void)_associate;
- (void)_associateAccessoryWindow:(id)arg1 newContainingWindowID:(unsigned int)arg2;
- (id)_associateMouseAndMouseCursorPosition:(BOOL)arg1;
- (BOOL)_associateWithHostWindow:(unsigned int)arg1 withKeyness:(BOOL)arg2 isFirstResponder:(BOOL)arg3 atLevel:(long long)arg4 isFunctionRow:(BOOL)arg5 withBlock:(id)arg6;
- (void)_auxiliaryProxyWithSemaphore:(id)arg1 attemptingTo:(const char *)arg2 withCompletion:(id)arg3;
- (void)_awaitInvalidation;
- (double)_backingScaleFactorOrZero;
- (BOOL)_becameInvalidWhileFinishingAdvanceToConfigPhase:(const char *)arg1;
- (void)_beginDeferredSheets;
- (struct _NSModalSession { }*)_beginModalSession:(id)arg1 title:(id)arg2 size:(struct CGSize { double x1; double x2; })arg3;
- (void)_completeAdvanceToRunPhase:(id)arg1 withError:(id)arg2;
- (void)_configureAndRetainServiceMarshalConnection:(id)arg1;
- (void)_configureLayersWithContextID:(unsigned int)arg1 andOffset:(struct CGPoint { double x1; double x2; })arg2;
- (void)_containingWindowOcclusionStateMayHaveChanged;
- (void)_copyViewServiceMarshalReply:(const /* Warning: unhandled struct encoding: '{?=I{CGSize=dd}{CGSize=dd}QQ{CGSize=dd}{CGSize=dd}I{CGPoint=dd}@}' */ struct { unsigned int x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; unsigned long long x4; unsigned long long x5; struct CGSize { double x_6_1_1; double x_6_1_2; } x6; struct CGSize { double x_7_1_1; double x_7_1_2; } x7; unsigned int x8; struct CGPoint { double x_9_1_1; double x_9_1_2; } x9; id x10; }*)arg1 withClientExportedObjectWithClientInterface:(id)arg2 withClientExportedObjectWithAnimationSyncInterface:(id)arg3;
- (void)_deallocOnAppKitThread;
- (id)_debuggingHint;
- (void)_didSetOriginOrSize:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_disassociate;
- (void)_disassociateAccessoryWindow;
- (void)_disengageFromAllWindows;
- (void)_dragWindowRelativeToMouseDown:(struct CGPoint { double x1; double x2; })arg1;
- (id)_effectiveAppearanceName;
- (void)_encounteredError:(id)arg1;
- (void)_endAllModalSessions:(BOOL)arg1;
- (void)_endWaitForPrivateEventLoopInService;
- (void)_ensureBridgeObserversForWindow;
- (void)_ensureBridgeObserversForWindowBase:(unsigned char)arg1;
- (void)_ensureClientExportedInterface;
- (void)_ensureClientExportedObject;
- (BOOL)_evaluateKeyness;
- (BOOL)_evaluateKeyness:(BOOL)arg1 forWindow:(id)arg2;
- (BOOL)_evaluateKeynessForWindow:(id)arg1;
- (double)_fauxSynchronousPatience;
- (BOOL)_finishAdvanceToConfigPhaseWithContextID:(unsigned int)arg1 andServiceViewSize:(struct CGSize { double x1; double x2; })arg2 andOffset:(struct CGPoint { double x1; double x2; })arg3;
- (id)_fontSmoothingColorForWindow:(id)arg1;
- (void)_forwardActionUpResponderChain:(id)arg1;
- (void)_hardenAgainstSubviewMutation;
- (BOOL)_hasValidKeyViewInDirection:(unsigned long long)arg1;
- (void)_hostWindowLevelDidChange;
- (BOOL)_inhibitFirstResponder;
- (void)_invalidate:(BOOL)arg1;
- (void)_invalidateChildWindows;
- (void)_invalidateWindowBridgeKeys;
- (BOOL)_isContentView;
- (BOOL)_isOrBecomingContentView;
- (void)_lastCallImpliedByAdvancingToPhase:(unsigned char)arg1;
- (void)_maintainApplicationNotifications:(BOOL)arg1;
- (int)_maintainFirstResponder:(int)arg1 inDirection:(unsigned long long)arg2;
- (void)_maintainSnapshotOfAccessoryWindowInService:(BOOL)arg1;
- (void)_maintainWindowNotifications:(BOOL)arg1;
- (unsigned long long)_oldFirstResponderBeforeBecomingTextSelectionDirection;
- (BOOL)_oldFirstResponderWasAccessoryViewOrWindow;
- (id)_oldestAncestorWindow:(id)arg1 adjustingLoc:(struct CGPoint { double x1; double x2; }*)arg2;
- (void)_positionAccessoryWindowAgainst:(id)arg1;
- (void)_postSuperInit;
- (void)_preSuperInit;
- (void)_preventAuxiliaryAppNap:(id)arg1;
- (void)_remoteViewBecameFirstResponder;
- (void)_remoteViewBecameFirstResponder:(unsigned long long)arg1 withIPC:(id)arg2;
- (void)_remoteViewMayHaveMoved;
- (double)_reportScaleFactor;
- (void)_sendWindowFakeClick:(const char *)arg1;
- (void)_serviceDidFinishDisplayingAfterDidChangeAppearance;
- (BOOL)_serviceHasTransparentChildWindowEntitlement;
- (id)_serviceProcessIdentifier;
- (void)_serviceRequestsResize:(struct CGSize { double x1; double x2; })arg1 animate:(BOOL)arg2 completion:(id)arg3;
- (void)_serviceRequestsResize:(struct CGSize { double x1; double x2; })arg1 animate:(BOOL)arg2 transaction:(id)arg3 completion:(id)arg4;
- (void)_serviceRequestsResize:(struct CGSize { double x1; double x2; })arg1 completion:(id)arg2;
- (BOOL)_serviceSignedByApple;
- (BOOL)_serviceValidatesAction:(id)arg1 menuItem:(struct { BOOL x1; BOOL x2; }*)arg2 userInterfaceItem:(struct { BOOL x1; BOOL x2; }*)arg3 targetIdentifier:(id*)arg4 sender:(id)arg5;
- (void)_serviceViewReceivedLeftMouseDown;
- (void)_serviceWindowKeynessChangeInProgress:(id)arg1;
- (void)_serviceWindowReceivedScrollWheel:(id)arg1 eventOwner:(unsigned int)arg2;
- (void)_serviceWindowRequestsResizeInProgress:(struct CGSize { double x1; double x2; })arg1;
- (void)_serviceWindowWouldActivate;
- (void)_setAccessoryViewFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setDelegate:(struct NSObject { Class x1; }*)arg1;
- (void)_setServiceContextID:(unsigned int)arg1;
- (void)_setServiceWindowEventMask:(unsigned long long)arg1;
- (void)_setServiceWindowKeyness:(BOOL)arg1;
- (void)_setServiceWindowStyleMask:(unsigned long long)arg1;
- (void)_shakeContainingWindow;
- (BOOL)_shouldAdjustToServiceStyleMask;
- (BOOL)_shouldBecomeFirstResponder;
- (BOOL)_shouldImposeVibrancySupport;
- (BOOL)_shouldNotifyServiceOfChangeToHostOriginOrSize;
- (BOOL)_shouldUpdateWindowEdgeResizingRegion;
- (struct CGImage { }*)_snapshot:(double*)arg1;
- (void)_snapshotWithScale:(id)arg1;
- (void)_stopMonitoringEvents;
- (void)_superDealloc;
- (void)_synchronizeImplicitAnimationsInActions:(id)arg1;
- (void)_terminateViewService;
- (void)_updateAccessibilityConnection:(id)arg1 force:(BOOL)arg2 legend:(const char *)arg3;
- (void)_updateAccessibilityConnection:(id)arg1 legend:(const char *)arg2 withReply:(id)arg3;
- (void)_updateFontSmoothingBackgroundColorBasedOnWindow:(id)arg1;
- (BOOL)_updateWindowEdgeResizingRegion;
- (BOOL)_updateWindowEdgeResizingRegion:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_viewDidChangeAppearance:(id)arg1;
- (struct NSObject { Class x1; }*)_viewServiceMarshalProxy:(const char *)arg1;
- (struct NSObject { Class x1; }*)_viewServiceMarshalProxy:(const char *)arg1 withDetailedErrorHandler:(id)arg2;
- (struct NSObject { Class x1; }*)_viewServiceMarshalProxy:(const char *)arg1 withErrorHandler:(id)arg2;
- (void)_waitForPrivateEventLoopInService;
- (void)_waitOnSemaphore:(id)arg1;
- (BOOL)_wantsKeyDownForEvent:(id)arg1;
- (void)_whileSettingAccessoryViewFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)_windowSupportsVibrancy:(id)arg1;
- (id)_withoutCatchSupplementalTargetForAction:(SEL)arg1 sender:(id)arg2;
- (BOOL)acceptsFirstResponder;
- (id)accessibilityChildren;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityChildrenInNavigationOrder;
- (id)accessibilityChildrenInNavigationOrderAttribute;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityParentAttribute;
- (id)accessoryView;
- (id)accessoryViewAccessibilityParent;
- (void)addSubview:(id)arg1;
- (void)addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3;
- (BOOL)advanceToConfigPhaseIfNeeded:(id)arg1;
- (BOOL)advanceToRunPhaseIfNeeded;
- (BOOL)advanceToRunPhaseIfNeeded:(id)arg1;
- (id)auxiliaryInterfaceIncoming;
- (id)auxiliaryInterfaceOutgoing;
- (id)auxiliaryServiceConnection;
- (id)auxiliaryServiceListenerEndpoint;
- (id)auxiliarySyncObject;
- (BOOL)becomeFirstResponder;
- (BOOL)beginAppModalSessionForWindow;
- (void)beginDeferredSheet:(id)arg1;
- (BOOL)beginSheet:(id)arg1 modalForWindow:(id)arg2 size:(struct CGSize { double x1; double x2; })arg3 isCritical:(BOOL)arg4;
- (void)beginSheet:(id)arg1 modalForWindow:(id)arg2 size:(struct CGSize { double x1; double x2; })arg3 isCritical:(BOOL)arg4 withReply:(id)arg5;
- (id)bridge;
- (unsigned char)bridgePhase;
- (void)cacheDisplayInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 toBitmapImageRep:(id)arg2;
- (void)cancel:(id)arg1;
- (void)connection:(id)arg1 handleInvocation:(id)arg2 isReply:(BOOL)arg3;
- (void)containingWindowDidChangeOcclusionState:(id)arg1;
- (void)containingWindowDidMove:(id)arg1;
- (void)containingWindowDidOrderOffScreen:(id)arg1;
- (void)containingWindowDidOrderOnScreen:(id)arg1;
- (void)containingWindowWillOrderOffScreen:(id)arg1;
- (void)containingWindowWillOrderOnScreen:(id)arg1;
- (void)cursorUpdate:(id)arg1;
- (void)dealloc;
- (struct NSObject { Class x1; }*)delegate;
- (void)discloseAccessoryView:(BOOL)arg1 andAnimationState:(int)arg2 andDuration:(double)arg3;
- (id)elementsForTokens:(id)arg1;
- (void)endModalSession:(id)arg1;
- (void)ensureAccessoryWindow:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)forgetAccessoryView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameInScreenCoords;
- (BOOL)hasBridge;
- (void)hostWindowDidBecomeKey:(id)arg1;
- (void)hostWindowDidResignKey:(id)arg1;
- (void)hostWindowLevelDidChange:(id)arg1;
- (BOOL)ignoreFontSmoothingBackgroundColor;
- (void)informAuxServiceOfSelf;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (BOOL)invalid;
- (void)invalidate;
- (void)invalidate:(BOOL)arg1;
- (void)invalidateTrackingArea;
- (BOOL)isValid;
- (void)keyDown:(id)arg1;
- (void)keyEventHitServiceAccessoryView:(id)arg1 eventOwner:(unsigned int)arg2 reply:(id)arg3;
- (id)keyTestWindow;
- (void)maintainAppWideNotifications:(BOOL)arg1;
- (BOOL)maintainAssociation;
- (BOOL)maintainAssociationForcingDisassociation:(BOOL)arg1;
- (void)maintainContainingWindowNotifications:(BOOL)arg1;
- (void)maintainFirstResponderInProgress:(id)arg1;
- (void)maintainKeyTestWindowNotifications:(BOOL)arg1;
- (void)maintainProcessNotificationEventMonitor:(BOOL)arg1;
- (void)maintainWindowEventMonitor:(unsigned int)arg1;
- (void)mouseMoved:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)orderWindow:(unsigned int)arg1 mode:(long long)arg2 relativeTo:(unsigned int)arg3;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)potentialCommandEquivalentHitServiceApp:(id)arg1 eventOwner:(unsigned int)arg2 reply:(id)arg3;
- (void)remoteViewControllerProxy:(id)arg1;
- (id)remoteViewIdentifier;
- (id)rendezvousPanel:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 identifier:(id)arg2 childOrderingMode:(long long)arg3;
- (id)rendezvousWindow:(Class)arg1 privateEventLoopKind:(int)arg2 styleMask:(unsigned long long)arg3 backing:(unsigned long long)arg4 content:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg5 identifier:(id)arg6;
- (Class)rendezvousWindowClass:(Class)arg1;
- (void)renewGState;
- (void)replaceSubview:(id)arg1 with:(id)arg2;
- (BOOL)resignFirstResponder;
- (void)retreatToConfigPhase;
- (void)sendFontSmoothingBackgroundColorToService:(id)arg1;
- (void)serviceAccessoryViewBecameFirstResponder:(unsigned long long)arg1;
- (void)serviceAccessoryViewResignedFirstResponder;
- (id)serviceListenerEndpoint;
- (id)serviceMarshalConnection;
- (id)serviceMarshalForRemoteViewWindow:(id)arg1;
- (id)serviceName;
- (id)serviceSubclassIdentifier;
- (id)serviceSubclassName;
- (id)serviceViewControllerProxy;
- (id)serviceViewControllerProxy:(const char *)arg1;
- (id)serviceViewControllerProxyWithErrorHandler:(id)arg1;
- (struct CGSize { double x1; double x2; })serviceViewSize;
- (void)setAccessoryView:(id)arg1;
- (void)setAccessoryViewAccessibilityParent:(id)arg1;
- (void)setAccessoryViewCanBecomeKeyView:(id)arg1;
- (void)setAuxiliaryServiceConnection:(id)arg1;
- (void)setDelegate:(struct NSObject { Class x1; }*)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setFrameOrigin:(struct CGPoint { double x1; double x2; })arg1;
- (void)setFrameSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setIgnoreFontSmoothingBackgroundColor:(BOOL)arg1;
- (void)setRemoteAccessibilityChildrenTokens:(id)arg1;
- (void)setRendezvousWindowIdentifier:(id)arg1;
- (void)setServiceAccessoryViewSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setServiceListenerEndpoint:(id)arg1;
- (void)setServiceName:(id)arg1;
- (void)setServiceObject:(id)arg1 forKey:(id)arg2;
- (void)setServiceSubclassIdentifier:(id)arg1;
- (void)setServiceSubclassName:(id)arg1;
- (void)setShouldMaskToBounds:(BOOL)arg1;
- (void)setSubviews:(id)arg1;
- (void)setSynchronizesImplicitAnimations:(BOOL)arg1;
- (void)setTrustsServiceKeyEvents:(BOOL)arg1;
- (void)setWantsAggressiveKeyboardFocusTheftCancellation:(BOOL)arg1;
- (void)setWindow:(id)arg1 styleMask:(unsigned long long)arg2;
- (void)sheetCompleted:(id)arg1;
- (BOOL)shouldInformServiceOfKeynessChange:(id)arg1;
- (BOOL)shouldMaskToBounds;
- (struct CGImage { }*)snapshot;
- (void)snapshot:(id)arg1;
- (id)stolenKeyFocusEventFilter:(id)arg1;
- (id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2;
- (void)synchronizeAnimationsInActions:(id)arg1;
- (BOOL)synchronizesImplicitAnimations;
- (BOOL)trustsServiceKeyEvents;
- (void)updateAccessibilityChildren:(id)arg1;
- (void)updateAccessoryViewAccessibility;
- (void)updateAccessoryViewAccessibilityParent:(id)arg1;
- (void)updateContentMinSize:(struct CGSize { double x1; double x2; })arg1 maxSize:(struct CGSize { double x1; double x2; })arg2;
- (BOOL)valid;
- (void)viewDidChangeBackingProperties;
- (void)viewDidEndLiveResize;
- (void)viewDidHide;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (void)viewDidUnhide;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewWillStartLiveResize;
- (BOOL)wantsAggressiveKeyboardFocusTheftCancellation;
- (BOOL)wantsAlertStylePadding;
- (BOOL)wouldAssociate;
- (id)wrapProxyForAnimationFencing:(id)arg1;
- (void)wrappedAddSubview:(id)arg1;

// NSRemoteView (NSTouchBar)

+ (BOOL)automaticallyNotifiesObserversOfTouchBar;

- (id)NS_touchBars;
- (void)setTouchBar:(id)arg1;
- (id)touchBar;

// NSRemoteView (NSTouchBarInternal)

- (void)_assertObjectsOf:(id)arg1 areKindOfClass:(Class)arg2;
- (void)_configureTouchBar:(id)arg1 perDescription:(id)arg2;
- (BOOL)_decodeBoolean:(id)arg1 inDescription:(id)arg2;
- (void)_hideTouchBarPopover:(id)arg1;
- (void)_ifNecessaryReplaceTouchBar:(id)arg1 escapeKeyReplacementItem:(id)arg2;
- (void)_ifNecessaryReplaceTouchBars;
- (id)_mapPerProcessIdentifiers:(id)arg1 of:(id)arg2;
- (void)_serviceHasTouchBars:(id)arg1;
- (void)_setTouchBar:(id)arg1 description:(id)arg2;
- (void)_setTouchBar:(id)arg1 escapeKeyReplacementItem:(id)arg2;
- (void)_setTouchBar:(id)arg1 principalItemIdentifier:(id)arg2;
- (void)_setTouchBarItem:(id)arg1 itemPosition:(id)arg2;
- (void)_setTouchBars:(id)arg1;
- (BOOL)_shouldSpelunkTouchBarsProactively;
- (void)_showTouchBarPopover:(id)arg1 fromItem:(id)arg2 withOverlayIdentifier:(id)arg3 withCloseButton:(BOOL)arg4 withControlStrip:(BOOL)arg5 withOptions:(id)arg6;
- (void)_startSpelunkingTouchBars;
- (id)_touchBars:(BOOL)arg1;
- (id)_touchBarsDescription;

@end
