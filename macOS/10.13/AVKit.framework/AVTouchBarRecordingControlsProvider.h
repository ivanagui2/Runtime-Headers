/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AVKit.framework/Versions/A/AVKit
 */

@interface AVTouchBarRecordingControlsProvider : NSResponder <AVTouchBarAudioCaptureDeviceSelectionButtonViewControllerDelegate, AVTouchBarCaptureInputSourceSelectionViewControllerDelegate, NSTouchBarDelegate, NSTouchBarProvider> {
    NSPopoverTouchBarItem * _audioCaptureDeviceSelectionButtonTouchBarItem;
    NSCustomTouchBarItem * _audioCaptureDeviceSelectionTouchBarItem;
    <AVTouchBarRecordingControlsControllingInternal> * _captureController;
    NSCustomTouchBarItem * _captureInputSourceSelectionTouchBarItem;
    long long  _controlsType;
    NSGroupTouchBarItem * _groupTouchBarItem;
    BOOL  _optionKeyPressed;
    NSSpaceTouchBarItem * _popoverSpaceTouchBarItem;
    <AVTouchBarRecordingControlsControlling> * _recordingControlsController;
    NSCustomTouchBarItem * _recordingControlsTouchBarItem;
    NSTouchBar * _touchBar;
    AVTouchBarAudioCaptureDeviceSelectionButtonViewController * _touchBarAudioCaptureDeviceSelectionButtonViewController;
    AVTouchBarCaptureInputSourceSelectionViewController * _touchBarAudioCaptureDeviceSelectionViewController;
    AVTouchBarCaptureInputSourceSelectionViewController * _touchBarCaptureInputSourceSelectionViewController;
    AVTouchBarRecordingControlsViewController * _touchBarRecordingControlsViewController;
    NSSpaceTouchBarItem * _zeroMinimumWidthSpaceTouchBarItem;
}

@property (atomic, readwrite, retain) <AVTouchBarRecordingControlsControllingInternal> *captureController;
@property (atomic, readwrite) long long controlsType;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (getter=isOptionKeyPressed, atomic, readwrite) BOOL optionKeyPressed;
@property (atomic, readwrite, retain) <AVTouchBarRecordingControlsControlling> *recordingControlsController;
@property (atomic, readonly) Class superclass;
@property (atomic, readonly) NSTouchBar *touchBar;

- (void).cxx_destruct;
- (BOOL)_isTouchBarAudioCaptureDeviceSelectionButtonViewControllerLoaded;
- (BOOL)_isTouchBarAudioCaptureDeviceSelectionViewControllerLoaded;
- (BOOL)_isTouchBarCaptureInputSourceSelectionViewControllerLoaded;
- (BOOL)_isTouchBarRecordingControlsViewControllerLoaded;
- (id)_touchBarAudioCaptureDeviceSelectionButtonViewController;
- (id)_touchBarAudioCaptureDeviceSelectionViewController;
- (id)_touchBarCaptureInputSourceSelectionViewController;
- (id)_touchBarRecordingControlsViewController;
- (void)_updateTouchBarCaptureInputSourceSelectionViewControllerControlsType;
- (void)_updateTouchBarItemIdentifiersForTouchBar:(id)arg1;
- (id)captureController;
- (long long)controlsType;
- (void)dealloc;
- (id)init;
- (BOOL)isOptionKeyPressed;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)recordingControlsController;
- (void)setCaptureController:(id)arg1;
- (void)setControlsType:(long long)arg1;
- (void)setOptionKeyPressed:(BOOL)arg1;
- (void)setRecordingControlsController:(id)arg1;
- (id)touchBar;
- (id)touchBar:(id)arg1 makeItemForIdentifier:(id)arg2;
- (void)touchBarAudioCaptureDeviceSelectionButtonViewControllerPresentDeviceSelectionPopover:(id)arg1;
- (void)touchBarCaptureInputSourceSelectionViewController:(id)arg1 didSelectTouchBarCaptureInputSourceItem:(id)arg2;

@end
