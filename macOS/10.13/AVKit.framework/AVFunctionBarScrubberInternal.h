/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AVKit.framework/Versions/A/AVKit
 */

@interface AVFunctionBarScrubberInternal : NSView <NSAccessibilitySlider> {
    NSColor * _audioWaveformColor;
    double  _currentValue;
    NSDateComponentsFormatter * _dateComponentsFormatter;
    <AVFunctionBarScrubberDelegateInternal> * _delegate;
    BOOL  _didStartScrubbingForTrackedTouch;
    NSView * _elapsedTimeContainerView;
    NSLayoutConstraint * _elapsedTimeLayoutConstraint;
    NSTextField * _elapsedTimeShadowTextField;
    NSTextField * _elapsedTimeTextField;
    id  _expandableInnerKnobFrameObserver;
    <NSObject><NSCopying> * _identityOfTrackedTouch;
    BOOL  _keepsExpandedKnobWithinBounds;
    AVFunctionBarScrubberKnobView * _knobView;
    NSLayoutConstraint * _knobViewPositionLayoutConstraint;
    double  _maxValue;
    double  _minValue;
    BOOL  _needsLayoutSubviews;
    BOOL  _shouldSkipForwardOrBackwardWhenTapped;
    BOOL  _showsElapsedTimeRightOfTheKnob;
    NSArray * _thumbnails;
    double  _touchOffset;
    struct CGPoint { 
        double x; 
        double y; 
    }  _touchStartLocation;
    AVFunctionBarTrackView * _trackView;
}

@property (nonatomic, readwrite, retain) NSColor *audioWaveformColor;
@property (nonatomic, readwrite) double currentValue;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (nonatomic, readwrite) <AVFunctionBarScrubberDelegateInternal> *delegate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (nonatomic, readwrite) BOOL keepsExpandedKnobWithinBounds;
@property (nonatomic, readwrite) double maxValue;
@property (nonatomic, readwrite) double minValue;
@property (nonatomic, readwrite, retain) AVPlayerLayer *scrubPlayerLayer;
@property (nonatomic, readwrite) BOOL shouldSkipForwardOrBackwardWhenTapped;
@property (nonatomic, readwrite) BOOL showsElapsedTime;
@property (atomic, readonly) Class superclass;
@property (nonatomic, readwrite, retain) NSArray *thumbnails;
@property (nonatomic, readwrite, retain) AVFunctionBarTrackView *trackView;

+ (void)initialize;

- (void).cxx_destruct;
- (BOOL)_knobShouldShowThumbnail;
- (double)_normalizedCurrentValue;
- (double)_normalizedValueForTouch:(id)arg1;
- (void)_stopTracking;
- (void)_touchesEndedOrCancelledWithEvent:(id)arg1;
- (void)_updateCurrentValueForTouch:(id)arg1;
- (void)_updateElapsedTimeLayoutConstraint;
- (void)_updateKnob;
- (struct CGPoint { double x1; double x2; })accessibilityActivationPoint;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })accessibilityFrame;
- (id)accessibilityLabel;
- (id)accessibilityMaxValue;
- (id)accessibilityMinValue;
- (BOOL)accessibilityPerformDecrement;
- (BOOL)accessibilityPerformIncrement;
- (id)accessibilityValue;
- (struct NSEdgeInsets { double x1; double x2; double x3; double x4; })alignmentRectInsets;
- (id)audioWaveformColor;
- (double)currentValue;
- (void)dealloc;
- (id)delegate;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)keepsExpandedKnobWithinBounds;
- (double)maxValue;
- (double)minValue;
- (id)scrubPlayerLayer;
- (void)setAudioWaveformColor:(id)arg1;
- (void)setCurrentValue:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFrameSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setKeepsExpandedKnobWithinBounds:(BOOL)arg1;
- (void)setMaxValue:(double)arg1;
- (void)setMinValue:(double)arg1;
- (void)setScrubPlayerLayer:(id)arg1;
- (void)setShouldSkipForwardOrBackwardWhenTapped:(BOOL)arg1;
- (void)setShowsElapsedTime:(BOOL)arg1;
- (void)setThumbnails:(id)arg1;
- (void)setTrackView:(id)arg1;
- (BOOL)shouldSkipForwardOrBackwardWhenTapped;
- (BOOL)showsElapsedTime;
- (id)thumbnails;
- (void)touchesBeganWithEvent:(id)arg1;
- (void)touchesCancelledWithEvent:(id)arg1;
- (void)touchesEndedWithEvent:(id)arg1;
- (void)touchesMovedWithEvent:(id)arg1;
- (id)trackView;
- (void)updateConstraints;

@end
