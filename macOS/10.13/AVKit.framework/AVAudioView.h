/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AVKit.framework/Versions/A/AVKit
 */

@interface AVAudioView : NSView <AVTrimControlsViewControllerDelegate> {
    NSMenu * _actionPopUpButtonMenu;
    BOOL  _doNotMakePlaybackControlsViewControllerViewFirstResponder;
    AVNowPlayingInfoController * _nowPlayingInfoController;
    AVPlayerControlsViewController * _playbackControlsViewController;
    AVPlayerController * _playerController;
    BOOL  _showsDurationInsteadOfRemainingTime;
    BOOL  _showsSharingServiceButton;
    long long  _touchBarViewAppearCount;
    id  _trimCompletionBlock;
    BOOL  _viewHasBeenSetup;
    BOOL  _viewHasWindow;
}

@property (atomic, readwrite, retain) NSMenu *actionPopUpButtonMenu;
@property (atomic, readonly) BOOL canBeginTrimming;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite, retain) AVPlayerController *playerController;
@property (atomic, readwrite) BOOL showsSharingServiceButton;
@property (atomic, readonly) Class superclass;

+ (BOOL)automaticallyNotifiesObserversOfPlayerController;
+ (void)initialize;
+ (id)restorableStateKeyPaths;

- (void).cxx_destruct;
- (id)_makeSelfFirstResponderIfCurrentFirstResponderIsDescendantOfSelfAndReturnCurrentFirstResponderInThatCase;
- (void)_replaceCurrentControlsViewControllerWithViewController:(id)arg1;
- (void)_restorePreviousFirstResponderOrMakeCurrentControlsViewControllersInitialFirstResponderFirstResponderIfSelfIsCurrentFirstResponder:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)beginGestureWithEvent:(id)arg1;
- (void)cursorUpdate:(id)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (void)endGestureWithEvent:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (void)keyDown:(id)arg1;
- (void)keyUp:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)otherMouseDown:(id)arg1;
- (void)otherMouseDragged:(id)arg1;
- (void)otherMouseUp:(id)arg1;
- (id)playerController;
- (void)rightMouseDown:(id)arg1;
- (void)rightMouseDragged:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)rotateWithEvent:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)setPlayerController:(id)arg1;
- (BOOL)showsAlternateMediaTrackPreview;
- (BOOL)showsFrameSteppingButtons;
- (id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2;
- (void)swipeWithEvent:(id)arg1;
- (void)tabletPoint:(id)arg1;
- (void)tabletProximity:(id)arg1;
- (id)touchBarThumbnailPlayerLayer;
- (void)touchesBeganWithEvent:(id)arg1;
- (void)touchesCancelledWithEvent:(id)arg1;
- (void)touchesEndedWithEvent:(id)arg1;
- (void)touchesMovedWithEvent:(id)arg1;
- (id)trimControlsViewController;
- (id)trimThumbnailPlayerLayer;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;

// AVAudioView (AVAudioViewCustomization)

- (id)actionPopUpButtonMenu;
- (void)setActionPopUpButtonMenu:(id)arg1;
- (void)setShowsSharingServiceButton:(BOOL)arg1;
- (BOOL)showsSharingServiceButton;

// AVAudioView (AVAudioViewInternalUserInterface)

- (void)setShowsDurationInsteadOfRemainingTime:(BOOL)arg1;
- (BOOL)showsDurationInsteadOfRemainingTime;

// AVAudioView (AVAudioViewNowPlayingInfoInternal)

- (void)touchBarControlsViewDidDisappear;
- (void)touchBarControlsViewWillAppear;

// AVAudioView (AVAudioViewSlowMotionSupport)

- (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })slowMotionTimeRange;

// AVAudioView (AVAudioViewTrimming)

+ (id)keyPathsForValuesAffectingCanBeginTrimming;

- (void)_callTrimCompletionHandlerWithResult:(long long)arg1;
- (void)_restorePlaybackControlsAfterTrimmingWithTrimControlsViewController:(id)arg1;
- (void)beginTrimmingWithCompletionHandler:(id)arg1;
- (BOOL)canBeginTrimming;
- (void)trimControlsViewControllerDidCancel:(id)arg1;
- (void)trimControlsViewControllerDidTrim:(id)arg1;

// AVAudioView (AVAudioViewTrimming_Private)

+ (id)keyPathsForValuesAffectingIsTrimming;

- (void)beginTrimmingWithMaximumDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 completionHandler:(id)arg2;
- (BOOL)isTrimming;

@end
