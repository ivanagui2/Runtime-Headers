/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AVKit.framework/Versions/A/AVKit
 */

@interface AVTouchBarScrubber : NSView <AVTouchBarMediaSelectionButtonViewControllerDelegate, AVTouchBarMediaSelectionViewControllerDelegate, CAAnimationDelegate, NSStackViewDelegate> {
    long long  _appearAnimationCount;
    BOOL  _bindingsActive;
    NSMutableArray * _bindingsInfos;
    BOOL  _canCollapse;
    BOOL  _canShowMediaSelectionButton;
    BOOL  _collapsed;
    NSView * _collapsedRepresentation;
    BOOL  _collapsesIntoPlayButton;
    NSView * _containerView;
    NSLayoutConstraint * _containerViewFixedWidthLayoutConstraint;
    NSLayoutConstraint * _containerViewRightAnchorLayoutConstraint;
    NSStackView * _controlsContainerView;
    <AVTouchBarScrubberDelegate> * _delegate;
    struct { 
        BOOL touchBarScrubberExpandButtonTapped; 
        BOOL touchBarScrubber_presentMediaSelectionViewControllerInPopover; 
        BOOL touchBarScrubberDismissMediaSelectionPopover; 
    }  _delegateRespondsTo;
    long long  _disappearAnimationCount;
    BOOL  _drawsBackground;
    long long  _expandCollapseAnimationCount;
    NSButton * _inlinePlayButton;
    NSView * _inlinePlayButtonSeparatorView;
    NSLayoutConstraint * _inlinePlayButtonWidthConstraint;
    AVKeyValueObservationController * _keyValueObservationController;
    NSStackView * _liveStreamContainerView;
    AVTouchBarMediaSelectionButtonViewController * _liveStreamMediaSelectionButtonViewController;
    NSButton * _liveStreamPictureInPictureButton;
    AVTouchBarMediaSelectionButtonViewController * _mediaSelectionButtonViewController;
    AVTouchBarMediaSelectionViewController * _mediaSelectionViewController;
    NSButton * _pictureInPictureButton;
    <AVTouchBarPlaybackControlsControlling> * _playbackControlsController;
    <AVTouchBarMediaSelectionControlling><AVTouchBarPlaybackControlsControllingInternal><AVTouchBarScrubberControlling><AVTouchBarTrackControlling><AVTimeControlling> * _playerController;
    NSView * _scrubberContainerView;
    NSLayoutConstraint * _scrubberLeftAnchorLayoutConstraint;
    BOOL  _showsInlinePlayButton;
    AVPlayerControllerTimeResolver * _timeResolver;
    AVTouchBarScrubberController * _touchBarScrubberController;
}

@property (atomic, readwrite, retain) NSColor *audioWaveformColor;
@property (atomic, readwrite) BOOL canCollapse;
@property (atomic, readwrite) BOOL canShowMediaSelectionButton;
@property (atomic, readwrite) BOOL collapsesIntoPlayButton;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readwrite) <AVTouchBarScrubberDelegate> *delegate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite) BOOL drawsBackground;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite, retain) <AVTouchBarPlaybackControlsControlling> *playbackControlsController;
@property (atomic, readwrite, retain) <AVTouchBarMediaSelectionControlling><AVTouchBarPlaybackControlsControllingInternal><AVTouchBarScrubberControlling><AVTouchBarTrackControlling><AVTimeControlling> *playerController;
@property (atomic, readwrite) BOOL showsInlinePlayButton;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite, retain) AVPlayerControllerTimeResolver *timeResolver;

+ (void)initialize;

- (void).cxx_destruct;
- (void)_activateBindings;
- (void)_animateAppearDisappearTransition:(BOOL)arg1 animationDuration:(double)arg2;
- (void)_animateExpandCollapseTransition:(BOOL)arg1 oldBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 newBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 animationDuration:(double)arg4;
- (void)_bindObject:(id)arg1 withBinding:(id)arg2 toObject:(id)arg3 withKeyPath:(id)arg4 options:(id)arg5;
- (void)_commonInit;
- (void)_deactivateBindings;
- (id)_makeBack30SecondsButton;
- (id)_makeExpandButton;
- (id)_makeMediaSelectionButtonViewController;
- (id)_makeMediaSelectionViewController;
- (id)_makePictureInPictureButton;
- (id)_makePlayButton;
- (struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })_makeScaleTransform:(double)arg1 origin:(struct CGPoint { double x1; double x2; })arg2;
- (id)_makeSeparatorView;
- (id)_makeSkipAheadButton;
- (void)_unbindAllObjects;
- (void)_unbindObject:(id)arg1;
- (void)_updateScrubberHasRoundedCorners;
- (void)_updateScrubberHasRoundedCornersWithDetachedViews:(id)arg1;
- (void)_updateScrubberLeftAnchorLayoutConstraint;
- (void)_updateTimeResolver;
- (void)actionExpandButtonTapped:(id)arg1;
- (void)actionPictureInPictureButtonTapped:(id)arg1;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (id)audioWaveformColor;
- (BOOL)canCollapse;
- (BOOL)canShowMediaSelectionButton;
- (BOOL)collapsesIntoPlayButton;
- (void)dealloc;
- (id)delegate;
- (BOOL)drawsBackground;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)isHidden;
- (id)playbackControlsController;
- (id)playerController;
- (void)setAudioWaveformColor:(id)arg1;
- (void)setCanCollapse:(BOOL)arg1;
- (void)setCanShowMediaSelectionButton:(BOOL)arg1;
- (void)setCollapsesIntoPlayButton:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDrawsBackground:(BOOL)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setHidden:(BOOL)arg1;
- (void)setPlaybackControlsController:(id)arg1;
- (void)setPlayerController:(id)arg1;
- (void)setShowsInlinePlayButton:(BOOL)arg1;
- (void)setTimeResolver:(id)arg1;
- (BOOL)showsInlinePlayButton;
- (void)stackView:(id)arg1 didReattachViews:(id)arg2;
- (void)stackView:(id)arg1 willDetachViews:(id)arg2;
- (id)timeResolver;
- (void)touchBarMediaSelectionButtonViewControllerPresentMediaSelectionPopover:(id)arg1;
- (void)touchBarMediaSelectionViewController:(id)arg1 didSelectAudioTouchBarMediaSelectionOption:(id)arg2;
- (void)touchBarMediaSelectionViewController:(id)arg1 didSelectLegibleTouchBarMediaSelectionOption:(id)arg2;
- (void)updateLayer;
- (void)viewWillMoveToWindow:(id)arg1;
- (BOOL)wantsUpdateLayer;

@end
