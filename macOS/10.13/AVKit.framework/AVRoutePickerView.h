/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AVKit.framework/Versions/A/AVKit
 */

@interface AVRoutePickerView : NSView <NSPopoverDelegate> {
    BOOL  _airPlayActive;
    AVAudioRoutesViewController * _audioRoutesViewController;
    NSPopover * _audioRoutingPopover;
    NSColor * _defaultActiveButtonColor;
    NSColor * _defaultButtonColor;
    <AVRoutePickerViewDelegate> * _delegate;
    NSButton * _pickerButton;
    NSMutableDictionary * _pickerButtonColors;
    AVMicaPackage * _pickerButtonMicaPackage;
    BOOL  _routePickerButtonBordered;
}

@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readwrite) <AVRoutePickerViewDelegate> *delegate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (getter=isRoutePickerButtonBordered, atomic, readwrite) BOOL routePickerButtonBordered;
@property (atomic, readonly) Class superclass;

- (void).cxx_destruct;
- (BOOL)_isAirPlayActive;
- (void)_outputContextDevicesDidChange:(id)arg1;
- (void)_pickerButtonPressed:(id)arg1;
- (void)_registerNotifications;
- (void)_setAirPlayActive:(BOOL)arg1;
- (void)_unregisterNotifications;
- (void)_updateAirPlayActive;
- (void)_updatePickerButtonAppearance;
- (void)_updatePickerButtonEnabledState;
- (void)dealloc;
- (id)delegate;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (BOOL)isRoutePickerButtonBordered;
- (void)layout;
- (void)popoverDidClose:(id)arg1;
- (void)popoverWillShow:(id)arg1;
- (id)routePickerButtonColorForState:(long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setRoutePickerButtonBordered:(BOOL)arg1;
- (void)setRoutePickerButtonColor:(id)arg1 forState:(long long)arg2;
- (void)viewDidMoveToWindow;

@end
