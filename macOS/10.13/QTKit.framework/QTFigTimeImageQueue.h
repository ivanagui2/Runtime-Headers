/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit
 */

@interface QTFigTimeImageQueue : NSObject <NSCopying> {
    struct QTFigTimeImageBufferQueueInternal { struct map<CMTime, ImageBufferContainer, std::__1::less<CMTime>, std::__1::allocator<std::__1::pair<const CMTime, ImageBufferContainer> > > { struct __tree<std::__1::__value_type<CMTime, ImageBufferContainer>, std::__1::__map_value_compare<CMTime, std::__1::__value_type<CMTime, ImageBufferContainer>, std::__1::less<CMTime>, true>, std::__1::allocator<std::__1::__value_type<CMTime, ImageBufferContainer> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<CMTime, ImageBufferContainer>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<CMTime, std::__1::__value_type<CMTime, ImageBufferContainer>, std::__1::less<CMTime>, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_1_1_1; } x1; } * _internal;
}

- (struct __CVBuffer { }*)copyAndDequeueImageBufferForFigTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (BOOL)copyAndDequeueImageBufferWithGreatestFigTime:(struct __CVBuffer {}**)arg1 figTime:(struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg2;
- (BOOL)copyAndDequeueImageBufferWithSmallestFigTime:(struct __CVBuffer {}**)arg1 figTime:(struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (id)description;
- (void)enqueueImageBuffer:(struct __CVBuffer { }*)arg1 forFigTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (void)finalize;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })greatestFigTime;
- (struct __CVBuffer { }*)imageBufferForFigTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (id)init;
- (void)removeAllImageBuffers;
- (void)removeImageBuffersWithFigTimesGreaterThan:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)removeImageBuffersWithFigTimesSmallerThan:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })smallestFigTime;

@end
