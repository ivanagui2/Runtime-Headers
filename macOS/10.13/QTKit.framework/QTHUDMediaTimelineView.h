/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit
 */

@interface QTHUDMediaTimelineView : NSView {
    <QTHUDMediaTimelineViewDelegate> * _delegate;
    BOOL  _hasEnclosingScrollView;
    struct { 
        long long timeValue; 
        long long timeScale; 
        long long flags; 
    }  _mediaDuration;
    struct { 
        long long timeValue; 
        long long timeScale; 
        long long flags; 
    }  _mediaTimeOffset;
    double  _minimumPointsPerSecond;
    BOOL  _mutatingTracksViewTimes;
    BOOL  _pinAtMinimumPointsPerSecond;
    QTHUDMediaTimelineTracksView * _tracksView;
}

@property (nonatomic, readonly) BOOL canChangePointsPerSecond;
@property (nonatomic, readwrite) struct { long long x1; long long x2; long long x3; } currentMediaTime;
@property (nonatomic, readwrite) <QTHUDMediaTimelineViewDelegate> *delegate;
@property (nonatomic, readonly) double maximumPointsPerSecond;
@property (nonatomic, readwrite) struct { long long x1; long long x2; long long x3; } maximumSelectionDuration;
@property (nonatomic, readwrite) struct { long long x1; long long x2; long long x3; } mediaDuration;
@property (nonatomic, readwrite) struct { long long x1; long long x2; long long x3; } mediaTimeOffset;
@property (nonatomic, readonly) double minimumPointsPerSecond;
@property (nonatomic, readwrite) struct { long long x1; long long x2; long long x3; } minimumSelectionDuration;
@property (atomic, readwrite) double pointsPerSecond;
@property (nonatomic, readwrite, copy) NSSet *rangeMarkers;
@property (nonatomic, readwrite, copy) NSArray *selectionDetents;
@property (nonatomic, readwrite) struct { long long x1; long long x2; long long x3; } selectionEnd;
@property (nonatomic, readwrite) struct { long long x1; long long x2; long long x3; } selectionStart;
@property (nonatomic, readwrite) BOOL showsRangeMarkers;
@property (nonatomic, readwrite) BOOL showsTrackPreviews;
@property (nonatomic, readwrite) BOOL usesSelectionDetents;

+ (struct { long long x1; long long x2; long long x3; })mediaTimeForPosition:(double)arg1 outOfMediaDuration:(struct { long long x1; long long x2; long long x3; })arg2 timeOffset:(struct { long long x1; long long x2; long long x3; })arg3 inViewWithWidth:(double)arg4;
+ (double)positionForMediaTime:(struct { long long x1; long long x2; long long x3; })arg1 outOfMediaDuration:(struct { long long x1; long long x2; long long x3; })arg2 timeOffset:(struct { long long x1; long long x2; long long x3; })arg3 inViewWithWidth:(double)arg4;

- (BOOL)canChangePointsPerSecond;
- (unsigned long long)countForTimelineTracks;
- (struct { long long x1; long long x2; long long x3; })currentMediaTime;
- (void)dealloc;
- (id)delegate;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)insertObject:(id)arg1 inTimelineTracksAtIndex:(unsigned long long)arg2;
- (double)maximumPointsPerSecond;
- (struct { long long x1; long long x2; long long x3; })maximumSelectionDuration;
- (struct { long long x1; long long x2; long long x3; })mediaDuration;
- (struct { long long x1; long long x2; long long x3; })mediaTimeOffset;
- (double)minimumPointsPerSecond;
- (struct { long long x1; long long x2; long long x3; })minimumSelectionDuration;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (double)pointsPerSecond;
- (id)rangeMarkers;
- (void)removeObjectFromTimelineTracksAtIndex:(unsigned long long)arg1;
- (void)rescalePointsPerSecond;
- (id)selectionDetents;
- (struct { long long x1; long long x2; long long x3; })selectionEnd;
- (struct { long long x1; long long x2; long long x3; })selectionStart;
- (void)setCurrentMediaTime:(struct { long long x1; long long x2; long long x3; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setMaximumSelectionDuration:(struct { long long x1; long long x2; long long x3; })arg1;
- (void)setMediaDuration:(struct { long long x1; long long x2; long long x3; })arg1;
- (void)setMediaTimeOffset:(struct { long long x1; long long x2; long long x3; })arg1;
- (void)setMinimumSelectionDuration:(struct { long long x1; long long x2; long long x3; })arg1;
- (void)setPointsPerSecond:(double)arg1;
- (void)setRangeMarkers:(id)arg1;
- (void)setSelectionDetents:(id)arg1;
- (void)setSelectionEnd:(struct { long long x1; long long x2; long long x3; })arg1;
- (void)setSelectionStart:(struct { long long x1; long long x2; long long x3; })arg1;
- (void)setShowsRangeMarkers:(BOOL)arg1;
- (void)setShowsTrackPreviews:(BOOL)arg1;
- (void)setUsesSelectionDetents:(BOOL)arg1;
- (BOOL)showsRangeMarkers;
- (BOOL)showsTrackPreviews;
- (void)superviewFrameDidChange:(id)arg1;
- (id)timelineTracks;
- (BOOL)usesSelectionDetents;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;

@end
