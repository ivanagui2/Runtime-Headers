/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit
 */

@interface QTHUDMediaTimelineTracksView : NSView {
    struct { 
        long long timeValue; 
        long long timeScale; 
        long long flags; 
    }  _currentMediaTime;
    unsigned int  _didCreateLayers;
    unsigned int  _isTrackingSelection;
    struct __CFDictionary { } * _layersForRangeMarkers;
    CALayer * _leftSelectionHandleLayer;
    struct { 
        long long timeValue; 
        long long timeScale; 
        long long flags; 
    }  _maximumSelectionDuration;
    struct { 
        long long timeValue; 
        long long timeScale; 
        long long flags; 
    }  _mediaDuration;
    struct { 
        long long timeValue; 
        long long timeScale; 
        long long flags; 
    }  _mediaTimeOffset;
    struct { 
        long long timeValue; 
        long long timeScale; 
        long long flags; 
    }  _minimumSelectionDuration;
    CALayer * _playheadLayer;
    CALayer * _rightSelectionHandleLayer;
    CALayer * _selectionBorderLayer;
    CALayer * _selectionBorderUnderlayLayer;
    NSArray * _selectionDetents;
    struct { 
        long long timeValue; 
        long long timeScale; 
        long long flags; 
    }  _selectionEnd;
    NSTrackingArea * _selectionLeftEdgeTrackingArea;
    NSTrackingArea * _selectionRightEdgeTrackingArea;
    struct { 
        long long timeValue; 
        long long timeScale; 
        long long flags; 
    }  _selectionStart;
    unsigned int  _showsRangeMarkers;
    unsigned int  _showsTrackPreviews;
    NSMutableArray * _timelineTracks;
    CALayer * _trackPreviewsContainerLayer;
    CALayer * _trackPreviewsUnselectedEndRangeOverlayLayer;
    CALayer * _trackPreviewsUnselectedStartRangeOverlayLayer;
    CALayer * _tracksLayer;
    unsigned int  _usesSelectionDetents;
}

@property (nonatomic, readwrite) struct { long long x1; long long x2; long long x3; } currentMediaTime;
@property (nonatomic, readwrite) struct { long long x1; long long x2; long long x3; } maximumSelectionDuration;
@property (nonatomic, readwrite) struct { long long x1; long long x2; long long x3; } mediaDuration;
@property (nonatomic, readwrite) struct { long long x1; long long x2; long long x3; } mediaTimeOffset;
@property (nonatomic, readwrite) struct { long long x1; long long x2; long long x3; } minimumSelectionDuration;
@property (nonatomic, readwrite, copy) NSSet *rangeMarkers;
@property (atomic, readwrite, copy) NSArray *selectionDetents;
@property (nonatomic, readwrite) struct { long long x1; long long x2; long long x3; } selectionEnd;
@property (nonatomic, readwrite) struct { long long x1; long long x2; long long x3; } selectionStart;
@property (nonatomic, readwrite) BOOL showsRangeMarkers;
@property (nonatomic, readwrite) BOOL showsTrackPreviews;
@property (nonatomic, readwrite) BOOL usesSelectionDetents;

+ (void)initialize;
+ (struct { long long x1; long long x2; long long x3; })mediaTimeForPosition:(double)arg1 outOfMediaDuration:(struct { long long x1; long long x2; long long x3; })arg2 timeOffset:(struct { long long x1; long long x2; long long x3; })arg3 inViewWithWidth:(double)arg4;
+ (double)positionForMediaTime:(struct { long long x1; long long x2; long long x3; })arg1 outOfMediaDuration:(struct { long long x1; long long x2; long long x3; })arg2 timeOffset:(struct { long long x1; long long x2; long long x3; })arg3 inViewWithWidth:(double)arg4;
+ (long long)suggestedTimeScaleForMediaDuration:(struct { long long x1; long long x2; long long x3; })arg1 inViewWithWidth:(double)arg2;

- (unsigned long long)countForTimelineTracks;
- (struct { long long x1; long long x2; long long x3; })currentMediaTime;
- (void)dealloc;
- (id)delegate;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)insertObject:(id)arg1 inTimelineTracksAtIndex:(unsigned long long)arg2;
- (void)layoutSublayersOfLayer:(id)arg1;
- (struct { long long x1; long long x2; long long x3; })maxSelectionEnd;
- (struct { long long x1; long long x2; long long x3; })maxSelectionStart;
- (struct { long long x1; long long x2; long long x3; })maximumSelectionDuration;
- (struct { long long x1; long long x2; long long x3; })mediaDuration;
- (struct { long long x1; long long x2; long long x3; })mediaTimeForPosition:(double)arg1;
- (struct { long long x1; long long x2; long long x3; })mediaTimeOffset;
- (struct { long long x1; long long x2; long long x3; })minSelectionEnd;
- (struct { long long x1; long long x2; long long x3; })minSelectionStart;
- (struct { long long x1; long long x2; long long x3; })minimumSelectionDuration;
- (void)mouseDown:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (double)positionForMediaTime:(struct { long long x1; long long x2; long long x3; })arg1;
- (id)rangeMarkers;
- (void)removeObjectFromTimelineTracksAtIndex:(unsigned long long)arg1;
- (id)selectionDetents;
- (struct { long long x1; long long x2; long long x3; })selectionEnd;
- (struct { long long x1; long long x2; long long x3; })selectionStart;
- (void)setCurrentMediaTime:(struct { long long x1; long long x2; long long x3; })arg1;
- (void)setMaximumSelectionDuration:(struct { long long x1; long long x2; long long x3; })arg1;
- (void)setMediaDuration:(struct { long long x1; long long x2; long long x3; })arg1;
- (void)setMediaTimeOffset:(struct { long long x1; long long x2; long long x3; })arg1;
- (void)setMinimumSelectionDuration:(struct { long long x1; long long x2; long long x3; })arg1;
- (void)setRangeMarkers:(id)arg1;
- (void)setSelectionDetents:(id)arg1;
- (void)setSelectionEnd:(struct { long long x1; long long x2; long long x3; })arg1;
- (void)setSelectionStart:(struct { long long x1; long long x2; long long x3; })arg1;
- (void)setShowsRangeMarkers:(BOOL)arg1;
- (void)setShowsTrackPreviews:(BOOL)arg1;
- (void)setUsesSelectionDetents:(BOOL)arg1;
- (BOOL)showsRangeMarkers;
- (BOOL)showsTrackPreviews;
- (void)stepBackwardCurrentMediaTime;
- (void)stepBackwardSelectionEnd;
- (void)stepBackwardSelectionStart;
- (void)stepForwardCurrentMediaTime;
- (void)stepForwardSelectionEnd;
- (void)stepForwardSelectionStart;
- (id)timelineTracks;
- (void)updateTrackingAreas;
- (BOOL)usesSelectionDetents;
- (void)viewDidEndLiveResize;
- (void)viewDidMoveToWindow;

@end
