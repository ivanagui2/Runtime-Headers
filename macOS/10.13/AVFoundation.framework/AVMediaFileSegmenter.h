/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation
 */

@interface AVMediaFileSegmenter : NSObject {
    /* Warning: unhandled struct encoding: '{AVMediaFileSegmenterInternal=@@@@cq@f@@^{OpaqueFigMediaFileSegmenter}@?{?=qiIq}@}' */ struct AVMediaFileSegmenterInternal { id x1; id x2; BOOL x3; long long x4; id x5; id x6; struct OpaqueFigMediaFileSegmenter {} *x7; id x8; struct { long long x_9_1_1; int x_9_1_2; unsigned int x_9_1_3; long long x_9_1_4; } x9; id x10; } * _mediaFileSegmenter;
}

@property (nonatomic, readwrite, copy) NSString *IFramePlaylistName;
@property (nonatomic, readonly) NSError *error;
@property (nonatomic, readwrite, copy) NSString *mediaPlaylistName;
@property (nonatomic, readwrite, copy) NSURL *outputURL;
@property (nonatomic, readonly) float progress;
@property (nonatomic, readwrite) BOOL segmentsAudioOnly;
@property (nonatomic, readonly) long long status;
@property (nonatomic, readwrite) struct { long long x1; int x2; unsigned int x3; long long x4; } targetSegmentDuration;

+ (id)_figMediaFileSegmenterNotificationNames;
+ (id)mediaFileSegmenterWithAsset:(id)arg1 options:(id)arg2;

- (id)IFramePlaylistName;
- (void)_addListeners;
- (id)_createFigMediaFileSegmenter:(struct OpaqueFigMediaFileSegmenter {}**)arg1;
- (void)_createFigMediaFileSegmenterAndBeginSegmenting;
- (void)_handleFigMediaFileSegmenterNotification:(id)arg1 payload:(id)arg2;
- (void)_removeListeners;
- (void)_transitionToStatus:(long long)arg1 error:(id)arg2;
- (void)_updateProgress;
- (id)asset;
- (void)cancelMediaFileSegmentation;
- (void)dealloc;
- (id)description;
- (id)error;
- (id)init;
- (id)initWithAsset:(id)arg1 options:(id)arg2;
- (id)mediaPlaylistName;
- (id)outputURL;
- (float)progress;
- (void)segmentMediaFileAsynchronouslyWithCompletionHandler:(id)arg1;
- (BOOL)segmentsAudioOnly;
- (void)setIFramePlaylistName:(id)arg1;
- (void)setMediaPlaylistName:(id)arg1;
- (void)setOutputURL:(id)arg1;
- (void)setSegmentsAudioOnly:(BOOL)arg1;
- (void)setTargetSegmentDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (long long)status;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })targetSegmentDuration;

@end
