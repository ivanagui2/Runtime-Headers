/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
 */

@interface _LSDisplayNameConstructor : NSObject {
    NSString * _baseName;
    NSString * _extension;
    unsigned int  _hadBiDiControlCharacter;
    unsigned int  _hadColonInFSName;
    unsigned int  _hadCompoundConfusable;
    unsigned int  _hadExactConfusable;
    unsigned int  _hadForbiddenCharacter;
    unsigned int  _hadNonASCIICharacter;
    unsigned int  _hasForcedExtension;
    unsigned int  _isApplication;
    unsigned int  _isFolder;
    NSString * _originalName;
    NSString * _secondaryExtension;
    unsigned int  _wantsHiddenExtension;
}

+ (void)setSuffixForRemoteXCTests:(id)arg1;
+ (id)suffixForRemoteXCTests;

- (void).cxx_destruct;
- (void)getUnlocalizedBaseName:(id*)arg1 extension:(id*)arg2 requiresAdditionalBiDiControlCharacters:(BOOL*)arg3;
- (id)init;
- (id)unlocalizedNameWithContext:(struct LSContext { struct LSDatabase {} *x1; }*)arg1;
- (id)unlocalizedNameWithContext:(struct LSContext { struct LSDatabase {} *x1; }*)arg1 asIfShowingAllExtensions:(id)arg2;

// _LSDisplayNameConstructor (ConstructForAnyFile)

+ (id)displayNameConstructorWithContext:(struct LSContext { struct LSDatabase {} *x1; }*)arg1 node:(id)arg2 error:(id*)arg3;
+ (id)displayNameConstructorsWithContext:(struct LSContext { struct LSDatabase {} *x1; }*)arg1 node:(id)arg2 error:(id*)arg3;

// _LSDisplayNameConstructor (ExtensionHiding)

+ (void)setShowAllExtensions:(BOOL)arg1;
+ (BOOL)showAllExtensions;

- (BOOL)canSetExtensionHiddenWithContext:(struct LSContext { struct LSDatabase {} *x1; }*)arg1;

// _LSDisplayNameConstructor (Private)

+ (id)concatenateBaseName:(id)arg1 andExtension:(id)arg2;
+ (void)getExtensionRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg1 secondaryExtensionRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2 fromFileName:(id)arg3 considerConfusables:(BOOL)arg4;

- (id)addExtension:(id)arg1 ifMissingFromDisplayName:(id)arg2;
- (id)cleanSecondaryExtension:(id)arg1;
- (id)combineBaseName:(id)arg1 extension:(id)arg2;
- (void)getTransformedBaseName:(id*)arg1 extension:(id*)arg2 needsBiDiControlCharacters:(BOOL)arg3;
- (void)initContentBitsWithDisplayName:(id)arg1 treatAsFSName:(BOOL)arg2;
- (void)initNamePartsWithDisplayName:(id)arg1;
- (void)initNodeBitsWithContext:(struct LSContext { struct LSDatabase {} *x1; }*)arg1 node:(id)arg2 bundleClass:(const unsigned int*)arg3;
- (id)initWithContext:(struct LSContext { struct LSDatabase {} *x1; }*)arg1 node:(id)arg2 bundleClass:(const unsigned int*)arg3 desiredDisplayName:(id)arg4 treatAsFSName:(BOOL)arg5;
- (id)insertCompleteNameBiDiControlCharacters:(id)arg1;
- (id)insertNameComponentBiDiControlCharacters:(id)arg1;
- (BOOL)mayHideExtensionWithContext:(struct LSContext { struct LSDatabase {} *x1; }*)arg1;
- (id)replaceForbiddenCharacters:(id)arg1;
- (BOOL)showExtensionWithContext:(struct LSContext { struct LSDatabase {} *x1; }*)arg1 asIfShowingAllExtensions:(id)arg2;
- (id)transformBeforeCombining:(id)arg1 needsBiDiControlCharacters:(BOOL*)arg2;
- (BOOL)wantsHiddenExtension;

// _LSDisplayNameConstructor (RTL)

- (id)balanceBiDiControlCharacter:(unsigned short)arg1 inString:(id)arg2 imbalanceAmount:(long long)arg3;
- (id)balanceBiDiControlCharacters:(id)arg1;
- (BOOL)isStringNaturallyRTL:(id)arg1;

// _LSDisplayNameConstructor (VisualOrdering)

+ (id)visuallyOrderCharactersInString:(id)arg1 error:(id*)arg2;

@end
