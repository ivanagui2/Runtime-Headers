/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
 */

@interface _LSDefaults : NSObject {
    BOOL  _appleInternal;
    long long  _currentDisplayGamut;
    NSMutableDictionary * _darwinNotificationNames;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _darwinNotificationNamesLock;
    unsigned int  _darwinNotificationNamesUID;
    BOOL  _hasPersistentPreferences;
    BOOL  _hasServer;
    NSData * _hmacSecret;
    BOOL  _inEducationMode;
    BOOL  _inSyncBubble;
    BOOL  _inXCTestRigInsecure;
    BOOL  _isServer;
    NSObject<OS_dispatch_queue> * _ivarQueue;
    NSURL * _systemContainerURL;
    NSURL * _systemGroupContainerURL;
    NSURL * _userContainerURL;
}

@property (atomic, readonly) NSData *HMACSecret;
@property (nonatomic, readonly) BOOL abortIfMayNotMapDatabase;
@property (nonatomic, readonly) BOOL allowsAlternateIcons;
@property (getter=isAppleInternal, nonatomic, readonly) BOOL appleInternal;
@property (atomic, readonly) long long concurrentInstallOperations;
@property (atomic, readonly) unsigned int currentSchemaVersion;
@property (nonatomic, readonly) NSURL *dataVaultURL;
@property (atomic, readonly) double databaseSaveInterval;
@property (atomic, readonly) double databaseSaveLatency;
@property (atomic, readonly) unsigned short databaseStoreFileMode;
@property (atomic, readonly) NSURL *databaseStoreFileURL;
@property (atomic, readonly) NSURL *dbRecoveryFileURL;
@property (atomic, readonly) NSURL *dbSentinelFileURL;
@property (atomic, readonly) BOOL hasPersistentPreferences;
@property (atomic, readwrite) BOOL hasServer;
@property (atomic, readonly) NSURL *identifiersFileURL;
@property (getter=isInEducationMode, atomic, readonly) BOOL inEducationMode;
@property (getter=isInSyncBubble, atomic, readonly) BOOL inSyncBubble;
@property (getter=isInXCTestRigInsecure, nonatomic, readonly) BOOL inXCTestRigInsecure;
@property (nonatomic, readonly) BOOL issueSandboxExceptionsIfMayNotMapDatabase;
@property (atomic, readonly) NSURL *preferencesFileURL;
@property (atomic, readonly) NSArray *preferredLocalizations;
@property (atomic, readonly) NSURL *queriedSchemesMapFileURL;
@property (atomic, readonly) NSURL *securePeferencesFileURL;
@property (getter=isServer, atomic, readwrite) BOOL server;
@property (getter=isSimulator, atomic, readonly) BOOL simulator;
@property (atomic, readonly) NSURL *systemContainerURL;
@property (atomic, readonly) NSURL *systemGroupContainerURL;
@property (nonatomic, readonly) NSURL *trustedSignatureDatabaseURL;
@property (atomic, readonly) NSURL *userContainerURL;

+ (BOOL)appleInternal;
+ (BOOL)hasPersistentPreferences;
+ (BOOL)hasServer;
+ (BOOL)inSyncBubble;
+ (BOOL)inXCTestRigInsecure;
+ (id)sharedInstance;
+ (id)systemContainerURL;
+ (id)systemGroupContainerURL;
+ (id)userContainerURL;

- (id)HMACSecret;
- (BOOL)abortIfMayNotMapDatabase;
- (BOOL)allowsAlternateIcons;
- (id)classesWithNameForXCTests:(const char *)arg1;
- (long long)concurrentInstallOperations;
- (unsigned int)currentSchemaVersion;
- (id)darwinNotificationNameForCurrentUser:(id)arg1;
- (id)dataVaultURL;
- (double)databaseSaveInterval;
- (double)databaseSaveLatency;
- (unsigned short)databaseStoreFileMode;
- (id)databaseStoreFileURL;
- (id)databaseUpdateNotificationName;
- (id)dbRecoveryFileURL;
- (id)dbSentinelFileURL;
- (void)dealloc;
- (id)debugDescription;
- (BOOL)hasPersistentPreferences;
- (BOOL)hasServer;
- (id)identifiersFileURL;
- (id)init;
- (BOOL)isAppleInternal;
- (BOOL)isInEducationMode;
- (BOOL)isInSyncBubble;
- (BOOL)isInXCTestRigInsecure;
- (BOOL)isServer;
- (BOOL)isSimulator;
- (BOOL)issueSandboxExceptionsIfMayNotMapDatabase;
- (id)preferencesFileChangeNotificationName;
- (id)preferencesFileURL;
- (id)preferencesUpdateNotificationName;
- (id)preferredLocalizations;
- (unsigned int)proxyUIDForCurrentEffectiveUID;
- (unsigned int)proxyUIDForUID:(unsigned int)arg1;
- (id)queriedSchemesMapFileURL;
- (id)securePeferencesFileURL;
- (id)serviceNameForConnectionType:(unsigned short)arg1;
- (void)setHasServer:(BOOL)arg1;
- (void)setServer:(BOOL)arg1;
- (id)systemContainerURL;
- (id)systemGroupContainerURL;
- (id)trustedSignatureDatabaseURL;
- (id)userContainerURL;
- (id)userPreferencesURL;

@end
