/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis
 */

@interface PAMemRegion : PAMemRange <NSCoding> {
    NSString * classification;
    BOOL  doDetailedResidency;
    unsigned int  inProcObjectCount;
    unsigned int  nestingDepth;
    unsigned int  offsetFromObject;
    PAProcess * owningProcess;
    PAPageResidency * pageRes;
    PAPageResidency * privatePageRes;
    int  purgeState;
    struct vm_region_submap_info_64 { 
        int protection; 
        int max_protection; 
        unsigned int inheritance; 
        unsigned long long offset; 
        unsigned int user_tag; 
        unsigned int pages_resident; 
        unsigned int pages_shared_now_private; 
        unsigned int pages_swapped_out; 
        unsigned int pages_dirtied; 
        unsigned int ref_count; 
        unsigned short shadow_depth; 
        unsigned char external_pager; 
        unsigned char share_mode; 
        unsigned int is_submap; 
        int behavior; 
        unsigned int object_id; 
        unsigned short user_wired_count; 
        unsigned int pages_reusable; 
    }  regionInfo;
    PAPageResidency * sharedPageRes;
    BOOL  validObjectCount;
}

@property (atomic, readwrite, retain) NSString *classification;
@property (nonatomic, readwrite) unsigned int inProcObjectCount;
@property (atomic, readwrite) unsigned int offsetFromObject;
@property (atomic, readonly) PAProcess *owningProcess;
@property (atomic, readwrite) int purgeState;
@property (atomic, readwrite) BOOL validObjectCount;

+ (id)_classificationStringForUserTag:(unsigned int)arg1 protection:(int)arg2 andShareMode:(unsigned int)arg3;
+ (id)_memRegionsFromVMRegionInfo:(struct { unsigned long long x1; unsigned long long x2; unsigned int x3; int x4; struct vm_region_submap_info_64 { int x_5_1_1; int x_5_1_2; unsigned int x_5_1_3; unsigned long long x_5_1_4; unsigned int x_5_1_5; unsigned int x_5_1_6; unsigned int x_5_1_7; unsigned int x_5_1_8; unsigned int x_5_1_9; unsigned int x_5_1_10; unsigned short x_5_1_11; unsigned char x_5_1_12; unsigned char x_5_1_13; unsigned int x_5_1_14; int x_5_1_15; unsigned int x_5_1_16; unsigned short x_5_1_17; unsigned int x_5_1_18; } x5; }*)arg1 andProcess:(id)arg2 detailed:(BOOL)arg3;
+ (id)memRegionsForProcess:(id)arg1 detailed:(BOOL)arg2;

- (BOOL)_isPrivate;
- (id)classification;
- (void)classifyRegion;
- (long long)compareClean:(id)arg1;
- (long long)compareDirtyAndSwapped:(id)arg1;
- (long long)compareSpec:(id)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)fullDetailsString;
- (void)gatherDetailedResidency;
- (id)getPrivateResidency;
- (id)getResidency;
- (id)getSharedResidency;
- (unsigned int)inProcObjectCount;
- (id)initWithCoder:(id)arg1;
- (id)initWithVMRegionInfo:(struct { unsigned long long x1; unsigned long long x2; unsigned int x3; int x4; struct vm_region_submap_info_64 { int x_5_1_1; int x_5_1_2; unsigned int x_5_1_3; unsigned long long x_5_1_4; unsigned int x_5_1_5; unsigned int x_5_1_6; unsigned int x_5_1_7; unsigned int x_5_1_8; unsigned int x_5_1_9; unsigned int x_5_1_10; unsigned short x_5_1_11; unsigned char x_5_1_12; unsigned char x_5_1_13; unsigned int x_5_1_14; int x_5_1_15; unsigned int x_5_1_16; unsigned short x_5_1_17; unsigned int x_5_1_18; } x5; }*)arg1 andProcess:(id)arg2;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)offsetFromObject;
- (id)owningProcess;
- (id)privateResidentString;
- (id)protectionString;
- (int)purgeState;
- (id)purgeStateString;
- (struct vm_region_submap_info_64 { int x1; int x2; unsigned int x3; unsigned long long x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned short x11; unsigned char x12; unsigned char x13; unsigned int x14; int x15; unsigned int x16; unsigned short x17; unsigned int x18; }*)regionInfo;
- (id)regionSharePurgeProtString;
- (id)regionTypeSpecificString;
- (id)residentAndInfoString;
- (id)residentString;
- (void)setClassification:(id)arg1;
- (void)setInProcObjectCount:(unsigned int)arg1;
- (void)setOffsetFromObject:(unsigned int)arg1;
- (void)setPurgeState:(int)arg1;
- (void)setValidObjectCount:(BOOL)arg1;
- (id)sharedResidentString;
- (id)sharedString;
- (BOOL)validObjectCount;

@end
