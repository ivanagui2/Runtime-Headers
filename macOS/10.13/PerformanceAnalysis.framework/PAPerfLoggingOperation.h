/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis
 */

@interface PAPerfLoggingOperation : NSObject <NSCoding> {
    NSMutableDictionary * _contextProcessingConfigurationsForAllIntervalTypes;
    NSMutableDictionary * _dictionaryOfIntervalTypesEventArrays;
    double  _endTimeInSec;
    BOOL  _hasSeenWSUpdate;
    NSDictionary * _intervalDataDictionary;
    NSMutableArray * _intervalList;
    NSMutableArray * _intervalTypesSeenOrder;
    NSString * _matchingCategoryRegexString;
    NSString * _matchingNameRegexString;
    NSString * _matchingProcessNameRegexString;
    unsigned int  _numSlowWSUpdates;
    NSString * _operationCategory;
    NSString * _operationName;
    int  _pid;
    NSString * _processName;
    unsigned long long  _serialNumber;
    NSMutableArray * _slowWSUpdateInfoArray;
    double  _startTimeInSec;
}

@property (atomic, readonly) double endTimeInSec;
@property (atomic, readonly) BOOL hasSeenWSUpdate;
@property (atomic, readwrite, retain) NSString *matchingCategoryRegexString;
@property (atomic, readwrite, retain) NSString *matchingNameRegexString;
@property (atomic, readwrite, retain) NSString *matchingProcessNameRegexString;
@property (atomic, readonly) unsigned int numSlowWSUpdates;
@property (nonatomic, readwrite, copy) NSString *operationCategory;
@property (nonatomic, readwrite, copy) NSString *operationName;
@property (atomic, readonly) int pid;
@property (nonatomic, readwrite, copy) NSString *processName;
@property (atomic, readonly) unsigned long long serialNumber;
@property (atomic, readonly) NSArray *slowWSUpdateInfoArray;
@property (atomic, readonly) double startTimeInSec;

+ (id)keyForProcessName:(id)arg1 operationCategory:(id)arg2 andOperationName:(id)arg3;

- (void)_addResultsForIntervalsToResultsDict:(id)arg1;
- (void)_logNumSlowWSUpdates:(BOOL)arg1;
- (unsigned int)_numWSUpdatesDuringOperation;
- (id)_processIntervalEventStream:(id)arg1 withContextProcessingConfiguration:(id)arg2;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (double)endTimeInSec;
- (id)getIntervalDataDictionary;
- (BOOL)hasSeenWSUpdate;
- (id)initWithCoder:(id)arg1;
- (id)initWithProcessName:(id)arg1 andOperationCategory:(id)arg2 andOperationName:(id)arg3 andPid:(int)arg4;
- (void)logIntervalData:(BOOL)arg1;
- (void)markIntervalTransition:(id)arg1 transitionType:(int)arg2 atCGSTimestampInSec:(double)arg3 withContext:(id)arg4 isWSIntervalTransition:(BOOL)arg5;
- (BOOL)markOperationEndTruncatedByDuration:(double)arg1;
- (void)markOperationStart;
- (void)markSlowFrameFrame:(struct __CFBoolean { }*)arg1 withIntervalRange:(id)arg2;
- (id)matchingCategoryRegexString;
- (id)matchingNameRegexString;
- (id)matchingProcessNameRegexString;
- (unsigned int)numSlowWSUpdates;
- (id)operationCategory;
- (double)operationDurationInMs;
- (id)operationKey;
- (id)operationName;
- (int)pid;
- (id)processName;
- (unsigned long long)serialNumber;
- (BOOL)setContextProcessingConfiguration:(id)arg1 forIntervalType:(id)arg2;
- (void)setMatchingCategoryRegexString:(id)arg1;
- (void)setMatchingNameRegexString:(id)arg1;
- (void)setMatchingProcessNameRegexString:(id)arg1;
- (void)setOperationCategory:(id)arg1;
- (void)setOperationName:(id)arg1;
- (void)setProcessName:(id)arg1;
- (id)slowWSUpdateInfoArray;
- (double)startTimeInSec;
- (id)stringForIntervalEventTimeline;

@end
