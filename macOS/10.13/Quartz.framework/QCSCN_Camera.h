/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
 */

@interface QCSCN_Camera : NSObject <NSCopying, QCSCN_Animatable> {
    id  _reserved;
}

@property (nonatomic, readwrite, copy) NSString *name;
@property (nonatomic, readwrite) BOOL usesOrthographicProjection;
@property (nonatomic, readwrite) double xFov;
@property (nonatomic, readwrite) double yFov;
@property (nonatomic, readwrite) double zFar;
@property (nonatomic, readwrite) double zNear;

+ (int)_baseTypeForProperty:(id)arg1;
+ (id)argumentsForSelector:(SEL)arg1;
+ (id)camera;
+ (id)cameraWithCameraRef:(struct __C3DCamera { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; struct __CFDictionary {} *x_1_1_2; } x1; struct __C3DSceneID {} *x2; struct { bool x_3_1_1; double x_3_1_2; double x_3_1_3; double x_3_1_4; double x_3_1_5; double x_3_1_6; double x_3_1_7; double x_3_1_8; struct C3DMatrix4x4 { union { double x_1_3_1[16]; double x_1_3_2[4][4]; } x_9_2_1; } x_3_1_9; } x3; float x4; float x5; }*)arg1;
+ (BOOL)isKeyExcludedFromWebScript:(const char *)arg1;
+ (BOOL)isSelectorExcludedFromWebScript:(SEL)arg1;
+ (id)propertyKeys;
+ (Class)typeForProperty:(id)arg1;
+ (id)webScriptNameForSelector:(SEL)arg1;

- (void*)__CFObject;
- (void)__removeAnimationForKey:(id)arg1;
- (void)_pauseAnimation:(BOOL)arg1 forKey:(id)arg2;
- (void)_registerAsObserver;
- (void)_sceneRefDidChange;
- (void)_syncEntityObjCModel;
- (void)_syncObjCAnimations;
- (void)_syncObjCModel;
- (void)addAnimation:(id)arg1;
- (void)addAnimation:(id)arg1 forKey:(id)arg2;
- (id)animationForKey:(id)arg1;
- (id)animationKeys;
- (struct __C3DAnimationManager { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; struct __CFArray {} *x2; struct __CFDictionary {} *x3; struct __CFDictionary {} *x4; struct __CFDictionary {} *x5; struct __CFSet {} *x6; struct __CFArray {} *x7; bool x8; bool x9; double x10; double x11; struct _opaque_pthread_mutex_t { long long x_12_1_1; BOOL x_12_1_2[56]; } x12; int x13; int x14; }*)animationManager;
- (double)aperture;
- (struct __C3DCamera { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; struct __CFDictionary {} *x_1_1_2; } x1; struct __C3DSceneID {} *x2; struct { bool x_3_1_1; double x_3_1_2; double x_3_1_3; double x_3_1_4; double x_3_1_5; double x_3_1_6; double x_3_1_7; double x_3_1_8; struct C3DMatrix4x4 { union { double x_1_3_1[16]; double x_1_3_2[4][4]; } x_9_2_1; } x_3_1_9; } x3; float x4; float x5; }*)cameraRef;
- (id)copy;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (void)finalize;
- (double)focalDistance;
- (id)identifier;
- (id)init;
- (id)initPresentationCameraWithCameraRef:(struct __C3DCamera { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; struct __CFDictionary {} *x_1_1_2; } x1; struct __C3DSceneID {} *x2; struct { bool x_3_1_1; double x_3_1_2; double x_3_1_3; double x_3_1_4; double x_3_1_5; double x_3_1_6; double x_3_1_7; double x_3_1_8; struct C3DMatrix4x4 { union { double x_1_3_1[16]; double x_1_3_2[4][4]; } x_9_2_1; } x_3_1_9; } x3; float x4; float x5; }*)arg1;
- (id)initWithCameraRef:(struct __C3DCamera { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; struct __CFDictionary {} *x_1_1_2; } x1; struct __C3DSceneID {} *x2; struct { bool x_3_1_1; double x_3_1_2; double x_3_1_3; double x_3_1_4; double x_3_1_5; double x_3_1_6; double x_3_1_7; double x_3_1_8; struct C3DMatrix4x4 { union { double x_1_3_1[16]; double x_1_3_2[4][4]; } x_9_2_1; } x_3_1_9; } x3; float x4; float x5; }*)arg1;
- (id)name;
- (void)pauseAnimationForKey:(id)arg1;
- (id)presentationCamera;
- (struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })projectionTransform;
- (id)propertyKeys;
- (void)removeAllAnimations;
- (void)removeAllAnimationsBeforeDying:(void*)arg1;
- (void)removeAnimationForKey:(id)arg1;
- (void)resumeAnimationForKey:(id)arg1;
- (struct __C3DScene { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; struct __CFDictionary {} *x_1_1_2; } x1; struct __C3DSceneID {} *x2; struct __C3DNode {} *x3; struct __C3DAnimationManager {} *x4; double x5; double x6; double x7; double x8; struct __CFDictionary {} *x9; struct _SCNVector3 { double x_10_1_1; double x_10_1_2; double x_10_1_3; } x10; struct __C3DFXDeformerManager {} *x11; struct _opaque_pthread_mutex_t { long long x_12_1_1; BOOL x_12_1_2[56]; } x12; }*)sceneRef;
- (void)setAperture:(double)arg1;
- (void)setFocalDistance:(double)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setName:(id)arg1;
- (void)setSceneRef:(struct __C3DScene { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; struct __CFDictionary {} *x_1_1_2; } x1; struct __C3DSceneID {} *x2; struct __C3DNode {} *x3; struct __C3DAnimationManager {} *x4; double x5; double x6; double x7; double x8; struct __CFDictionary {} *x9; struct _SCNVector3 { double x_10_1_1; double x_10_1_2; double x_10_1_3; } x10; struct __C3DFXDeformerManager {} *x11; struct _opaque_pthread_mutex_t { long long x_12_1_1; BOOL x_12_1_2[56]; } x12; }*)arg1;
- (void)setUsesOrthographicProjection:(BOOL)arg1;
- (void)setXFov:(double)arg1;
- (void)setXMag:(double)arg1;
- (void)setYFov:(double)arg1;
- (void)setYMag:(double)arg1;
- (void)setZFar:(double)arg1;
- (void)setZNear:(double)arg1;
- (struct __C3DAnimationTarget { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; void *x2; void *x3; int x4; int x5; struct __CFString {} *x6; struct __CFArray {} *x7; }*)targetForKey:(id)arg1;
- (BOOL)usesOrthographicProjection;
- (double)xFov;
- (double)xMag;
- (double)yFov;
- (double)yMag;
- (double)zFar;
- (double)zNear;

@end
