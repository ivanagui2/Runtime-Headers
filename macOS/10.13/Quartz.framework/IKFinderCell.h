/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
 */

@interface IKFinderCell : IKIconCell {
    short  _canDrawPlaceholder;
    short  _isMoreButton;
}

+ (struct CGPoint { double x1; double x2; })anchorPointWithView:(id)arg1;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })anchoredBoundsForSettings:(id)arg1;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })anchoredBoundsOfPart:(int)arg1 iconSize:(double)arg2 gridSpacing:(double)arg3 labelAttributes:(id)arg4 titlesOnRight:(BOOL)arg5 options:(id)arg6;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })anchoredCellBoundsForIconSize:(double)arg1 maxIconSize:(double)arg2 gridSpacing:(double)arg3 textAttributes:(id)arg4 titlesOnRight:(BOOL)arg5 showInfo:(BOOL)arg6;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })anchoredIconBoundsForIconSize:(double)arg1;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })anchoredIconBoundsForIconSize:(double)arg1 aspectRatio:(double)arg2;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })anchoredLabelBoundsForIconSize:(double)arg1 maxIconSize:(double)arg2 gridSpacing:(double)arg3 textAttributes:(id)arg4 titlesOnRight:(BOOL)arg5 showInfo:(BOOL)arg6;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })anchoredSelectionBoundsForIconSize:(double)arg1 maxIconSize:(double)arg2;
+ (struct CGSize { double x1; double x2; })cellSizeForIconSize:(double)arg1 gridSpacing:(double)arg2 textAttributes:(id)arg3 titlesOnRight:(BOOL)arg4 showInfo:(BOOL)arg5;
+ (struct CGSize { double x1; double x2; })cellSizeForIconSize:(double)arg1 maxIconSize:(double)arg2 gridSpacing:(double)arg3 textAttributes:(id)arg4 titlesOnRight:(BOOL)arg5 showInfo:(BOOL)arg6;
+ (struct CGSize { double x1; double x2; })cellSpacingForIconSize:(double)arg1 gridSpacing:(double)arg2 titlesOnRight:(BOOL)arg3;
+ (struct CGSize { double x1; double x2; })cellSpacingForIconSize:(double)arg1 maxIconSize:(double)arg2 gridSpacing:(double)arg3 titlesOnRight:(BOOL)arg4;
+ (id)moreButtonUID;
+ (double)selectionRadiusForIconSize:(double)arg1 maxIconSize:(double)arg2;
+ (BOOL)shouldWrapLabelsForIconSize:(double)arg1 gridSpacing:(double)arg2 titlesOnRight:(BOOL)arg3;
+ (BOOL)supportsHeightOfInfoSpaceFactorization;
+ (id)titleAttributeKeys;

- (void)_drawMoreButton;
- (BOOL)canDrawPlaceholder;
- (BOOL)disableTwoLineTitles;
- (void)drawPlaceHolder;
- (void)drawSelection;
- (int)heightOfInfoSpace;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })imageFrameForImageContainerFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })imageFrameForImageContainerFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 useAspectRatio:(BOOL)arg2;
- (BOOL)isMoreButton;
- (BOOL)isSelectable;
- (double)selectionRadius;
- (id)subtitleString;
- (struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })usedRectInCellFrame:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)wantsRollover;

@end
