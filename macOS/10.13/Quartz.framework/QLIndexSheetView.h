/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI
 */

@interface QLIndexSheetView : NSView <CAAnimationDelegate, QLDrawingLayerDelegate, QLScrollControllerDelegate, QLScrollable, QLThumbnailLayerDelegate> {
    NSMutableArray * _cachedThumbnailLayers;
    long long  _columns;
    id  _delegate;
    BOOL  _hasDarkBackground;
    long long  _itemIndex;
    double  _margin;
    QLDrawingLayer * _maskLayer;
    CALayer * _maskedLayer;
    long long  _maxColumns;
    long long  _maxRows;
    QLPreviewHighlightItemLayer * _overlayLayer;
    struct CGImage { } * _placeholderImageRef;
    NSArray * _previewItems;
    CALayer * _rootLayer;
    long long  _rows;
    QLScrollController * _scrollController;
    CAScrollLayer * _scrollLayer;
    int  _status;
    NSMutableArray * _thumbnailLayers;
    long long  _topRow;
    BOOL  _transitioning;
    NSMapTable * _visibleThumbnailLayers;
}

@property (atomic, readonly) double animationDuration;
@property (atomic, readonly) BOOL canGoToNextPage;
@property (atomic, readonly) BOOL canGoToPreviousPage;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readwrite) <QLIndexSheetViewDelegate> *delegate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite) BOOL hasDarkBackground;
@property (atomic, readonly) BOOL hasMultiplePages;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readonly) long long highlightedItemIndex;
@property (atomic, readwrite) double horizontalScrollValue;
@property (atomic, readwrite) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } indexSheetFrame;
@property (atomic, readwrite) long long maxColumns;
@property (atomic, readwrite) long long maxRows;
@property (atomic, readwrite) int status;
@property (atomic, readonly) Class superclass;
@property (atomic, readonly) struct CGImage { }*thumbnailPlaceholderImage;
@property (atomic, readonly) double verticalKnobProportion;
@property (atomic, readwrite) double verticalScrollValue;

+ (BOOL)automaticallyNotifiesObserversOfVerticalScrollValue;

- (unsigned int)_CAViewFlags;
- (double)_animationDuration;
- (double)_bottomMargin;
- (void)_endTransitionWithLayer:(id)arg1;
- (void)_goDown:(BOOL)arg1;
- (void)_goUp:(BOOL)arg1;
- (id)_highlightedLayer;
- (double)_horizontalIntercellSpace;
- (long long)_indexOfDocumentAtRow:(long long)arg1 column:(long long)arg2;
- (BOOL)_isRowVisible:(long long)arg1;
- (void)_layoutThumbnailLayers;
- (long long)_maxCachedThumbnails;
- (double)_maxScrollValue;
- (long long)_numberOfVisibleRows;
- (BOOL)_scrollRowToVisible:(long long)arg1 animate:(BOOL)arg2;
- (void)_selectDocumentAtIndex:(long long)arg1;
- (void)_selectDocumentFromLayer:(id)arg1;
- (void)_setHighlightedLayer:(id)arg1 animate:(BOOL)arg2 update:(BOOL)arg3;
- (void)_setScrollValue:(double)arg1 animate:(BOOL)arg2;
- (BOOL)_setTopRow:(long long)arg1 animate:(BOOL)arg2;
- (BOOL)_setupLayers;
- (id)_setupOverlayLayer;
- (double)_sideMargin;
- (void)_snapToTopRow;
- (void)_startTransitionWithItemAtIndex:(long long)arg1 usingTransitionLayer:(id)arg2 atFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (id)_thumbnailLayerAtIndex:(long long)arg1;
- (id)_thumbnailLayerHitTest:(struct CGPoint { double x1; double x2; })arg1;
- (void)_thumnailDidUpdate:(id)arg1;
- (double)_topMargin;
- (void)_updateInternalLayerFrames;
- (void)_updateInvisibleLayers;
- (void)_updateLayoutForResize;
- (void)_updateRollover;
- (void)_updateRolloverAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_updateScrollWithAnimation:(BOOL)arg1;
- (void)_updateThumbnailLayers;
- (void)_updateThumbnails;
- (void)_updateVisibleLayers;
- (double)_verticalIntercellSpace;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_visibleRows;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)accessibilityIsIgnored;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)activateForItemAtIndex:(long long)arg1 usingTransitionLayer:(id)arg2 atFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (double)animationDuration;
- (BOOL)canGoToNextPage;
- (BOOL)canGoToPreviousPage;
- (void)deactivateForItemAtIndex:(long long)arg1 usingTransitionLayer:(id)arg2 atFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (void)dealloc;
- (id)delegate;
- (void)drawDrawingLayer:(id)arg1 inContext:(struct CGContext { }*)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForPreviewItemURL:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameOfDocumentAtIndex:(long long)arg1;
- (void)goToNextPage:(id)arg1;
- (void)goToPreviousPage:(id)arg1;
- (BOOL)hasDarkBackground;
- (BOOL)hasMultiplePages;
- (long long)highlightedItemIndex;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1;
- (id)imageForPreviewItemURL:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })indexSheetFrame;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)isOpaque;
- (void)keyDown:(id)arg1;
- (void)makeItemAtIndexVisible:(long long)arg1;
- (long long)maxColumns;
- (long long)maxRows;
- (void)mouseDown:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseMoved:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)resizeWithOldSuperviewSize:(struct CGSize { double x1; double x2; })arg1;
- (double)scrollController:(id)arg1 pageScrollPercentageForScroller:(id)arg2;
- (void)scrollController:(id)arg1 scrollerDidEndTracking:(id)arg2;
- (void)scrollWheel:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setHasDarkBackground:(BOOL)arg1;
- (void)setIndexSheetFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setMaxColumns:(long long)arg1;
- (void)setMaxRows:(long long)arg1;
- (void)setPreviewItems:(id)arg1 withVisibleIndex:(long long)arg2;
- (void)setStatus:(int)arg1;
- (void)setVerticalScrollValue:(double)arg1;
- (int)status;
- (struct CGImage { }*)thumbnailPlaceholderImage;
- (id)titleForThumbnailLayer:(id)arg1;
- (double)verticalKnobProportion;
- (double)verticalScrollValue;
- (void)viewDidEndLiveResize;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (void)viewWillStartLiveResize;

@end
