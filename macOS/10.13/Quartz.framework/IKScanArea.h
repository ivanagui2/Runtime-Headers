/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
 */

@interface IKScanArea : NSObject {
    double  _angle;
    double  _angle0;
    double  _angle1;
    double  _angle2;
    double  _angle3;
    int  _autoBitDepth;
    int  _autoResolution;
    struct CGImage { } * _cgImage;
    id  _extraStorage;
    double  _ikSelectionAngle;
    struct CGPoint { 
        double x; 
        double y; 
    }  _ikSelectionPosition;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _ikSelectionRect;
    int  _index;
    double  _overviewToFinalScaling;
    struct CGPoint { 
        double x; 
        double y; 
    }  _pt0;
    struct CGPoint { 
        double x; 
        double y; 
    }  _pt1;
    struct CGPoint { 
        double x; 
        double y; 
    }  _pt2;
    struct CGPoint { 
        double x; 
        double y; 
    }  _pt3;
    double  _rho0;
    double  _rho1;
    double  _rho2;
    double  _rho3;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _scanArea;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _scanAreaFlipped;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _scanAreaFlippedNonClipped;
    BOOL  _scanComplete;
    BOOL  _scanInProgress;
    double  _scanProgressDone;
    NSURL * _scannedURL;
    IKScannerDeviceViewHandler * _scannerDeviceViewHandler;
    IKNSelection * _selection;
    BOOL  _shouldAutoScan;
}

@property (atomic, readwrite) double angle;
@property (atomic, readwrite) double angle0;
@property (atomic, readwrite) double angle1;
@property (atomic, readwrite) double angle2;
@property (atomic, readwrite) double angle3;
@property (atomic, readwrite) int autoBitDepth;
@property (atomic, readwrite) int autoResolution;
@property (atomic, readwrite) struct CGImage { }*cgImage;
@property (atomic, readwrite) id extraStorage;
@property (atomic, readonly) double ikSelectionAngle;
@property (atomic, readonly) struct CGPoint { double x1; double x2; } ikSelectionPosition;
@property (atomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } ikSelectionRect;
@property (atomic, readwrite) int index;
@property (atomic, readwrite) double overviewToFinalScaling;
@property (atomic, readwrite) struct CGPoint { double x1; double x2; } pt0;
@property (atomic, readwrite) struct CGPoint { double x1; double x2; } pt1;
@property (atomic, readwrite) struct CGPoint { double x1; double x2; } pt2;
@property (atomic, readwrite) struct CGPoint { double x1; double x2; } pt3;
@property (atomic, readwrite) double rho0;
@property (atomic, readwrite) double rho1;
@property (atomic, readwrite) double rho2;
@property (atomic, readwrite) double rho3;
@property (atomic, readwrite) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } scanArea;
@property (atomic, readwrite) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } scanAreaFlipped;
@property (atomic, readwrite) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } scanAreaFlippedNonClipped;
@property (atomic, readwrite) BOOL scanComplete;
@property (atomic, readwrite) BOOL scanInProgress;
@property (nonatomic, readwrite) double scanProgressDone;
@property (atomic, readwrite, copy) NSURL *scannedURL;
@property (atomic, readwrite) IKScannerDeviceViewHandler *scannerDeviceViewHandler;
@property (atomic, readwrite) IKNSelection *selection;
@property (atomic, readwrite) BOOL shouldAutoScan;

- (double)angle;
- (double)angle0;
- (double)angle1;
- (double)angle2;
- (double)angle3;
- (int)autoBitDepth;
- (int)autoResolution;
- (struct CGImage { }*)cgImage;
- (void)cleanup;
- (void)createCGImageFromBuffer;
- (void)dealloc;
- (id)description;
- (id)extraStorage;
- (void)finalize;
- (double)ikSelectionAngle;
- (struct CGPoint { double x1; double x2; })ikSelectionPosition;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })ikSelectionRect;
- (id)imageRepresentation;
- (id)imageRepresentationType;
- (id)imageTitle;
- (id)imageUID;
- (int)index;
- (id)init;
- (id)initWithIKNSelection:(id)arg1;
- (id)initWithImage:(struct CGImage { }*)arg1 rect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (double)overviewToFinalScaling;
- (struct CGPoint { double x1; double x2; })pt0;
- (struct CGPoint { double x1; double x2; })pt1;
- (struct CGPoint { double x1; double x2; })pt2;
- (struct CGPoint { double x1; double x2; })pt3;
- (double)rho0;
- (double)rho1;
- (double)rho2;
- (double)rho3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })scanArea;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })scanAreaFlipped;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })scanAreaFlippedNonClipped;
- (BOOL)scanComplete;
- (BOOL)scanInProgress;
- (double)scanProgressDone;
- (id)scannedURL;
- (id)scannerDeviceViewHandler;
- (id)selection;
- (void)setAngle0:(double)arg1;
- (void)setAngle1:(double)arg1;
- (void)setAngle2:(double)arg1;
- (void)setAngle3:(double)arg1;
- (void)setAngle:(double)arg1;
- (void)setAutoBitDepth:(int)arg1;
- (void)setAutoResolution:(int)arg1;
- (void)setCgImage:(struct CGImage { }*)arg1;
- (void)setExtraStorage:(id)arg1;
- (void)setIndex:(int)arg1;
- (void)setOverviewToFinalScaling:(double)arg1;
- (void)setPt0:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPt1:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPt2:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPt3:(struct CGPoint { double x1; double x2; })arg1;
- (void)setRho0:(double)arg1;
- (void)setRho1:(double)arg1;
- (void)setRho2:(double)arg1;
- (void)setRho3:(double)arg1;
- (void)setScanArea:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setScanAreaFlipped:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setScanAreaFlippedNonClipped:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setScanComplete:(BOOL)arg1;
- (void)setScanInProgress:(BOOL)arg1;
- (void)setScanProgressDone:(double)arg1;
- (void)setScannedURL:(id)arg1;
- (void)setScannerDeviceViewHandler:(id)arg1;
- (void)setSelection:(id)arg1;
- (void)setShouldAutoScan:(BOOL)arg1;
- (BOOL)shouldAutoScan;
- (BOOL)simpleScanAreaDetection:(struct vImage_Buffer { void *x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; }*)arg1 top:(int)arg2 bottom:(int)arg3 left:(int)arg4 right:(int)arg5 validateResult:(BOOL)arg6;
- (BOOL)simpleScanAreaDetection:(struct vImage_Buffer { void *x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; }*)arg1 validateResult:(BOOL)arg2;
- (BOOL)update:(struct vImage_Buffer { void *x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; }*)arg1 imageIndex:(unsigned char)arg2;
- (BOOL)validScanAreaForBuffer:(struct vImage_Buffer { void *x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; }*)arg1;

@end
