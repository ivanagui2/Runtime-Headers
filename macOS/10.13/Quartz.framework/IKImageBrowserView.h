/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
 */

@interface IKImageBrowserView : NSView <DebugHierarchyObject, NSDraggingSource> {
    id  _dataSource;
    id  _delegate;
    id  _dragDestinationDelegate;
    NSScroller * _horizontalScroller;
    void * _reserved;
    NSScroller * _verticalScroller;
}

@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readonly) Class superclass;

// Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit

+ (id)IKStringFromSize:(long long)arg1;
+ (id)requiredOpenGLExtensions;
+ (double)textHeightForAttributes:(id)arg1 clamp:(BOOL)arg2;

- (int)__heightOfSubtitle;
- (int)__heightOfTitle;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_boundsForCARenderer;
- (void)_cacheDidPurge:(id)arg1;
- (void)_cacheWillPurge:(id)arg1;
- (BOOL)_containsCell:(id)arg1;
- (id)_createLayer;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_effectiveLayerBoundsForTransforms;
- (void)_enclosingClipViewDidChange:(id)arg1;
- (void)_focusDidChange:(id)arg1;
- (void)_ikAllocReservedIfNeeded;
- (void)_ikCommonInit:(id)arg1;
- (id)_newCellForRepresentedItem:(id)arg1;
- (void)_propagateTitleAttributes:(id)arg1 toFinderSpecificAttributeKey:(id)arg2 excludeLineBreakMode:(BOOL)arg3;
- (void)_superviewBoundsDidChange:(id)arg1;
- (void)_updateLayerGeometryFromView;
- (id)_viewIdentifier;
- (void)_willInitWithCoder;
- (BOOL)allowsDropOnItems;
- (BOOL)allowsDroppingOnItems;
- (BOOL)allowsReordering;
- (BOOL)animates;
- (void)applicationWillTerminate:(id)arg1;
- (void)awakeFromNib;
- (BOOL)backBufferIsValid;
- (id)caRenderer;
- (id)cacheManager;
- (id)cellAtIndex:(unsigned long long)arg1;
- (Class)cellClass;
- (id)cellForItemAtIndex:(unsigned long long)arg1;
- (struct CGSize { double x1; double x2; })cellSize;
- (id)cells;
- (BOOL)constrainsToOriginalSize;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (id)dataSource;
- (void)dealloc;
- (id)defaultStringForStatusWithFileWeight:(BOOL)arg1;
- (id)delegate;
- (BOOL)delegatesImageManagementToDatasource;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)duplicate:(id)arg1;
- (BOOL)enableDragFlocking;
- (BOOL)enableMulticore;
- (BOOL)enablePrefetch;
- (id)enclosingClipView;
- (void)encodeWithCoder:(id)arg1;
- (void)finalize;
- (BOOL)finderMode;
- (id)grid;
- (id)horizontalScroller;
- (struct CGSize { double x1; double x2; })imageBoundingBoxSize;
- (id)imageBrowserContext;
- (unsigned long long)indexAtLocationOfDroppedItem;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)initializeNewItem:(id)arg1;
- (id)kvoContent;
- (id)lastDiff;
- (id)layoutManager;
- (int)loadingFeedbackType;
- (float)loadingProgressValue;
- (id)loadingString;
- (BOOL)maximizedMode;
- (id)newCellForRepresentedItem:(id)arg1;
- (void)openWithApplication:(id)arg1;
- (void)openWithFinder:(id)arg1;
- (void)paste:(id)arg1;
- (void)registerToNotifications;
- (void)remove:(id)arg1;
- (void)revealInFinder:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)setAllowsDropOnItems:(BOOL)arg1;
- (void)setAllowsDroppingOnItems:(BOOL)arg1;
- (void)setAllowsReordering:(BOOL)arg1;
- (void)setAnimates:(BOOL)arg1;
- (void)setCacheManager:(id)arg1;
- (void)setCellClass:(Class)arg1;
- (void)setCellSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setConstrainsToOriginalSize:(BOOL)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDelegatesImageManagementToDatasource:(BOOL)arg1;
- (void)setDisplayLoadingFrame:(BOOL)arg1;
- (void)setEnableDragFlocking:(BOOL)arg1;
- (void)setEnableMulticore:(BOOL)arg1;
- (void)setEnablePrefetch:(BOOL)arg1;
- (void)setFinderMode:(BOOL)arg1;
- (void)setHorizontalScroller:(id)arg1;
- (void)setImageBoundingBoxSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setImageBrowserContext:(id)arg1;
- (void)setKVOContent:(id)arg1;
- (void)setLayer:(id)arg1;
- (void)setLoadingFeedbackType:(int)arg1;
- (void)setLoadingProgressValue:(double)arg1;
- (void)setLoadingString:(id)arg1;
- (void)setMaximizedMode:(BOOL)arg1;
- (void)setSpaceOutCellsAtDropLocation:(BOOL)arg1;
- (void)setSyncTasksMaxDelay:(double)arg1;
- (void)setSyncTasksMaxInitialDelay:(double)arg1;
- (void)setTrackingOfRequestingViewsEnabled:(BOOL)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setVerticalScroller:(id)arg1;
- (void)setZoomValue:(float)arg1;
- (void)setupRegisteredDraggedTypes;
- (id)snapshotOfItemAtIndex:(unsigned long long)arg1;
- (BOOL)spaceOutCellsAtDropLocation;
- (void)switchOffCARenderer;
- (void)switchOnCARenderer;
- (void)switchOnCARenderer:(id)arg1;
- (double)syncTasksMaxDelay;
- (double)syncTasksMaxInitialDelay;
- (id)thumbnailImageAtIndex:(unsigned long long)arg1;
- (BOOL)trackingOfRequestingViewsEnabled;
- (void)updateIntercellSpacingIfNeeded;
- (BOOL)validateMenuItem:(id)arg1;
- (id)valueForUndefinedKey:(id)arg1;
- (id)verticalScroller;
- (void)viewDidHide;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (BOOL)wantsBestResolutionOpenGLSurface;
- (float)zoomValue;
- (void)zoomValueDidChange;

// IKImageBrowserView (AccessibilityAdditions)

- (unsigned int)accessibilityArrayAttributeCount:(id)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityChildren;
- (id)accessibilityHitTest:(struct CGPoint { double x1; double x2; })arg1;
- (unsigned int)accessibilityIndexOfChild:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityItemForCell:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)accessibilitySelectedChildren;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;

// IKImageBrowserView (Appearance)

- (void)_adjustGridRowMargin;
- (void)_antialiasLevelChanged;
- (void)_backingStoreDidChange;
- (void)_colorProfileDidChange;
- (BOOL)_convertColor:(id)arg1 toRed:(float*)arg2 green:(float*)arg3 blue:(float*)arg4 alpha:(float*)arg5;
- (void)_onQCTimer;
- (void)_setBackgroundColorWithRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;
- (void)_setCellsOutlineColorRed:(float)arg1 green:(float)arg2 blue:(float)arg3;
- (void)_setDefaultTextAttributes;
- (void)_setSelectionColorRed:(float)arg1 green:(float)arg2 blue:(float)arg3;
- (void)_systemColorsDidChange;
- (int)appearanceStyle;
- (id)backgroundColor;
- (id)backgroundComposition;
- (void)backgroundDidChange;
- (id)backgroundIKImage;
- (BOOL)backgroundIsDark;
- (BOOL)backgroundIsSolidColor;
- (BOOL)backgroundIsWhite;
- (id)backgroundLayer;
- (BOOL)backgroundRequiresTextHighlight;
- (BOOL)cellsHaveSubtitle;
- (BOOL)cellsHaveTitle;
- (unsigned long long)cellsStyleMask;
- (BOOL)enableiOSGroupEditing;
- (struct { BOOL x1; double x2; double x3; double x4; double x5; double x6; unsigned long long x7; double x8; /* Warning: unhandled array encoding: '[3@]}' */ id x9[3]; }*)flavorAttributes;
- (void*)fogShader;
- (id)foregroundLayer;
- (int)imageBrowserFlavor;
- (BOOL)outlinesCells;
- (id)selectionColor;
- (void)setAppearanceStyle:(int)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setBackgroundComposition:(id)arg1;
- (void)setBackgroundImage:(id)arg1;
- (void)setBackgroundImageLayout:(int)arg1;
- (void)setBackgroundLayer:(id)arg1;
- (void)setCellsHaveSubtitle:(BOOL)arg1;
- (void)setCellsHaveTitle:(BOOL)arg1;
- (void)setCellsOutlineColor:(id)arg1;
- (void)setCellsStyleMask:(unsigned long long)arg1;
- (void)setEnableiOSGroupEditing:(BOOL)arg1;
- (void)setForegroundLayer:(id)arg1;
- (void)setImageBrowserFlavor:(int)arg1;
- (void)setOutlinesCells:(BOOL)arg1;
- (void)setSelectionColor:(id)arg1;
- (void)setShadowsCells:(BOOL)arg1;
- (BOOL)shadowsCells;
- (id)unfocusedSelectionColor;

// IKImageBrowserView (GenieEffect)

- (id)createGenieWindowForBoundingBox:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawSelectedItemsInGenieWindow:(id)arg1 withBoundingBox:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)genieEffectWithSelectionToScreenPosition:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })selectionBoundingBox;

// IKImageBrowserView (IKImageBrowserMagnifying)

- (void)alternateMagnifying:(int)arg1;
- (id)magnifyer;
- (void)redisplay;
- (void)startMagnifying:(int)arg1;
- (void)stopMagnifying;
- (void)updateMagnifying:(struct CGPoint { double x1; double x2; })arg1;

// IKImageBrowserView (IKImageBrowserTasks)

- (void)__didImportIcon:(id)arg1 forCell:(id)arg2 withSource:(id)arg3;
- (void)__didImportIcons;
- (void)__filterSyncTask:(id)arg1 regularImportOut:(id)arg2 iconImportOut:(id)arg3;
- (id)__parseDatasourceIfQuickLookBasedForIconFetching:(id)arg1;
- (void)__performSynchronousIconFetching:(id)arg1 delegate:(id)arg2;
- (void)__synchronousIconFetchingForSource:(id)arg1;
- (void)__willImportIcons;
- (void)_cancelSynchronousTask;
- (void)_delayedCacheDefragmentation;
- (void)_didStabilize;
- (BOOL)_enableSyncTasksForRegularImport;
- (void)_performAsyncImportIfAny:(id)arg1 delegate:(id)arg2;
- (int)_prepareThumbnailBuildersForCells:(id)arg1 size:(int)arg2 start:(long long)arg3 quality:(int)arg4 rule:(int)arg5 arrayOut:(id)arg6;
- (double)_sizeToImportForCell:(id)arg1;
- (void)_taskBeginNotification:(id)arg1;
- (void)_taskManagerEndedNotification:(id)arg1;
- (void)_taskManagerStartedNotification:(id)arg1;
- (void)_updateTasksCellsCopy;
- (void)abortSchedule;
- (id)cellsArrayForTasks;
- (void)invalidateSyncTaskCache;
- (BOOL)isBusyForTaskManager;
- (void)performSynchronousTasksIfAny;
- (id)prepareThumbnailBuilderForCell:(id)arg1 size:(double)arg2 quality:(int)arg3;
- (id)prepareThumbnailBuildersForCells:(id)arg1 size:(int)arg2 indexes:(id)arg3 quality:(int)arg4 rule:(int)arg5;
- (void)registerImageBrowserTasks;
- (void)restartTasks;
- (id)scheduleProgress;
- (BOOL)shouldStartTaskNamed:(id)arg1;
- (void)startSchedule;
- (id)taskManager;

// IKImageBrowserView (IKInlinePreview)

- (unsigned long long)_inlinePreviewCellIndexForEvent:(id)arg1;
- (void)_inlinePreviewLayerTreeDidUpdate;
- (void)_inlinePreviewMouseEnteredInCellAtIndex:(unsigned long long)arg1;
- (void)_inlinePreviewMouseExitedFromCellAtIndex:(unsigned long long)arg1;
- (BOOL)_itemIsAFolderAtIndex:(unsigned long long)arg1;
- (BOOL)_itemIsAFolderWithCustomIconAtIndex:(unsigned long long)arg1;
- (void)_mouseEnteredInRolloverCellAfterDelay;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_patchFrameForContentInset:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_refreshUserDefaultsForInlinePreview;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
- (BOOL)allowRolloverInlinePreviewForCellAtIndex:(unsigned long long)arg1;
- (BOOL)allowsInlinePreviews;
- (void)beginPreviewPanelControl:(id)arg1;
- (BOOL)canControlQuickLookPanel;
- (unsigned long long)cellIndexForInlinePreviewController:(id)arg1;
- (void)displayRolloverInlinePreviewForCellAtIndex:(unsigned long long)arg1;
- (void)drawInlinePreview;
- (void)endPreviewPanelControl:(id)arg1;
- (void)hidePlayedInlinePreview;
- (void)hideRolloverInlinePreview;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })inlinePreview:(id)arg1 contentFrameForPreviewItem:(id)arg2;
- (void)inlinePreview:(id)arg1 didChangeToState:(int)arg2;
- (void)inlinePreview:(id)arg1 didLoadPreviewItem:(id)arg2;
- (int)inlinePreview:(id)arg1 expectedModeForPreviewItem:(id)arg2 flavor:(int*)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })inlinePreview:(id)arg1 frameForPreviewItem:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })inlinePreview:(id)arg1 rolloverFrameForPreviewItem:(id)arg2;
- (void)inlinePreview:(id)arg1 willHidePreview:(id)arg2;
- (void)inlinePreview:(id)arg1 willLoadPreviewItem:(id)arg2;
- (BOOL)inlinePreviewEnabled;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })inlinePreviewFrameForItemAtIndex:(unsigned long long)arg1;
- (id)inlinePreviewItemsForCellIndexes:(id)arg1;
- (int)inlinePreviewModeForCellAtIndex:(unsigned long long)arg1 item:(id)arg2;
- (BOOL)inlinePreviewMouseDown:(id)arg1;
- (BOOL)inlinePreviewMouseEntered:(id)arg1;
- (BOOL)inlinePreviewMouseExited:(id)arg1;
- (id)inlinePreviewView;
- (void)inlinePreviewWillLoadForItemAtIndex:(unsigned long long)arg1;
- (struct CGPoint { double x1; double x2; })mousePositionInView;
- (void)needsToUpdatePreviewPanelFrame:(id)arg1;
- (void)nicestRenderingDoneAndUpdateInlinePreviewFrame:(id)arg1;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (id)previewItemForCellAtIndex:(unsigned long long)arg1;
- (BOOL)previewPanel:(id)arg1 handleEvent:(id)arg2;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (id)previewPanel:(id)arg1 sharedPreviewViewForPreviewItem:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (id)previewPanel:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg3;
- (void)removeAllInlinePreviewTrackingAreasAndStopPlaying:(BOOL)arg1;
- (void)selectionDidChangeForInlinePreview;
- (void)setCanControlQuickLookPanel:(BOOL)arg1;
- (void)setInlinePreviewEnabled:(BOOL)arg1;
- (void)setSharingPreviewPanel:(id)arg1;
- (void)setupInlinePreview;
- (void)setupInlinePreviewControllers;
- (id)sharingPreviewPanel;
- (BOOL)shouldBypassDrawingForCell:(id)arg1;
- (BOOL)shouldUseXRayFolderForItemAtIndex:(unsigned long long)arg1;
- (void)swapRolloverAndPlayedPreviewControllerIfNeededWhenUserStartsInlinePreview:(id)arg1;
- (void)unsetupInlinePreview;
- (BOOL)updateInlinePreviewFrameIfNeeded;
- (void)updateInlinePreviewTrackingAreas;
- (void)updateQuickLookPanelWithSelection;
- (unsigned long long)visibleCellIndexForPreviewItem:(id)arg1;

// IKImageBrowserView (IKToolTips)

- (void)addToolTip:(id)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)installToolTips;
- (void)removeAllToolTipsIfNeeded;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint { double x1; double x2; })arg3 userData:(void*)arg4;

// IKImageBrowserView (IconFlavorAdditions)

- (BOOL)disableTwoLineTitles;
- (BOOL)showItemInfo;

// IKImageBrowserView (ImageBrowserAnimation)

- (BOOL)animationChannelEnabled:(id)arg1;
- (id)animationManager;
- (id)animationValueForKey:(id)arg1 forCell:(id)arg2;
- (void)animationsDidFinish;
- (unsigned int)animationsMask;
- (void)initAppearingAnimationWithItems:(id)arg1 diff:(id)arg2;
- (void)initImportAnimationWithIndexes:(id)arg1;
- (void)initMovingAndDisappearingAnimationWithItems:(id)arg1 diff:(id)arg2;
- (BOOL)isAnimating;
- (void)setAnimationsMask:(unsigned int)arg1;
- (BOOL)shouldAnimateAppearingAndDisappearingDatasourceItems;

// IKImageBrowserView (ImageBrowserDatasource)

- (void)_reloadCellDataAtIndex:(unsigned long long)arg1;
- (void)_reloadData;
- (void)_resetiOSGroupsDimFactor;
- (unsigned long long)amountOfMemoryOfCurrentDataSource:(BOOL)arg1;
- (void)bumpDatasourceVersion;
- (void)clearPresentationDatasource;
- (BOOL)dataSourceRespondsToRequiredMethods:(id)arg1;
- (void)datasourceDidChange;
- (unsigned int)datasourceVersion;
- (id)getDataSourceArray:(unsigned long long)arg1;
- (id)gridGroupFromDictionary:(id)arg1;
- (void)notifyCellsForChanges:(id)arg1;
- (void)reloadAllCellsData;
- (void)reloadCellDataAtIndex:(unsigned long long)arg1;
- (void)reloadData;
- (void)removeAllCells;
- (void)setupPresentationDatasource;
- (BOOL)updateGroups:(id)arg1;
- (void)updateItemList;
- (void)updateiOSGroupMasterCells;

// IKImageBrowserView (ImageBrowserDragNDropInternal)

- (void)_autoExpendiOSForDrag;
- (unsigned long long)_calculateDraggingOperationWithDrop:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_caretFrame;
- (BOOL)_caretIsHorizontal;
- (void)_delayedUpdateiOSPresentationDatasource:(id)arg1;
- (id)_dragFlockIconImageForItem:(id)arg1 componentMask:(int)arg2 frameOut:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg3;
- (id)_dragFlockIconImageForItem:(id)arg1 inFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2;
- (id)_dragFlockLabelImageForItem:(id)arg1 inFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2;
- (id)_dragFlockingImageComponentsForItem:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)_draggedImageForFreeFormLayoutWithClickedPoint:(struct CGPoint { double x1; double x2; })arg1 hotPoint:(struct CGPoint { double x1; double x2; }*)arg2;
- (id)_draggedImageWithFBOWithIndexes:(id)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_draggingFrameForDraggingItem:(id)arg1 componentMask:(int)arg2 image:(id)arg3;
- (void)_drawItemTitlesForDragImage:(id)arg1;
- (void)_drawItemsForDragImage:(id)arg1;
- (void)_hideiOSDraggedItem:(BOOL)arg1;
- (void)_highlightiOSItemAtIndex:(unsigned long long)arg1;
- (void)_setiOSHighlightedGroupIndex:(unsigned long long)arg1;
- (void)_setiOSItemAtIndex:(unsigned long long)arg1 highlighted:(BOOL)arg2;
- (void)_unhighlightiOSItemAtIndex:(unsigned long long)arg1;
- (void)_updateDraggingItemsForDrag:(id)arg1;
- (void)_updateIndexAndDropOperationWithDrop:(id)arg1;
- (void)_updateiOSGroupsRangeByMovingItemFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)_waitForPendingiOSGroupAnimations;
- (int)computeRealDropIndexFromIndex:(int)arg1 takingInAccountHiddenItemsIndexes:(id)arg2;
- (void)concludeDragOperation:(id)arg1;
- (long long)copyDataToPasteboard:(id)arg1 indexes:(id)arg2;
- (struct CGPoint { double x1; double x2; })dragStartPoint;
- (id)draggedImage;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint { double x1; double x2; })arg2 operation:(unsigned long long)arg3;
- (id)draggedImageWithEvent:(id)arg1 countBadge:(int)arg2 hotPoint:(struct CGPoint { double x1; double x2; }*)arg3;
- (int)draggedItem;
- (id)draggingDestinationDelegate;
- (void)draggingEnded:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (long long)dropGroupIndex;
- (int)dropGroupOperation;
- (void)dropIndex:(unsigned long long*)arg1 dropOp:(int*)arg2 groupIndex:(unsigned long long*)arg3 groupOp:(int*)arg4 appendAtEndOfGroup:(BOOL*)arg5;
- (int)dropOperation;
- (id)getCountBadgeForCount:(int)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })groupRangeAtLocationOfDroppedItem;
- (unsigned long long)indexOfDraggedItem;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)setDragDestinationDelegate:(id)arg1;
- (void)setDraggingDestinationDelegate:(id)arg1;
- (void)setDropGroupIndex:(long long)arg1 dropGroupOperation:(int)arg2;
- (void)setDropGroupIndex:(long long)arg1 dropGroupOperation:(int)arg2 appendAtEndOfGroup:(BOOL)arg3;
- (void)setDropIndex:(long long)arg1 dropOperation:(int)arg2;
- (void)setIsDraggingOver:(BOOL)arg1;
- (void)setReordering:(BOOL)arg1;
- (void)startDragNDropWithEvent:(id)arg1;
- (void)startDragNDropWithEvent:(id)arg1 itemIndexes:(id)arg2;
- (void)startiOSGroupEditing;
- (void)startiOSGroupEditingIfNeeded;
- (void)stopiOSGroupEditingIfNeeded;
- (void)updateDraggingItemsForDrag:(id)arg1;
- (void)updateiOSGroupEditionWithDrag:(id)arg1 delayed:(BOOL)arg2;
- (void)updateiOSGroupOpenStateWithDrag:(id)arg1;

// IKImageBrowserView (ImageBrowserDrawing)

- (void)_checkForVisibleCellIndexesChange;
- (void)_drawCALayer:(id)arg1 forceUpdateRect:(BOOL)arg2;
- (void)_drawDebugRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withOffset:(int)arg2;
- (void)_drawQCBackground;
- (void)_drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_imageFromGLForRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_imageInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withContext:(id)arg2;
- (void)_postCleanDegradedRendering;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_progressBarRect;
- (void)_sidebarBottomColor:(id*)arg1 topColor:(id*)arg2;
- (void)_tileBackgroundImageInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)caNeedsDisplay;
- (void)cellWillDrawPlaceHolder:(id)arg1;
- (void)drawBackground:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawBackgroundOverhangInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawDebugGrid;
- (void)drawDebugSchedulePriorityRanges;
- (void)drawDragBackground;
- (void)drawDragOverlays;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext { }*)arg2;
- (void)drawLayer:(id)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 performUpdateRect:(BOOL)arg3;
- (void)drawLoadingFrame;
- (void)drawOverlays;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawSelectionAndOverlays;
- (void)drawSelectionFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawVisibleCells:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)drawWithCurrentRendererInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)imageForRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)performRenderTimeLayoutModifiers:(id)arg1;
- (void)refreshLoadingProgressBar;
- (int)renderLevel;
- (void)scrollScreenBy:(struct CGSize { double x1; double x2; })arg1;
- (void)setNextFrameTime:(double)arg1;
- (void)setRenderLevel:(int)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })viewportRect;

// IKImageBrowserView (ImageBrowserEvents)

- (id)_browserCellFromEvent:(id)arg1;
- (void)_endScrollingInGroup:(id)arg1;
- (long long)_internalNextTypeSelectMatchFromIndex:(long long)arg1 toIndex:(long long)arg2 forString:(id)arg3;
- (BOOL)_performTypeSelect:(id)arg1;
- (void)_rightMouseDown:(id)arg1;
- (void)_scrollPageInDirection:(int)arg1;
- (void)_setScrollingGroup:(id)arg1;
- (void)_startDelayedTitleEditingWithEvent;
- (void)_typeSelectEndCurrentSearch;
- (BOOL)_typeSelectInterpretKeyEvent:(id)arg1;
- (BOOL)_typeSelectUndoLastSearch;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)arrowKeyDown:(unsigned short)arg1 withModifier:(unsigned int)arg2;
- (BOOL)becomeFirstResponder;
- (void)beginGestureWithEvent:(id)arg1;
- (void)defaultDoubleClickAction:(int)arg1;
- (BOOL)enableMagnification;
- (void)endGestureWithEvent:(id)arg1;
- (void)forwardEvent:(id)arg1 to:(id)arg2;
- (BOOL)handleKeyInput:(id)arg1 character:(unsigned short)arg2;
- (BOOL)hasFocus;
- (void)keyDown:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseUp:(id)arg1;
- (int)nextIndexInGridLayoutWithDirectionKey:(unsigned short)arg1 currentIndex:(long long)arg2;
- (void)pageDown:(id)arg1;
- (void)pageUp:(id)arg1;
- (void)removeTrackingAreas;
- (BOOL)resignFirstResponder;
- (void)rightMouseDown:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (float)scrollWheelMultiplier;
- (void)setClickableArea:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 target:(id)arg2 selector:(SEL)arg3 info:(id)arg4;
- (void)setEnableMagnification:(BOOL)arg1;
- (void)setMouseTracker:(id)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)trackMouseEvent:(id)arg1;
- (void)updateTrackingAreas;

// IKImageBrowserView (ImageBrowserIPhotoImport)

- (BOOL)importAllToIphoto;
- (BOOL)importFilesToIPhoto:(id)arg1;
- (BOOL)importSelectionToIPhoto;
- (void)threadedExecScript:(id)arg1;

// IKImageBrowserView (ImageBrowserImport)

- (BOOL)__didComputeThumbnail:(id)arg1;
- (id)_cellIndexesToImport;
- (id)_cellsToImport:(id*)arg1;
- (BOOL)_didComputeThumbnail:(id)arg1;
- (void)_didImportAsynchronousThumbnail:(id)arg1;
- (void)_didImportCellsAtIndexes:(id)arg1;
- (void)_didImportThumbnail:(id)arg1;
- (void)_didPrefetchAsynchronousThumbnail:(id)arg1;
- (BOOL)_importThumbnails:(id)arg1 state:(struct { unsigned long long x1; BOOL x2; }*)arg2;
- (id)_indexesToPrefetch;
- (BOOL)_needImport:(id)arg1 forCellSize:(double)arg2;
- (BOOL)_needToPrefetchCell:(id)arg1;
- (void)_prefetchThumbnails:(id)arg1 state:(struct { unsigned long long x1; BOOL x2; }*)arg2;
- (BOOL)_shouldProcessLongTasks;
- (void)_taskRedisplay;
- (void)abortImportVisibleCells;
- (void)abortScrollPrefetchTask;
- (void)abortZoomPrefetchTask;
- (BOOL)didImportCell:(id)arg1 thumbnail:(id)arg2;
- (BOOL)directImportMode;
- (void)fetchThumbnailForCell:(id)arg1;
- (BOOL)iconImportDisabled;
- (void)importCellSynchronously:(id)arg1;
- (id)importVisibleCellsPriority;
- (id)importVisibleCellsProgress;
- (id)scrollPrefetchTaskDelay;
- (id)scrollPrefetchTaskProgress;
- (void)setDirectImportMode:(BOOL)arg1;
- (void)setIconImportDisabled:(BOOL)arg1;
- (void)startImportVisibleCells;
- (void)startScrollPrefetchTask;
- (void)startZoomPrefetchTask;
- (id)zoomPrefetchTaskDelay;
- (id)zoomPrefetchTaskProgress;

// IKImageBrowserView (ImageBrowserLayout)

- (id)__ikVisibleRect;
- (struct CGPoint { double x1; double x2; })_additionalOffsetForContentInset;
- (void)_adjustFreeFormLayout;
- (void)_beginLayoutTransaction;
- (void)_commitLayoutTransaction;
- (struct CGPoint { double x1; double x2; })_currentViewOffset;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_ikVisibleRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_ikVisibleRectMinusContentInset;
- (void)_updateFreeFormLayoutAtIndexes:(id)arg1 ignoreZValues:(BOOL)arg2;
- (void)_updateGridSize;
- (void)adjustFreeFormScaleFactor;
- (void)beginTransaction:(id)arg1;
- (struct { double x1; double x2; })cellAnchorDocumentPointAtIndex:(unsigned long long)arg1;
- (struct CGPoint { double x1; double x2; })cellAnchorPointAtIndex:(unsigned long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })cellAnchoredFrameAtIndex:(unsigned long long)arg1 forItem:(id)arg2;
- (struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })cellDocumentRectAtIndex:(unsigned long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })cellFrameAtIndex:(unsigned long long)arg1;
- (struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })cellImageDocumentRectAtIndex:(unsigned long long)arg1;
- (long long)cellIndexAtDocumentPosition:(struct { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })cellMaximumSizeForCurrentBounds;
- (id)columnIndexesInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)commitTransaction;
- (unsigned long long)contentResizingMask;
- (struct CGPoint { double x1; double x2; })convertPointFromDocumentToView:(struct { double x1; double x2; })arg1;
- (struct { double x1; double x2; })convertPointFromViewToDocument:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGPoint { double x1; double x2; })convertPointFromWindowToView:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRectFromDocumentToView:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })convertRectFromViewToDocument:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (int)defaultHeightOfInfoSpaceWithCurrentViewOptions;
- (struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })documentVisibleRect;
- (void)frameDidChange:(id)arg1;
- (void)freeFormLayoutDidChange;
- (BOOL)freeFormLayoutMode;
- (void)freeFormLayoutMoveWithDrop:(id)arg1;
- (struct CGSize { double x1; double x2; })freeFormScaleFactor;
- (struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })gridVisibleRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })imageFrameAtIndex:(unsigned long long)arg1;
- (id)imageIndexesInDocumentRect:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)imageIndexesInDocumentRect:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1 includesCollapsedIndexes:(BOOL)arg2;
- (long long)indexOfItemAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)indexesMinusOverflowIndexes:(id)arg1;
- (id)indexesPlusCollapsedIndexesAtIndexes:(id)arg1;
- (struct CGSize { double x1; double x2; })intercellSpacing;
- (void)invalidateCellsLayout;
- (void)invalidateCellsLayoutAtIndexes:(id)arg1;
- (BOOL)isCellPartiallyObscuredAtIndex:(unsigned long long)arg1 onlyTestImage:(BOOL)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })itemFrameAtIndex:(long long)arg1;
- (BOOL)layoutOfCellAtIndexIsValid:(unsigned long long)arg1;
- (void)layoutOfCellIndexesDidChange:(id)arg1;
- (BOOL)locationInView:(struct CGPoint { double x1; double x2; })arg1 hitCellAtIndex:(int)arg2;
- (int)nextIndexInFreeFormLayoutWithDirectionKey:(unsigned short)arg1 currentIndex:(long long)arg2;
- (unsigned long long)numberOfColumns;
- (unsigned long long)numberOfRows;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectOfColumn:(unsigned long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectOfRow:(unsigned long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rolloverFrameForCellAtIndex:(unsigned long long)arg1;
- (id)rowIndexesInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)scrollViewFrameDidChange:(id)arg1;
- (void)setContentResizingMask:(unsigned long long)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setFreeFormLayoutMode:(BOOL)arg1;
- (void)setFreeFormLayoutMode:(BOOL)arg1 animate:(BOOL)arg2;
- (void)setIntercellSpacing:(struct CGSize { double x1; double x2; })arg1;
- (void)sizeToFit;
- (struct CGSize { double x1; double x2; })sizeToFitWithGroups:(unsigned long long)arg1 columns:(unsigned long long)arg2;
- (void)spaceOutCellsForDropShouldReset:(BOOL)arg1 animate:(BOOL)arg2;
- (void)translateAllCellsBy:(struct CGSize { double x1; double x2; })arg1;
- (void)updateFreeFormLayout;
- (void)updateFreeFormLayoutAtIndexes:(id)arg1;
- (void)updateGridContent;
- (void)updateGridContentAtIndexes:(id)arg1;
- (void)updateLayout;
- (void)updateLayoutAtIndexes:(id)arg1;
- (void)updateLayoutOfCells;
- (void)updateLayoutOfCellsAtIndexes:(id)arg1;
- (void)validateCellLayoutAtIndex:(unsigned long long)arg1;
- (void)validateCellsLayoutAtIndexes:(id)arg1;
- (struct CGPoint { double x1; double x2; })viewOffsetForCurrentClipRect;
- (id)visibleCellIndexes;
- (void)visibleCellIndexesDidChange;
- (id)visibleItemIndexes;

// IKImageBrowserView (ImageBrowserMisc)

- (void)runFullPerformanceTest;
- (float)secondsSinceTop:(BOOL)arg1;
- (void)testAnimationPerformances;
- (void)testImageCountPerformances;
- (void)testScrollPerformances;
- (void)testScrollPerformancesWithDelta:(float)arg1 withCount:(int)arg2;
- (void)testZoomPerformances;
- (void)top;

// IKImageBrowserView (ImageBrowserNicestRenderLoop)

- (void)_initNicestRenderingCellOrderedIndexes;
- (int)_nicestRederingCellIndexAtIndex:(int)arg1;
- (void)abortNicestRendering;
- (id)nicestRenderingDelay;
- (BOOL)nicestRenderingEnabled;
- (void)nicestRenderingExpendStep;
- (BOOL)nicestRenderingIsDone;
- (void)nicestRenderingLoop;
- (void)nicestRenderingPrepareExpendStep:(id)arg1;
- (id)nicestRenderingProgress;
- (void)setEnableNicestRendering:(BOOL)arg1;
- (void)startNicestRendering;

// IKImageBrowserView (ImageBrowserScrolling)

+ (BOOL)isCompatibleWithResponsiveScrolling;

- (void)_adjustDocumentOffset:(struct CGSize { double x1; double x2; })arg1;
- (void)_adjustDocumentSize;
- (void)_adjustLineScroll;
- (void)_adjustLineScrollWithSnap:(BOOL)arg1;
- (void)_adjustScroller:(id)arg1 withDocumentLength:(double)arg2 withViewLength:(double)arg3 offset:(double)arg4;
- (id)_currentScrollingAnimation;
- (void)_focusImageAtIndex:(unsigned long long)arg1 progressive:(BOOL)arg2;
- (struct { double x1; double x2; })_offsetToFocusItemAtIndex:(unsigned long long)arg1;
- (void)_scrollIndexToVisible:(unsigned long long)arg1;
- (void)_stopAutoscroll;
- (void)_updateCurrentAutoscrollInGroupValueWithPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)adjustDocumentSize;
- (void)adjustScrollOffsetFromClipView:(BOOL)arg1;
- (void)adjustScroller;
- (BOOL)autoscroll:(id)arg1;
- (void)autoscrollCallBack;
- (void)autoscrollCallBackInGroup;
- (BOOL)autoscrollInGroup:(id)arg1 withLocalPoint:(struct CGPoint { double x1; double x2; })arg2;
- (BOOL)autoscrollWithLocalPoint:(struct CGPoint { double x1; double x2; })arg1 andSensitiveMargin:(float)arg2;
- (void)browserDidScroll;
- (void)delayedUpdateTrackingAreasAfterScrolling;
- (void)focusImageAtIndex:(unsigned long long)arg1;
- (void)focusImageAtIndex:(unsigned long long)arg1 progressive:(BOOL)arg2;
- (void)focusImageAtIndexAndRedisplay:(unsigned long long)arg1;
- (void)focusImageAtIndexAndRedisplayIfNeeded:(unsigned long long)arg1;
- (unsigned long long)focusedImageIndex;
- (void)initProgressiveFocus:(unsigned long long)arg1;
- (void)installScrollValuesToScrollView:(id)arg1;
- (void)invalidateFocusedIndex;
- (unsigned long long)mostCenteredImageIndex;
- (BOOL)scrollBy:(struct CGSize { double x1; double x2; })arg1;
- (void)scrollIndexToVisible:(long long)arg1;
- (BOOL)scrollRectToVisible:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)scrollStepInDirection:(int)arg1;
- (BOOL)scrollTo:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)scrollToNormalizedValue:(struct CGPoint { double x1; double x2; })arg1;
- (void)scrollerDidChange:(id)arg1;
- (void)startAutoscroll;
- (void)stopAutoscroll;
- (void)stopAutoscrollInGroup;
- (void)validateFocusedIndex;

// IKImageBrowserView (ImageBrowserSelection)

- (struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })_currentSelectionFrame;
- (id)_nextSelectionIndexesWithIndexesInRect:(id)arg1 withModifier:(unsigned int)arg2;
- (BOOL)_selectItem:(BOOL)arg1 atIndex:(unsigned long long)arg2;
- (void)_selectItems:(BOOL)arg1 inIndexSet:(id)arg2;
- (void)_selectItemsInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 selected:(BOOL)arg2;
- (void)_selectionDidChange:(BOOL)arg1;
- (void)_selectionWillChange:(BOOL)arg1;
- (BOOL)_setSelectionIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2 notifyObservers:(BOOL)arg3;
- (BOOL)allowsEmptySelection;
- (BOOL)allowsMultipleSelection;
- (BOOL)allowsTypeSelect;
- (void)deleteSelection;
- (void)endSelectionProcess:(struct { double x1; double x2; })arg1;
- (struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })getCurrentSelectionFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })graphicalSelectionFrame;
- (void)invalidateLastSelectedIndex;
- (BOOL)isItemSelectedAtIndex:(unsigned long long)arg1;
- (BOOL)isSelecting;
- (void)rememberForPreviousSelectedItem;
- (void)resetSelectionIndexes;
- (void)selectAllItems;
- (BOOL)selectItem:(BOOL)arg1 atIndex:(unsigned long long)arg2;
- (void)selectItemsInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)selectionDidChange;
- (id)selectionIndexes;
- (void)selectionWillChange;
- (void)setAllowsEmptySelection:(BOOL)arg1;
- (void)setAllowsMultipleSelection:(BOOL)arg1;
- (void)setSelectedItemsHidden:(BOOL)arg1;
- (void)setSelectedItemsReordering:(BOOL)arg1;
- (void)setSelectionIndexes:(id)arg1;
- (void)setSelectionIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (void)startSelectionProcess:(struct { double x1; double x2; })arg1;
- (void)unselectAllItems;
- (void)unselectItemsInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)updateSelectionListFromSelectionFrame;
- (void)updateSelectionListWithNewSelectionIndexes:(id)arg1 withModifier:(unsigned int)arg2;
- (void)updateSelectionProcess:(struct { double x1; double x2; })arg1;

// IKImageBrowserView (ImageBrowserSlideShow)

- (void)_buildSlideShowIndexesArray;
- (id)_slideShowItemAtIndex:(unsigned long long)arg1;
- (BOOL)_slideShowItemValidAtIndex:(unsigned long long)arg1;
- (BOOL)canExportSlideshowItemAtIndex:(long long)arg1 toApplication:(id)arg2;
- (BOOL)canStartSlideShow;
- (int)numberOfSlideshowItems;
- (void)slideshowDidStop;
- (id)slideshowItemAtIndex:(int)arg1;
- (void)startSlideShow:(id)arg1;

// IKImageBrowserView (RenderingContext)

+ (id)IKOpenGLDefaultPixelFormat;

- (void)_IKOpenGLContextMayDie;
- (void)__copyGLToCurrentFocusedView;
- (void)__ikSetupGLContext:(id)arg1;
- (void)_assertContextIsInstalledAsCurrentContext;
- (void)_deleteContextIfAny;
- (void)_emptyGLCaches;
- (id)_ikLayerBackedOpenGLContext;
- (void)_ikSetOpenGLContext:(id)arg1;
- (id)_invalidateGStatesForTree;
- (void)_openGLContextDidChange;
- (void)_scaleFactorDidChange:(id)arg1;
- (void)_setLayerBackedOpenGLContext:(id)arg1;
- (void)_surfaceNeedsUpdate:(id)arg1;
- (void)_willCloseWindow:(id)arg1;
- (void)autoEnableSubpixelAntialiasing;
- (id)cgRenderer;
- (void)clearGLContext;
- (void)flushGLContext;
- (id)glRenderer;
- (BOOL)glRendererEnabled;
- (void)ikSetNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)initRenderingContext;
- (void)installCGOverlay:(BOOL)arg1;
- (BOOL)isOpaque;
- (BOOL)lockFocusIfCanDraw;
- (id)openGLContext;
- (id)openGLContextCreateIfNeeded:(BOOL)arg1;
- (id)openGLContextForPixelFormat:(id)arg1;
- (BOOL)openglSupportsRenderingInBounds:(struct CGSize { double x1; double x2; })arg1;
- (id)pixelFormat;
- (void)prepareOpenGL;
- (void)releaseRenderingContext;
- (void)removeFromSuperview;
- (id)renderer;
- (void)renewGState;
- (void)resetToDefaultRenderer;
- (void)reshape;
- (void)setGLRendererEnabled:(BOOL)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setOpenGLContext:(id)arg1;
- (void)setPixelFormat:(id)arg1;
- (void)setRenderer:(int)arg1;
- (void)setUpdatesCGSurfaceOnDrawRect:(BOOL)arg1;
- (void)setWantsLayer:(BOOL)arg1;
- (BOOL)superviewIsAClipView;
- (BOOL)supportGLRenderer;
- (void)synchronizeBackBuffer;
- (BOOL)synchronizeBackBufferIfNeeded;
- (void)update;
- (BOOL)updatesCGSurfaceOnDrawRect;
- (void)viewDidChangeBackingProperties;

// IKImageBrowserView (bindings)

+ (void)initialize;

- (void)bind:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (id)exposedBindings;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)unbind:(id)arg1;
- (Class)valueClassForBinding:(id)arg1;

// IKImageBrowserView (cache)

- (BOOL)_freeCacheStepWithVisibleIndexes:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 progress:(int*)arg3;
- (id)_neighbourhoodIndexesWithCacheSize:(int)arg1 cellSize:(struct CGSize { double x1; double x2; })arg2;
- (void)abortFreeTemporaryCache;
- (id)freeTemporaryCacheProgress;
- (void)startFreeTemporaryCache;

// IKImageBrowserView (grouping)

- (id)_animationForGroupedItems:(id)arg1 expand:(BOOL)arg2;
- (void)_expandButtonClicked:(id)arg1;
- (BOOL)_groupIsSelected:(id)arg1;
- (void)_iOSGroupDidCollapse;
- (id)_iOSGroupTitle:(id)arg1;
- (id)_iOSGroupTitleAttributes;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_iOSGroupTitleFrame:(id)arg1;
- (id)_indexesToDimForGroup:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_rectOfGroup:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_rectOfGroupHeader:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_rectOfGroupTail:(id)arg1;
- (void)_toggleGroup:(id)arg1 expand:(BOOL)arg2 animates:(BOOL)arg3;
- (BOOL)cellAtIndexIsCollapsed:(long long)arg1;
- (void)collapseAllGroups;
- (void)collapseGroup:(id)arg1;
- (void)collapseGroup:(id)arg1 preserveGroupLocationInView:(BOOL)arg2;
- (void)collapseGroupAtIndex:(unsigned long long)arg1;
- (void)drawBezelGroup:(id)arg1;
- (void)drawBezelGroupOverlay:(id)arg1;
- (void)drawBookletGroupOverlay:(id)arg1;
- (void)drawDisclosureGroupHeader:(id)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)drawDisclosureGroupTail:(id)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)drawGroupsBackground;
- (void)drawGroupsOverlays;
- (void)drawIMGPreviewGroupHeader:(id)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 distance:(double)arg3;
- (void)drawIMGPreviewGroupTail:(id)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)drawTagGroupHeader:(id)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)drawTagGroupTail:(id)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)expandAllGroups;
- (void)expandGroup:(id)arg1;
- (void)expandGroupAtIndex:(unsigned long long)arg1;
- (int)getBezelGroup:(id)arg1 points:(struct CGPoint { double x1; double x2; }*)arg2;
- (id)groupAtCellIndex:(long long)arg1;
- (id)groupAtIndex:(unsigned long long)arg1;
- (id)groupAtViewLocation:(struct CGPoint { double x1; double x2; })arg1 clickableArea:(BOOL)arg2;
- (long long)groupIndexAtCellIndex:(long long)arg1;
- (unsigned long long)groupIndexAtViewLocation:(struct CGPoint { double x1; double x2; })arg1 clickableArea:(BOOL)arg2;
- (unsigned long long)indexOfGridGroup:(id)arg1;
- (BOOL)isGroupExpandedAtIndex:(unsigned long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectOfFloatingGroupHeader:(id)arg1;
- (void)resetGroupsHorizontalOffset;

// IKImageBrowserView (ikediting)

- (BOOL)_delegateSupportsEditing;
- (void)_editingGetAnchroPoint:(struct CGPoint { double x1; double x2; }*)arg1 size:(struct CGSize { double x1; double x2; }*)arg2 forCellAtIndex:(unsigned long long)arg3;
- (void)_sendTextDidEndEditingAtIndex:(unsigned long long)arg1;
- (BOOL)canEditTitleOfCellAtIndex:(unsigned long long)arg1;
- (id)currentEditor;
- (void)didLooseFocus;
- (BOOL)editCellTitleAtIndex:(unsigned long long)arg1;
- (BOOL)editCellTitleAtIndex:(unsigned long long)arg1 withEvent:(id)arg2 select:(BOOL)arg3;
- (BOOL)editGroupTitleAtIndex:(unsigned long long)arg1;
- (unsigned long long)editingIndex;
- (void)prepareEditingAtIndex:(unsigned long long)arg1;
- (void)stopEditing;
- (void)textDidCancelEditing;
- (void)textDidEndEditing:(id)arg1;
- (BOOL)textShouldBeginEditing:(id)arg1;
- (BOOL)textShouldEndEditing:(id)arg1;
- (void)updateTitleEditingFrameIfNeeded;

// IKImageBrowserView (private)

- (id)_titleAttributeKeys;
- (double)anchorHorizontalSpacing;
- (void)backgroundRed:(float*)arg1 green:(float*)arg2 blue:(float*)arg3 alpha:(float*)arg4;
- (void)cellsOutlineRed:(float*)arg1 green:(float*)arg2 blue:(float*)arg3;
- (BOOL)drawGrid;
- (BOOL)drawSchedulePriorityRanges;
- (BOOL)enableAutoAdaptativeQuality;
- (struct CGSize { double x1; double x2; })flavorCellSize;
- (struct CGSize { double x1; double x2; })flavorGridSize;
- (void)getGridCellFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 anchorPoint:(struct CGPoint { double x1; double x2; }*)arg2 coordinates:(struct CGPoint { double x1; double x2; }*)arg3 atPoint:(struct CGPoint { double x1; double x2; })arg4 gridOffset:(struct CGPoint { double x1; double x2; })arg5;
- (struct CGSize { double x1; double x2; })gridDimensions;
- (struct CGSize { double x1; double x2; })gridDimensionsForLayoutParameters:(struct __IKImageBrowserLayoutParameter { id x1; unsigned char x2; /* Warning: Unrecognized filer type: 'G' using 'void*' */ void*x3; unsigned short x4; int x5; void*x6; void*x7; void*x8; double x9; double x10; }*)arg1;
- (struct CGPoint { double x1; double x2; })gridPositionAtIndex:(unsigned long long)arg1;
- (double)gridSpacing;
- (double)iconSize;
- (BOOL)labelsOnRight;
- (double)maxIconSize;
- (void)selectionRed:(float*)arg1 green:(float*)arg2 blue:(float*)arg3;
- (void)setBlinkingMode:(BOOL)arg1 forCellAtIndex:(unsigned long long)arg2;
- (void)setDrawGrid:(BOOL)arg1;
- (void)setDrawSchedulePriorityRanges:(BOOL)arg1;
- (void)setEnableAutoAdaptativeQuality:(BOOL)arg1;
- (void)setEnableVMScheduler:(BOOL)arg1;
- (void)setGridSpacing:(double)arg1;
- (void)setIconSize:(double)arg1;
- (void)setIconSizeFromCellSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setLabelsOnRight:(BOOL)arg1;
- (void)setMaxIconSize:(double)arg1;
- (void)setShowItemInfo:(BOOL)arg1;
- (void)setTextSize:(double)arg1;
- (void)updateCellSize;
- (id)vmScheduler;
- (BOOL)vmSchedulerEnabled;

// IKImageBrowserView (schedule_priority)

- (int)centerOfPriorityRange;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })schedulePriorityRange;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })vramBindedRange;

// Image: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Debugger/libViewDebuggerSupport.dylib

// IKImageBrowserView (DebugHierarchyAdditions)

- (id)debugHierarchyPropertyDescriptions;

@end
