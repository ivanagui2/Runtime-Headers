/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
 */

@interface IKKnobLayer : CALayer {
    int  _activeKnob;
    BOOL  _altKeyPressedOnMouseDown;
    BOOL  _cmdKeyPressedOnMouseDown;
    IKComposer * _composer;
    id  _delegate;
    int  _dragMode;
    struct CGPoint { 
        double x; 
        double y; 
    }  _eventMouseDownLocation;
    int  _hilightKnob;
    IKImageLayer * _imageLayer;
    IKKnob * _knobs;
    double  _originalAngle;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _originalBounds;
    CALayer * _originalLayer;
    struct CGPoint { 
        double x; 
        double y; 
    }  _originalPosition;
    struct CATransform3D { 
        double m11; 
        double m12; 
        double m13; 
        double m14; 
        double m21; 
        double m22; 
        double m23; 
        double m24; 
        double m31; 
        double m32; 
        double m33; 
        double m34; 
        double m41; 
        double m42; 
        double m43; 
        double m44; 
    }  _originalTransform;
    BOOL  _quitting;
    BOOL  _undoGroupingActive;
    BOOL  _useOriginalLayerToDraw;
}

@property (atomic, readwrite) id delegate;

- (void)addCursorRects;
- (void)adjustPosition;
- (void)cleanup;
- (id)composer;
- (id)constrainedPosition:(id)arg1 forLayer:(id)arg2;
- (BOOL)containsPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)dealloc;
- (id)delegate;
- (void)drawInContext:(struct CGContext { }*)arg1;
- (void)finalize;
- (void)ikMouseDown:(id)arg1;
- (void)ikMouseDragged:(id)arg1;
- (void)ikMouseUp:(id)arg1;
- (id)initForLayer:(id)arg1 imageLayer:(id)arg2 flags:(unsigned int)arg3;
- (void)loadKnobImage;
- (void)moveAnnotationByX:(int)arg1 Y:(int)arg2;
- (void)positionKnobs;
- (void)setActiveKnob:(int)arg1;
- (void)setAnchorPoint2:(struct CGPoint { double x1; double x2; })arg1;
- (void)setAnchorPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)setBounds2:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setPosition2:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)setTransform2:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg1;
- (void)setUndoGroupingActive:(BOOL)arg1;
- (void)setUseOriginalLayerToDraw:(BOOL)arg1;
- (double)snapAngle:(double)arg1;
- (void)startTracking:(id)arg1;
- (void)swapKnobsHorizontal;
- (void)swapKnobsVertical;
- (void)swapKnobsVerticalAndHorizontal;
- (void)unbindActions;

@end
