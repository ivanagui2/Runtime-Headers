/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
 */

@interface IKLassoSelection : CALayer {
    unsigned short  _ant_stipple;
    IKComposer * _composer;
    BOOL  _creatingPath;
    double  _factor;
    IKImageLayer * _imageLayer;
    IKKnobLayer * _knobLayer;
    struct CGPoint { 
        double x; 
        double y; 
    }  _lastPoint;
    double  _lineWidthFactor;
    float  _maxX;
    float  _maxY;
    float  _minX;
    float  _minY;
    struct CGPoint { 
        double x; 
        double y; 
    }  _mouseDownLocation;
    int  _numberOfPoints;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _originalBounds;
    struct CGPoint { 
        double x; 
        double y; 
    }  _originalPos;
    struct CGPoint { double x1; double x2; } * _points;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _selectionRect;
    BOOL  _supportsUndo;
}

@property (atomic, readwrite) BOOL supportsUndo;

+ (double)fadeDuration;

- (void)addCursorRects;
- (void)addPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)adjustPosition;
- (void)clearSelectionPath;
- (struct CGPoint { double x1; double x2; })constrainedPosition:(struct CGPoint { double x1; double x2; })arg1 forLayer:(id)arg2;
- (BOOL)containsPoint:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGImage { }*)createNewMaskedImage:(struct CGImage { }*)arg1;
- (void)dealloc;
- (void)doDrawInContext:(struct CGContext { }*)arg1;
- (void)doDrawInContext:(struct CGContext { }*)arg1 rect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)drawInContext:(struct CGContext { }*)arg1;
- (void)ikMouseDown:(id)arg1;
- (void)ikMouseDragged:(id)arg1;
- (void)ikMouseUp:(id)arg1;
- (BOOL)isSelectionLayer;
- (id)knobLayer;
- (void)removeFromSuperlayer;
- (void)removeKnobLayer;
- (void)setAnchorPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setPosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)setSelected:(BOOL)arg1;
- (void)setSupportsUndo:(BOOL)arg1;
- (void)setup:(id)arg1;
- (BOOL)shouldUseOriginalLayerToDraw;
- (void)startTracking:(id)arg1;
- (BOOL)supportsUndo;

@end
