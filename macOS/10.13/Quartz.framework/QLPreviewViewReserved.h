/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI
 */

@interface QLPreviewViewReserved : NSObject {
    BOOL  allowLoadingOfUnsupportedDisplayBundleIDs;
    BOOL  allowsAlerts;
    NSURL * appURLForNextOpening;
    BOOL  automaticallyMakePreviewFirstResponder;
    BOOL  autostarts;
    BOOL  blocking;
    QLPreviewCacheManager * cacheManager;
    BOOL  changingDisplayable;
    id  delegate;
    <QLDisplayable> * displayable;
    QLPreviewDocument * displayedDocument;
    QLPreviewDocument * document;
    unsigned long long  doubleClickModifierFlags;
    NSClickGestureRecognizer * doubleClickRecognizer;
    QLPreviewDragController * dragController;
    NSPanGestureRecognizer * dragGestureRecognizer;
    BOOL  dragging;
    <QLDisplayable> * emptyDisplayable;
    BOOL  enableDragNDrop;
    BOOL  enableRemotePreviews;
    BOOL  forceVisible;
    id  forcedContentTypeUTI;
    BOOL  fullLayers;
    <QLDisplayable> * genericDisplayable;
    BOOL  handledMouseDown;
    BOOL  handlingEvent;
    BOOL  hasCustomLoadingDisplayable;
    BOOL  hideLoadingSpinner;
    id  highlightObject;
    NSString * initialDisplayBundleID;
    struct CGSize { 
        double width; 
        double height; 
    }  initialThumbnailSize;
    int  internalState;
    BOOL  isDeactivating;
    <QLDisplayable> * loadingDisplayable;
    BOOL  loadingForForceTouch;
    BOOL  manageVisibilityOnNewDisplayable;
    BOOL  manageVisibilityOnOldDisplayable;
    id  mandatoryServer;
    int  mode;
    NSView * overlayContentView;
    QLPreviewOverlayController * overlayController;
    QLPreviewPageNumberOverlayController * pageNumOverlayController;
    QLPreviewPathOverlayController * pathOverlayController;
    QLPreviewContainerView * previewContainerView;
    <QLPreviewItem> * previewItem;
    QLScrollController * scrollController;
    BOOL  shouldCloseWithWindow;
    BOOL  showControls;
    BOOL  showRemainingTime;
    BOOL  sizesPreviewToFit;
    NSSet * supportedDisplayBundleIDs;
    NSDate * timeoutDate;
    int  transition;
    NSMutableDictionary * userDefinedSizes;
    NSArray * viewConstraints;
    struct NSEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  visualMargins;
}

@end
