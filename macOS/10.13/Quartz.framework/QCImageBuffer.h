/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
 */

@interface QCImageBuffer : QCResource {
    void * _backing;
    int (* _backingCallback;
    void * _backingInfo;
    unsigned long long  _cacheRetainCount;
    struct __CFArray { } * _caches;
    struct _opaque_pthread_mutex_t { 
        long long __sig; 
        BOOL __opaque[56]; 
    }  _cachesMutex;
    struct CGColorSpace { } * _colorspace;
    double  _cost;
    BOOL  _flipped;
    QCPixelFormat * _format;
    unsigned long long  _height;
    unsigned long long  _identifier;
    int  _status;
    void * _unused1;
    unsigned long long  _width;
}

+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (void)initialize;

- (void)_finalize_QCImageBuffer;
- (void*)backing;
- (int (*)backingReleaseCallback;
- (void*)backingReleaseInfo;
- (BOOL)beginUpdateBuffer:(BOOL)arg1;
- (BOOL)beginUpdateBuffer:(BOOL)arg1 colorSpace:(struct CGColorSpace { }*)arg2;
- (struct CGColorSpace { }*)colorSpace;
- (id)copyWithZone_GCCacheResource:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (BOOL)didRecycleResource:(id)arg1;
- (void)endUpdateBuffer:(BOOL)arg1;
- (void)finalize;
- (unsigned long long)identifier;
- (id)initWithFormat:(id)arg1 pixelsWide:(unsigned long long)arg2 pixelsHigh:(unsigned long long)arg3 options:(id)arg4;
- (BOOL)isFlipped;
- (id)pixelFormat;
- (unsigned long long)pixelsHigh;
- (unsigned long long)pixelsWide;
- (void)setBacking:(void*)arg1 releaseCallback:(int (*)arg2 releaseInfo:(void*)arg3;
- (int)status;
- (void)willRecycleResource:(id)arg1;

// QCImageBuffer (Extensions)

- (void)_invalidateData;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (unsigned long long)byteSize;
- (void)cacheRelease:(id)arg1;
- (id)cacheRetain:(id)arg1;
- (unsigned long long)cacheRetainCount;
- (void)clearBuffer;
- (double)cost;
- (id)pixelBufferRepresentation;
- (void)removeFromAllCachesExcept:(id)arg1;
- (void)setCost:(double)arg1;
- (BOOL)writeToFile:(id)arg1;

@end
