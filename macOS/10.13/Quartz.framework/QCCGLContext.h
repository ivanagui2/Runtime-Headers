/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
 */

@interface QCCGLContext : QCResource {
    void * _c3dContext;
    unsigned long long  _cachedVirtualScreen;
    struct _CGLContextObject { struct __GLIContextRec {} *x1; struct __GLIFunctionDispatchRec { int (*x_2_1_1)(); int (*x_2_1_2)(); int (*x_2_1_3)(); int (*x_2_1_4)(); int (*x_2_1_5)(); int (*x_2_1_6)(); int (*x_2_1_7)(); int (*x_2_1_8)(); int (*x_2_1_9)(); int (*x_2_1_10)(); int (*x_2_1_11)(); int (*x_2_1_12)(); int (*x_2_1_13)(); int (*x_2_1_14)(); int (*x_2_1_15)(); int (*x_2_1_16)(); int (*x_2_1_17)(); int (*x_2_1_18)(); int (*x_2_1_19)(); int (*x_2_1_20)(); int (*x_2_1_21)(); int (*x_2_1_22)(); int (*x_2_1_23)(); int (*x_2_1_24)(); int (*x_2_1_25)(); int (*x_2_1_26)(); int (*x_2_1_27)(); int (*x_2_1_28)(); int (*x_2_1_29)(); int (*x_2_1_30)(); int (*x_2_1_31)(); int (*x_2_1_32)(); int (*x_2_1_33)(); int (*x_2_1_34)(); int (*x_2_1_35)(); int (*x_2_1_36)(); int (*x_2_1_37)(); int (*x_2_1_38)(); int (*x_2_1_39)(); int (*x_2_1_40)(); int (*x_2_1_41)(); int (*x_2_1_42)(); int (*x_2_1_43)(); int (*x_2_1_44)(); int (*x_2_1_45)(); int (*x_2_1_46)(); int (*x_2_1_47)(); int (*x_2_1_48)(); int (*x_2_1_49)(); int (*x_2_1_50)(); int (*x_2_1_51)(); int (*x_2_1_52)(); int (*x_2_1_53)(); int (*x_2_1_54)(); int (*x_2_1_55)(); } x2; } * _cglContext;
    struct _CGLPixelFormatObject { } * _cglPixelFormat;
    struct __CFDictionary { } * _ciContextCache;
    unsigned long long  _defaultSharedVirtualScreen;
    unsigned long long  _flags;
    id  _nsglContext;
    id  _nsglPixelFormat;
    NSDictionary * _options;
    QCPixelFormat * _renderPixelFormat;
    struct __CFDictionary { } * _rootC3DContextCache;
    QCCGLContext * _rootContext;
    QCResourcePool * _sharedPool;
    void * _unused2;
    unsigned long long  _virtualScreenCount;
}

+ (id)contextWithPixelFormatAttributes:(const int*)arg1 options:(id)arg2;
+ (id)hardwareContextForDisplay:(unsigned int)arg1;
+ (void)initialize;
+ (id)softwareContextForFormat:(id)arg1;

- (struct _CGLContextObject { struct __GLIContextRec {} *x1; struct __GLIFunctionDispatchRec { int (*x_2_1_1)(); int (*x_2_1_2)(); int (*x_2_1_3)(); int (*x_2_1_4)(); int (*x_2_1_5)(); int (*x_2_1_6)(); int (*x_2_1_7)(); int (*x_2_1_8)(); int (*x_2_1_9)(); int (*x_2_1_10)(); int (*x_2_1_11)(); int (*x_2_1_12)(); int (*x_2_1_13)(); int (*x_2_1_14)(); int (*x_2_1_15)(); int (*x_2_1_16)(); int (*x_2_1_17)(); int (*x_2_1_18)(); int (*x_2_1_19)(); int (*x_2_1_20)(); int (*x_2_1_21)(); int (*x_2_1_22)(); int (*x_2_1_23)(); int (*x_2_1_24)(); int (*x_2_1_25)(); int (*x_2_1_26)(); int (*x_2_1_27)(); int (*x_2_1_28)(); int (*x_2_1_29)(); int (*x_2_1_30)(); int (*x_2_1_31)(); int (*x_2_1_32)(); int (*x_2_1_33)(); int (*x_2_1_34)(); int (*x_2_1_35)(); int (*x_2_1_36)(); int (*x_2_1_37)(); int (*x_2_1_38)(); int (*x_2_1_39)(); int (*x_2_1_40)(); int (*x_2_1_41)(); int (*x_2_1_42)(); int (*x_2_1_43)(); int (*x_2_1_44)(); int (*x_2_1_45)(); int (*x_2_1_46)(); int (*x_2_1_47)(); int (*x_2_1_48)(); int (*x_2_1_49)(); int (*x_2_1_50)(); int (*x_2_1_51)(); int (*x_2_1_52)(); int (*x_2_1_53)(); int (*x_2_1_54)(); int (*x_2_1_55)(); } x2; }*)CGLContextObj;
- (struct _CGLPixelFormatObject { }*)CGLPixelFormatObj;
- (void)_finalize_QCCGLContext;
- (void)clearMinimalSharedContextForCurrentThread;
- (id)createMinimalSharedContext;
- (id)createMinimalSharedContextWithAdditionalAttributes:(const int*)arg1 recycleWhenDone:(BOOL)arg2;
- (void)dealloc;
- (id)description;
- (BOOL)didRecycleResource:(id)arg1;
- (BOOL)disable:(int)arg1;
- (BOOL)enable:(int)arg1;
- (void)finalize;
- (long long)getParameter:(int)arg1;
- (id)initWithCGLContext:(struct _CGLContextObject { struct __GLIContextRec {} *x1; struct __GLIFunctionDispatchRec { int (*x_2_1_1)(); int (*x_2_1_2)(); int (*x_2_1_3)(); int (*x_2_1_4)(); int (*x_2_1_5)(); int (*x_2_1_6)(); int (*x_2_1_7)(); int (*x_2_1_8)(); int (*x_2_1_9)(); int (*x_2_1_10)(); int (*x_2_1_11)(); int (*x_2_1_12)(); int (*x_2_1_13)(); int (*x_2_1_14)(); int (*x_2_1_15)(); int (*x_2_1_16)(); int (*x_2_1_17)(); int (*x_2_1_18)(); int (*x_2_1_19)(); int (*x_2_1_20)(); int (*x_2_1_21)(); int (*x_2_1_22)(); int (*x_2_1_23)(); int (*x_2_1_24)(); int (*x_2_1_25)(); int (*x_2_1_26)(); int (*x_2_1_27)(); int (*x_2_1_28)(); int (*x_2_1_29)(); int (*x_2_1_30)(); int (*x_2_1_31)(); int (*x_2_1_32)(); int (*x_2_1_33)(); int (*x_2_1_34)(); int (*x_2_1_35)(); int (*x_2_1_36)(); int (*x_2_1_37)(); int (*x_2_1_38)(); int (*x_2_1_39)(); int (*x_2_1_40)(); int (*x_2_1_41)(); int (*x_2_1_42)(); int (*x_2_1_43)(); int (*x_2_1_44)(); int (*x_2_1_45)(); int (*x_2_1_46)(); int (*x_2_1_47)(); int (*x_2_1_48)(); int (*x_2_1_49)(); int (*x_2_1_50)(); int (*x_2_1_51)(); int (*x_2_1_52)(); int (*x_2_1_53)(); int (*x_2_1_54)(); int (*x_2_1_55)(); } x2; }*)arg1 pixelFormat:(struct _CGLPixelFormatObject { }*)arg2 options:(id)arg3;
- (id)initWithPixelFormatAttributes:(const int*)arg1 options:(id)arg2;
- (BOOL)isEnabled:(int)arg1;
- (BOOL)isSharedWithContext:(id)arg1;
- (void)lock;
- (id)minimalSharedContextForCurrentThread;
- (id)options;
- (void)purgeResources;
- (void)reclaimResources;
- (id)rootContext;
- (void)setBestVirtualScreenForRenderingSize:(struct CGSize { double x1; double x2; })arg1;
- (BOOL)setParameter:(int)arg1 value:(long long)arg2;
- (void)setResourcePool:(id)arg1;
- (void)setVirtualScreen:(unsigned long long)arg1;
- (void)unlock;
- (unsigned long long)virtualScreen;
- (unsigned long long)virtualScreenCount;
- (void)willRecycleResource:(id)arg1;

// QCCGLContext (Extensions)

+ (id)CIBitmapContext;

- (id)CIContext;
- (struct __C3DEngineContext { }*)QCSCN_Context;
- (id)_ciContext;

// QCCGLContext (NSOpenGLContext)

- (id)NSOpenGLContext;
- (id)NSOpenGLPixelFormat;
- (id)initWithOpenGLContext:(id)arg1 pixelFormat:(id)arg2 options:(id)arg3;

// QCCGLContext (QCGraphicsContext)

+ (id)copyGlobalRootContext;
+ (id)createUniqueContextWithOptions:(id)arg1;

// QCCGLContext (SnapshotImage)

- (id)createSnapshotImageOfType:(id)arg1 withColorSpace:(struct CGColorSpace { }*)arg2;

// QCCGLContext (Utilities)

- (int)_rendererPropertyValue:(int)arg1;
- (unsigned long long)_validateCachedVirtualScreen;
- (BOOL)copyPixelsFromBounds:(int*)arg1 toSharedCGLContext:(struct _CGLContextObject { struct __GLIContextRec {} *x1; struct __GLIFunctionDispatchRec { int (*x_2_1_1)(); int (*x_2_1_2)(); int (*x_2_1_3)(); int (*x_2_1_4)(); int (*x_2_1_5)(); int (*x_2_1_6)(); int (*x_2_1_7)(); int (*x_2_1_8)(); int (*x_2_1_9)(); int (*x_2_1_10)(); int (*x_2_1_11)(); int (*x_2_1_12)(); int (*x_2_1_13)(); int (*x_2_1_14)(); int (*x_2_1_15)(); int (*x_2_1_16)(); int (*x_2_1_17)(); int (*x_2_1_18)(); int (*x_2_1_19)(); int (*x_2_1_20)(); int (*x_2_1_21)(); int (*x_2_1_22)(); int (*x_2_1_23)(); int (*x_2_1_24)(); int (*x_2_1_25)(); int (*x_2_1_26)(); int (*x_2_1_27)(); int (*x_2_1_28)(); int (*x_2_1_29)(); int (*x_2_1_30)(); int (*x_2_1_31)(); int (*x_2_1_32)(); int (*x_2_1_33)(); int (*x_2_1_34)(); int (*x_2_1_35)(); int (*x_2_1_36)(); int (*x_2_1_37)(); int (*x_2_1_38)(); int (*x_2_1_39)(); int (*x_2_1_40)(); int (*x_2_1_41)(); int (*x_2_1_42)(); int (*x_2_1_43)(); int (*x_2_1_44)(); int (*x_2_1_45)(); int (*x_2_1_46)(); int (*x_2_1_47)(); int (*x_2_1_48)(); int (*x_2_1_49)(); int (*x_2_1_50)(); int (*x_2_1_51)(); int (*x_2_1_52)(); int (*x_2_1_53)(); int (*x_2_1_54)(); int (*x_2_1_55)(); } x2; }*)arg2 usingInternalFormat:(unsigned int)arg3;
- (struct CGSize { double x1; double x2; })fitTextureSize:(struct CGSize { double x1; double x2; })arg1 forTarget:(unsigned int)arg2 uniformScaling:(BOOL)arg3;
- (BOOL)hasDrawable;
- (BOOL)is16BitSupported;
- (BOOL)isAccelerated;
- (BOOL)isCoreImageAccelerated;
- (BOOL)isExtensionSupported:(id)arg1;
- (BOOL)isFBOSupported;
- (BOOL)isFloatSupported;
- (BOOL)isProgrammable;
- (unsigned long long)maxRenderingSize;
- (unsigned long long)maxTextureSizeForTarget:(unsigned int)arg1;
- (BOOL)readPixelsFromBounds:(int*)arg1 toBaseAddress:(void*)arg2 withBytesPerRow:(unsigned long long)arg3 pixelType:(unsigned int)arg4;
- (long long)rendererID;
- (long long)rendererIDForVirtualScreen:(long long)arg1;
- (id)rendererName;
- (id)rendererVendor;
- (float)rendererVersion;
- (id)renderingPixelFormat;
- (unsigned long long)textureMaxImageUnits;
- (unsigned long long)textureMemorySize;
- (unsigned long long)textureUnits;
- (unsigned long long)videoMemorySize;

@end
