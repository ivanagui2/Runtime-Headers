/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI
 */

@interface QLInlinePreviewController : NSObject <QLPreviewOverlayDataSource, QLPreviewViewDelegate> {
    BOOL  _autoplay;
    double  _backingScaleFactor;
    BOOL  _crossfade;
    id  _delegate;
    CALayer * _hostingLayer;
    BOOL  _hostingLayerIsInWindowServer;
    NSView * _hostingView;
    int  _iconFlavor;
    <QLPreviewItem> * _inlinePreviewItem;
    BOOL  _lazyLoading;
    int  _mode;
    BOOL  _observing;
    QLPreviewOverlayController * _overlayController;
    unsigned long long  _pageAfterLoading;
    BOOL  _playAfterLoading;
    QLPreviewView * _previewView;
    QLPreviewPanel * _sharingPreviewPanel;
    int  _state;
}

@property (atomic, readwrite) BOOL autoplay;
@property (atomic, readwrite) double backingScaleFactor;
@property (atomic, readonly) CALayer *contentLayer;
@property (atomic, readwrite) BOOL crossfade;
@property (atomic, readwrite) unsigned long long currentPage;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readwrite) <QLInlinePreviewDelegate> *delegate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite) CALayer *hostingLayer;
@property (atomic, readwrite) BOOL hostingLayerIsInWindowServer;
@property (nonatomic, readwrite) NSView *hostingView;
@property (atomic, readwrite, retain) <QLPreviewItem> *inlinePreviewItem;
@property (atomic, readwrite) int inlinePreviewState;
@property (atomic, readwrite) BOOL lazyLoading;
@property (atomic, readonly) BOOL needsPageControl;
@property (atomic, readonly) BOOL needsPlayControl;
@property (atomic, readonly) BOOL needsTimeControl;
@property (atomic, readonly) unsigned long long numberOfPages;
@property (atomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } overlayFrame;
@property (atomic, readonly) CALayer *overlayParentLayer;
@property (atomic, readonly) NSView *overlayParentView;
@property (atomic, readwrite) BOOL playing;
@property (atomic, readonly) QLPreviewView *previewView;
@property (atomic, readonly) float progress;
@property (atomic, readonly) double rolloverActivationDelay;
@property (atomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } rolloverFrame;
@property (nonatomic, readwrite) QLPreviewPanel *sharingPreviewPanel;
@property (atomic, readonly) BOOL shouldAlwaysHandleMultiClicks;
@property (atomic, readonly) BOOL shouldKeepThumbnail;
@property (atomic, readonly) BOOL showControls;
@property (atomic, readonly) int status;
@property (atomic, readonly) Class superclass;
@property (atomic, readonly) BOOL useLayers;

+ (double)inlinePreviewMinimumSupportedSize;
+ (unsigned long long)inlinePreviewTrackingAreaOptions;
+ (id)keyPathsForValuesAffectingNumberOfPages;
+ (int)specialInlinePreviewModeForPreviewItem:(id)arg1;

- (BOOL)_boolValueFromObject:(id)arg1;
- (void)_closeInlinePreview;
- (void)_createInlinePreviewIfNeeded;
- (void)_inlinePreviewDidChangePage:(unsigned long long)arg1;
- (void)_inlinePreviewDidChangePlaying:(BOOL)arg1;
- (unsigned long long)_integerValueFromObject:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_itemFrame;
- (void)_openInlinePreview;
- (void)_setInlinePreviewItem:(id)arg1;
- (void)_setInlinePreviewVisible:(BOOL)arg1 animate:(BOOL)arg2;
- (BOOL)_shouldCrossfade;
- (BOOL)_shouldKeepThumbnail;
- (BOOL)_shouldOpenInlinePreview;
- (BOOL)_shouldShowInlinePreviewContentOfPreviewView:(id)arg1;
- (BOOL)_shouldShowInlinePreviewControlsOfPreviewView:(id)arg1;
- (void)_startObserving;
- (void)_stopObserving;
- (void)_updateInlinePreview;
- (BOOL)autoplay;
- (double)backingScaleFactor;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentFrameForPreviewView:(id)arg1;
- (id)contentLayer;
- (BOOL)crossfade;
- (unsigned long long)currentPage;
- (void)dealloc;
- (id)delegate;
- (int)flavorForPreviewView:(id)arg1;
- (id)hostingLayer;
- (BOOL)hostingLayerIsInWindowServer;
- (id)hostingView;
- (id)init;
- (id)inlinePreviewItem;
- (int)inlinePreviewState;
- (BOOL)isPreviewHostedInWindowServer:(id)arg1;
- (BOOL)isPreviewViewVisible:(id)arg1;
- (BOOL)lazyLoading;
- (BOOL)mouseDownAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)mouseDownAtPoint:(struct CGPoint { double x1; double x2; })arg1 clickCount:(long long)arg2;
- (BOOL)mouseDownAtPoint:(struct CGPoint { double x1; double x2; })arg1 clickCount:(long long)arg2 dequeue:(BOOL)arg3;
- (void)mouseEntered;
- (void)mouseExited;
- (BOOL)needsPageControl;
- (BOOL)needsPlayControl;
- (BOOL)needsTimeControl;
- (unsigned long long)numberOfPages;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)overlayControllerForPreviewView:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })overlayFrame;
- (id)overlayParentLayer;
- (id)overlayParentView;
- (void)overlayParentViewFrameDidChangeNotification:(id)arg1;
- (BOOL)playing;
- (id)previewView;
- (void)previewView:(id)arg1 didFailLoadingPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 didShowPreviewItem:(id)arg2;
- (BOOL)previewView:(id)arg1 shouldBypassLoadingOfPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 willLoadPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 willShowPreviewItem:(id)arg2;
- (double)previewViewBackingScaleFactor:(id)arg1;
- (float)progress;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rolloverFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rolloverFrameForPreviewView:(id)arg1;
- (void)setAutoplay:(BOOL)arg1;
- (void)setBackingScaleFactor:(double)arg1;
- (void)setCrossfade:(BOOL)arg1;
- (void)setCurrentPage:(unsigned long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setHostingLayer:(id)arg1;
- (void)setHostingLayerIsInWindowServer:(BOOL)arg1;
- (void)setHostingView:(id)arg1;
- (void)setInlinePreviewItem:(id)arg1;
- (void)setInlinePreviewState:(int)arg1;
- (void)setLazyLoading:(BOOL)arg1;
- (void)setPlaying:(BOOL)arg1;
- (void)setSharingPreviewPanel:(id)arg1;
- (void)sharedPreviewView:(id)arg1 didStartSharingWithPreviewPanel:(id)arg2;
- (void)sharedPreviewView:(id)arg1 didStopSharingWithPreviewPanel:(id)arg2;
- (void)sharedPreviewView:(id)arg1 failedToStartSharingWithPreviewPanel:(id)arg2;
- (BOOL)sharedPreviewView:(id)arg1 shouldHaveContinuousTransitionWithPreviewView:(id)arg2;
- (void)sharedPreviewView:(id)arg1 willStartSharingWithPreviewPanel:(id)arg2;
- (void)sharedPreviewView:(id)arg1 willStopSharingWithPreviewPanel:(id)arg2;
- (id)sharingPreviewPanel;
- (BOOL)shouldAlwaysHandleMultiClicks;
- (BOOL)shouldAlwaysHandleMultiClicksForPreviewView:(id)arg1;
- (BOOL)shouldKeepThumbnail;
- (BOOL)showControls;
- (int)status;
- (void)updatePreviewFrame;
- (BOOL)useLayers;

@end
