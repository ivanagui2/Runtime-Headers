/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
 */

@interface IKImageFlowView : NSOpenGLView {
    id  _dataSource;
    id  _delegate;
    id  _dragDestinationDelegate;
    void * _reserved;
    NSOpenGLContext * _sharedOpenGLContext;
    BOOL  _wasLayerBacked;
}

+ (BOOL)flowViewIsSupportedByCurrentHardware;
+ (void)initialize;
+ (id)pixelFormat;
+ (void)setImportAnimationStyle:(unsigned long long)arg1;

- (void)__copyGLToCurrentFocusedView;
- (void)__copyPixels:(void*)arg1 withSize:(struct CGSize { double x1; double x2; })arg2 toCurrentFocusedViewAtPoint:(struct CGPoint { double x1; double x2; })arg3 scaleFactor:(double)arg4;
- (void)__ikSetupGLContext:(id)arg1;
- (void)_adjustScroller;
- (void)_cacheDidPurge:(id)arg1;
- (void)_cacheWillPurge:(id)arg1;
- (void)_cellFinishedImportAnimation:(id)arg1;
- (void)_colorProfileDidChange;
- (double)_computeCameraDY;
- (double)_computeCameraDZ;
- (BOOL)_containsCell:(id)arg1;
- (void)_contextDidChange;
- (BOOL)_convertColor:(id)arg1 toRed:(float*)arg2 green:(float*)arg3 blue:(float*)arg4 alpha:(float*)arg5;
- (int)_countOfVisibleCellsOnEachSide;
- (id)_createLayer;
- (void)_drawBluishBackgroundColor;
- (void)_drawCALayer:(id)arg1 forceUpdateRect:(BOOL)arg2;
- (void)_drawCALayer:(id)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 forceUpdateRect:(BOOL)arg3;
- (void)_getFogColorForCell:(id)arg1 reflection:(BOOL)arg2 red:(float*)arg3 green:(float*)arg4 blue:(float*)arg5;
- (void)_ikCommonInit;
- (void)_ikSetNeedsDisplay;
- (void)_reloadCellDataAtIndex:(unsigned long long)arg1;
- (void)_scaleFactorDidChange:(id)arg1;
- (void)_scrollerPrefsDidChange;
- (void)_setBackgroundColorWithRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;
- (void)_setDefaultTextAttributes;
- (double)_viewAspectRatio;
- (id)_viewIdentifier;
- (double)_zScreen;
- (double)alignOnPixelValue;
- (unsigned int)animationsMask;
- (id)backgroundColor;
- (BOOL)backgroundIsBlack;
- (BOOL)backgroundIsLight;
- (id)backgroundLayer;
- (BOOL)bluishFlavor;
- (BOOL)bluishFlavorSupported;
- (void)caNeedsDisplay;
- (id)caRenderer;
- (id)cacheManager;
- (double)cameraDY;
- (double)cameraDZ;
- (id)cellBackgroundColor;
- (id)cellBorderColor;
- (Class)cellClass;
- (unsigned long long)cellIndexAtLocation:(struct CGPoint { double x1; double x2; })arg1;
- (int)cellIndexAtPosition:(float)arg1;
- (double)cellMargin;
- (id)cells;
- (BOOL)cellsAlignOnBaseline;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })clampedBounds;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })clampedFrame;
- (float)convert3DUnitToPixelUnit:(float)arg1 z:(float)arg2;
- (float)convertPixelUnitTo3DUnit:(float)arg1;
- (int)countOfVisibleCellsOnEachSide;
- (id)dataSource;
- (void)dataSourceDidChange;
- (void)dealloc;
- (id)delegate;
- (BOOL)delegatesImageManagementToDatasource;
- (void)didStabilize;
- (void)drawBackground;
- (void)drawBluishBackground;
- (void)drawBluishBackgroundColorInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawFocusRing;
- (void)drawOverlaysInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawTitle;
- (void)drawVisibleCells:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)drawWithCurrentRendererInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)finalize;
- (void)flipCellsWithOldSelectedIndex:(unsigned long long)arg1 newSelectedIndex:(unsigned long long)arg2;
- (void)flowLayout:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (unsigned long long)focusedIndex;
- (float)fogAtLocation:(float)arg1;
- (void*)fogShader;
- (id)foregroundLayer;
- (void)frameDidChange:(id)arg1;
- (id)glRenderer;
- (int)heightOfInfoSpace;
- (BOOL)hitTestWithImage:(id)arg1 x:(float)arg2 y:(float)arg3;
- (double)imageAspectRatio;
- (id)imageFlowContext;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })imageFrameAtIndex:(unsigned long long)arg1;
- (struct CGSize { double x1; double x2; })imageRenderedSize;
- (long long)indexOfItemAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)initRenderingContext;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)installPerspetive;
- (BOOL)installViewport;
- (void)invalidateCameraPosition;
- (void)invalidateLayout;
- (BOOL)isAnimating;
- (BOOL)isOpaque;
- (BOOL)itemAtIndexIsLoaded:(unsigned long long)arg1;
- (unsigned long long)itemsCount;
- (void)keyWindowChanged:(id)arg1;
- (void)makeContextCurrent;
- (id)newCellForRepresentedItem:(id)arg1;
- (float)offset;
- (id)openGLContext;
- (id)openGLContextCreateIfNeeded:(BOOL)arg1;
- (float)pageScrollValue;
- (id)pixelFormat;
- (id)previewImageAtIndex:(unsigned long long)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfVisibleIndexes;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfVisibleIndexesAtSelection;
- (void)reloadAllCellsData;
- (void)reloadCellDataAtIndex:(unsigned long long)arg1;
- (void)reloadData;
- (id)renderer;
- (void)renewGState;
- (void)resetCursorRects;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })selectedImageFrame;
- (unsigned long long)selectedIndex;
- (void)setAnimationsMask:(unsigned int)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setBackgroundLayer:(id)arg1;
- (void)setBluishFlavor:(BOOL)arg1;
- (void)setBorderMask:(unsigned int)arg1;
- (void)setCacheManager:(id)arg1;
- (void)setCellBackgroundColor:(id)arg1;
- (void)setCellBorderColor:(id)arg1;
- (void)setCellClass:(Class)arg1;
- (void)setCellsAlignOnBaseline:(BOOL)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDelegatesImageManagementToDatasource:(BOOL)arg1;
- (void)setForegroundLayer:(id)arg1;
- (void)setHidden:(BOOL)arg1;
- (void)setImageAspectRatio:(double)arg1;
- (void)setImageFlowContext:(id)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setNextFrameTime:(double)arg1;
- (void)setOpenGLContext:(id)arg1;
- (void)setSelectedIndex:(unsigned long long)arg1;
- (void)setShowSplitter:(BOOL)arg1;
- (void)setShowSubtitles:(BOOL)arg1;
- (void)setTrackingOfRequestingViewsEnabled:(BOOL)arg1;
- (void)setUpdatesCGSurfaceOnDrawRect:(BOOL)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setZoomOnSelectedLayer:(BOOL)arg1;
- (void)setupGLState;
- (BOOL)showScroller;
- (BOOL)showSplitter;
- (BOOL)showSubtitles;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })splitterFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })subtitleFrame;
- (void)switchOffCARenderer;
- (void)switchOnCARenderer;
- (void)switchOnCARenderer:(id)arg1;
- (void)synchronousDisplayIfNeeded;
- (id)thumbnailImageAtIndex:(unsigned long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })titleFrame;
- (BOOL)trackingOfRequestingViewsEnabled;
- (void)updateLayout;
- (void)updateLayoutInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (BOOL)updatesCGSurfaceOnDrawRect;
- (id)valueForUndefinedKey:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })viewportRect;
- (id)visibleCellIndexes;
- (id)visibleCellIndexesAtSelection;
- (BOOL)wantsBestResolutionOpenGLSurface;
- (BOOL)zoomOnSelectedLayer;
- (void)zoomOnSelectedLayerLayout:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;

// IKImageFlowView (IKAccessibilityAdditions)

- (BOOL)__scrollerIsVisible;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityChildren;
- (id)accessibilityHitTest:(struct CGPoint { double x1; double x2; })arg1;
- (unsigned int)accessibilityIndexOfChild:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (BOOL)accessibilityIsIgnored;

// IKImageFlowView (IKDragNDrop)

- (BOOL)_updateIndexAndDropOperationWithDrop:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)copyDataToPasteboard:(id)arg1;
- (struct CGPoint { double x1; double x2; })dragStartPoint;
- (id)draggedImage;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint { double x1; double x2; })arg2 operation:(unsigned long long)arg3;
- (id)draggingDestinationDelegate;
- (void)draggingEnded:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (id)dropOverCell;
- (unsigned long long)indexAtLocationOfDroppedItem;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)setDraggingDestinationDelegate:(id)arg1;
- (void)setIsDraggingOver:(BOOL)arg1;
- (void)startDragNDropWithEvent:(id)arg1;

// IKImageFlowView (IKEvent)

- (id)_scrollerEventForEvent:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)beginGestureWithEvent:(id)arg1;
- (unsigned long long)cellIndexAtMouseEvent:(id)arg1;
- (void)defaultDoubleClickAction:(int)arg1;
- (void)deleteSelection;
- (void)endGestureWithEvent:(id)arg1;
- (BOOL)handleDoubleClickOnCellAtIndex:(unsigned long long)arg1;
- (void)keyDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseUp:(id)arg1;
- (BOOL)resignFirstResponder;
- (void)scrollWheel:(id)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })splitterTrackingRect;
- (void)updateTrackingAreas;

// IKImageFlowView (IKInlinePreview)

- (void)_inlinePreviewLayerTreeDidChange;
- (void)_inlinePreviewRedisplay;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_reflectionFrame;
- (void)_showOverlayIfNeeded;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })displayedImageFrame;
- (void)drawInlinePreview;
- (void)inlinePreview:(id)arg1 didChangeToState:(int)arg2;
- (void)inlinePreview:(id)arg1 didLoadPreviewItem:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })inlinePreview:(id)arg1 frameForPreviewItem:(id)arg2;
- (id)inlinePreviewController;
- (BOOL)inlinePreviewEnabled;
- (BOOL)inlinePreviewIsVisible;
- (id)inlinePreviewItemForCellAtIndex:(long long)arg1;
- (BOOL)inlinePreviewMouseDown:(id)arg1;
- (void)inlinePreviewMouseEntered:(id)arg1;
- (void)inlinePreviewMouseExited:(id)arg1;
- (BOOL)inlinePreviewShouldAlwaysHandleMultiClicks:(id)arg1;
- (id)inlinePreviewView;
- (id)previewPanel:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg3;
- (void)removeInlinePreview;
- (void)setInlinePreviewEnabled:(BOOL)arg1;
- (void)setSharingPreviewPanel:(id)arg1;
- (void)setupInlinePreview;
- (id)sharingPreviewPanel;
- (void)startInlinePreview;
- (void)startInlinePreviewWithReflectedLayer:(id)arg1;
- (void)stopInlinePreview;
- (void)stopPlayingInlinePreview;
- (void)unsetupInlinePreview;
- (void)updateInlinePreview;
- (void)updateInlinePreviewTrackingAreas;

// IKImageFlowView (animationManagerDelegate)

- (id)animationValueForKey:(id)arg1 forCell:(id)arg2;
- (void)initAppearingAnimationWithItems:(id)arg1 diff:(id)arg2;
- (void)initImportAnimationWithIndexes:(id)arg1;
- (void)initMovingAndDisappearingAnimationWithItems:(id)arg1 diff:(id)arg2;

// IKImageFlowView (ik_scrolling)

- (void)_autoSelectCallback;
- (void)_scrollingAnimationCallback;
- (void)animateScrolling;
- (void)autoscrollCallBack;
- (BOOL)autoscrollWithLocalPoint:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)scrollBy:(struct CGSize { double x1; double x2; })arg1;
- (void)scrollerDidChange:(id)arg1;
- (void)setScrollerValueFromSelection;
- (void)startAutoscroll;
- (void)stopAutoscroll;
- (void)stopScrollingAnimation;

// IKImageFlowView (tasks)

- (void)__performSynchronousTasksIfAnyInSecondaryThread:(id)arg1 delegate:(id)arg2;
- (void)_cancelSynchronousTask;
- (BOOL)_didComputeThumbnail:(id)arg1;
- (void)_didImportAsynchronousThumbnail:(id)arg1;
- (void)_didImportThumbnail:(id)arg1;
- (BOOL)_freeTemporaryCacheStepWithVisibleIndexes:(id)arg1;
- (BOOL)_importThumbnails:(id)arg1 state:(struct { unsigned long long x1; BOOL x2; }*)arg2;
- (BOOL)_needImport:(id)arg1 forCellSize:(double)arg2;
- (int)_prepareThumbnailBuildersForCells:(id)arg1 size:(int)arg2 start:(long long)arg3 quality:(int)arg4 skipPlaceHolders:(BOOL)arg5 arrayOut:(id)arg6;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_rangeToPrefetch;
- (BOOL)_shouldProcessLongTasks;
- (void)_taskRedisplay;
- (void)_updateTasksCellsCopy;
- (void)abortFreeTemporaryCache;
- (void)abortImportVisibleCells;
- (void)abortNicestRendering;
- (void)abortPrefetchThumbnails;
- (id)cellsArrayForTasks;
- (BOOL)didImportCell:(id)arg1 thumbnail:(id)arg2 visible:(BOOL)arg3;
- (id)freeTemporaryCacheProgress;
- (id)importVisibleCellsPriority;
- (id)nicestRenderingDelay;
- (BOOL)nicestRenderingExpendStep;
- (void)nicestRenderingLoop;
- (id)nicestRenderingPriority;
- (id)nicestRenderingProgress;
- (void)performSynchronousTasksIfAny;
- (id)prefetchThumbnailsDelay;
- (id)prefetchThumbnailsProgress;
- (id)prepareThumbnailBuilderForCell:(id)arg1 size:(double)arg2 quality:(int)arg3;
- (id)prepareThumbnailBuildersForCells:(id)arg1 size:(int)arg2 quality:(int)arg3 skipPlaceHolders:(BOOL)arg4;
- (void)registerTasks;
- (void)restartTasks;
- (BOOL)shouldStartTaskNamed:(id)arg1;
- (void)startFreeTemporaryCache;
- (void)startImportVisibleCells;
- (void)startNicestRendering;
- (void)startPrefetchThumbnails;
- (id)taskManager;

@end
