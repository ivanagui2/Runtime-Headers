/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
 */

@interface GFGraphView : NSView {
    NSMutableDictionary * _alignment;
    NSColor * _backgroundColor;
    struct CGPoint { 
        double x; 
        double y; 
    }  _cachedCenter;
    float  _cachedZoomFactor;
    GFConnection * _connection;
    struct CGPoint { 
        double x; 
        double y; 
    }  _connectionEnd;
    GFPort * _connectionPort;
    struct CGPoint { 
        double x; 
        double y; 
    }  _connectionStart;
    BOOL  _disableValidation;
    BOOL  _drawsBackground;
    BOOL  _drawsShadows;
    GFNode * _firstResponder;
    GFGraph * _graph;
    GFGraphEditorView * _graphEditor;
    NSColor * _gridColor;
    unsigned long long  _gridStep;
    GFList * _nodeActorCache;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _selectionBounds;
    BOOL  _spaceDown;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _tooltipBounds;
    double  _tooltipDelay;
    GFNode * _tooltipNode;
    BOOL  _tooltipPending;
    struct __CFRunLoopTimer { } * _tooltipTimer;
    NSTrackingArea * _trackingArea;
    NSUndoManager * _undoManager;
    void * _unused;
}

- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })adjustScroll:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)autoscroll:(id)arg1;
- (BOOL)becomeFirstResponder;
- (void)dealloc;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)finalize;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (void)keyDown:(id)arg1;
- (void)keyUp:(id)arg1;
- (BOOL)knowsPageRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)otherMouseDown:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)print:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectForPage:(long long)arg1;
- (void)redo:(id)arg1;
- (BOOL)resignFirstResponder;
- (void)rightMouseDown:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)setBoundsOrigin:(struct CGPoint { double x1; double x2; })arg1;
- (void)setBoundsSize:(struct CGSize { double x1; double x2; })arg1;
- (void)swipeWithEvent:(id)arg1;
- (void)undo:(id)arg1;
- (void)updateTrackingAreas;
- (BOOL)validateMenuItem:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;

// GFGraphView (Actions)

- (void)_addNote:(id)arg1;
- (id)_createSubgraphFromSelection:(id)arg1;
- (id)_createSubgraphFromSelection:(id)arg1 withMacroType:(Class)arg2;
- (void)_deleteNote:(id)arg1;
- (void)_editNote:(id)arg1;
- (void)_editParentGraph:(id)arg1;
- (void)_setNoteColor:(id)arg1;

// GFGraphView (ItemActions)

- (void)__addToSelection:(id)arg1 context:(void*)arg2;
- (void)__delete:(id)arg1 context:(void*)arg2;
- (void)__deselect:(id)arg1 context:(void*)arg2;
- (void)__move:(id)arg1 context:(void*)arg2;
- (void)__removeFromSelection:(id)arg1 context:(void*)arg2;
- (void)__restorePosition:(id)arg1 context:(void*)arg2;
- (void)__restoreSelection:(id)arg1 context:(void*)arg2;
- (void)__savePosition:(id)arg1 context:(void*)arg2;
- (void)__saveSelection:(id)arg1 context:(void*)arg2;
- (void)__select:(id)arg1 context:(void*)arg2;
- (void)__undoableMove:(id)arg1 context:(void*)arg2;
- (void)__unionRect:(id)arg1 context:(void*)arg2;
- (void)__validatePosition:(id)arg1 context:(void*)arg2;

// GFGraphView (LocalNodeActor)

- (void)_drawNode:(id)arg1 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_drawSelectionRingWithColor:(id)arg1 width:(double)arg2 forNode:(id)arg3 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4;
- (BOOL)_handleKeyDown:(id)arg1 inNode:(id)arg2;
- (BOOL)_handleKeyUp:(id)arg1 inNode:(id)arg2;
- (id)_menuForNode:(id)arg1;
- (BOOL)_nodeAcceptsFirstResponder:(id)arg1;
- (BOOL)_nodeBecomesFirstResponder:(id)arg1;
- (BOOL)_nodeResignsFirstResponder:(id)arg1;
- (struct CGPoint { double x1; double x2; })_pointForPort:(id)arg1 inNode:(id)arg2 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (id)_portForPoint:(struct CGPoint { double x1; double x2; })arg1 inNode:(id)arg2 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (struct CGSize { double x1; double x2; })_sizeForNode:(id)arg1;
- (BOOL)_trackMouse:(id)arg1 inNode:(id)arg2 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;

// GFGraphView (Private)

+ (id)_noteAttributes;

- (void)__frameChanged:(id)arg1;
- (void)__layoutUpdated:(id)arg1;
- (BOOL)__selectionFilter:(id)arg1;
- (void)__stateUpdated:(id)arg1;
- (void)__windowKey:(id)arg1;
- (BOOL)_addNode:(id)arg1 atPosition:(struct CGPoint { double x1; double x2; })arg2;
- (void)_adjustFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_boundsForSelection;
- (void)_cacheZoomState;
- (struct CGPoint { double x1; double x2; })_centerPoint;
- (id)_colorForConnection:(id)arg1;
- (BOOL)_deselectAll;
- (void)_drawGraph:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 selectionRingColor:(id)arg2 selectionRingWidth:(double)arg3 nodeCount:(unsigned long long)arg4 nodeList:(id*)arg5 connectionCount:(unsigned long long)arg6 connectionList:(id*)arg7;
- (BOOL)_editNode:(id)arg1;
- (void)_editNoteAtIndex:(unsigned long long)arg1;
- (void)_finishInitialization;
- (id)_firstResponderNode;
- (id)_graphEditor;
- (void)_hideTooltip;
- (id)_imageForSelection;
- (id)_menuForNote:(unsigned long long)arg1;
- (id)_nodeAtPosition:(struct CGPoint { double x1; double x2; })arg1 outBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2;
- (struct CGPoint { double x1; double x2; })_pastePoint;
- (unsigned long long)_performActionOnAllNodes:(SEL)arg1 context:(void*)arg2;
- (unsigned long long)_performActionOnNodes:(SEL)arg1 context:(void*)arg2 selectedOnly:(BOOL)arg3;
- (unsigned long long)_performActionOnSelectedNodes:(SEL)arg1 context:(void*)arg2;
- (void)_printWithInfo:(id)arg1 showingPrintPanel:(BOOL)arg2;
- (void)_readSelectionFromPasteboard:(id)arg1 toPoint:(struct CGPoint { double x1; double x2; })arg2;
- (BOOL)_readSelectionFromState:(id)arg1 toPoint:(struct CGPoint { double x1; double x2; })arg2;
- (BOOL)_readSelectionFromUnarchiver:(id)arg1 toPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)_restoreZoomState;
- (void)_setCenterPoint:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)_setFirstResponderNode:(id)arg1;
- (void)_setGraphEditor:(id)arg1;
- (void)_setUndoManager:(id)arg1;
- (void)_setZoomFactor:(float)arg1;
- (void)_setZoomFactor:(float)arg1 centerPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)_showTooltip;
- (void)_startTooltips;
- (void)_stopTooltips;
- (id)_trackedConnection;
- (void)_updateTooltipsForMouseLocation:(struct CGPoint { double x1; double x2; })arg1;
- (void)_validateNodePosition:(id)arg1;
- (void)_validateNodePositions;
- (void)_writeSelectionToArchiver:(id)arg1 fromPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)_writeSelectionToPasteboard:(id)arg1 fromPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)_writeSelectionToState:(id)arg1 fromPoint:(struct CGPoint { double x1; double x2; })arg2;
- (float)_zoomFactor;
- (void)_zoomToFitAll;
- (void)_zoomToFitRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_zoomToFitSelection;
- (void)_zoomWithSpeedFactor:(float)arg1;
- (void)delete:(id)arg1;
- (void)removeFromSuperview;

// GFGraphView (Specific)

- (void)_drawConnection:(id)arg1 fromPort:(id)arg2 point:(struct CGPoint { double x1; double x2; })arg3 toPoint:(struct CGPoint { double x1; double x2; })arg4;
- (BOOL)alignNodes;
- (id)backgroundColor;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundsForConnection:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundsForConnection:(id)arg1 fromPoint:(struct CGPoint { double x1; double x2; })arg2 toPoint:(struct CGPoint { double x1; double x2; })arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundsForNode:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)drawBackground:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawConnection:(id)arg1 fromPoint:(struct CGPoint { double x1; double x2; })arg2 toPoint:(struct CGPoint { double x1; double x2; })arg3;
- (void)drawNote:(id)arg1 inBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 withColor:(id)arg3;
- (void)drawSelectionArea:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)drawsBackground;
- (BOOL)drawsShadows;
- (void)duplicate:(id)arg1;
- (id)graph;
- (id)gridColor;
- (unsigned long long)gridStep;
- (BOOL)handleKeyDown:(id)arg1;
- (BOOL)handleKeyUp:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })maxBounds;
- (id)menuForGraph;
- (id)nodeActorForNode:(id)arg1;
- (void)noteContentChanged;
- (void)paste:(id)arg1;
- (void)resetInspectorViews;
- (void)resetTooltipView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })resizeBoundsForNote:(id)arg1 inBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)setAlignNodes:(BOOL)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setDrawsBackground:(BOOL)arg1;
- (void)setDrawsShadows:(BOOL)arg1;
- (void)setGraph:(id)arg1;
- (void)setGridColor:(id)arg1;
- (void)setGridStep:(unsigned long long)arg1;
- (void)setNeedsDisplayForNode:(id)arg1;
- (void)setTooltipDelay:(double)arg1;
- (id)setupInspectorViews;
- (id)setupTooltipViewForPoint:(struct CGPoint { double x1; double x2; })arg1 tooltipBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })titlebarBoundsForNote:(id)arg1 inBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (double)tooltipDelay;
- (id)tooltipStringForPoint:(struct CGPoint { double x1; double x2; })arg1 tooltipBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2;
- (BOOL)trackConnection:(id)arg1 fromPort:(id)arg2 atPoint:(struct CGPoint { double x1; double x2; })arg3;
- (BOOL)trackMouse:(id)arg1;

@end
