/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
 */

@interface IKScan : NSObject <NSCopying> {
    long long  _autoSelection;
    unsigned long long  _bitDepth;
    NSMutableSet * _completedScans;
    BOOL  _createSingleDocument;
    BOOL  _createSingleDocumentReChecked;
    int  _currentScanIndex;
    unsigned long long  _currentScanType;
    long long  _currentSelectionIndex;
    IKScanUIController * _delegate;
    NSString * _documentDisplayName;
    NSURL * _documentLocation;
    NSString * _documentName;
    unsigned long long  _documentType;
    BOOL  _duplexScanningEnabled;
    unsigned long long  _evenPageOrientation;
    NSString * _fileFormat;
    NSURL * _finalDestURL;
    unsigned long long  _flatbedOrientation;
    ICScannerFunctionalUnit * _functionalUnit;
    IKImageCorrectionHandler * _imageCorrectionHandler;
    struct CGPoint { 
        double x; 
        double y; 
    }  _inchPosition;
    NSURL * _lastDocumentLocation;
    NSString * _lastDocumentName;
    unsigned long long  _measurementUnit;
    NSMutableDictionary * _metaData;
    BOOL  _needsSpecialOrientationHandling;
    long long  _numberOfSelections;
    unsigned long long  _oddPageOrientation;
    unsigned long long  _overviewResolution;
    BOOL  _overviewScanInProgress;
    unsigned long long  _pixelDataType;
    NSURL * _postProcessingApp;
    unsigned long long  _resolution;
    BOOL  _reviewSimpleScanResults;
    double  _rotationAngle;
    unsigned long long  _scaleFactor;
    BOOL  _scanComplete;
    BOOL  _scanFailed;
    BOOL  _scanInProgress;
    IKScanInfo * _scanInfo;
    BOOL  _scanIsICARawScan;
    double  _scanPercentDone;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _scanRect;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _scanRectNonClipped;
    unsigned long long  _scanRectOrientation;
    BOOL  _scanToTempDirectory;
    NSURL * _scannedImageURL;
    ICScannerDevice * _scannerDevice;
    long long  _scannerReportedError;
    struct CGSize { 
        double width; 
        double height; 
    }  _selectionSize;
    BOOL  _selfTestRunning;
    long long  _state;
    unsigned char  _thresholdForBlackAndWhiteScanning;
    BOOL  _transferModeMemoryBased;
    BOOL  _useScanRect;
    unsigned long long  _userRequestedOverviewResolution;
    NSString * _userSpecifiedDocumentName;
}

@property (atomic, readwrite) long long autoSelection;
@property (atomic, readwrite) unsigned long long bitDepth;
@property (atomic, readwrite, retain) NSMutableSet *completedScans;
@property (nonatomic, readwrite) BOOL createSingleDocument;
@property (nonatomic, readwrite) BOOL createSingleDocumentReChecked;
@property (nonatomic, readwrite) IKScanUIController *delegate;
@property (nonatomic, readwrite, copy) NSString *documentDisplayName;
@property (nonatomic, readwrite, copy) NSURL *documentLocation;
@property (nonatomic, readwrite, copy) NSString *documentName;
@property (atomic, readwrite) unsigned long long documentType;
@property (atomic, readwrite) BOOL duplexScanningEnabled;
@property (atomic, readwrite) unsigned long long evenPageOrientation;
@property (atomic, readwrite, copy) NSString *fileFormat;
@property (nonatomic, readwrite, copy) NSURL *finalDestURL;
@property (atomic, readwrite) unsigned long long flatbedOrientation;
@property (atomic, readwrite) IKImageCorrectionHandler *imageCorrectionHandler;
@property (atomic, readwrite) struct CGPoint { double x1; double x2; } inchPosition;
@property (atomic, readwrite, copy) NSURL *lastDocumentLocation;
@property (atomic, readwrite, copy) NSString *lastDocumentName;
@property (atomic, readwrite) unsigned long long measurementUnit;
@property (atomic, readwrite) BOOL needsSpecialOrientationHandling;
@property (atomic, readwrite) unsigned long long oddPageOrientation;
@property (atomic, readonly) unsigned long long overviewResolution;
@property (atomic, readwrite) unsigned long long pixelDataType;
@property (atomic, readwrite) unsigned long long resolution;
@property (atomic, readwrite) BOOL reviewSimpleScanResults;
@property (atomic, readwrite) double rotationAngle;
@property (atomic, readwrite) unsigned long long scaleFactor;
@property (atomic, readwrite) BOOL scanComplete;
@property (atomic, readwrite, retain) IKScanInfo *scanInfo;
@property (atomic, readwrite) BOOL scanIsICARawScan;
@property (nonatomic, readwrite) double scanPercentDone;
@property (nonatomic, readwrite) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } scanRect;
@property (atomic, readwrite) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } scanRectNonClipped;
@property (atomic, readwrite) unsigned long long scanRectOrientation;
@property (atomic, readwrite) BOOL scanToTempDirectory;
@property (atomic, readwrite, copy) NSURL *scannedImageURL;
@property (atomic, readwrite) long long scannerReportedError;
@property (atomic, readwrite) struct CGSize { double x1; double x2; } selectionSize;
@property (atomic, readwrite) BOOL selfTestRunning;
@property (atomic, readwrite) long long state;
@property (atomic, readwrite) BOOL useScanRect;
@property (atomic, readwrite, copy) NSString *userSpecifiedDocumentName;

+ (struct CGImage { }*)copy1BitImageFromCGContext:(struct CGContext { }*)arg1 inputImage:(struct CGImage { }*)arg2;

- (void)CGImageSaveToFile:(struct CGImage { }*)arg1 name:(const char *)arg2;
- (void)appendImage:(struct CGImage { }*)arg1 toImageURL:(id)arg2;
- (void)appendPDFJPEGPage:(struct CGPDFPage { }*)arg1 toPDFDocument:(struct CGPDFDocument { }*)arg2;
- (void)appendURL:(id)arg1 toImageURL:(id)arg2;
- (void)appendURL:(id)arg1 toPDFURL:(id)arg2;
- (void)applyImageCorrection:(struct CGImage { }*)arg1 url:(id)arg2 completion:(id)arg3;
- (void)autoScansNextPage;
- (long long)autoSelection;
- (unsigned long long)bitDepth;
- (id)completedScans;
- (struct CGImage { }*)copyCGImageFromImageURL;
- (struct CGImage { }*)copyCGImageFromRawScanData:(id)arg1;
- (struct CGImage { }*)copyCGImageFromRawScanURL;
- (struct CGImage { }*)copyCGImageFromURL;
- (struct __CFData { }*)copyImageData:(struct CGImage { }*)arg1 resolution:(unsigned long long)arg2 format:(struct __CFString { }*)arg3;
- (struct __CFData { }*)copyJPEGData:(struct CGImage { }*)arg1 resolution:(unsigned long long)arg2;
- (struct CGImage { }*)copySizeOptimizedImage:(struct CGImage { }*)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (BOOL)createSingleDocument;
- (BOOL)createSingleDocumentReChecked;
- (void)dealloc;
- (id)delegate;
- (void)deleteTempFileForURL:(id)arg1;
- (void)device:(id)arg1 didEncounterError:(id)arg2;
- (void)device:(id)arg1 didReceiveStatusInformation:(id)arg2;
- (void)doPostProcessing:(id)arg1;
- (id)documentDisplayName;
- (id)documentLocation;
- (id)documentName;
- (unsigned long long)documentType;
- (void)doneWithScan:(id)arg1;
- (void)dumpVendorFeatures;
- (BOOL)duplexScanningEnabled;
- (void)errorAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void*)arg3;
- (unsigned long long)evenPageOrientation;
- (id)fileFormat;
- (id)finalDestURL;
- (unsigned long long)flatbedOrientation;
- (unsigned long long)freeSpaceAtURL:(id)arg1;
- (void)handleCGImageDestinationFinalize:(BOOL)arg1 url:(id)arg2 format:(id)arg3;
- (id)imageCorrectionHandler;
- (id)imagePropertiesForAppending:(struct CGImage { }*)arg1;
- (struct CGPoint { double x1; double x2; })inchPosition;
- (id)init;
- (id)lastDocumentLocation;
- (id)lastDocumentName;
- (unsigned long long)measurementUnit;
- (BOOL)needsSpecialOrientationHandling;
- (unsigned long long)oddPageOrientation;
- (unsigned long long)overviewResolution;
- (void)overviewTimedOut;
- (unsigned long long)pixelDataType;
- (void)postError:(long long)arg1;
- (void)prepareForNumberOfSelections:(long long)arg1;
- (void)reset;
- (void)resetOverviewTimer;
- (void)resetScanTimer;
- (unsigned long long)resolution;
- (BOOL)reviewSimpleScanResults;
- (void)rotateAndCrop:(struct CGImage { }*)arg1 url:(id)arg2 completion:(id)arg3;
- (double)rotationAngle;
- (int)rotationFromOrientation:(int)arg1 dict:(id)arg2;
- (id)saveImage:(struct CGImage { }*)arg1 toDownloadURL:(id)arg2 documentName:(id)arg3 imageType:(id)arg4 optimize:(BOOL)arg5;
- (void)saveToFinalDestination:(struct CGImage { }*)arg1 url:(id)arg2;
- (unsigned long long)scaleFactor;
- (BOOL)scanComplete;
- (id)scanInfo;
- (BOOL)scanIsICARawScan;
- (BOOL)scanNextSelection;
- (double)scanPercentDone;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })scanRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })scanRectNonClipped;
- (unsigned long long)scanRectOrientation;
- (void)scanTimedOut;
- (BOOL)scanToTempDirectory;
- (id)scannedImageURL;
- (void)scannerDevice:(id)arg1 didCompleteOverviewScanWithError:(id)arg2;
- (void)scannerDevice:(id)arg1 didCompleteScanWithError:(id)arg2;
- (void)scannerDevice:(id)arg1 didScanToURL:(id)arg2 newStyle:(BOOL)arg3;
- (long long)scannerReportedError;
- (double)screenDPI;
- (struct CGSize { double x1; double x2; })selectionSize;
- (BOOL)selfTestRunning;
- (void)setAutoSelection:(long long)arg1;
- (void)setBitDepth:(unsigned long long)arg1;
- (void)setCompletedScans:(id)arg1;
- (void)setCreateSingleDocument:(BOOL)arg1;
- (void)setCreateSingleDocumentReChecked:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDocumentDisplayName:(id)arg1;
- (void)setDocumentLocation:(id)arg1;
- (void)setDocumentName:(id)arg1;
- (void)setDocumentType:(unsigned long long)arg1;
- (void)setDuplexScanningEnabled:(BOOL)arg1;
- (void)setEvenPageOrientation:(unsigned long long)arg1;
- (void)setFileFormat:(id)arg1;
- (void)setFinalDestURL:(id)arg1;
- (void)setFlatbedOrientation:(unsigned long long)arg1;
- (void)setImageCorrectionHandler:(id)arg1;
- (void)setInchPosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)setLastDocumentLocation:(id)arg1;
- (void)setLastDocumentName:(id)arg1;
- (void)setMeasurementUnit:(unsigned long long)arg1;
- (void)setNeedsSpecialOrientationHandling:(BOOL)arg1;
- (void)setOddPageOrientation:(unsigned long long)arg1;
- (void)setPixelDataType:(unsigned long long)arg1;
- (void)setResolution:(unsigned long long)arg1;
- (void)setReviewSimpleScanResults:(BOOL)arg1;
- (void)setRotationAngle:(double)arg1;
- (void)setScaleFactor:(unsigned long long)arg1;
- (void)setScanComplete:(BOOL)arg1;
- (void)setScanInfo:(id)arg1;
- (void)setScanIsICARawScan:(BOOL)arg1;
- (void)setScanPercentDone:(double)arg1;
- (void)setScanRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setScanRectNonClipped:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setScanRectOrientation:(unsigned long long)arg1;
- (void)setScanToTempDirectory:(BOOL)arg1;
- (void)setScannedImageURL:(id)arg1;
- (void)setScannerReportedError:(long long)arg1;
- (void)setSelectionSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setSelfTestRunning:(BOOL)arg1;
- (void)setState:(long long)arg1;
- (void)setUseScanRect:(BOOL)arg1;
- (void)setUserSpecifiedDocumentName:(id)arg1;
- (BOOL)startOverviewScan:(id)arg1;
- (BOOL)startScan:(id)arg1;
- (long long)state;
- (id)tempScanDir;
- (id)tiffDataFromScanData:(id)arg1;
- (void)updateFunctionalUnit:(id)arg1;
- (void)updatePercentDone;
- (BOOL)useScanRect;
- (id)userSpecifiedDocumentName;
- (void)wdCompleteOverviewScan:(id)arg1;
- (void)wdCompleteScan:(id)arg1;
- (void)wdStartOverviewScan:(id)arg1;
- (void)wdStartScan:(id)arg1;
- (void)wdUpdateOverviewScan:(id)arg1 percentDone:(double)arg2;
- (void)wdUpdatePercentDone:(double)arg1;
- (void)wdUpdateScan:(id)arg1 percentDone:(double)arg2;
- (void)writeImage:(struct CGImage { }*)arg1 toImageURL:(id)arg2;
- (void)writeImage:(struct CGImage { }*)arg1 toPDFURL:(id)arg2 metadata:(id)arg3;

@end
