/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
 */

@interface QCCompositionPickerController : NSObject {
    long long  _currentPage;
    id  _delegate;
    BOOL  _disableOptimizations;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _expandedGridFrame;
    QCCompositionPickerInfos * _infos;
    BOOL  _isScrolling;
    NSString * _lastUpdatedDefaultKey;
    NSMutableDictionary * _optimizedDefaultValues;
    long long  _orderedState;
    NSArray * _originalCompositions;
    long long  _pendingSelection;
    long long  _pickerLayoutState;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _selectionZoomRect;
    struct __CFDictionary { } * _views;
    float  _windowContentsScale;
}

@property (atomic, readwrite) long long currentPage;
@property (atomic, readwrite, retain) NSString *lastUpdatedDefaultKey;
@property (atomic, readwrite) long long orderedState;
@property (atomic, readwrite) long long pickerLayoutState;
@property (atomic, readwrite) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } selectionZoomRect;
@property (atomic, readwrite) float windowContentsScale;

- (id)_compositionsWithIdentity:(id)arg1;
- (void)_forceUpdateCompositions;
- (void)_handleSelectionInFocusRingMode:(long long)arg1;
- (void)_handleSelectionInZoomMode:(long long)arg1;
- (void)_newCompositionsDidLoad:(id)arg1;
- (id)_newOptimizedDefaultValue:(id)arg1 forInputKey:(id)arg2 cellSize:(struct CGSize { double x1; double x2; })arg3;
- (void)_pageChanged:(long long)arg1 direction:(long long)arg2;
- (unsigned long long)_pagesCountForCompositions:(id)arg1;
- (unsigned long long)_pagesCountforCompositionsCount:(unsigned long long)arg1;
- (void)_repositoryDidUpdate:(id)arg1;
- (void)_resetGrid;
- (void)_resetGrid:(BOOL)arg1;
- (id)_setupGridWithCompositions:(id)arg1;
- (void)_updateOptimizedDefaultValues;
- (void)animationDidStart:(id)arg1;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (id)cellAtIndex:(long long)arg1;
- (struct CGSize { double x1; double x2; })cellSize;
- (id)cells;
- (long long)cellsCount;
- (unsigned long long)compositionIndexForPage:(unsigned long long)arg1;
- (id)compositionsAtPage:(long long)arg1;
- (long long)currentPage;
- (void)dealloc;
- (id)defaultValueForInputKey:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })expandedGridFrame;
- (void)finalize;
- (BOOL)flipCellsHorizontally;
- (unsigned long long)gotoNextPage;
- (unsigned long long)gotoNextPage:(id)arg1;
- (unsigned long long)gotoPreviousPage;
- (unsigned long long)gotoPreviousPage:(id)arg1;
- (long long)gridCapacity;
- (struct CGSize { double x1; double x2; })gridSize;
- (id)initWithInfos:(id)arg1;
- (BOOL)isAnimating;
- (BOOL)isScrolling;
- (BOOL)keyDown:(id)arg1;
- (id)lastUpdatedDefaultKey;
- (id)layerAtLocation:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)mouseDown:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)optimizesParameters;
- (long long)orderedState;
- (unsigned long long)pagesCount;
- (void)pauseAnimation:(BOOL)arg1;
- (id)pickerInfos;
- (long long)pickerLayoutState;
- (void)registerView:(id)arg1 name:(id)arg2;
- (void)relayoutPicker;
- (void)resetDefaultInputValues;
- (void)resumeAnimation:(BOOL)arg1;
- (id)selectedComposition;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })selectionZoomRect;
- (void)setAllowsEmptySelection:(BOOL)arg1;
- (void)setAllowsIdentitySelection:(BOOL)arg1;
- (void)setAllowsIdentitySelection:(BOOL)arg1 relayout:(BOOL)arg2;
- (void)setAllowsLayoutAnimations:(BOOL)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setCellBackgroundColor:(id)arg1;
- (void)setCompositionAspectRatio:(struct CGSize { double x1; double x2; })arg1;
- (void)setCompositionsFromRepositoryWithProtocol:(id)arg1 andAttributes:(id)arg2 sortedBy:(id)arg3;
- (void)setCurrentPage:(long long)arg1;
- (void)setDefaultValue:(id)arg1 forInputKey:(id)arg2;
- (void)setDelegate:(id)arg1;
- (void)setDrawsBackground:(BOOL)arg1;
- (void)setExpandedGridFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setFillsPicker:(BOOL)arg1;
- (void)setFlipCellsHorizontally:(BOOL)arg1;
- (void)setLastUpdatedDefaultKey:(id)arg1;
- (void)setMaxAnimationFrameRate:(float)arg1;
- (void)setNumberOfColumns:(unsigned long long)arg1;
- (void)setNumberOfRows:(unsigned long long)arg1;
- (void)setOptimizesParameters:(BOOL)arg1;
- (void)setOrderedState:(long long)arg1;
- (void)setPickerLayoutState:(long long)arg1;
- (void)setSelectedComposition:(id)arg1;
- (void)setSelectedCompositionIndex:(long long)arg1;
- (void)setSelectedCompositionIndex:(long long)arg1 direction:(long long)arg2;
- (void)setSelectedCompositionIndexInsideGrid:(long long)arg1;
- (void)setSelectedCompositionIndexValue:(id)arg1;
- (void)setSelectionMode:(long long)arg1;
- (void)setSelectionZoomRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setShowsCompositionNames:(BOOL)arg1;
- (BOOL)setValue:(id)arg1 forInputKey:(id)arg2 composition:(id)arg3;
- (void)setWindowContentsScale:(float)arg1;
- (void)setZoomsOnSelection:(BOOL)arg1;
- (void)sleep;
- (void)startAnimation;
- (void)stopAnimation;
- (id)viewForName:(id)arg1;
- (void)wakeup;
- (float)windowContentsScale;

@end
