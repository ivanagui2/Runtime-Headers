/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
 */

@interface IKImageView : NSView <DebugHierarchyObject> {
    void * _privateData;
}

@property (atomic, readwrite) BOOL autohidesScrollers;
@property (atomic, readwrite) BOOL autoresizes;
@property (atomic, readwrite) NSColor *backgroundColor;
@property (atomic, readwrite, copy) NSString *currentToolMode;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readwrite) id delegate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite) BOOL doubleClickOpensImageEditPanel;
@property (atomic, readwrite) BOOL editable;
@property (atomic, readwrite) BOOL hasHorizontalScroller;
@property (atomic, readwrite) BOOL hasVerticalScroller;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite) CIFilter *imageCorrection;
@property (atomic, readwrite) double rotationAngle;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite) BOOL supportsDragAndDrop;
@property (atomic, readwrite) double zoomFactor;

// Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit

+ (void)initialize;

- (void)_didInitWithCoder;
- (void)_didInitWithCoder:(id)arg1;
- (void)_finishedMakingConnections;
- (void)_willInitWithCoder;
- (BOOL)acceptsFirstResponder;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })adjustScroll:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)autohidesScrollers;
- (BOOL)autoresizes;
- (id)backgroundColor;
- (BOOL)becomeFirstResponder;
- (void)changeColor:(id)arg1;
- (void)changeFont:(id)arg1;
- (void)commonInit;
- (struct CGPoint { double x1; double x2; })convertImagePointToViewPoint:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertImageRectToViewRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGPoint { double x1; double x2; })convertPoint:(struct CGPoint { double x1; double x2; })arg1 fromView:(id)arg2;
- (struct CGPoint { double x1; double x2; })convertViewPointToImagePoint:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertViewRectToImageRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)crop:(id)arg1;
- (id)currentToolMode;
- (void)dealloc;
- (void)debugLayerTree:(id)arg1;
- (id)delegate;
- (BOOL)doubleClickOpensImageEditPanel;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)dump;
- (void)dumpLayer:(id)arg1 prefix:(id)arg2;
- (void)dumpLayer:(id)arg1 prefix:(id)arg2 verbose:(BOOL)arg3;
- (BOOL)editable;
- (id)enclosingScrollView;
- (void)encodeWithCoder:(id)arg1;
- (id)exposedBindings;
- (void)finalize;
- (void)flagsChanged:(id)arg1;
- (void)flipImageHorizontal:(id)arg1;
- (void)flipImageVertical:(id)arg1;
- (void)forwardInvocation:(id)arg1;
- (void)handleViewDidMoveToSuperView;
- (BOOL)hasHorizontalScroller;
- (BOOL)hasVerticalScroller;
- (void)ibSetSampleURL;
- (struct CGImage { }*)image;
- (id)imageCorrection;
- (id)imageProperties;
- (struct CGSize { double x1; double x2; })imageSize;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (void)keyDown:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (id)overlayForType:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)postZoom;
- (void)preZoom;
- (void)removeFromSuperview;
- (void)resetCursorRects;
- (BOOL)resignFirstResponder;
- (void)rotateImageLeft:(id)arg1;
- (void)rotateImageRight:(id)arg1;
- (void)rotateWithEvent:(id)arg1;
- (double)rotationAngle;
- (void)scrollToPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)scrollToRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setAutohidesScrollers:(BOOL)arg1;
- (void)setAutoresizes:(BOOL)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setCurrentToolMode:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDoubleClickOpensImageEditPanel:(BOOL)arg1;
- (void)setEditable:(BOOL)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setHasHorizontalScroller:(BOOL)arg1;
- (void)setHasVerticalScroller:(BOOL)arg1;
- (void)setImage:(struct CGImage { }*)arg1 imageProperties:(id)arg2;
- (void)setImage:(struct CGImage { }*)arg1 imageProperties:(id)arg2 options:(id)arg3;
- (void)setImageCorrection:(id)arg1;
- (void)setImageWithURL:(id)arg1;
- (void)setImageZoomFactor:(double)arg1 centerPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)setLayer:(id)arg1;
- (void)setNeedsDisplay:(BOOL)arg1;
- (void)setOverlay:(id)arg1 forType:(id)arg2;
- (void)setRotation:(id)arg1;
- (void)setRotationAngle:(double)arg1;
- (void)setRotationAngle:(double)arg1 centerPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)setSupportsDragAndDrop:(BOOL)arg1;
- (void)setUserInterfaceItemIdentifier:(id)arg1;
- (void)setValueURL:(id)arg1;
- (void)setZoomFactor:(double)arg1;
- (BOOL)supportsDragAndDrop;
- (void)turnoffAutoresizes;
- (void)updateBackgroundColor;
- (Class)valueClassForBinding:(id)arg1;
- (id)valueURL;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;
- (double)zoomFactor;
- (void)zoomImageToActualSize:(id)arg1;
- (void)zoomImageToFit:(id)arg1;
- (void)zoomImageToRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)zoomIn:(id)arg1;
- (void)zoomOut:(id)arg1;

// IKImageView (IKImageViewInternal)

- (void)autoResizeToRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)backgroundLayer;
- (void)centerImage;
- (void)closeInspector:(id)arg1;
- (id)composer;
- (void)concludeDragOperation:(id)arg1;
- (void)connectToBackgroundLayer;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)embedded;
- (void)filterAdded:(id)arg1 filterChain:(id)arg2;
- (id)filterChain;
- (void)filterRemoved:(id)arg1 filterChain:(id)arg2;
- (id)imageLayer;
- (void)invalidateCursorRects;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (void)saveScrollInfo:(struct CGSize { double x1; double x2; })arg1 scaling:(struct CGPoint { double x1; double x2; })arg2;
- (void)selectionRectAdded;
- (void)selectionRectDidChange:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)selectionRectRemoved;
- (void)setEmbedded:(BOOL)arg1;
- (void)setFilterChain:(id)arg1;
- (void)setImage:(id)arg1;
- (void)setImageAlignment:(unsigned long long)arg1;
- (void)setImageFrameStyle:(unsigned long long)arg1;
- (void)setImageScaling:(unsigned long long)arg1;
- (void)setReuseImageLayer:(BOOL)arg1;
- (void)showInspector:(id)arg1;

// IKImageView (IKPrivate)

+ (struct CGImage { }*)imageFromCGImage:(struct CGImage { }*)arg1 imageProperties:(id)arg2 imageState:(id)arg3 options:(id)arg4;
+ (struct CGImage { }*)imageFromURL:(id)arg1 imageState:(id)arg2 options:(id)arg3;

- (void)addLayer:(id)arg1 linkedTo:(id)arg2;
- (BOOL)animates;
- (int)annotationType;
- (void)copy:(id)arg1;
- (struct CGImage { }*)createThumbnailOfSize:(unsigned long long)arg1;
- (struct CGImage { }*)createThumbnailWithMaximumSize:(struct CGSize { double x1; double x2; })arg1;
- (void)cut:(id)arg1;
- (void)filter:(id)arg1 setValue:(id)arg2 forKey:(id)arg3;
- (id)filter:(id)arg1 valueForKey:(id)arg2;
- (id)filterArray;
- (void)filterChainChanged:(id)arg1;
- (void)imageState:(id*)arg1 image:(struct CGImage {}**)arg2 options:(id)arg3;
- (id)imageURL;
- (struct CGImage { }*)imageWithOptions:(id)arg1;
- (id)layerOfType:(id)arg1;
- (void)paste:(id)arg1;
- (BOOL)registerLayer:(id)arg1;
- (void)removeLayer:(id)arg1;
- (void)selectAll:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })selectionRect;
- (void)setAnimates:(BOOL)arg1;
- (void)setAnnotationType:(int)arg1;
- (void)setCIImage:(id)arg1 imageProperties:(id)arg2;
- (void)setFilterArray:(id)arg1;
- (void)setImage:(struct CGImage { }*)arg1 imageProperties:(id)arg2 imageState:(id)arg3;
- (void)setImage:(struct CGImage { }*)arg1 imageProperties:(id)arg2 imageState:(id)arg3 options:(id)arg4;
- (void)setImageWithCGImageSource:(struct CGImageSource { }*)arg1;
- (void)setImageWithCGImageSource:(struct CGImageSource { }*)arg1 imageProperties:(id)arg2 options:(id)arg3;
- (void)setImageWithData:(id)arg1;
- (void)setImageWithData:(id)arg1 imageProperties:(id)arg2 options:(id)arg3;
- (void)setImageWithURL:(id)arg1 imageState:(id)arg2;
- (void)setImageWithURL:(id)arg1 imageState:(id)arg2 options:(id)arg3;
- (void)setNSImage:(id)arg1 imageProperties:(id)arg2;
- (void)setSelectionRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)updateImageEditPanelIfNeeded;
- (BOOL)validateMenuItem:(id)arg1;
- (void)writeImageAtIndex:(unsigned long long)arg1 toFile:(id)arg2 options:(id)arg3;

// Image: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Debugger/libViewDebuggerSupport.dylib

// IKImageView (DebugHierarchyAdditions)

- (id)debugHierarchyPropertyDescriptions;

@end
