/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
 */

@interface QCSCN_RendererReserved : NSObject {
    NSColor * _backgroundColor;
    id  _cameraModifier;
    double  _currentTime;
    id  _delegate;
    struct __C3DEngineAdaptor { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; void *x2; struct __C3DEngineContext {} *x3; void *x4; } * _engine;
    void * _glContext;
    BOOL  _jitteringEnabled;
    double  _lastTime;
    NSLock * _lock;
    BOOL  _loops;
    double  _nextFrameTime;
    struct __C3DFXRenderTarget { } * _offscreenColorTarget;
    struct __C3DFXRenderTarget { } * _offscreenDepthTarget;
    struct __C3DFramebuffer { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; unsigned int x2; unsigned int x3[10]; int x4; struct __C3DTexture {} *x5[10]; int x6; struct C3DVector2 { union { double x_1_2_1[2]; struct { double x_2_3_1; double x_2_3_2; } x_1_2_2; struct { double x_3_3_1; double x_3_3_2; } x_1_2_3; struct { double x_4_3_1; double x_4_3_2; } x_1_2_4; } x_7_1_1; } x7; bool x8; } * _offscreenFrameBuffer;
    void * _offscreenGLContext;
    struct __C3DFramebuffer { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; unsigned int x2; unsigned int x3[10]; int x4; struct __C3DTexture {} *x5[10]; int x6; struct C3DVector2 { union { double x_1_2_1[2]; struct { double x_2_3_1; double x_2_3_2; } x_1_2_2; struct { double x_3_3_1; double x_3_3_2; } x_1_2_3; struct { double x_4_3_1; double x_4_3_2; } x_1_2_4; } x_7_1_1; } x7; bool x8; } * _offscreenSecondaryFrameBuffer;
    struct __C3DFXRenderTarget { } * _offscreenTextureTarget;
    BOOL  _offscreenUsesMultisamples;
    BOOL  _playing;
    QCSCN_Node * _pointOfView;
    BOOL  _privateRenderer;
    BOOL  _rendersOffscreen;
    QCSCN_Scene * _scene;
    struct C3DColor4 { 
        union { 
            float rgba[4]; 
            struct { 
                float r; 
                float g; 
                float b; 
                float a; 
            } ; 
        } ; 
    }  _vecColor;
    BOOL  _warmUpResourcesWhenLoadingScene;
}

- (void)cleanup;
- (void)dealloc;
- (void)finalize;

@end
