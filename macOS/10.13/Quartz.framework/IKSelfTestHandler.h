/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
 */

@interface IKSelfTestHandler : NSObject {
    IKScanUIControllerAdvanced * _delegate;
    NSString * _deviceName;
    NSString * _downloadDirectory;
    unsigned long long  _resolution;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _rotatedScanRect;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _rotatedScanRectNonClipped;
    struct CGSize { 
        double width; 
        double height; 
    }  _rotatedSelectionSize;
    double  _rotationAngle;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _scanRect;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _scanRectNonClipped;
    struct CGSize { 
        double width; 
        double height; 
    }  _selectionSize;
    NSMutableArray * _selfTests;
}

@property (atomic, readwrite) IKScanUIControllerAdvanced *delegate;
@property (atomic, readwrite, copy) NSString *deviceName;
@property (atomic, readwrite, copy) NSString *downloadDirectory;
@property (atomic, readwrite) unsigned long long resolution;
@property (atomic, readwrite) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } rotatedScanRect;
@property (atomic, readwrite) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } rotatedScanRectNonClipped;
@property (atomic, readwrite) struct CGSize { double x1; double x2; } rotatedSelectionSize;
@property (atomic, readwrite) double rotationAngle;
@property (atomic, readwrite) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } scanRect;
@property (atomic, readwrite) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } scanRectNonClipped;
@property (atomic, readwrite) struct CGSize { double x1; double x2; } selectionSize;

- (id)delegate;
- (id)deviceName;
- (void)didCompleteOverviewScanWithError:(id)arg1;
- (void)didCompleteScanToURL:(id)arg1;
- (void)didCompleteScansToURLs:(id)arg1;
- (void)done;
- (id)downloadDirectory;
- (id)filterArrayForColor;
- (id)filterArrayForGray;
- (id)filterArrayForPixelDataType:(unsigned long long)arg1;
- (id)filterArrayForText;
- (void)popStatusText;
- (void)prepareSelfTest;
- (void)pushStatusText:(id)arg1;
- (unsigned long long)resolution;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rotatedScanRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rotatedScanRectNonClipped;
- (struct CGSize { double x1; double x2; })rotatedSelectionSize;
- (double)rotationAngle;
- (void)scanFailed:(id)arg1 error:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })scanRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })scanRectNonClipped;
- (void)scannerResquestsOverviewScan;
- (struct CGSize { double x1; double x2; })selectionSize;
- (void)selfTestFailed:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeviceName:(id)arg1;
- (void)setDownloadDirectory:(id)arg1;
- (void)setResolution:(unsigned long long)arg1;
- (void)setRotatedScanRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setRotatedScanRectNonClipped:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setRotatedSelectionSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setRotationAngle:(double)arg1;
- (void)setScanRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setScanRectNonClipped:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setSelectionSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setStatusText:(id)arg1;
- (BOOL)setupScanRectAtIndex:(unsigned long long)arg1 ikScan:(id)arg2;
- (void)startSelfTest:(id)arg1 functionalUnit:(id)arg2;

@end
