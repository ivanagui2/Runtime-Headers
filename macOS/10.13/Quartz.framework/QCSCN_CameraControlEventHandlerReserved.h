/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
 */

@interface QCSCN_CameraControlEventHandlerReserved : NSObject {
    BOOL  _alternateMode;
    BOOL  _automaticCameraTarget;
    int  _cameraStickyAxis;
    struct _SCNVector3 { 
        double x; 
        double y; 
        double z; 
    }  _cameraTarget;
    struct _SCNVector3 { 
        double x; 
        double y; 
        double z; 
    }  _clickOrigin;
    QCSCN_Node * _freeViewCameraNode;
    double  _friction;
    BOOL  _gimbalLockMode;
    struct _SCNVector3 { 
        double x; 
        double y; 
        double z; 
    }  _gimbalLockVector;
    BOOL  _hasCheckedIfViewingAnObject;
    BOOL  _inertia;
    BOOL  _inertiaRunning;
    struct CGPoint { 
        double x; 
        double y; 
    }  _inertiaVelocity;
    struct C3DMatrix4x4 { 
        union { 
            double components[16]; 
            double m[4][4]; 
        } ; 
    }  _initialMatrix;
    struct CGPoint { 
        double x; 
        double y; 
    }  _initialPoint;
    double  _initialZoom;
    BOOL  _isViewedObjectSphereComputed;
    BOOL  _isViewingAnObject;
    struct CGPoint { 
        double x; 
        double y; 
    }  _lastDragLocation;
    double  _lastDragTime;
    double  _lastSimulationTime;
    int  _mode;
    double  _originalFovX;
    double  _originalFovY;
    double  _originalMagX;
    double  _originalMagY;
    double  _savedZfar;
    double  _savedZnear;
    struct CGPoint { 
        double x; 
        double y; 
    }  _stickyDirection;
    BOOL  _stickyMove;
    struct CGPoint { 
        double x; 
        double y; 
    }  _totalDragWithInertia;
    struct _SCNVector3 { 
        double x; 
        double y; 
        double z; 
    }  _upDir;
    BOOL  _upDirIsSet;
    struct C3DSphere { 
        double radius; 
        struct _SCNVector3 { 
            double x; 
            double y; 
            double z; 
        } center; 
    }  _viewedObjectSphere;
    double  _zoomFactor;
}

- (void)dealloc;
- (void)finalize;

@end
