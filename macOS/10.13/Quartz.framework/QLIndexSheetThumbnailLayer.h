/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI
 */

@interface QLIndexSheetThumbnailLayer : CALayer <CAAnimationDelegate> {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _cellFrame;
    BOOL  _hasThumbnail;
    BOOL  _isIcon;
    <QLPreviewItem> * _item;
    struct __QLThumbnail { } * _thumbnail;
    struct CGImage { } * _thumbnailImage;
    struct CGSize { 
        double width; 
        double height; 
    }  _thumbnailMaxSize;
    struct CGSize { 
        double width; 
        double height; 
    }  _thumbnailSize;
    QLCustomTextLayer * _titleLayer;
}

@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readwrite) <QLThumbnailLayerDelegate> *delegate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) BOOL hasThumbnail;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite) struct CGImage { }*imageContents;
@property (atomic, readwrite, retain) <QLPreviewItem> *previewItem;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite) long long tableColumn;
@property (atomic, readwrite) long long tableRow;
@property (atomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } thumbnailFrame;
@property (atomic, readonly) struct CGSize { double x1; double x2; } thumbnailMaxSize;
@property (atomic, readonly) struct CGSize { double x1; double x2; } thumbnailSize;

- (BOOL)_isSelected;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityChildren;
- (id)accessibilityHitTest:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (void)accessibilityPerformAction:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (id)actionForKey:(id)arg1;
- (struct CGImage { }*)createImageForMaximumSize:(struct CGSize { double x1; double x2; })arg1 options:(struct __CFDictionary { }*)arg2;
- (void)dealloc;
- (void)discardThumbnail;
- (BOOL)hasThumbnail;
- (struct CGImage { }*)imageContents;
- (id)initWithPreviewItem:(id)arg1;
- (id)previewItem;
- (void)removeFromSuperlayer;
- (void)setImageContents:(struct CGImage { }*)arg1;
- (void)setPreviewItem:(id)arg1;
- (void)thumbnail:(struct __QLThumbnail { }*)arg1 computedImage:(struct CGImage { }*)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })thumbnailFrame;
- (struct CGSize { double x1; double x2; })thumbnailMaxSize;
- (struct CGSize { double x1; double x2; })thumbnailSize;
- (void)thumbnailingDone:(struct __QLThumbnail { }*)arg1;
- (void)updateBorder:(BOOL)arg1;
- (void)updateFrameWithCellFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)updateThumbnail;

@end
