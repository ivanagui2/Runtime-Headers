/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
 */

@interface QCSCN_GeometrySource : NSObject {
    id  _reserved;
}

@property (nonatomic, readonly) long long bytesPerComponent;
@property (nonatomic, readonly) long long componentsPerVector;
@property (nonatomic, readonly) NSData *data;
@property (nonatomic, readonly) long long dataOffset;
@property (nonatomic, readonly) long long dataStride;
@property (nonatomic, readonly) BOOL floatComponents;
@property (nonatomic, readonly) NSString *semantic;
@property (nonatomic, readonly) long long vectorCount;

+ (id)dataWithPointArray:(struct CGPoint { double x1; double x2; }*)arg1 count:(long long)arg2 bytesPerComponent:(long long*)arg3;
+ (id)dataWithVector3Array:(struct _SCNVector3 { double x1; double x2; double x3; }*)arg1 count:(long long)arg2 bytesPerComponent:(long long*)arg3;
+ (id)geometrySourceWithData:(id)arg1 semantic:(id)arg2 vectorCount:(long long)arg3 floatComponents:(BOOL)arg4 componentsPerVector:(long long)arg5 bytesPerComponent:(long long)arg6 dataOffset:(long long)arg7 dataStride:(long long)arg8;
+ (id)geometrySourceWithNormals:(struct _SCNVector3 { double x1; double x2; double x3; }*)arg1 count:(long long)arg2;
+ (id)geometrySourceWithTextureCoordinates:(struct CGPoint { double x1; double x2; }*)arg1 count:(long long)arg2;
+ (id)geometrySourceWithVertices:(struct _SCNVector3 { double x1; double x2; double x3; }*)arg1 count:(long long)arg2;

- (int)baseTypeForDataFormat;
- (long long)bytesPerComponent;
- (long long)componentsPerVector;
- (id)data;
- (long long)dataOffset;
- (long long)dataStride;
- (void)dealloc;
- (BOOL)floatComponents;
- (id)init;
- (id)initWithMeshSource:(struct __C3DMeshSource { struct __C3DGenericSource { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_3_1; unsigned long long x_1_3_2; } x_1_2_1; struct __CFDictionary {} *x_1_2_2; } x_1_1_1; struct __C3DSourceAccessor {} *x_1_1_2; struct __CFData {} *x_1_1_3; bool x_1_1_4; } x1; int x2; unsigned int x3; }*)arg1;
- (struct __C3DMeshSource { struct __C3DGenericSource { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_3_1; unsigned long long x_1_3_2; } x_1_2_1; struct __CFDictionary {} *x_1_2_2; } x_1_1_1; struct __C3DSourceAccessor {} *x_1_1_2; struct __CFData {} *x_1_1_3; bool x_1_1_4; } x1; int x2; unsigned int x3; }*)meshSource;
- (id)semantic;
- (long long)vectorCount;

@end
