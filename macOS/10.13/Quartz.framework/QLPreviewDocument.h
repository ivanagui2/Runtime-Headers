/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI
 */

@interface QLPreviewDocument : NSObject <QLDisplayBundleOwner> {
    QLPreviewDocumentReserved * _reserved;
}

@property (atomic, readonly) BOOL allowsAlerts;
@property (atomic, readonly) double backingScaleFactor;
@property (atomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } bounds;
@property (atomic, readonly) NSURL *currentURL;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite, retain) QLDisplayBundle *displayBundle;
@property (atomic, readonly) int flavor;
@property (atomic, readwrite) unsigned long long focusedOccurrenceIndex;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite, retain) NSArray *highlightedOccurrences;
@property (atomic, readonly) BOOL isGeneric;
@property (atomic, readonly) BOOL isLoaded;
@property (atomic, readonly) BOOL isRemote;
@property (atomic, readonly) BOOL isWindowKey;
@property (atomic, readwrite, retain) QLDisplayBundle *loadingDisplayBundle;
@property (atomic, readonly) int mode;
@property (atomic, readonly) unsigned long long numberOfPages;
@property (atomic, readwrite, copy) NSString *password;
@property (atomic, readonly) <QLPreviewItem> *previewItem;
@property (atomic, readonly) QLPreviewView *previewView;
@property (atomic, readonly) NSScreen *screen;
@property (atomic, readonly) BOOL shouldUseHardwareCodec;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite) BOOL tracksMouseMovements;
@property (atomic, readonly) struct NSEdgeInsets { double x1; double x2; double x3; double x4; } visualMargins;

+ (id)keyPathsForValuesAffectingAllowsAlerts;
+ (id)keyPathsForValuesAffectingBounds;
+ (id)keyPathsForValuesAffectingCurrentURL;
+ (id)keyPathsForValuesAffectingDisplayable;
+ (id)keyPathsForValuesAffectingFlavor;
+ (id)keyPathsForValuesAffectingIsLoaded;
+ (id)keyPathsForValuesAffectingIsRemote;
+ (id)keyPathsForValuesAffectingIsWindowKey;
+ (id)keyPathsForValuesAffectingMode;
+ (id)keyPathsForValuesAffectingNumberOfPages;
+ (id)keyPathsForValuesAffectingShouldUseHardwareCodec;
+ (id)keyPathsForValuesAffectingVisualMargins;

- (BOOL)_bundleMustLoadInWindow:(id)arg1;
- (void)_didEndLoading;
- (void)_fallbackLoadWithError:(id)arg1;
- (id)_hintsWithPreviewViewForWebviewPreloading:(id)arg1;
- (void)_loadDisplayBundleID:(id)arg1 withLastError:(int)arg2 hints:(id)arg3;
- (void)_loadPreviewFailedDueToPasswordProtection;
- (void)_loadPreviewFailedWithError:(id)arg1;
- (void)_loadPreviewMismatchedWithExpectedDisplayBundleID:(id)arg1 hints:(id)arg2;
- (void)_loadPreviewSucceeded;
- (void)_loadWithDisplayBundleID:(id)arg1 hints:(id)arg2 remoteMode:(unsigned long long)arg3;
- (void)_setupCoreSpotlightPropertiesFromPreviewItem:(id)arg1;
- (void)_setupPreviewWithURL:(id)arg1 searchUID:(id)arg2 appBundleID:(id)arg3 extensionPath:(id)arg4 contentType:(id)arg5 hints:(id)arg6;
- (BOOL)allowsAlerts;
- (double)backingScaleFactor;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (void)cancelPreview;
- (struct CGPoint { double x1; double x2; })convertPointFromScreen:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGPoint { double x1; double x2; })convertPointToScreen:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRectFromScreen:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRectToScreen:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)currentURL;
- (void)dealloc;
- (id)description;
- (id)displayBundle;
- (void)displayBundle:(id)arg1 requestReloadAndFallbackWithError:(id)arg2;
- (void)displayBundleCustomTitleUpdated:(id)arg1;
- (void)displayBundleDidDesistRemote:(id)arg1 expectedDisplayBundleID:(id)arg2;
- (void)displayBundleDidLoad:(id)arg1;
- (void)displayBundleDidMismatchLoading:(id)arg1 withHints:(id)arg2 expectedDisplayBundleID:(id)arg3;
- (void)displayBundleFailedToLoad:(id)arg1 withError:(id)arg2;
- (void)displayBundleSizingUpdated:(id)arg1;
- (id)displayState;
- (id)displayable;
- (void)doubleClickOnPreviewContent;
- (BOOL)drawPage:(unsigned long long)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 context:(struct CGContext { }*)arg3;
- (id)findOccurrencesOfString:(id)arg1 inPage:(unsigned long long)arg2 withOptions:(unsigned long long)arg3;
- (int)flavor;
- (unsigned long long)focusedOccurrenceIndex;
- (BOOL)generateThumbnailForPage:(unsigned long long)arg1 maxSize:(struct CGSize { double x1; double x2; })arg2 completionBlock:(id)arg3;
- (id)highlightedOccurrences;
- (id)initWithPreviewItem:(id)arg1 forPreviewView:(id)arg2;
- (void)invalidate;
- (BOOL)isExternalDocument;
- (BOOL)isGeneric;
- (BOOL)isLoaded;
- (BOOL)isRemote;
- (BOOL)isWindowKey;
- (id)loadingDisplayBundle;
- (struct CGPoint { double x1; double x2; })locationForEvent:(id)arg1;
- (int)mode;
- (unsigned long long)numberOfPages;
- (void)openExternalURL:(id)arg1;
- (id)password;
- (struct __QLPreview { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; id x2; struct __CFURL {} x3; struct __CFDictionary {} *x4; struct __CFString {} *x5; void *x6; struct { long long x_7_1_1; int (*x_7_1_2)(); int (*x_7_1_3)(); int (*x_7_1_4)(); int (*x_7_1_5)(); } x7; void *x8; unsigned int x9; int x10; unsigned char x11; unsigned char x12; int x13; struct __CFDictionary {} *x14; struct __QLGenerator {} *x15; struct __QLServer {} *x16; unsigned char x17; unsigned int x18; unsigned char x19; unsigned char x20; unsigned char x21; unsigned char x22; struct __CFString {} *x23; struct __CFString {} *x24; int x25; struct __CFSet {} *x26; struct CGSize { double x_27_1_1; double x_27_1_2; } x27; unsigned char x28; struct __CFString {} *x29; struct __CFString {} *x30; struct __CFString {} *x31; struct __CFURL {} *x32; struct __CFData {} *x33; struct __CFData {} *x34; int x35; int x36; int x37; int x38; int x39; unsigned int x40; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_41_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_41_1_2; } x41; }*)preview;
- (id)previewItem;
- (id)previewView;
- (id)screen;
- (void)setDisplayBundle:(id)arg1;
- (void)setExternalDocument:(BOOL)arg1;
- (void)setFocusedOccurrenceIndex:(unsigned long long)arg1;
- (void)setFocusedOccurrenceIndex:(unsigned long long)arg1 inPage:(unsigned long long)arg2;
- (void)setHighlightedOccurrences:(id)arg1;
- (void)setLoadingDisplayBundle:(id)arg1;
- (void)setPassword:(id)arg1;
- (void)setPreviewView:(id)arg1;
- (void)setState:(unsigned long long)arg1;
- (void)setTracksMouseMovements:(BOOL)arg1;
- (BOOL)shouldOpenURL:(id)arg1;
- (BOOL)shouldUseHardwareCodec;
- (void)startLoading;
- (void)startLoadingWithForcedDisplayBundleID:(id)arg1 hints:(id)arg2;
- (void)startWatchingURL:(id)arg1;
- (unsigned long long)state;
- (void)stopWatchingURL:(id)arg1;
- (id)stringForPage:(unsigned long long)arg1;
- (double)thumbnailAspectRatioForPage:(unsigned long long)arg1;
- (BOOL)tracksMouseMovements;
- (id)viewForEvent:(id)arg1;
- (struct NSEdgeInsets { double x1; double x2; double x3; double x4; })visualMargins;
- (void)willTimeOut;

// QLPreviewDocument (Accessibility)

- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;

@end
