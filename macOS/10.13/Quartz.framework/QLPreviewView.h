/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI
 */

@interface QLPreviewView : NSView <CALayerDelegate, NSDraggingDestination, NSGestureRecognizerDelegate, QLPreviewDragDelegate, QLPreviewTextOverlayHostDelegate, QLScrollControllerDelegate, QLScrollable, QLSeamlessOpenerDelegate> {
    QLPreviewViewReserved * _reserved;
}

@property (atomic, readwrite) BOOL allowsAlerts;
@property (atomic, readwrite) BOOL autoZooms;
@property (atomic, readwrite) BOOL automaticallyMakePreviewFirstResponder;
@property (atomic, readwrite) BOOL autostarts;
@property (atomic, readwrite) unsigned long long cacheSize;
@property (atomic, readonly) BOOL canBeResized;
@property (atomic, readonly) NSImage *contentImage;
@property (atomic, readonly) CALayer *contentLayer;
@property (atomic, readwrite) double currentHorizontalScroll;
@property (atomic, readwrite) unsigned long long currentPage;
@property (atomic, readwrite) double currentScroll;
@property (atomic, readwrite) double currentTime;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readwrite) <QLPreviewViewDelegate> *delegate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite, retain) id displayState;
@property (atomic, readonly) <QLPreviewItem> *displayedPreviewItem;
@property (atomic, readwrite, retain) QLPreviewDocument *document;
@property (atomic, readwrite, retain) NSClickGestureRecognizer *doubleClickRecognizer;
@property (atomic, readwrite, retain) QLPreviewDragController *dragController;
@property (atomic, readwrite, retain) NSPanGestureRecognizer *dragGestureRecognizer;
@property (getter=isDragging, atomic, readwrite) BOOL dragging;
@property (atomic, readonly) double duration;
@property (atomic, readwrite, retain) NSView *emptyView;
@property (atomic, readwrite) BOOL enableRemotePreviews;
@property (atomic, readwrite) struct CGPoint { double x1; double x2; } focusPoint;
@property (atomic, readwrite, retain) NSView<QLPreviewCustomView> *genericView;
@property (atomic, readonly) BOOL hasControls;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite) double horizontalScrollValue;
@property (atomic, readonly) BOOL isGeneric;
@property (atomic, readonly) BOOL isLoaded;
@property (atomic, readwrite, retain) NSView *loadingView;
@property (atomic, readonly) double maxZoomFactor;
@property (atomic, readwrite) int mode;
@property (atomic, readwrite) BOOL muted;
@property (atomic, readonly) struct CGSize { double x1; double x2; } naturalPreviewSize;
@property (atomic, readonly) BOOL needsPageControl;
@property (atomic, readonly) BOOL needsPlayControl;
@property (atomic, readonly) BOOL needsScrollControl;
@property (atomic, readonly) BOOL needsTimeControl;
@property (atomic, readonly) BOOL needsVolumeControl;
@property (atomic, readonly) BOOL needsZoomControl;
@property (atomic, readonly) unsigned long long numberOfPages;
@property (atomic, readonly) BOOL playedToTheEnd;
@property (atomic, readwrite) BOOL playing;
@property (atomic, readonly) BOOL prefersSizeToFit;
@property (atomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } previewContentFrame;
@property (atomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } previewDocumentFrame;
@property (atomic, readwrite, retain) <QLPreviewItem> *previewItem;
@property (atomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } previewUsefulFrame;
@property (atomic, readonly) BOOL scalable;
@property (atomic, readwrite) BOOL shouldCloseWithWindow;
@property (atomic, readwrite) BOOL showControls;
@property (atomic, readwrite) BOOL showRemainingTime;
@property (atomic, readwrite) BOOL sizesPreviewToFit;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite, retain) NSSet *supportedDisplayBundleIDs;
@property (atomic, readonly) double totalHorizontalScroll;
@property (atomic, readonly) double totalScroll;
@property (atomic, readonly) double verticalKnobProportion;
@property (atomic, readwrite) double verticalScrollValue;
@property (atomic, readwrite) BOOL visible;
@property (atomic, readwrite) float volume;
@property (atomic, readwrite) double zoomFactor;
@property (atomic, readonly) double zoomFactorToFitWidth;

+ (id)_descriptionOfDisplayable:(id)arg1;
+ (void)_setupDiskWatch;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)defaultSupportedDisplayBundleIDsForMode:(int)arg1;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingAutoZooms;
+ (id)keyPathsForValuesAffectingCurrentHorizontalScroll;
+ (id)keyPathsForValuesAffectingCurrentPage;
+ (id)keyPathsForValuesAffectingCurrentScroll;
+ (id)keyPathsForValuesAffectingCurrentTime;
+ (id)keyPathsForValuesAffectingDisplayBundleID;
+ (id)keyPathsForValuesAffectingDisplayState;
+ (id)keyPathsForValuesAffectingDisplayedDisplayBundle;
+ (id)keyPathsForValuesAffectingDisplayedPreviewItem;
+ (id)keyPathsForValuesAffectingDuration;
+ (id)keyPathsForValuesAffectingFocusPoint;
+ (id)keyPathsForValuesAffectingHasHorizontalScroller;
+ (id)keyPathsForValuesAffectingHorizontalKnobProportion;
+ (id)keyPathsForValuesAffectingHorizontalScrollValue;
+ (id)keyPathsForValuesAffectingMaxZoomFactor;
+ (id)keyPathsForValuesAffectingMuted;
+ (id)keyPathsForValuesAffectingNeedsPageControl;
+ (id)keyPathsForValuesAffectingNeedsPlayControl;
+ (id)keyPathsForValuesAffectingNeedsScrollControl;
+ (id)keyPathsForValuesAffectingNeedsTimeControl;
+ (id)keyPathsForValuesAffectingNeedsVolumeControl;
+ (id)keyPathsForValuesAffectingNeedsZoomControl;
+ (id)keyPathsForValuesAffectingNumberOfPages;
+ (id)keyPathsForValuesAffectingPlayedToTheEnd;
+ (id)keyPathsForValuesAffectingPlaying;
+ (id)keyPathsForValuesAffectingPreviewContentFrame;
+ (id)keyPathsForValuesAffectingPreviewContentFrameForSeamlessOpening;
+ (id)keyPathsForValuesAffectingPreviewDocumentFrame;
+ (id)keyPathsForValuesAffectingPreviewOpaqueFrame;
+ (id)keyPathsForValuesAffectingPreviewUsefulFrame;
+ (id)keyPathsForValuesAffectingProgress;
+ (id)keyPathsForValuesAffectingSeekTolerance;
+ (id)keyPathsForValuesAffectingTotalHorizontalScroll;
+ (id)keyPathsForValuesAffectingTotalScroll;
+ (id)keyPathsForValuesAffectingTouchBar;
+ (id)keyPathsForValuesAffectingVerticalKnobProportion;
+ (id)keyPathsForValuesAffectingVerticalScrollValue;
+ (id)keyPathsForValuesAffectingVolume;
+ (id)keyPathsForValuesAffectingZoomFactor;
+ (id)keyPathsForValuesAffectingZoomFactorToFitWidth;
+ (BOOL)requiresConstraintBasedLayout;
+ (id)supportedContentTypesForMode:(int)arg1;
+ (id)timeoutDateFromNow;

- (unsigned int)_CAViewFlags;
- (BOOL)_accessibilityIsEmpty;
- (BOOL)_accessibilityIsLoading;
- (void)_activateOverlayControls;
- (void)_activatePageNumberDisplay;
- (void)_activatePathOverlay;
- (void)_activateViewControls;
- (id)_actualDisplayBundleID;
- (BOOL)_adaptPreviewFrameForStaticPreviewSizeHint:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 minSize:(struct CGSize { double x1; double x2; })arg2 maxSize:(struct CGSize { double x1; double x2; })arg3;
- (void)_addHiddenContentViewForLoading:(id)arg1;
- (void)_adjustDeltaPosition:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 forDisplayBundle:(id)arg2;
- (struct CGSize { double x1; double x2; })_adjustedSizeFromSize:(struct CGSize { double x1; double x2; })arg1 withMinSize:(struct CGSize { double x1; double x2; })arg2 maxSize:(struct CGSize { double x1; double x2; })arg3 ratio:(id)arg4 deltaPosition:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg5 maxArea:(double)arg6;
- (BOOL)_allowAutoresizingMaskFixupDueToSuperOverridingResizeSubviews;
- (id)_bottomConstraint;
- (BOOL)_canChangeDisplayedDocument;
- (BOOL)_canChangeVisibilityTo:(int)arg1;
- (void)_commonInitWithStyle:(unsigned long long)arg1;
- (BOOL)_contentIsSharedBetweenOldDisplayable:(id)arg1 andNewDisplayable:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_convertRectFromDisplayedDisplayable:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_convertRectToDisplayedDisplayable:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_currentPreviewedURL;
- (void)_deactivateOverlayControls;
- (void)_deactivatePageNumberDisplay;
- (void)_deactivatePathOverlay;
- (void)_deactivateViewControls;
- (id)_descriptionForView:(id)arg1;
- (void)_didHideDisplayable:(id)arg1;
- (void)_didShowDisplayable:(id)arg1;
- (struct CGPoint { double x1; double x2; })_displayBundlePointForWindowPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)_displayable;
- (id)_displayedBundleID;
- (void)_endLoadingDocument:(id)arg1;
- (id)_filteredDisplayBundleID;
- (BOOL)_hasPathOverlay;
- (BOOL)_hasSetupPageNumberOverlay;
- (id)_hierarchicalDescriptionForView:(id)arg1 level:(int)arg2;
- (void)_invalidateCachedDocumentForURL:(id)arg1;
- (BOOL)_isVisible;
- (BOOL)_needsPageControlForDisplayBundle:(id)arg1;
- (BOOL)_needsPlayControlForDisplayBundle:(id)arg1;
- (BOOL)_needsScrollControlForDisplayBundle:(id)arg1;
- (BOOL)_needsTimeControlForDisplayBundle:(id)arg1;
- (BOOL)_needsZoomControlForDisplayBundle:(id)arg1;
- (id)_pathString;
- (BOOL)_prepareToRecycleDocument:(id)arg1 willRestore:(BOOL*)arg2;
- (id)_previewContainerViewConstraintsFromContainerViewFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_previewFirstResponder;
- (void)_recycleDocument:(id)arg1 restore:(BOOL)arg2;
- (void)_setDisplayable:(id)arg1 transition:(int)arg2;
- (void)_setDisplayedDocument:(id)arg1 transition:(int)arg2;
- (void)_setDocument:(id)arg1 canDelayDisplay:(BOOL)arg2;
- (void)_setPreviewContainerViewFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setPreviewItem:(id)arg1;
- (void)_setupLayerIfNeeded;
- (BOOL)_shouldAdaptSizeToScreen;
- (BOOL)_shouldManageVisibilityOnlyIfVisible:(BOOL)arg1;
- (BOOL)_shouldShowDisplayable:(id)arg1 forDisplayBundle:(id)arg2;
- (void)_shouldShowViewControls:(BOOL*)arg1 overlayControls:(BOOL*)arg2 forDisplayBundle:(id)arg3;
- (BOOL)_startHandlingEvent;
- (void)_startLoadingDocumentWithTimeoutDate:(id)arg1;
- (void)_startLoadingPreviewItem:(id)arg1 timeoutDate:(id)arg2;
- (void)_startTimeOut;
- (void)_stopHandlingEvent;
- (void)_stopHandlingEventWithPreviousValue:(BOOL)arg1;
- (void)_stopTimeOut;
- (void)_timedOut;
- (void)_updateBackingScaleFactor;
- (void)_updateControls;
- (BOOL)_updateDisplayableWithTransition:(int)arg1;
- (void)_updateDisplayedDocumentWithDelayedDisplay:(BOOL)arg1;
- (void)_updateFrameOfDisplayable:(id)arg1;
- (void)_updateOpaqueShape;
- (void)_willHideDisplayable:(id)arg1;
- (void)_willShowDisplayable:(id)arg1;
- (void)_windowWillClose:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)activate;
- (BOOL)allowLoadingOfUnsupportedDisplayBundleIDs;
- (BOOL)allowsAlerts;
- (id)appURLForNextOpening;
- (BOOL)autoZooms;
- (BOOL)automaticallyMakePreviewFirstResponder;
- (BOOL)autostarts;
- (void)backingScaleDidChange:(id)arg1;
- (double)backingScaleFactor;
- (BOOL)becomeFirstResponder;
- (id)cacheManager;
- (unsigned long long)cacheSize;
- (BOOL)canAcceptDocument:(id)arg1;
- (BOOL)canBeResized;
- (BOOL)canRestoreDocument:(id)arg1;
- (BOOL)canStealDocumentFromPreviewView:(id)arg1;
- (void)close;
- (id)contentImage;
- (id)contentLayer;
- (id)contentView;
- (void)copy:(id)arg1;
- (struct CGImage { }*)copyImageRepresentationWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1;
- (double)currentHorizontalScroll;
- (unsigned long long)currentPage;
- (double)currentScroll;
- (double)currentTime;
- (id)currentURL;
- (id)customDisplayName;
- (void)deactivate;
- (void)dealloc;
- (BOOL)debugHighlighted;
- (void)debugPreview:(id)arg1;
- (id)delegate;
- (id)description;
- (void)didHide;
- (void)didHideOverlay:(id)arg1;
- (void)didOpen;
- (void)didShow;
- (void)discardAccessoryControllers;
- (void)diskWillEject:(id)arg1;
- (id)displayBundleID;
- (id)displayBundleWithID:(id)arg1 forPreviewItem:(id)arg2;
- (id)displayState;
- (id)displayableContentView;
- (id)displayedDisplayBundle;
- (id)displayedDocument;
- (id)displayedPreviewItem;
- (void)doCommandBySelector:(SEL)arg1;
- (id)document;
- (unsigned long long)doubleClickModifierFlags;
- (id)doubleClickRecognizer;
- (id)dragController;
- (id)dragGestureRecognizer;
- (id)draggedURL;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggingExited:(id)arg1;
- (id)draggingSourceDisplayBundle;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (id)draggingSourceView;
- (unsigned long long)draggingUpdated:(id)arg1;
- (double)duration;
- (id)emptyDisplayable;
- (id)emptyView;
- (BOOL)enableRemotePreviews;
- (BOOL)fastDrawing;
- (int)flavor;
- (void)flushCache;
- (struct CGPoint { double x1; double x2; })focusPoint;
- (void)forceTimeoutForDocument:(id)arg1;
- (id)forcedContentTypeUTI;
- (BOOL)fullLayers;
- (BOOL)generateThumbnailForPage:(unsigned long long)arg1 maxSize:(struct CGSize { double x1; double x2; })arg2 completionBlock:(id)arg3;
- (id)genericDisplayable;
- (id)genericView;
- (BOOL)gestureRecognizer:(id)arg1 shouldAttemptToRecognizeWithEvent:(id)arg2;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (void)giveInputFocus;
- (BOOL)hasCachedDocumentForItem:(id)arg1;
- (BOOL)hasControls;
- (BOOL)hasHorizontalScroller;
- (BOOL)hasValidPreview;
- (BOOL)hideLoadingSpinner;
- (BOOL)hidePlayControl;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1;
- (double)horizontalKnobProportion;
- (double)horizontalScrollValue;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 style:(unsigned long long)arg2;
- (id)initialDisplayBundleID;
- (struct CGSize { double x1; double x2; })initialThumbnailSize;
- (int)inputFocusType;
- (BOOL)isDisplayingError;
- (BOOL)isDragging;
- (BOOL)isGeneric;
- (BOOL)isLoaded;
- (BOOL)isNativeFileType;
- (BOOL)isRemote;
- (BOOL)isWindowKey;
- (void)keyDown:(id)arg1;
- (id)launchURLForPreviewItem:(id)arg1;
- (id)loadingDisplayable;
- (BOOL)loadingForForceTouch;
- (id)loadingLayerForPreview:(struct __QLPreview { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; id x2; struct __CFURL {} x3; struct __CFDictionary {} *x4; struct __CFString {} *x5; void *x6; struct { long long x_7_1_1; int (*x_7_1_2)(); int (*x_7_1_3)(); int (*x_7_1_4)(); int (*x_7_1_5)(); } x7; void *x8; unsigned int x9; int x10; unsigned char x11; unsigned char x12; int x13; struct __CFDictionary {} *x14; struct __QLGenerator {} *x15; struct __QLServer {} *x16; unsigned char x17; unsigned int x18; unsigned char x19; unsigned char x20; unsigned char x21; unsigned char x22; struct __CFString {} *x23; struct __CFString {} *x24; int x25; struct __CFSet {} *x26; struct CGSize { double x_27_1_1; double x_27_1_2; } x27; unsigned char x28; struct __CFString {} *x29; struct __CFString {} *x30; struct __CFString {} *x31; struct __CFURL {} *x32; struct __CFData {} *x33; struct __CFData {} *x34; int x35; int x36; int x37; int x38; int x39; unsigned int x40; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_41_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_41_1_2; } x41; }*)arg1 displayBundle:(id)arg2;
- (id)loadingView;
- (struct CGPoint { double x1; double x2; })locationForEvent:(id)arg1;
- (id)mandatoryServer;
- (double)maxZoomFactor;
- (struct CGSize { double x1; double x2; })minimumSizeOfContentWithDefault:(struct CGSize { double x1; double x2; })arg1;
- (int)mode;
- (void)mouseDown:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (BOOL)muted;
- (struct CGSize { double x1; double x2; })naturalPreviewSize;
- (BOOL)needsPageControl;
- (BOOL)needsPlayControl;
- (BOOL)needsScrollControl;
- (BOOL)needsTimeControl;
- (BOOL)needsVolumeControl;
- (BOOL)needsZoomControl;
- (unsigned long long)numberOfPages;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)openExternalURL:(id)arg1;
- (BOOL)openExternalURLNoChecks:(id)arg1;
- (struct CGSize { double x1; double x2; })optimalSizeForBoundingSize:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })optimalSizeFromCurrentSize:(struct CGSize { double x1; double x2; })arg1 minSize:(struct CGSize { double x1; double x2; })arg2 maxSize:(struct CGSize { double x1; double x2; })arg3 defaultSize:(struct CGSize { double x1; double x2; })arg4 maxArea:(double)arg5 screen:(id)arg6;
- (void)pathWatcher:(id)arg1 fileAtURLWasDeleted:(id)arg2;
- (void)pathWatcher:(id)arg1 fileAtURLWasModified:(id)arg2 onlyAttributes:(BOOL)arg3;
- (void)pathWatcher:(id)arg1 fileAtURLWasMoved:(id)arg2;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)playedToTheEnd;
- (BOOL)playing;
- (BOOL)prefersSizeToFit;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })previewContentFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })previewContentFrameForSeamlessOpening;
- (void)previewDocument:(id)arg1 gotDisplayBundle:(id)arg2;
- (void)previewDocumentDidChangeDisplayable:(id)arg1;
- (void)previewDocumentDidLoad:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })previewDocumentFrame;
- (id)previewItem;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })previewOpaqueFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })previewUsefulFrame;
- (float)progress;
- (void)receivedDoubleClickGesture:(id)arg1;
- (void)receivedDragGesture:(id)arg1;
- (void)refreshDisplayableForDocument:(id)arg1;
- (void)refreshPreviewItem;
- (void)refreshPreviewItemWithTimeoutDate:(id)arg1;
- (void)resizeSubviewsWithOldSize:(struct CGSize { double x1; double x2; })arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (void)restoreStolenDocument:(id)arg1;
- (BOOL)scalable;
- (id)screen;
- (double)scrollController:(id)arg1 pageScrollPercentageForScroller:(id)arg2;
- (void)scrollController:(id)arg1 scrollerDidEndTracking:(id)arg2;
- (id)seamlessOpener:(id)arg1 sourcePreviewViewForPreviewItem:(id)arg2;
- (double)seekTolerance;
- (void)selectAll:(id)arg1;
- (void)setAllowLoadingOfUnsupportedDisplayBundleIDs:(BOOL)arg1;
- (void)setAllowsAlerts:(BOOL)arg1;
- (void)setAppURLForNextOpening:(id)arg1;
- (void)setAutoZooms:(BOOL)arg1;
- (void)setAutomaticallyMakePreviewFirstResponder:(BOOL)arg1;
- (void)setAutostarts:(BOOL)arg1;
- (void)setCacheManager:(id)arg1;
- (void)setCacheSize:(unsigned long long)arg1;
- (void)setCurrentHorizontalScroll:(double)arg1;
- (void)setCurrentPage:(unsigned long long)arg1;
- (void)setCurrentScroll:(double)arg1;
- (void)setCurrentTime:(double)arg1;
- (void)setDebugHighlighted:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisplayState:(id)arg1;
- (void)setDocument:(id)arg1;
- (void)setDoubleClickModifierFlags:(unsigned long long)arg1;
- (void)setDoubleClickRecognizer:(id)arg1;
- (void)setDragController:(id)arg1;
- (void)setDragGestureRecognizer:(id)arg1;
- (void)setDragging:(BOOL)arg1;
- (void)setEmptyDisplayable:(id)arg1;
- (void)setEmptyView:(id)arg1;
- (void)setEnableRemotePreviews:(BOOL)arg1;
- (void)setFocusPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)setForcedContentTypeUTI:(id)arg1;
- (void)setFullLayers:(BOOL)arg1;
- (void)setGenericDisplayable:(id)arg1;
- (void)setGenericView:(id)arg1;
- (void)setHideLoadingSpinner:(BOOL)arg1;
- (void)setHorizontalScrollValue:(double)arg1;
- (void)setInitialDisplayBundleID:(id)arg1;
- (void)setInitialThumbnailSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setLoadingDisplayable:(id)arg1;
- (void)setLoadingForForceTouch:(BOOL)arg1;
- (void)setLoadingView:(id)arg1;
- (void)setMandatoryServer:(id)arg1;
- (void)setMode:(int)arg1;
- (void)setMode:(int)arg1 reloadItemIfNeeded:(BOOL)arg2;
- (void)setMuted:(BOOL)arg1;
- (void)setPlaying:(BOOL)arg1;
- (void)setPreviewItem:(id)arg1;
- (void)setPreviewItem:(id)arg1 blockingUntilLoading:(BOOL)arg2;
- (void)setPreviewItem:(id)arg1 blockingUntilLoading:(BOOL)arg2 timeoutDate:(id)arg3;
- (void)setPreviewItem:(id)arg1 blockingUntilLoading:(BOOL)arg2 timeoutDate:(id)arg3 transition:(int)arg4;
- (void)setSeekTolerance:(double)arg1;
- (void)setShouldCloseWithWindow:(BOOL)arg1;
- (void)setShowControls:(BOOL)arg1;
- (void)setShowRemainingTime:(BOOL)arg1;
- (void)setSizesPreviewToFit:(BOOL)arg1;
- (void)setSupportedDisplayBundleIDs:(id)arg1;
- (void)setTracksMouseMovements:(BOOL)arg1;
- (void)setUpdatePreviewSize:(BOOL)arg1;
- (void)setVerticalScrollValue:(double)arg1;
- (void)setVisible:(BOOL)arg1;
- (void)setVisualMargins:(struct NSEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setVolume:(float)arg1;
- (void)setZoomFactor:(double)arg1;
- (BOOL)setupDragPasteboard:(id)arg1;
- (BOOL)shouldAcceptDisplayBundleID:(id)arg1;
- (BOOL)shouldCloseWithWindow;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)shouldOpenURL:(id)arg1;
- (BOOL)shouldPreserveDisplayStateWhenNavigating;
- (BOOL)shouldRemoteDisplayBundleID:(id)arg1;
- (BOOL)shouldShowInlinePreviewContent;
- (BOOL)shouldShowInlinePreviewControls;
- (BOOL)shouldUseAsyncLoading;
- (BOOL)shouldUseHardwareCodec;
- (BOOL)showControls;
- (BOOL)showRemainingTime;
- (BOOL)sizesPreviewToFit;
- (id)sizingDisplayBundle;
- (void)start:(id)arg1;
- (void)startDragFromGesture:(id)arg1;
- (void)startWatchingURL:(id)arg1;
- (id)stealDocument;
- (void)stop:(id)arg1;
- (void)stopWatchingURL:(id)arg1;
- (id)supportedDisplayBundleIDs;
- (id)titleForPreviewItem:(id)arg1 options:(int)arg2;
- (double)totalHorizontalScroll;
- (double)totalScroll;
- (id)touchBar;
- (BOOL)tracksMouseMovements;
- (void)updateDisplayedDocumentWithTransition:(int)arg1;
- (void)updateLoadingLayerWithTransitionImage:(id)arg1 transitionFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (BOOL)usesLargeIndicator;
- (double)verticalKnobProportion;
- (double)verticalScrollValue;
- (void)viewDidEndLiveResize;
- (void)viewDidHide;
- (void)viewDidMoveToWindow;
- (void)viewDidUnhide;
- (id)viewForEvent:(id)arg1;
- (id)viewForLocation:(struct CGPoint { double x1; double x2; })arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (id)viewsDescription;
- (BOOL)visible;
- (struct NSEdgeInsets { double x1; double x2; double x3; double x4; })visualMargins;
- (float)volume;
- (BOOL)wantsPeriodicDraggingUpdates;
- (BOOL)wantsScrollEventsForSwipeTrackingOnAxis:(long long)arg1;
- (void)willHide;
- (void)willOpen;
- (void)willShow;
- (void)willShowOverlay:(id)arg1;
- (void)windowKeyDidChange:(id)arg1;
- (double)zoomFactor;
- (double)zoomFactorToFitWidth;

// QLPreviewView (QLDeprecated)

- (void)set_emptyView:(id)arg1;
- (void)set_genericView:(id)arg1;
- (void)set_loadingView:(id)arg1;

// QLPreviewView (QLPreviewItemVirtualNode)

+ (void)_registerVNodeSchemeHandler;

// QLPreviewView (QLVNodes)

+ (BOOL)isVNodeURL:(id)arg1;
+ (void)setVNodeDelegate:(id)arg1;
+ (id)vNodeURLWithPath:(id)arg1;

@end
