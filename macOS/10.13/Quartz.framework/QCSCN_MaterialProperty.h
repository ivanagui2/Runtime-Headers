/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
 */

@interface QCSCN_MaterialProperty : NSObject <QCSCN_Animatable> {
    id  _reserved;
}

@property (nonatomic, readwrite, retain) id borderColor;
@property (nonatomic, readwrite, retain) id contents;
@property (nonatomic, readwrite) struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; } contentsTransform;
@property (nonatomic, readwrite) int magnificationFilter;
@property (nonatomic, readwrite) long long mappingChannel;
@property (nonatomic, readwrite) int minificationFilter;
@property (nonatomic, readwrite) int mipFilter;
@property (nonatomic, readwrite) int wrapS;
@property (nonatomic, readwrite) int wrapT;

+ (int)_baseTypeForProperty:(id)arg1;
+ (id)_copyImageFromC3DImage:(struct __C3DImage { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; struct __CFDictionary {} *x_1_1_2; } x1; struct __CFURL {} *x2; struct CGContext {} *x3; struct __CFData {} *x4; unsigned int x5; bool x6; bool x7; struct C3DVector2 { union { double x_1_2_1[2]; struct { double x_2_3_1; double x_2_3_2; } x_1_2_2; struct { double x_3_3_1; double x_3_3_2; } x_1_2_3; struct { double x_4_3_1; double x_4_3_2; } x_1_2_4; } x_8_1_1; } x8; unsigned int x9; int x10; struct __C3DPVRTCInfo {} *x11; struct __C3DDDSInfo {} *x12; }*)arg1;
+ (struct __C3DImage { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; struct __CFDictionary {} *x_1_1_2; } x1; struct __CFURL {} *x2; struct CGContext {} *x3; struct __CFData {} *x4; unsigned int x5; bool x6; bool x7; struct C3DVector2 { union { double x_1_2_1[2]; struct { double x_2_3_1; double x_2_3_2; } x_1_2_2; struct { double x_3_3_1; double x_3_3_2; } x_1_2_3; struct { double x_4_3_1; double x_4_3_2; } x_1_2_4; } x_8_1_1; } x8; unsigned int x9; int x10; struct __C3DPVRTCInfo {} *x11; struct __C3DDDSInfo {} *x12; }*)_createC3DImageFromImageData:(id)arg1 typeID:(unsigned long long)arg2;
+ (id)argumentsForSelector:(SEL)arg1;
+ (id)copyImageFromC3DImage:(struct __C3DImage { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; struct __CFDictionary {} *x_1_1_2; } x1; struct __CFURL {} *x2; struct CGContext {} *x3; struct __CFData {} *x4; unsigned int x5; bool x6; bool x7; struct C3DVector2 { union { double x_1_2_1[2]; struct { double x_2_3_1; double x_2_3_2; } x_1_2_2; struct { double x_3_3_1; double x_3_3_2; } x_1_2_3; struct { double x_4_3_1; double x_4_3_2; } x_1_2_4; } x_8_1_1; } x8; unsigned int x9; int x10; struct __C3DPVRTCInfo {} *x11; struct __C3DDDSInfo {} *x12; }*)arg1;
+ (struct __C3DImage { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; struct __CFDictionary {} *x_1_1_2; } x1; struct __CFURL {} *x2; struct CGContext {} *x3; struct __CFData {} *x4; unsigned int x5; bool x6; bool x7; struct C3DVector2 { union { double x_1_2_1[2]; struct { double x_2_3_1; double x_2_3_2; } x_1_2_2; struct { double x_3_3_1; double x_3_3_2; } x_1_2_3; struct { double x_4_3_1; double x_4_3_2; } x_1_2_4; } x_8_1_1; } x8; unsigned int x9; int x10; struct __C3DPVRTCInfo {} *x11; struct __C3DDDSInfo {} *x12; }*)createC3DImageFromImage:(id)arg1;
+ (BOOL)isKeyExcludedFromWebScript:(const char *)arg1;
+ (BOOL)isSelectorExcludedFromWebScript:(SEL)arg1;
+ (id)propertyKeys;
+ (Class)typeForProperty:(id)arg1;
+ (id)webScriptNameForSelector:(SEL)arg1;

- (void*)__CFObject;
- (void)__removeAnimationForKey:(id)arg1;
- (id)_animationPathForKey:(id)arg1;
- (id)_contents;
- (void)_layerDidChange:(id)arg1;
- (void)_pauseAnimation:(BOOL)arg1 forKey:(id)arg2;
- (long long)_presentationMappingChannel;
- (void)_setC3DImageRef:(struct __C3DImage { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; struct __CFDictionary {} *x_1_1_2; } x1; struct __CFURL {} *x2; struct CGContext {} *x3; struct __CFData {} *x4; unsigned int x5; bool x6; bool x7; struct C3DVector2 { union { double x_1_2_1[2]; struct { double x_2_3_1; double x_2_3_2; } x_1_2_2; struct { double x_3_3_1; double x_3_3_2; } x_1_2_3; struct { double x_4_3_1; double x_4_3_2; } x_1_2_4; } x_8_1_1; } x8; unsigned int x9; int x10; struct __C3DPVRTCInfo {} *x11; struct __C3DDDSInfo {} *x12; }*)arg1;
- (void)_setColor:(id)arg1;
- (void)_syncObjCAnimations;
- (void)_syncObjCModel;
- (void)_updateMaterialAttachment:(void*)arg1;
- (void)_updateMaterialBorderColor:(void*)arg1;
- (void)_updateMaterialColor:(void*)arg1;
- (void)_updateMaterialFilters:(void*)arg1;
- (void)_updateMaterialImage:(void*)arg1;
- (void)_updateMaterialLayer:(void*)arg1;
- (void)_updateMaterialProceduralContents:(void*)arg1;
- (void)_updateMaterialPropertyTransform:(void*)arg1;
- (void)addAnimation:(id)arg1;
- (void)addAnimation:(id)arg1 forKey:(id)arg2;
- (id)animationForKey:(id)arg1;
- (id)animationKeys;
- (struct __C3DAnimationManager { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; struct __CFArray {} *x2; struct __CFDictionary {} *x3; struct __CFDictionary {} *x4; struct __CFDictionary {} *x5; struct __CFSet {} *x6; struct __CFArray {} *x7; bool x8; bool x9; double x10; double x11; struct _opaque_pthread_mutex_t { long long x_12_1_1; BOOL x_12_1_2[56]; } x12; int x13; int x14; }*)animationManager;
- (id)attachment;
- (id)borderColor;
- (struct C3DColor4 { union { float x_1_1_1[4]; struct { float x_2_2_1; float x_2_2_2; float x_2_2_3; float x_2_2_4; } x_1_1_2; } x1; })borderColor4;
- (id)color;
- (struct C3DColor4 { union { float x_1_1_1[4]; struct { float x_2_2_1; float x_2_2_2; float x_2_2_3; float x_2_2_4; } x_1_1_2; } x1; })color4;
- (struct __C3DEffectCommonProfile { struct __C3DEffectProfile { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; struct __CFDictionary {} *x_1_1_2; struct __CFDictionary {} *x_1_1_3; int x_1_1_4; struct __CFString {} *x_1_1_5; } x1; int x2; struct __C3DEffectSlot {} *x3; struct __C3DEffectSlot {} *x4; struct __C3DEffectSlot {} *x5; struct __C3DEffectSlot {} *x6; struct __C3DEffectSlot {} *x7; struct __C3DEffectSlot {} *x8; struct __C3DEffectSlot {} *x9; struct __C3DEffectSlot {} *x10; struct __C3DEffectSlot {} *x11; float x12; float x13; float x14; float x15; int x16; int x17; long long x18; bool x19; bool x20; bool x21; bool x22; unsigned int x23 : 1; unsigned int x24 : 1; unsigned int x25 : 1; unsigned int x26 : 1; unsigned int x27 : 1; unsigned int x28 : 1; unsigned int x29 : 1; unsigned int x30 : 1; struct __C3DFXProgram {} *x31; }*)commonProfile;
- (id)content;
- (id)contents;
- (struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })contentsTransform;
- (void)dealloc;
- (id)description;
- (struct __C3DEffect { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; struct __CFDictionary {} *x_1_1_2; } x1; struct __C3DEffectProfile {} *x2[3]; }*)effectRef;
- (struct __C3DImage { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; struct __CFDictionary {} *x_1_1_2; } x1; struct __CFURL {} *x2; struct CGContext {} *x3; struct __CFData {} *x4; unsigned int x5; bool x6; bool x7; struct C3DVector2 { union { double x_1_2_1[2]; struct { double x_2_3_1; double x_2_3_2; } x_1_2_2; struct { double x_3_3_1; double x_3_3_2; } x_1_2_3; struct { double x_4_3_1; double x_4_3_2; } x_1_2_4; } x_8_1_1; } x8; unsigned int x9; int x10; struct __C3DPVRTCInfo {} *x11; struct __C3DDDSInfo {} *x12; }*)getC3DImageRef;
- (id)image;
- (id)init;
- (id)initPresentationMaterialPropertyWithModelProperty:(id)arg1;
- (id)initWithParent:(id)arg1 propertyType:(int)arg2;
- (id)layer;
- (int)magnificationFilter;
- (long long)mappingChannel;
- (int)minificationFilter;
- (int)mipFilter;
- (id)parent;
- (void)parentWillDie:(id)arg1;
- (void)pauseAnimationForKey:(id)arg1;
- (id)presentationMaterialProperty;
- (id)proceduralContents;
- (id)propertyKeys;
- (int)propertyType;
- (id)pvrtcData;
- (void)removeAllAnimations;
- (void)removeAllAnimationsBeforeDying:(void*)arg1;
- (void)removeAnimationForKey:(id)arg1;
- (void)resumeAnimationForKey:(id)arg1;
- (struct __C3DScene { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned long long x_1_2_2; } x_1_1_1; struct __CFDictionary {} *x_1_1_2; } x1; struct __C3DSceneID {} *x2; struct __C3DNode {} *x3; struct __C3DAnimationManager {} *x4; double x5; double x6; double x7; double x8; struct __CFDictionary {} *x9; struct _SCNVector3 { double x_10_1_1; double x_10_1_2; double x_10_1_3; } x10; struct __C3DFXDeformerManager {} *x11; struct _opaque_pthread_mutex_t { long long x_12_1_1; BOOL x_12_1_2[56]; } x12; }*)sceneRef;
- (void)setAttachment:(id)arg1;
- (void)setBorderColor:(id)arg1;
- (void)setColor:(id)arg1;
- (void)setContent:(id)arg1;
- (void)setContents:(id)arg1;
- (void)setContentsTransform:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg1;
- (void)setImage:(id)arg1;
- (void)setLayer:(id)arg1;
- (void)setMagnificationFilter:(int)arg1;
- (void)setMappingChannel:(long long)arg1;
- (void)setMinificationFilter:(int)arg1;
- (void)setMipFilter:(int)arg1;
- (void)setProceduralContents:(id)arg1;
- (void)setWrapS:(int)arg1;
- (void)setWrapT:(int)arg1;
- (id)slotName;
- (struct __C3DAnimationTarget { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; void *x2; void *x3; int x4; int x5; struct __CFString {} *x6; struct __CFArray {} *x7; }*)targetForKey:(id)arg1;
- (struct __C3DTextureSampler { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; int x2; int x3; int x4; int x5; int x6; int x7; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_8_1_1; } x8; int x9; unsigned long long x10; }*)textureSampler;
- (int)wrapS;
- (int)wrapT;

@end
