/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
 */

@interface IKProfilePictureView : NSView <NSDraggingSource> {
    NSString * _accountType;
    unsigned long long  _borderStyle;
    struct CGSize { 
        double width; 
        double height; 
    }  _cropSize;
    NSImage * _defaultImage;
    <IKProfilePictureDelegate> * _delegate;
    BOOL  _draggingEntered;
    NSURL * _dropURL;
    BOOL  _editable;
    unsigned long long  _editionHighlightType;
    id  _editorImage;
    NSDictionary * _editorSettings;
    BOOL  _enabled;
    IKPPFloatingWindow * _floatingPictureWindow;
    NSImageView * _imageViewForCell;
    BOOL  _isEditing;
    BOOL  _isMe;
    BOOL  _isPressed;
    IKPictureTaker * _pictureTaker;
    NSString * _recentPictureID;
    id  _representedObject;
    CALayer * _rolloverLayer;
    id  _savedEditorImage;
    NSDictionary * _savedEditorSettings;
    BOOL  _shouldRestoreOnCancel;
    BOOL  _showBuiltinImagesByDefault;
    BOOL  _showEditionHighlight;
    BOOL  _showRolloverHighlight;
    NSTrackingArea * _trackingArea;
    BOOL  _usePanel;
    BOOL  _userActionTriggeredEdition;
}

@property (atomic, readwrite, retain) NSString *accountType;
@property (atomic, readwrite) unsigned long long borderStyle;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readwrite, retain) NSImage *defaultImage;
@property (atomic, readwrite) id delegate;
@property (atomic, readonly, copy) NSString *description;
@property (getter=isEditable, atomic, readwrite) BOOL editable;
@property (atomic, readwrite) unsigned long long editionHighlightType;
@property (atomic, readwrite, retain) NSImage *editorImage;
@property (atomic, readwrite, retain) NSDictionary *editorSettings;
@property (getter=isEnabled, atomic, readwrite) BOOL enabled;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite, retain) NSImage *image;
@property (atomic, readwrite) BOOL isMe;
@property (atomic, readwrite, retain) NSString *recentPictureID;
@property (atomic, readwrite, retain) id representedObject;
@property (atomic, readwrite) BOOL showBuiltinImagesByDefault;
@property (atomic, readwrite) BOOL showEditionHighlight;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite) BOOL usePanel;

- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_accountFrameRectForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)_allowDropWithDraggingInfo:(id)arg1;
- (void)_didStopEditing;
- (id)_dragImage;
- (id)_dragImageData;
- (void)_drawAccountFrame;
- (void)_drawBadgeWithString:(id)arg1 inFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 drawBackground:(BOOL)arg3;
- (void)_drawBevel;
- (void)_drawRolloverHighlightInContext:(struct CGContext { }*)arg1;
- (void)_drawRotatedFrame;
- (void)_drawRoundedBorder;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_opaqueRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_photoContentRectForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_photoFrameRectForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_pictureTaker;
- (void)_popoverWillOpenNotification:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_rolloverFrame;
- (void)_rotateCurrentContextWithFrameOrigin:(struct CGPoint { double x1; double x2; })arg1 innerOffset:(struct CGPoint { double x1; double x2; })arg2 angle:(double)arg3;
- (void)_setDisplayRolloverLayer:(BOOL)arg1;
- (id)_silhouetteImage;
- (void)_willStartEditing;
- (void)abortEditing;
- (BOOL)acceptsFirstResponder;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accountType;
- (BOOL)allowsVibrancy;
- (BOOL)becomeFirstResponder;
- (void)beginEditing;
- (void)beginEditingForDropOrPasteWithImage:(id)arg1;
- (void)beginEditingWithMode:(long long)arg1;
- (unsigned long long)borderStyle;
- (void)commonInit;
- (void)concludeDragOperation:(id)arg1;
- (void)copy:(id)arg1;
- (void)dealloc;
- (id)defaultImage;
- (id)delegate;
- (void)delete:(id)arg1;
- (void)dragImage:(id)arg1 at:(struct CGPoint { double x1; double x2; })arg2 offset:(struct CGSize { double x1; double x2; })arg3 event:(id)arg4 pasteboard:(id)arg5 source:(id)arg6 slideBack:(BOOL)arg7;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggingExited:(id)arg1;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint { double x1; double x2; })arg2 operation:(unsigned long long)arg3;
- (void)draggingSession:(id)arg1 movedToPoint:(struct CGPoint { double x1; double x2; })arg2;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)draggingSession:(id)arg1 willBeginAtPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)drawFocusRingMask;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (unsigned long long)editionHighlightType;
- (id)editorImage;
- (id)editorSettings;
- (void)floatingWindowWillClose:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })focusRingMaskBounds;
- (BOOL)ignoreModifierKeysForDraggingSession:(id)arg1;
- (id)image;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)isEditable;
- (BOOL)isEditing;
- (BOOL)isEnabled;
- (BOOL)isMe;
- (void)keyDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseUp:(id)arg1;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (void)paste:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)pictureTakerValidated:(id)arg1 code:(long long)arg2 contextInfo:(void*)arg3;
- (BOOL)prepareForDragOperation:(id)arg1;
- (id)recentPictureID;
- (id)representedObject;
- (BOOL)resignFirstResponder;
- (void)setAccountType:(id)arg1;
- (void)setBorderStyle:(unsigned long long)arg1;
- (void)setDefaultImage:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDropURL:(id)arg1;
- (void)setEditable:(BOOL)arg1;
- (void)setEditionHighlightType:(unsigned long long)arg1;
- (void)setEditorImage:(id)arg1;
- (void)setEditorSettings:(id)arg1;
- (void)setEnabled:(BOOL)arg1;
- (void)setImage:(id)arg1;
- (void)setIsMe:(BOOL)arg1;
- (void)setRecentPictureID:(id)arg1;
- (void)setRepresentedObject:(id)arg1;
- (void)setSavedEditorImage:(id)arg1;
- (void)setSavedEditorSettings:(id)arg1;
- (void)setShowBuiltinImagesByDefault:(BOOL)arg1;
- (void)setShowEditionHighlight:(BOOL)arg1;
- (void)setUsePanel:(BOOL)arg1;
- (void)setupPictureTaker;
- (BOOL)showBuiltinImagesByDefault;
- (BOOL)showEditionHighlight;
- (void)startPictureAnimationWithCompletionBlock:(id)arg1;
- (void)updateTrackingAreas;
- (BOOL)usePanel;
- (void)viewWillMoveToWindow:(id)arg1;

@end
