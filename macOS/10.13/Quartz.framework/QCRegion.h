/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
 */

@interface QCRegion : NSObject {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _bounds;
    void * _region;
    void * _unused;
}

+ (id)emptyRegion;
+ (id)infiniteRegion;
+ (void)initialize;
+ (id)regionWithCGRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
+ (id)regionWithCGSRegion:(struct CGSRegionObject { }*)arg1;
+ (id)regionWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;

- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })CGRect;
- (struct CGSRegionObject { }*)CGSRegion;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (BOOL)containsPoint:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)containsRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)containsRegion:(id)arg1;
- (void)dealloc;
- (id)description;
- (void*)enumerateRects:(void*)arg1 outRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2;
- (void)finalize;
- (id)initWithCGRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithCGSRegion:(struct CGSRegionObject { }*)arg1;
- (id)initWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)insetByX:(double)arg1 Y:(double)arg2;
- (id)intersectWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)intersectWithRegion:(id)arg1;
- (BOOL)intersectsRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)intersectsRegion:(id)arg1;
- (BOOL)isEmpty;
- (BOOL)isInfinite;
- (BOOL)isRectangular;
- (id)listRects;
- (id)offsetByX:(double)arg1 Y:(double)arg2;
- (id)pixelBufferRepresentation;
- (id)rotateByDegrees:(double)arg1;
- (id)scaleByX:(double)arg1 Y:(double)arg2;
- (id)subtractRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)subtractRegion:(id)arg1;
- (id)transformBy:(id)arg1;
- (id)transformWith:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; }*)arg1;
- (id)unionWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)unionWithRegion:(id)arg1;

// QCRegion (CIFilterShape)

+ (id)regionWithCIFilterShape:(id)arg1;

- (id)CIFilterShape;
- (id)initWithCIFilterShape:(id)arg1;

@end
