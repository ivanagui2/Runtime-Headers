/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
 */

@interface IKCGRenderer : NSObject <IKRenderer> {
    struct CGContext { } * _ctx;
    float  _currentAlpha;
    unsigned long long  _currentScaleFactor;
    BOOL  _smoothFonts;
}

@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readonly) Class superclass;

- (void)_drawRoundedRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 radius:(float)arg2 lineWidth:(float)arg3 drawingMode:(int)arg4;
- (BOOL)beginDrawingInView:(id)arg1;
- (void)clearViewport:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGContext { }*)ctx;
- (void)dealloc;
- (void)drawImage:(id)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 fromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 alpha:(float)arg4;
- (void)drawLineFromPoint:(struct CGPoint { double x1; double x2; })arg1 toPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)drawPlaceHolderWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withAlpha:(float)arg2;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withLineWidth:(float)arg2;
- (void)drawRectShadow:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withAlpha:(float)arg2;
- (void)drawRoundedRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 radius:(float)arg2 lineWidth:(float)arg3 cacheIt:(BOOL)arg4;
- (BOOL)drawRoundedRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 radius:(float)arg2 strokeColor:(float*)arg3 fillColor:(float*)arg4 lineWidth:(int)arg5;
- (void)drawText:(id)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 withAttributes:(id)arg3 withAlpha:(float)arg4;
- (void)emptyCaches;
- (void)endDrawing;
- (void)fillGradientInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 bottomColor:(id)arg2 topColor:(id)arg3;
- (void)fillRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)fillRoundedRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 radius:(float)arg2 cacheIt:(BOOL)arg3;
- (void)flushRenderer;
- (void)flushTextRenderer;
- (id)init;
- (void)installClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)renderBezelGroupWithPoints:(struct CGPoint { double x1; double x2; }*)arg1 count:(int)arg2 radius:(float)arg3 strokeColor:(float*)arg4 fillColor:(float*)arg5 lineWidth:(int)arg6;
- (int)rendererType;
- (void)setColorRed:(float)arg1 Green:(float)arg2 Blue:(float)arg3 Alpha:(float)arg4;
- (void)setContext:(struct CGContext { }*)arg1;
- (void)setShouldSmoothFonts:(BOOL)arg1;
- (void)setupViewportWithView:(id)arg1;
- (void)uninstallClipRect;

@end
