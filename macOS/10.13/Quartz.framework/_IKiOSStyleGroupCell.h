/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
 */

@interface _IKiOSStyleGroupCell : IKIconCell {
    double  _contentScroll;
    double  _dimFactor;
    unsigned int  _ghost;
    IKImageBrowserGridGroup * _group;
    double  _highlightFactor;
    unsigned int  _highlighted;
    unsigned int  _supportsStatusImage;
    IKImageWrapper * _titleSelectionImage;
}

@property (atomic, readwrite) double dimFactor;
@property (atomic, readwrite) BOOL ghost;
@property (atomic, readwrite, retain) IKImageBrowserGridGroup *group;
@property (atomic, readwrite) double highlightFactor;
@property (atomic, readwrite) BOOL highlighted;

+ (double)contentInsetForCellSize:(double)arg1;
+ (double)subThumbSizeForCellSize:(double)arg1;

- (void)_addClickableAreaWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 draggable:(BOOL)arg2;
- (void)_drawPlaceHolder;
- (id)_subCellAtIndex:(unsigned long long)arg1;
- (id)_thumbImageForSubcellAtIndex:(unsigned long long)arg1;
- (BOOL)acceptsDrop;
- (double)baseline;
- (float)baselineForImage:(id)arg1 renderSize:(struct CGSize { double x1; double x2; })arg2 context:(id)arg3;
- (float)baselineMargin;
- (BOOL)canBeDoubleClicked;
- (BOOL)canDisplayInlinePreview;
- (void)dealloc;
- (double)dimFactor;
- (void)drawBackground;
- (void)drawGroupBackround:(BOOL)arg1;
- (void)drawHighlight;
- (void)drawImage:(id)arg1;
- (void)drawOverlays;
- (void)drawPlaceHolder;
- (void)drawSelection;
- (void)drawShadow;
- (void)drawSubtitle;
- (void)drawTitle;
- (void)drawWithComponentMask:(int)arg1;
- (BOOL)ghost;
- (id)group;
- (double)highlightFactor;
- (BOOL)highlighted;
- (BOOL)hitTestWithPoint:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })imageBorderFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })imageFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })imageFrameNoScale;
- (id)init;
- (void)invalidate;
- (BOOL)isDisabled;
- (BOOL)isMasterCell;
- (BOOL)isSelectable;
- (double)opacity;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })selectionFrame;
- (void)setDimFactor:(double)arg1;
- (void)setGhost:(BOOL)arg1;
- (void)setGroup:(id)arg1;
- (void)setHighlightFactor:(double)arg1;
- (void)setHighlighted:(BOOL)arg1;
- (id)statusImage;
- (struct CGSize { double x1; double x2; })statusImageSize;
- (double)subThumbSize;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })subtitleFrame;
- (id)thumbnailImage;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })titleFrame;
- (double)topline;
- (float)toplineForImage:(id)arg1 renderSize:(struct CGSize { double x1; double x2; })arg2 context:(id)arg3;
- (id)visibleSubIndexes;

@end
