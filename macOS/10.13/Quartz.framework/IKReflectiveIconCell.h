/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
 */

@interface IKReflectiveIconCell : IKIconCell {
    id  _currentRenderedImage;
    float  _rotation;
}

@property (atomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } reflectionFrame;
@property (atomic, readwrite) float rotation;

- (BOOL)_transform:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; }*)arg1 forLayer:(id)arg2 inFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (double)baseline;
- (float)baselineForImage:(id)arg1 renderSize:(struct CGSize { double x1; double x2; })arg2 context:(id)arg3;
- (BOOL)canBeDoubleClicked;
- (BOOL)canDisplayInlinePreview;
- (void)draw;
- (void)drawImage:(id)arg1;
- (void)drawReflection:(id)arg1;
- (void)drawSelection;
- (void)drawShadow;
- (void)drawSubtitle;
- (void)drawTitle;
- (double)fogFactor;
- (double)fogFactorDueToMargin;
- (double)fogFactorDueToRotation;
- (unsigned long long)imageAlignment;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })imageFrame;
- (void)invalidate;
- (void)popTransform;
- (void)pushTransform;
- (float)reflectionFactor;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })reflectionFrame;
- (float)reflectionHeight;
- (double)rotatedTextAlphaFactor;
- (float)rotation;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })selectionFrame;
- (void)setRotation:(float)arg1;
- (double)topline;
- (float)toplineForImage:(id)arg1 renderSize:(struct CGSize { double x1; double x2; })arg2 context:(id)arg3;

@end
