/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
 */

@interface QCSCN_Renderer : NSObject <QCSCN_SceneRenderer> {
    id  _reserved;
}

@property (nonatomic, readwrite) BOOL autoenablesDefaultLighting;
@property (atomic, readwrite, retain) id cameraModifier;
@property (nonatomic, readonly) void*context;
@property (nonatomic, readwrite) double currentTime;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (nonatomic, readwrite) <QCSCN_SceneRendererDelegate> *delegate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (getter=isJitteringEnabled, nonatomic, readwrite) BOOL jitteringEnabled;
@property (nonatomic, readwrite) BOOL loops;
@property (getter=isPlaying, atomic, readwrite) BOOL playing;
@property (nonatomic, readwrite, retain) QCSCN_Node *pointOfView;
@property (nonatomic, readwrite, retain) QCSCN_Scene *scene;
@property (atomic, readonly) Class superclass;

+ (int)_baseTypeForProperty:(id)arg1;
+ (BOOL)isKeyExcludedFromWebScript:(const char *)arg1;
+ (BOOL)isSelectorExcludedFromWebScript:(SEL)arg1;
+ (id)propertyKeys;
+ (id)rendererWithContext:(void*)arg1 options:(id)arg2;
+ (Class)typeForProperty:(id)arg1;

- (void*)__CFObject;
- (void)_attachShader:(id)arg1;
- (void)_attachTexture:(id)arg1;
- (void)_commonInitWithOptions:(id)arg1;
- (void)_detachShader:(id)arg1;
- (void)_detachTexture:(id)arg1;
- (void)_engineDidChange:(struct __C3DEngineAdaptor { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; void *x2; struct __C3DEngineContext {} *x3; void *x4; }*)arg1;
- (void)_engineWillChange:(struct __C3DEngineAdaptor { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; void *x2; struct __C3DEngineContext {} *x3; void *x4; }*)arg1;
- (void)_setCurrentTime:(double)arg1;
- (void)_setScene:(id)arg1;
- (void)_setupCallbacks:(struct __C3DEngineAdaptor { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; void *x2; struct __C3DEngineContext {} *x3; void *x4; }*)arg1;
- (BOOL)autoAdjustCamera;
- (BOOL)autoenablesDefaultLighting;
- (id)backgroundColor;
- (struct C3DColor4 { union { float x_1_1_1[4]; struct { float x_2_2_1; float x_2_2_2; float x_2_2_3; float x_2_2_4; } x_1_1_2; } x1; }*)backgroundColorComponents;
- (id)cameraModifier;
- (void*)context;
- (struct CGImage { }*)copySnapshotWithSize:(struct CGSize { double x1; double x2; })arg1;
- (double)currentTime;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (void)didRenderScene:(id)arg1;
- (void)drawInGLContext:(void*)arg1;
- (BOOL)enableDefaultLight;
- (struct __C3DEngineAdaptor { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; void *x2; struct __C3DEngineContext {} *x3; void *x4; }*)engine;
- (struct __C3DEngineContext { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; struct __C3DScene {} *x2; struct __C3DNode {} *x3; struct __C3DNode {} *x4; struct { int (*x_5_1_1)(); int (*x_5_1_2)(); } x5; void *x6; struct __C3DRendererContext {} *x7; struct __C3DFXContext {} *x8; bool x9; struct __C3DCommonProfileProgramTree {} *x10; struct __CFDictionary {} *x11; struct _opaque_pthread_mutex_t { long long x_12_1_1; BOOL x_12_1_2[56]; } x12; struct __CFDictionary {} *x13; struct __C3DObjectPool {} *x14; struct __CFDictionary {} *x15; struct __CFArray {} *x16; double x17; }*)engineContext;
- (void)evaluateAnimationsAtSystemTime:(double)arg1;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 options:(id)arg2;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 viewport:(struct CGSize { double x1; double x2; })arg2 options:(id)arg3;
- (id)init;
- (id)initOffscreenRendererWithSize:(struct CGSize { double x1; double x2; })arg1;
- (id)initOffscreenRendererWithSize:(struct CGSize { double x1; double x2; })arg1 options:(id)arg2;
- (id)initPublicWithOptions:(id)arg1;
- (id)initWithOptions:(id)arg1;
- (void)initializeOffscreenWithSize:(struct CGSize { double x1; double x2; })arg1 options:(id)arg2;
- (BOOL)isJitteringEnabled;
- (BOOL)isPlaying;
- (BOOL)jitteringEnabled;
- (void)lock;
- (BOOL)loops;
- (double)nextFrameTime;
- (struct CGSize { double x1; double x2; })offscreenBufferSize;
- (void)pause;
- (void)pause:(id)arg1;
- (struct _CGLPixelFormatObject { }*)pixelFormat;
- (void)play;
- (void)play:(id)arg1;
- (id)pointOfView;
- (id)propertyKeys;
- (void)render;
- (void)renderNode:(id)arg1 options:(id)arg2;
- (id)scene;
- (void)sceneDidChange;
- (void)sceneWillChange;
- (id)scnContext;
- (void)setAutoAdjustCamera:(BOOL)arg1;
- (void)setAutoenablesDefaultLighting:(BOOL)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setCameraModifier:(id)arg1;
- (void)setContext:(void*)arg1;
- (void)setCurrentTime:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEnableDefaultLight:(BOOL)arg1;
- (void)setEngine:(struct __C3DEngineAdaptor { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; void *x2; struct __C3DEngineContext {} *x3; void *x4; }*)arg1;
- (void)setJitteringEnabled:(BOOL)arg1;
- (void)setLoops:(BOOL)arg1;
- (void)setNextFrameTime:(double)arg1;
- (void)setPlaying:(BOOL)arg1;
- (void)setPointOfView:(id)arg1;
- (void)setScene:(id)arg1;
- (void)setWarmUpResourcesWhenLoadingScene:(BOOL)arg1;
- (void)stop;
- (void)stop:(id)arg1;
- (void)unlock;
- (void)updateCurrentTimeWithSystemTime:(double)arg1;
- (BOOL)warmUpResourcesWhenLoadingScene;
- (BOOL)warmUpScene:(id)arg1 abortHandler:(id)arg2;
- (void)willRenderScene:(id)arg1;

@end
