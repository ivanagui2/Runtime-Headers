/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
 */

@interface IKImageView2 : NSView {
    BOOL  _alwaysHidesScrollers;
    CALayer * _backgroundColorLayer;
    BOOL  _backgroundLoaded;
    IKImageBackgroundLayer * _checkerboardLayer;
    NSView * _contentOverlayView;
    IKImageContentView * _documentViewInLoading;
    BOOL  _documentViewLayersAreSetup;
    BOOL  _hasImage;
    double  _lastCompletedRotationAngle;
    BOOL  _restrainsMinZoomToViewSize;
    NSScrollView * _scrollView;
}

@property (nonatomic, readwrite) BOOL alwaysHidesScrollers;
@property (atomic, readwrite) NSColor *backgroundColor;
@property (atomic, readonly) NSView *contentOverlayView;
@property (atomic, readonly) IKImageContentView *imageContentView;
@property (atomic, readwrite) BOOL loadsSynchronously;
@property (atomic, readwrite) double maxZoomFactor;
@property (atomic, readwrite) double minZoomFactor;
@property (atomic, readwrite) BOOL restrainsMinZoomToViewSize;
@property (atomic, readwrite) double rotationAngle;
@property (atomic, readonly) NSScrollView *scrollView;
@property (atomic, readwrite) BOOL stickyZoomToFit;
@property (atomic, readwrite) double zoomFactor;

+ (id)keyPathsForValuesAffectingImageRectInView;
+ (id)keyPathsForValuesAffectingZoomFactor;
+ (double)rotationDegreeForEXIFOrientation:(long long)arg1;

- (void)_constrainCheckerboardMaskBounds;
- (struct CGPoint { double x1; double x2; })_convertDocumentPointToImage:(struct CGPoint { double x1; double x2; })arg1;
- (void)_forceConstrainCheckerboardMaskBounds;
- (struct CGSize { double x1; double x2; })_imageSizeWithoutRotations;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_insetContentBounds;
- (void)_reinsertContentOverlayView;
- (void)_replaceDocumentView;
- (void)_setupDocumentViewForLoading;
- (BOOL)alwaysHidesScrollers;
- (id)annotationsLayer;
- (id)annotationsView;
- (id)applyFiltersToImage:(id)arg1;
- (void)applyFlipAnimation:(int)arg1;
- (void)applyRotationAnimationCenteredAroundImagePoint:(struct CGPoint { double x1; double x2; })arg1 andRotationAngle:(double)arg2;
- (void)applyZoomAnimationFrom:(double)arg1 to:(double)arg2;
- (void)awakeFromNib;
- (id)backgroundColor;
- (id)borrowContent;
- (void)cancelAndDisposeOfDocumentViewInLoading;
- (void)clipviewBoundsChanged:(id)arg1;
- (void)commonInit;
- (id)contentOverlayView;
- (void)contentRotatingBy:(double)arg1 aroundImagePoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)contentViewLoadedThumbnail:(id)arg1;
- (struct CGPoint { double x1; double x2; })convertPointFromImage:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGPoint { double x1; double x2; })convertPointToImage:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRectFromImage:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRectToImage:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)dealloc;
- (double)defaultTransformAnimationDuration;
- (void)didCompleteFlipAnimation;
- (void)didCompleteRotationAnimation;
- (void)didCompleteZoomAnimation;
- (BOOL)documentViewLayersAreSetup;
- (id)flattenedUnfilteredCIImage;
- (void)flipImageHorizontal:(id)arg1;
- (void)flipImageVertical:(id)arg1;
- (id)imageContentView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })imageRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })imageRectInView;
- (struct CGSize { double x1; double x2; })imageSize;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)isAnimatingTransform;
- (id)layeredImageDocumentView;
- (BOOL)loadsSynchronously;
- (id)magnificationInflectionPoints;
- (id)magnificationInflectionPointsForScrollView:(id)arg1;
- (double)maxZoomFactor;
- (double)minZoomFactor;
- (struct CGImage { }*)newVisibleImageSnapshot;
- (void)redrawTiles;
- (void)redrawVisibleRect;
- (BOOL)restrainsMinZoomToViewSize;
- (void)returnBorrowedContent;
- (void)rotateImageLeft:(id)arg1;
- (void)rotateImageRight:(id)arg1;
- (double)rotationAngle;
- (id)scrollView;
- (void)scrollviewFrameChanged:(id)arg1;
- (void)setAllowsGestureElasticity:(BOOL)arg1;
- (void)setAlwaysHidesScrollers:(BOOL)arg1;
- (void)setAnimates:(BOOL)arg1;
- (void)setBackgroundColor:(id)arg1;
- (BOOL)setCIImage:(id)arg1 imageProperties:(id)arg2 displayProperties:(id)arg3;
- (void)setDocumentViewLayersAreSetup:(BOOL)arg1;
- (BOOL)setImage:(struct CGImage { }*)arg1 imageProperties:(id)arg2 displayProperties:(id)arg3;
- (BOOL)setImageData:(id)arg1 imageAtIndex:(long long)arg2 withDisplayProperties:(id)arg3;
- (BOOL)setImageData:(id)arg1 withDisplayProperties:(id)arg2;
- (BOOL)setImageURL:(id)arg1 imageAtIndex:(long long)arg2 withDisplayProperties:(id)arg3;
- (BOOL)setImageURL:(id)arg1 withDisplayProperties:(id)arg2;
- (void)setLoadsSynchronously:(BOOL)arg1;
- (void)setMaxZoomFactor:(double)arg1;
- (void)setMinNearestNeighborScale:(double)arg1;
- (void)setMinZoomFactor:(double)arg1;
- (void)setRestrainsMinZoomToViewSize:(BOOL)arg1;
- (void)setRotationAngle:(double)arg1;
- (void)setRotationAngle:(double)arg1 centeredAroundImagePoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)setRotationAngleWithAnimation:(double)arg1 aroundImagePoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3;
- (void)setShouldUseTiles:(BOOL)arg1;
- (void)setShowsCheckerboardBackground:(BOOL)arg1;
- (void)setSoftProofFilter:(id)arg1;
- (void)setStickyZoomToFit:(BOOL)arg1;
- (void)setUsesTiles:(BOOL)arg1;
- (void)setZoomFactor:(double)arg1;
- (void)setZoomFactor:(double)arg1 centeredAtImagePoint:(struct CGPoint { double x1; double x2; })arg2 animate:(BOOL)arg3 stickyFit:(BOOL)arg4;
- (void)setZoomFactor:(double)arg1 withCenter:(struct CGPoint { double x1; double x2; })arg2 animate:(BOOL)arg3 stickyFit:(BOOL)arg4;
- (void)setupForRotationAnimationCenteredAroundImagePoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)setupForZoomAnimationCenteredAroundImagePoint:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)shouldUseTiles;
- (BOOL)showsCheckerboardBackground;
- (id)softProofFilter;
- (BOOL)stickyZoomToFit;
- (void)updateUnderlyingCIImage:(id)arg1 imageProperties:(id)arg2 displayProperties:(id)arg3 usingFlattenedImage:(BOOL)arg4;
- (BOOL)usesTiles;
- (void)willCompleteFlipAnimation;
- (void)willCompleteRotationAnimation;
- (void)willCompleteZoomAnimation;
- (double)zoomFactor;
- (void)zoomImageToScale:(double)arg1 aroundImagePoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)zoomToFitSticky:(BOOL)arg1;
- (void)zoomToFullSize;

@end
