/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
 */

@interface IKImageContentView : NSView {
    BOOL  _alwaysHidesScrollers;
    CALayer * _animationLayer;
    CALayer * _annotationsLayer;
    NSView * _annotationsView;
    CALayer * _backgroundThumbnailLayer;
    CALayer * _backgroundThumbnailMask;
    NSTimer * _blockCleanupTimer;
    NSMutableArray * _blockCollection;
    struct CGImage { } * _cachedHigherResThumbnailImage;
    BOOL  _canAnimateImage;
    BOOL  _canInvalidateBlockCleanupTimer;
    CIImage * _ciImage;
    IKCenteringClipView * _clipView;
    CALayer * _combinedCurrentTilesAndBGLayer;
    BOOL  _completedInitialImageLoading;
    NSView * _contentView;
    CALayer * _contentViewContainerLayer;
    NSDictionary * _displayProperties;
    CIImage * _drawingCIImage;
    BOOL  _drawingCIImageNeedsToUpdate;
    long long  _exifOrientation;
    BOOL  _finishedFirstLowResThumbnail;
    CIImage * _flattenedCIImage;
    CIContext * _flatteningContext;
    CALayer * _flipLayer;
    CAKeyframeAnimation * _gifAnimation;
    double  _imageHeight;
    unsigned long long  _imageIndex;
    IKImageView2 * _imageView;
    double  _imageWidth;
    NSData * _imgData;
    NSURL * _imgURL;
    BOOL  _inMagnifyGesture;
    CALayer * _incomingContentViewContainerLayer;
    BOOL  _initialized;
    BOOL  _isAnimating;
    BOOL  _isAnimatingZoom;
    NSMutableArray * _lastEnqueuedBlockCollection;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _lastUpdatedBounds;
    IKImageViewLayerQueue * _layerRenderingQueue;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _loadedRect;
    BOOL  _loadsImageSynchronously;
    double  _minNearestNeighborScale;
    BOOL  _needToReloadThumbnailForHigherResolution;
    CALayer * _oldbgThumbnailLayer;
    struct CGImage { } * _originalCGImage;
    IKImageRenderInfo * _renderInfo;
    double  _rotationAngle;
    CIImage * _scaledCIImage;
    BOOL  _scrollingLoadsTiles;
    BOOL  _shouldUseTiles;
    CIFilter * _softProofFilter;
    double  _startingScreenScaleFactor;
    struct CGPoint { 
        double x; 
        double y; 
    }  _startingViewCenter;
    BOOL  _stickyZoomToFit;
    struct CGImage { } * _thumbnailCGImage;
    CIImage * _thumbnailCIImage;
    BOOL  _thumbnailNeedsToUpdateFilters;
    double  _zoomFactor;
    NSTimer * _zoomTimer;
    double  _zoomedHeight;
    double  _zoomedWidth;
}

@property (nonatomic, readwrite) BOOL alwaysHidesScrollers;
@property (atomic, readonly) CALayer *annotationsLayer;
@property (atomic, readonly) NSView *annotationsView;
@property (atomic, readwrite) struct CGImage { }*cachedHigherResThumbnailImage;
@property (atomic, readwrite) unsigned long long imageIndex;
@property (atomic, readwrite) BOOL loadsSynchronously;
@property (atomic, readwrite) struct CGImage { }*originalCGImage;
@property (atomic, readwrite, retain) IKImageRenderInfo *renderInfo;
@property (atomic, readwrite) double rotationAngle;
@property (atomic, readwrite) BOOL scrollingLoadsTiles;
@property (atomic, readwrite) BOOL shouldUseTiles;
@property (atomic, readwrite) BOOL stickyZoomToFit;
@property (atomic, readwrite) struct CGImage { }*thumbnailCGImage;
@property (atomic, readwrite) double zoomFactor;

+ (id)_clampImageAlphaTo01:(id)arg1 colorSpace:(struct CGColorSpace { }*)arg2;
+ (int)_flipTypeForExif:(long long)arg1;
+ (BOOL)isCompatibleWithResponsiveScrolling;
+ (double)rotationDegreeForExif:(long long)arg1;

- (void)_backgroundDidFinishLoading;
- (void)_beginOperation:(id)arg1;
- (id)_cachedCIContext;
- (void)_cancelLoadBlocks;
- (void)_cleanUpZoomTimer;
- (void)_clearBackgroundLayer;
- (void)_clearImageBlocks:(id)arg1 fromCollection:(id)arg2;
- (void)_clearUnseenImageBlocksTimerFired:(id)arg1;
- (id)_commonOptionsForImageFromSource:(id)arg1;
- (struct CGImageSource { }*)_createImageSourceFromLoadedRepresentation;
- (void)_doFastPathUpdate;
- (void)_endOperation:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_extendRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 byRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_flipImageDirection:(int)arg1;
- (void)_flipImageDirectionWithAnimation:(int)arg1;
- (BOOL)_flipShouldHappenOnOppositeOfRequestedAxis;
- (BOOL)_hasBeenTornDown;
- (BOOL)_hasLoadedRepresentation;
- (double)_imageScaleWithImageProperties:(id)arg1 andDisplayProperties:(id)arg2 usingLowResScaleFactorIfAvailable:(BOOL)arg3;
- (struct CGSize { double x1; double x2; })_imageSizeWithExif:(unsigned long long)arg1;
- (id)_imageToDrawForLayer:(id)arg1;
- (BOOL)_imageTypeSupportsSubsampling:(struct __CFString { }*)arg1;
- (void)_installAnimationLayer;
- (BOOL)_isUsingTiles;
- (void)_loadBackgroundThumbnail;
- (struct CGImage { }*)_newCGImageFromImgSrc:(struct CGImageSource { }*)arg1 index:(long long)arg2 displayProperties:(id)arg3 imageScale:(double)arg4 forceScale:(BOOL)arg5 createBitmapImmediately:(BOOL)arg6;
- (struct CGImage { }*)_newPossiblySubsampledImageFromSource:(struct CGImageSource { }*)arg1 index:(long long)arg2 imageScale:(double)arg3 displayProperties:(id)arg4;
- (struct CGImage { }*)_newScaledCGImageFromCGImage:(struct CGImage { }*)arg1 atScale:(double)arg2 rotation:(double)arg3 flipped:(int)arg4;
- (struct CGImage { }*)_newScaledImageFromSource:(struct CGImageSource { }*)arg1 index:(long long)arg2 imageScale:(double)arg3 displayProperties:(id)arg4;
- (id)_newThumbnailMaskWithBlockWidth:(double)arg1 blockHeight:(double)arg2;
- (struct CGPoint { double x1; double x2; })_positionAfterZoomAnimationWithScale:(double)arg1 andCenter:(struct CGPoint { double x1; double x2; })arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_rectToLoadForZoomFactor:(double)arg1 withViewCenterPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)_redrawExistingBlocks;
- (BOOL)_replacingOldThumbnail;
- (void)_resetLayersAndReloadLayersWithImageProperties:(id)arg1 displayProperties:(id)arg2;
- (void)_resetScaledCIImage;
- (void)_rotateContent:(double)arg1 aroundPoint:(struct CGPoint { double x1; double x2; })arg2;
- (struct CGPoint { double x1; double x2; })_rotatedPoint:(struct CGPoint { double x1; double x2; })arg1 byDegrees:(double)arg2;
- (double)_scaleFactorForResettingScaledCIImage;
- (void)_scheduleDeferredCleanupOfUnseenBlocks;
- (struct CGPoint { double x1; double x2; })_scrollPointAfterChangingSizeTo:(struct CGSize { double x1; double x2; })arg1;
- (BOOL)_setCIImage:(id)arg1 imageProperties:(id)arg2 displayProperties:(id)arg3;
- (void)_setEnclosingScrollViewScrollersCanShow:(BOOL)arg1;
- (void)_setEnclosingScrollViewScrollersCanShowIfAllowed:(BOOL)arg1;
- (BOOL)_setImageFromImageSource:(struct CGImageSource { }*)arg1 imageAtIndex:(long long)arg2 withDisplayProperties:(id)arg3;
- (void)_setUnderlyingCIImage:(id)arg1;
- (void)_setZoomFactor:(double)arg1;
- (void)_setZoomFactor:(double)arg1 loadInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_shiftContentViewToViewCenter;
- (struct CGSize { double x1; double x2; })_sizeOfRotatedRectOriginal:(struct CGSize { double x1; double x2; })arg1 byDegrees:(double)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_sourceRectToDrawForLayer:(id)arg1 andImage:(id)arg2;
- (double)_underlyingCIImageScale;
- (void)_uninstallAnimationLayer;
- (void)_updateAnnotationsView;
- (void)_updateUnderlyingCIImageToFullSizeIfNecessaryForZoomFactor:(double)arg1;
- (void)_updateUnderlyingCIImageWithScale:(double)arg1;
- (void)_zoomToFit;
- (double)_zoomToFitScaleFactorForImageWithSize:(struct CGSize { double x1; double x2; })arg1;
- (double)_zoomToFitScaleFactorIgnoringWindowSizeForImageWithSize:(struct CGSize { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_zoomedImageRectForViewRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)alwaysHidesScrollers;
- (id)annotationsLayer;
- (id)annotationsView;
- (void)applyExif:(id)arg1;
- (id)borrowContent;
- (struct CGImage { }*)cachedHigherResThumbnailImage;
- (void)clearBlocksFromBlockCollection:(id)arg1 didCancelDisplay:(BOOL*)arg2;
- (void)clearFlattenedCIImage;
- (void)clearUnseenImageBlocks;
- (void)commonInit;
- (struct CGPoint { double x1; double x2; })convertPointFromImage:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGPoint { double x1; double x2; })convertPointToImage:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRectFromImage:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRectToImage:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRectToUpperLeftOrigin:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inBoundingRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)dealloc;
- (double)defaultTransformAnimationDuration;
- (void)finishMovingViewToScrollView;
- (void)finishedDrawingLayer:(id)arg1;
- (id)flattenedUnfilteredCIImage;
- (void)flipImageHorizontal;
- (void)flipImageVertical;
- (unsigned long long)imageIndex;
- (struct CGSize { double x1; double x2; })imageSize;
- (struct CGSize { double x1; double x2; })imageSizeWithoutRotations;
- (void)imageViewResized:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 andImageView:(id)arg2;
- (void)insertOverlayView:(id)arg1;
- (BOOL)isAnimatingTransform;
- (void)loadBlocksInScaledSourceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)loadBlocksInScaledSourceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 usingBlockCollection:(id)arg2;
- (void)loadVisibleRect;
- (void)loadingCompleteForRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withBlockCollection:(id)arg2 andThumbnailMask:(id)arg3;
- (BOOL)loadsSynchronously;
- (id)newFlattenedImageForImage:(id)arg1;
- (struct CGImage { }*)newVisibleImageSnapshot;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (struct CGImage { }*)originalCGImage;
- (void)pausedInZoomGesture:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectInThisViewForBlock:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectVisibleInClipView;
- (void)removeFromSuperview;
- (id)renderInfo;
- (void)returnBorrowedContent;
- (double)rotationAngle;
- (void)scrollDidEndMagnify:(id)arg1;
- (void)scrollWillStartMagnify:(id)arg1;
- (BOOL)scrollingLoadsTiles;
- (void)setAlwaysHidesScrollers:(BOOL)arg1;
- (void)setAnchorPointWithoutShift:(struct CGPoint { double x1; double x2; })arg1 forLayer:(id)arg2;
- (void)setAnimates:(BOOL)arg1;
- (BOOL)setCIImage:(id)arg1 imageProperties:(id)arg2 displayProperties:(id)arg3;
- (void)setCachedHigherResThumbnailImage:(struct CGImage { }*)arg1;
- (void)setFlattenedDrawingCIImage:(id)arg1;
- (BOOL)setImage:(struct CGImage { }*)arg1 imageProperties:(id)arg2 displayProperties:(id)arg3;
- (BOOL)setImageData:(id)arg1 imageAtIndex:(long long)arg2 withDisplayProperties:(id)arg3;
- (void)setImageIndex:(unsigned long long)arg1;
- (BOOL)setImageURL:(id)arg1 imageAtIndex:(long long)arg2 withDisplayProperties:(id)arg3;
- (void)setLoadsSynchronously:(BOOL)arg1;
- (void)setMinNearestNeighborScale:(double)arg1;
- (void)setOriginalCGImage:(struct CGImage { }*)arg1;
- (void)setRenderInfo:(id)arg1;
- (void)setRotationAngle:(double)arg1;
- (void)setRotationAngle:(double)arg1 centeredAroundImagePoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)setRotationAngleWithAnimation:(double)arg1 aroundImagePoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3;
- (void)setScrollingLoadsTiles:(BOOL)arg1;
- (void)setShouldUseTiles:(BOOL)arg1;
- (void)setSoftProofFilter:(id)arg1;
- (void)setStickyZoomToFit:(BOOL)arg1;
- (void)setThumbnailCGImage:(struct CGImage { }*)arg1;
- (void)setZoomFactor:(double)arg1;
- (void)setZoomFactor:(double)arg1 centeredAtImagePoint:(struct CGPoint { double x1; double x2; })arg2 animate:(BOOL)arg3 stickyFit:(BOOL)arg4;
- (void)setupFlattenedCIImage;
- (BOOL)shouldUseTiles;
- (id)softProofFilter;
- (BOOL)stickyZoomToFit;
- (void)teardown;
- (struct CGImage { }*)thumbnailCGImage;
- (void)updateContentForLayer:(id)arg1;
- (void)viewDidEndLiveResize;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (void)viewDidScroll:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })viewRectToScaledImageRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withZoomFactor:(double)arg2;
- (void)viewWillMoveToWindow:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })visibleScaledImageRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })visibleScaledImageRectForZoomFactor:(double)arg1;
- (void)windowDidChangeBackingProperties:(id)arg1;
- (double)zoomFactor;
- (double)zoomFactorWithScreenScale;
- (void)zoomImageToScale:(double)arg1 aroundImagePoint:(struct CGPoint { double x1; double x2; })arg2;
- (double)zoomToFitScaleFactor;
- (void)zoomToFullSize;

@end
