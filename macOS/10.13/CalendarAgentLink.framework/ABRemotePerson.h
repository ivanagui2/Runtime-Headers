/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CalendarAgentLink.framework/Versions/A/CalendarAgentLink
 */

@interface ABRemotePerson : ABRemoteRecord {
    NSArray * _URLs;
    NSDateComponents * _alternateBirthdayComponents;
    NSDateComponents * _birthdayComponents;
    NSArray * _calendarURIs;
    NSString * _companyName;
    NSString * _contactIndex;
    NSString * _department;
    NSArray * _emails;
    NSString * _firstName;
    NSString * _jobTitle;
    NSString * _lastName;
    NSString * _linkId;
    NSString * _maidenName;
    NSArray * _messagingAddresses;
    NSString * _middleName;
    NSString * _nickname;
    NSString * _notes;
    NSArray * _otherDateComponents;
    NSArray * _phoneNumbers;
    NSString * _phonemeData;
    NSString * _phoneticCompanyName;
    NSString * _phoneticFirstName;
    NSString * _phoneticLastName;
    NSString * _phoneticMiddleName;
    NSArray * _postalAddresses;
    NSArray * _relatedNames;
    NSArray * _socialProfiles;
    NSString * _suffix;
    NSString * _title;
}

@property (nonatomic, readwrite, retain) NSArray *AIMAddresses;
@property (nonatomic, readwrite, retain) NSArray *ICQAddresses;
@property (nonatomic, readwrite, retain) NSArray *MSNAddresses;
@property (atomic, readwrite, retain) NSArray *URLs;
@property (atomic, readwrite, retain) NSDateComponents *alternateBirthdayComponents;
@property (nonatomic, readwrite, retain) NSDate *birthday;
@property (nonatomic, readwrite, retain) NSDateComponents *birthdayComponents;
@property (atomic, readonly) double birthdayYearless;
@property (atomic, readwrite, retain) NSArray *calendarURIs;
@property (atomic, readwrite, copy) NSString *companyName;
@property (atomic, readwrite, copy) NSString *contactIndex;
@property (atomic, readonly) NSArray *dates;
@property (atomic, readwrite, copy) NSString *department;
@property (atomic, readonly) long long displayFlags;
@property (atomic, readonly) NSArray *emailAddresses;
@property (atomic, readwrite, retain) NSArray *emails;
@property (atomic, readwrite, copy) NSString *firstName;
@property (nonatomic, readwrite, copy) NSString *homePage;
@property (nonatomic, readwrite, retain) NSArray *jabberAddresses;
@property (atomic, readwrite, copy) NSString *jobTitle;
@property (atomic, readwrite, copy) NSString *lastName;
@property (atomic, readwrite, copy) NSString *linkId;
@property (atomic, readonly) NSDateComponents *lunarBirthdayComponents;
@property (atomic, readwrite, copy) NSString *maidenName;
@property (nonatomic, readwrite, retain) NSArray *messagingAddresses;
@property (atomic, readwrite, copy) NSString *middleName;
@property (atomic, readwrite, copy) NSString *nickname;
@property (atomic, readwrite, copy) NSString *notes;
@property (nonatomic, readwrite, retain) NSArray *otherDateComponents;
@property (nonatomic, readwrite, retain) NSArray *otherDates;
@property (atomic, readwrite, retain) NSArray *phoneNumbers;
@property (atomic, readwrite, copy) NSString *phonemeData;
@property (atomic, readwrite, copy) NSString *phoneticCompanyName;
@property (atomic, readwrite, copy) NSString *phoneticFirstName;
@property (atomic, readwrite, copy) NSString *phoneticLastName;
@property (atomic, readwrite, copy) NSString *phoneticMiddleName;
@property (atomic, readwrite, retain) NSArray *postalAddresses;
@property (atomic, readwrite, retain) NSArray *relatedNames;
@property (atomic, readwrite, retain) NSArray *socialProfiles;
@property (atomic, readwrite, copy) NSString *suffix;
@property (atomic, readwrite, copy) NSString *title;
@property (nonatomic, readwrite, retain) NSArray *yahooAddresses;

// Image: /System/Library/PrivateFrameworks/CalendarAgentLink.framework/Versions/A/CalendarAgentLink

+ (BOOL)supportsSecureCoding;

- (void).cxx_destruct;
- (id)AIMAddresses;
- (id)ICQAddresses;
- (id)MSNAddresses;
- (id)URLs;
- (void)_addYearComponentIfNeeded:(id)arg1;
- (id)_instantMessageAddressesForServiceType:(id)arg1;
- (void)_setInstantMessageAddresses:(id)arg1 forServiceType:(id)arg2;
- (void)_validateDateComponents:(id)arg1;
- (id)alternateBirthdayComponents;
- (id)birthday;
- (id)birthdayComponents;
- (id)calendarURIs;
- (id)companyName;
- (id)contactIndex;
- (id)department;
- (id)emails;
- (void)encodeWithCoder:(id)arg1;
- (id)firstName;
- (id)fullNameIncludingPrefix:(BOOL)arg1 suffix:(BOOL)arg2 nickname:(BOOL)arg3 company:(BOOL)arg4;
- (id)homePage;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)jabberAddresses;
- (id)jobTitle;
- (id)lastName;
- (id)linkId;
- (id)maidenName;
- (id)messagingAddresses;
- (id)middleName;
- (id)nickname;
- (id)notes;
- (id)otherDateComponents;
- (id)otherDates;
- (id)phoneNumbers;
- (id)phonemeData;
- (id)phoneticCompanyName;
- (id)phoneticFirstName;
- (id)phoneticLastName;
- (id)phoneticMiddleName;
- (id)postalAddresses;
- (id)relatedNames;
- (void)setAIMAddresses:(id)arg1;
- (void)setAlternateBirthdayComponents:(id)arg1;
- (void)setBirthday:(id)arg1;
- (void)setBirthdayComponents:(id)arg1;
- (void)setCalendarURIs:(id)arg1;
- (void)setCompanyName:(id)arg1;
- (void)setContactIndex:(id)arg1;
- (void)setDepartment:(id)arg1;
- (void)setEmails:(id)arg1;
- (void)setFirstName:(id)arg1;
- (void)setHomePage:(id)arg1;
- (void)setICQAddresses:(id)arg1;
- (void)setJabberAddresses:(id)arg1;
- (void)setJobTitle:(id)arg1;
- (void)setLastName:(id)arg1;
- (void)setLinkId:(id)arg1;
- (void)setMSNAddresses:(id)arg1;
- (void)setMaidenName:(id)arg1;
- (void)setMessagingAddresses:(id)arg1;
- (void)setMiddleName:(id)arg1;
- (void)setNickname:(id)arg1;
- (void)setNotes:(id)arg1;
- (void)setOtherDateComponents:(id)arg1;
- (void)setOtherDates:(id)arg1;
- (void)setPhoneNumbers:(id)arg1;
- (void)setPhonemeData:(id)arg1;
- (void)setPhoneticCompanyName:(id)arg1;
- (void)setPhoneticFirstName:(id)arg1;
- (void)setPhoneticLastName:(id)arg1;
- (void)setPhoneticMiddleName:(id)arg1;
- (void)setPostalAddresses:(id)arg1;
- (void)setRelatedNames:(id)arg1;
- (void)setSocialProfiles:(id)arg1;
- (void)setSuffix:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setURLs:(id)arg1;
- (void)setYahooAddresses:(id)arg1;
- (id)socialProfiles;
- (id)suffix;
- (id)title;
- (id)yahooAddresses;

// Image: /System/Library/Frameworks/AddressBook.framework/Versions/A/AddressBook

// ABRemotePerson (AddressBook)

+ (id)abEntityName;
+ (Class)publicRecordClass;
+ (id)remoteRecordWithUniqueID:(id)arg1 inAddressBook:(id)arg2;

- (void)_appendNote:(id)arg1;
- (id)_generateContactIndex;
- (void)_importAttributeWithName:(id)arg1 fromContact:(id)arg2;
- (void)_importAttributesFromContact:(id)arg1;
- (void)_importContact:(id)arg1 replaceValues:(BOOL)arg2;
- (void)_importMultiValueRelationshipWithName:(id)arg1 fromOtherContact:(id)arg2 replaceValues:(BOOL)arg3;
- (void)_importRelationshipsFromContact:(id)arg1 replaceValues:(BOOL)arg2;
- (void)_setPropertiesFromRemotePerson:(id)arg1;
- (id)contactIndex;
- (id)displayName;
- (id)emailAddresses;
- (void)faultIfNeccessaryWithAddressBook:(id)arg1;
- (id)imagePathOfKind:(id)arg1;
- (BOOL)isMeWithAddressBook:(id)arg1;
- (BOOL)isNewPersonWithAddressBook:(id)arg1;
- (void)mergeContact:(id)arg1;
- (id)multiValueForProperty:(id)arg1;
- (void)nts_SetSingleValue:(id)arg1 forProperty:(id)arg2;
- (id)nts_SingleValueForProperty:(id)arg1;
- (void)setMultiValue:(id)arg1 forProperty:(id)arg2;

// ABRemotePerson (SearchHelpers)

- (double)birthdayYearless;
- (id)dates;
- (long long)displayFlags;
- (id)lunarBirthdayComponents;
- (id)valueForKeyPath:(id)arg1;

@end
