/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
 */

@interface NSURLSessionTaskTransactionMetrics : NSObject

@property (atomic, readwrite) BOOL _cellular;
@property (atomic, readwrite, copy) NSUUID *_connectionIdentifier;
@property (atomic, readwrite) BOOL _connectionRace;
@property (atomic, readwrite, copy) NSString *_localAddressAndPort;
@property (atomic, readwrite) BOOL _localCache;
@property (atomic, readwrite) unsigned int _redirected;
@property (atomic, readwrite, copy) NSString *_remoteAddressAndPort;
@property (atomic, readwrite) long long _requestHeaderBytesSent;
@property (atomic, readwrite) long long _responseBodyBytesDecoded;
@property (atomic, readwrite) long long _responseBodyBytesReceived;
@property (atomic, readwrite) long long _responseHeaderBytesReceived;
@property (atomic, readwrite) BOOL _secureConnection;
@property (atomic, readwrite) BOOL _serverPush;
@property (atomic, readwrite, copy) NSDate *connectEndDate;
@property (atomic, readwrite, copy) NSDate *connectStartDate;
@property (atomic, readwrite, copy) NSDate *domainLookupEndDate;
@property (atomic, readwrite, copy) NSDate *domainLookupStartDate;
@property (atomic, readwrite, copy) NSDate *fetchStartDate;
@property (atomic, readwrite, copy) NSString *networkProtocolName;
@property (getter=isProxyConnection, atomic, readwrite) BOOL proxyConnection;
@property (atomic, readwrite, copy) NSURLRequest *request;
@property (atomic, readwrite, copy) NSDate *requestEndDate;
@property (atomic, readwrite, copy) NSDate *requestStartDate;
@property (atomic, readwrite) long long resourceFetchType;
@property (atomic, readwrite, copy) NSURLResponse *response;
@property (atomic, readwrite, copy) NSDate *responseEndDate;
@property (atomic, readwrite, copy) NSDate *responseStartDate;
@property (getter=isReusedConnection, atomic, readwrite) BOOL reusedConnection;
@property (atomic, readwrite, copy) NSDate *secureConnectionEndDate;
@property (atomic, readwrite, copy) NSDate *secureConnectionStartDate;

- (id)_initWithPerformanceTiming:(struct __PerformanceTiming { }*)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithNoInit;

@end
