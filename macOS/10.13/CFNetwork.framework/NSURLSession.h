/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
 */

@interface NSURLSession : NSObject

@property (atomic, readwrite, retain) NSMutableDictionary *_altSvc;
@property (atomic, readwrite, copy) NSDictionary *_atsState;
@property (atomic, readwrite, copy) id _connBlock;
@property (atomic, readwrite, retain) NSMutableSet *_h2BlacklistedHosts;
@property (atomic, readwrite) BOOL _isSharedSession;
@property (atomic, readwrite, copy) NSURLSessionConfiguration *_local_immutable_configuration;
@property (atomic, readwrite, copy) NSString *_uuid;
@property (atomic, readonly, copy) NSURLSessionConfiguration *configuration;
@property (atomic, readwrite, retain) <NSURLSessionDelegate> *delegate;
@property (atomic, readwrite, retain) NSOperationQueue *delegateQueue;
@property (atomic, readwrite) BOOL invalid;
@property (atomic, readwrite, copy) NSString *sessionDescription;
@property (atomic, readonly, retain) NSObject<OS_dispatch_queue> *workQueue;

// Image: /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork

+ (void)_getActiveSessionIdentifiersWithCompletionHandler:(id)arg1;
+ (void)_obliterateAllBackgroundSessionsWithCompletionHandler:(id)arg1;
+ (void)_releaseProcessAssertionForSessionIdentifier:(id)arg1;
+ (void)_sendPendingCallbacksForSessionIdentifier:(id)arg1;
+ (id)_sharedSessionForConnection;
+ (id)sessionWithConfiguration:(id)arg1;
+ (id)sessionWithConfiguration:(id)arg1 delegate:(id)arg2 delegateQueue:(id)arg3;
+ (id)sharedSession;

- (struct __CFDictionary { }*)_copyATSState;
- (id)_copyConfiguration;
- (id)_downloadTaskWithRequest:(id)arg1 downloadFilePath:(id)arg2;
- (void)addDelegateBlock:(id)arg1;
- (BOOL)can_delegate_betterRouteDiscoveredForStreamTask;
- (BOOL)can_delegate_companionAvailabilityChanged;
- (BOOL)can_delegate_connectionEstablishedForStreamTask;
- (BOOL)can_delegate_dataTask_didBecomeDownloadTask;
- (BOOL)can_delegate_dataTask_didBecomeStreamTask;
- (BOOL)can_delegate_dataTask_didReceiveData;
- (BOOL)can_delegate_dataTask_didReceiveResponse;
- (BOOL)can_delegate_dataTask_willCacheResponse;
- (BOOL)can_delegate_didFinishEventsForBackgroundURLSession;
- (BOOL)can_delegate_didReceiveChallenge;
- (BOOL)can_delegate_downloadTaskNeedsDownloadDirectory;
- (BOOL)can_delegate_downloadTask_didFinishDownloadingToURL;
- (BOOL)can_delegate_downloadTask_didReceiveResponse;
- (BOOL)can_delegate_downloadTask_didResumeAtOffset;
- (BOOL)can_delegate_downloadTask_didWriteData;
- (BOOL)can_delegate_needConnectedSocket;
- (BOOL)can_delegate_openFileAtPath;
- (BOOL)can_delegate_readClosedForStreamTask;
- (BOOL)can_delegate_streamTask_didBecomeInputStream_outputStream;
- (BOOL)can_delegate_taskIsWaitingForConnectivity;
- (BOOL)can_delegate_task__schemeUpgraded;
- (BOOL)can_delegate_task_actually_didCompleteWithError;
- (BOOL)can_delegate_task_conditionalRequirementsChanged;
- (BOOL)can_delegate_task_didCompleteWithError;
- (BOOL)can_delegate_task_didFinishCollectingMetrics;
- (BOOL)can_delegate_task_didReceiveChallenge;
- (BOOL)can_delegate_task_didSendBodyData;
- (BOOL)can_delegate_task_isWaitingForConnection;
- (BOOL)can_delegate_task_isWaitingForConnectionWithError;
- (BOOL)can_delegate_task_isWaitingForConnectionWithReason;
- (BOOL)can_delegate_task_needNewBodyStream;
- (BOOL)can_delegate_task_willBeginDelayedRequest;
- (BOOL)can_delegate_task_willPerformHTTPRedirection;
- (BOOL)can_delegate_task_willSendRequestForEstablishedConnection;
- (BOOL)can_delegate_willRetryBackgroundDataTask;
- (BOOL)can_delegate_writeClosedForStreamTask;
- (id)configuration;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dataTaskWithHTTPGetRequest:(id)arg1;
- (id)dataTaskWithHTTPGetRequest:(id)arg1 completionHandler:(id)arg2;
- (id)dataTaskWithRequest:(id)arg1;
- (id)dataTaskWithRequest:(id)arg1 completionHandler:(id)arg2;
- (id)dataTaskWithURL:(id)arg1;
- (id)dataTaskWithURL:(id)arg1 completionHandler:(id)arg2;
- (void)delegate_betterRouteDiscoveredForStreamTask:(id)arg1 completionHandler:(id)arg2;
- (void)delegate_companionAvailabilityChanged:(BOOL)arg1;
- (void)delegate_connectionEstablishedForStreamTask:(id)arg1;
- (void)delegate_dataTask:(id)arg1 didBecomeDownloadTask:(id)arg2 completionHandler:(id)arg3;
- (void)delegate_dataTask:(id)arg1 didBecomeStreamTask:(id)arg2 completionHandler:(id)arg3;
- (void)delegate_dataTask:(id)arg1 didReceiveData:(id)arg2 completionHandler:(id)arg3;
- (void)delegate_dataTask:(id)arg1 didReceiveResponse:(id)arg2 completionHandler:(id)arg3;
- (void)delegate_dataTask:(id)arg1 willCacheResponse:(id)arg2 completionHandler:(id)arg3;
- (void)delegate_didFinishEventsForBackgroundURLSession;
- (void)delegate_didReceiveChallenge:(id)arg1 completionHandler:(id)arg2;
- (void)delegate_downloadTask:(id)arg1 didFinishDownloadingToURL:(id)arg2 completionHandler:(id)arg3;
- (void)delegate_downloadTask:(id)arg1 didReceiveResponse:(id)arg2;
- (void)delegate_downloadTask:(id)arg1 didResumeAtOffset:(long long)arg2 expectedTotalBytes:(long long)arg3;
- (void)delegate_downloadTask:(id)arg1 didWriteData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4 completionHandler:(id)arg5;
- (id)delegate_downloadTaskNeedsDownloadDirectory:(id)arg1;
- (void)delegate_needConnectedSocketToHost:(id)arg1 port:(unsigned long long)arg2 completionHandler:(id)arg3;
- (int)delegate_openFileAtPath:(id)arg1 mode:(int)arg2;
- (void)delegate_readClosedForStreamTask:(id)arg1 completionHandler:(id)arg2;
- (void)delegate_streamTask:(id)arg1 didBecomeInputStream:(id)arg2 outputStream:(id)arg3 completionHandler:(id)arg4;
- (void)delegate_task:(id)arg1 _schemeUpgraded:(id)arg2 completionHandler:(id)arg3;
- (void)delegate_task:(id)arg1 _willSendRequestForEstablishedConnection:(id)arg2 completionHandler:(id)arg3;
- (void)delegate_task:(id)arg1 conditionalRequirementsChanged:(BOOL)arg2;
- (void)delegate_task:(id)arg1 didCompleteWithError:(id)arg2;
- (void)delegate_task:(id)arg1 didFinishCollectingMetrics:(id)arg2 completion:(id)arg3;
- (void)delegate_task:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(id)arg3;
- (void)delegate_task:(id)arg1 didSendBodyData:(long long)arg2 totalBytesSent:(long long)arg3 totalBytesExpectedToSend:(long long)arg4;
- (void)delegate_task:(id)arg1 isWaitingForConnectionWithError:(id)arg2;
- (void)delegate_task:(id)arg1 isWaitingForConnectionWithReason:(long long)arg2;
- (void)delegate_task:(id)arg1 needNewBodyStream:(id)arg2;
- (void)delegate_task:(id)arg1 willBeginDelayedRequest:(id)arg2 completionHandler:(id)arg3;
- (void)delegate_task:(id)arg1 willPerformHTTPRedirection:(id)arg2 newRequest:(id)arg3 completionHandler:(id)arg4;
- (void)delegate_taskIsWaitingForConnectivity:(id)arg1;
- (void)delegate_task_isWaitingForConnection:(id)arg1;
- (void)delegate_willRetryBackgroundDataTask:(id)arg1 withError:(id)arg2;
- (void)delegate_writeClosedForStreamTask:(id)arg1 completionHandler:(id)arg2;
- (id)downloadTaskWithRequest:(id)arg1;
- (id)downloadTaskWithRequest:(id)arg1 completionHandler:(id)arg2;
- (id)downloadTaskWithResumeData:(id)arg1;
- (id)downloadTaskWithResumeData:(id)arg1 completionHandler:(id)arg2;
- (id)downloadTaskWithURL:(id)arg1;
- (id)downloadTaskWithURL:(id)arg1 completionHandler:(id)arg2;
- (void)finalizeDelegateWithError:(id)arg1;
- (void)finishTasksAndInvalidate;
- (void)flushWithCompletionHandler:(id)arg1;
- (void)getAllTasksWithCompletionHandler:(id)arg1;
- (void)getTasksWithCompletionHandler:(id)arg1;
- (id)initWithConfiguration:(id)arg1 delegate:(id)arg2 delegateQueue:(id)arg3;
- (void)invalidateAndCancel;
- (BOOL)isBackgroundSession;
- (void)remote_externalAuthenticator_task:(id)arg1 getAuthHeadersForResponse:(id)arg2 completionHandler:(id)arg3;
- (void)resetWithCompletionHandler:(id)arg1;
- (id)streamTaskWithHostName:(id)arg1 port:(long long)arg2;
- (id)streamTaskWithNetService:(id)arg1;
- (id)uploadTaskWithRequest:(id)arg1 fromData:(id)arg2;
- (id)uploadTaskWithRequest:(id)arg1 fromData:(id)arg2 completionHandler:(id)arg3;
- (id)uploadTaskWithRequest:(id)arg1 fromFile:(id)arg2;
- (id)uploadTaskWithRequest:(id)arg1 fromFile:(id)arg2 completionHandler:(id)arg3;
- (id)uploadTaskWithStreamedRequest:(id)arg1;

// Image: /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices

// NSURLSession (GEOExtras)

+ (void)_geo_sendAsynchronousRequest:(id)arg1 connectionProperties:(id)arg2 completionHandler:(id)arg3;
+ (void)_geo_sendAsynchronousRequest:(id)arg1 queue:(id)arg2 connectionProperties:(id)arg3 completionHandler:(id)arg4;
+ (id)_geo_sendSynchronousRequest:(id)arg1 connectionProperties:(id)arg2 returningResponse:(id*)arg3 error:(id*)arg4;

@end
