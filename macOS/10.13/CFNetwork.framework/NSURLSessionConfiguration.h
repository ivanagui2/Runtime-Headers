/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
 */

@interface NSURLSessionConfiguration : NSObject <NSCopying, NSSecureCoding> {
    BOOL  __allowsWCA;
    long long  _multipathServiceType;
}

@property (atomic, readwrite, copy) NSDictionary *HTTPAdditionalHeaders;
@property (atomic, readwrite) unsigned long long HTTPCookieAcceptPolicy;
@property (atomic, readwrite, retain) NSHTTPCookieStorage *HTTPCookieStorage;
@property (atomic, readwrite) long long HTTPMaximumConnectionsPerHost;
@property (atomic, readwrite) BOOL HTTPShouldSetCookies;
@property (atomic, readwrite) BOOL HTTPShouldUsePipelining;
@property (atomic, readwrite) int TLSMaximumSupportedProtocol;
@property (atomic, readwrite) int TLSMinimumSupportedProtocol;
@property (atomic, readwrite, retain) NSURLCache *URLCache;
@property (atomic, readwrite, retain) NSURLCredentialStorage *URLCredentialStorage;
@property (atomic, readwrite, copy) NSString *_CTDataConnectionServiceType;
@property (atomic, readwrite) unsigned long long _TCPAdaptiveReadTimeout;
@property (atomic, readwrite) unsigned long long _TCPAdaptiveWriteTimeout;
@property (atomic, readwrite) BOOL _allowTCPIOConnectionStreamTask;
@property (atomic, readwrite) BOOL _allowsExpensiveAccess;
@property (atomic, readwrite) BOOL _allowsIndefiniteConnections;
@property (atomic, readwrite) BOOL _allowsMultipathTCP;
@property (atomic, readwrite) BOOL _allowsPowerNapScheduling;
@property (atomic, readwrite) BOOL _allowsResponseMonitoringDuringBodyTranmission;
@property (atomic, readwrite) BOOL _allowsRetryForBackgroundDataTasks;
@property (atomic, readwrite) BOOL _allowsTCPFastOpen;
@property (atomic, readwrite) BOOL _allowsTLSSessionResumption;
@property (atomic, readwrite) BOOL _allowsTLSSessionTickets;
@property (atomic, readwrite) BOOL _allowsWCA;
@property (atomic, readwrite, copy) <NSURLSessionAppleIDContext> *_appleIDContext;
@property (atomic, readwrite, copy) NSData *_atsContext;
@property (atomic, readwrite, copy) NSSet *_authenticatorStatusCodes;
@property (atomic, readwrite) BOOL _clientIsNotExplicitlyDiscretionary;
@property (atomic, readwrite) BOOL _collectsTimingData;
@property (atomic, readwrite, copy) NSString *_companionAppBundleIdentifier;
@property (atomic, readwrite) double _connectionCacheCellPurgeTimeout;
@property (atomic, readwrite) double _connectionCachePurgeTimeout;
@property (atomic, readwrite, copy) NSString *_connectionPoolName;
@property (atomic, readwrite, copy) NSArray *_contentDispHeadEncFallback;
@property (atomic, readwrite) unsigned long long _customReadBufferSize;
@property (atomic, readwrite) double _customReadBufferTimeout;
@property (atomic, readwrite, copy) NSURL *_directoryForDownloadedFiles;
@property (atomic, readwrite) BOOL _disablesOutOfProcessDirectWiFiUsage;
@property (atomic, readwrite) BOOL _disablesUseOfProxySession;
@property (atomic, readwrite) BOOL _disallowsSPDY;
@property (atomic, readwrite) BOOL _duetPreauthorized;
@property (atomic, readwrite) unsigned long long _forcedNetworkServiceType;
@property (atomic, readwrite) BOOL _forcesNewConnections;
@property (atomic, readwrite) BOOL _ignoreDidReceiveResponseDisposition;
@property (atomic, readwrite) BOOL _infersDiscretionaryFromOriginatingClient;
@property (atomic, readwrite, copy) NSString *_ledBellyServiceIdentifier;
@property (atomic, readwrite) double _longLivedConnectionCacheCellPurgeTimeout;
@property (atomic, readwrite) double _longLivedConnectionCachePurgeTimeout;
@property (atomic, readwrite) BOOL _onBehalfOfPairedDevice;
@property (atomic, readwrite, copy) NSDictionary *_overriddenDelegateOptions;
@property (atomic, readwrite) BOOL _overridesBackgroundSessionAutoRedirect;
@property (atomic, readwrite) BOOL _performsEVCertCheck;
@property (atomic, readwrite, retain) NSHTTPCookieStorage *_phskip_cookieStorage;
@property (atomic, readwrite) BOOL _phskip_cookieStorageSet;
@property (atomic, readwrite, retain) NSURLCredentialStorage *_phskip_credStorage;
@property (atomic, readwrite) BOOL _phskip_credStorageSet;
@property (atomic, readwrite, retain) struct _CFHSTSPolicy { }*_phskip_hstsStorage;
@property (atomic, readwrite) BOOL _phskip_hstsStorageSet;
@property (atomic, readwrite, retain) NSURLCache *_phskip_urlCache;
@property (atomic, readwrite) BOOL _phskip_urlCacheSet;
@property (atomic, readwrite) BOOL _prefersInfraWiFi;
@property (atomic, readwrite) BOOL _preventsDirectWiFiAccess;
@property (atomic, readwrite) BOOL _preventsIdleSleep;
@property (atomic, readwrite) BOOL _preventsIdleSleepOnceConnected;
@property (atomic, readwrite) BOOL _preventsSystemHTTPProxyAuthentication;
@property (getter=_isProxySession, atomic, readwrite) BOOL _proxySession;
@property (atomic, readwrite) BOOL _requiresClientToOpenFiles;
@property (atomic, readwrite) BOOL _requiresPowerPluggedIn;
@property (atomic, readwrite) BOOL _requiresSustainedDataDelivery;
@property (atomic, readwrite) BOOL _respectsAllowsCellularAccessForDiscretionaryTasks;
@property (atomic, readwrite) BOOL _sessionSendsLaunchOnDemandEvents;
@property (atomic, readwrite) BOOL _shouldPreserveBackgroundSessionDisposition;
@property (atomic, readwrite) BOOL _shouldSkipPreferredClientCertificateLookup;
@property (atomic, readwrite, copy) NSDictionary *_socketStreamProperties;
@property (atomic, readwrite, copy) NSData *_sourceApplicationAuditTokenData;
@property (atomic, readwrite, copy) NSString *_sourceApplicationBundleIdentifier;
@property (atomic, readwrite, copy) NSString *_sourceApplicationSecondaryIdentifier;
@property (atomic, readwrite) BOOL _supportsAVAssetDownloads;
@property (atomic, readwrite, copy) NSArray *_suppressedHTTPHeaders;
@property (atomic, readwrite, copy) NSString *_tcpConnectionPoolName;
@property (atomic, readwrite) long long _timingDataOptions;
@property (atomic, readwrite, copy) NSString *_tlsTrustPinningPolicyName;
@property (atomic, readwrite) BOOL _usePipeliningHeuristics;
@property (atomic, readwrite, copy) NSString *_watchAppBundleIdentifier;
@property (atomic, readwrite, copy) NSString *_watchExtensionBundleIdentifier;
@property (atomic, readwrite) BOOL allowsCellularAccess;
@property (getter=isBackgroundSession, atomic, readwrite) BOOL backgroundSession;
@property (atomic, readwrite, copy) NSDictionary *connectionProxyDictionary;
@property (getter=isDiscretionary, atomic, readwrite) BOOL discretionary;
@property (atomic, readwrite) NSString *disposition;
@property (atomic, readwrite, copy) NSString *identifier;
@property (atomic, readwrite) long long minimumFastLanePriority;
@property (atomic, readwrite) long long multipathServiceType;
@property (atomic, readwrite) unsigned long long networkServiceType;
@property (atomic, readwrite) long long numFastLanes;
@property (atomic, readwrite) long long numPriorityLevels;
@property (atomic, readwrite) long long pipeliningHighWatermark;
@property (atomic, readwrite) long long pipeliningLowWatermark;
@property (atomic, readwrite, copy) NSArray *protocolClasses;
@property (atomic, readwrite) unsigned long long requestCachePolicy;
@property (atomic, readwrite) BOOL sessionSendsLaunchEvents;
@property (atomic, readwrite, copy) NSString *sharedContainerIdentifier;
@property (atomic, readwrite) BOOL shouldUseExtendedBackgroundIdleMode;
@property (atomic, readwrite) BOOL skip_download_unlink;
@property (atomic, readwrite) double timeoutIntervalForRequest;
@property (atomic, readwrite) double timeoutIntervalForResource;
@property (atomic, readwrite) BOOL waitsForConnectivity;

// Image: /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork

+ (id)_defaultProtocolClasses;
+ (id)backgroundSessionConfiguration:(id)arg1;
+ (id)backgroundSessionConfigurationWithIdentifier:(id)arg1;
+ (id)defaultSessionConfiguration;
+ (id)ephemeralSessionConfiguration;
+ (id)sessionConfigurationForSharedSession;
+ (BOOL)supportsSecureCoding;

- (BOOL)_allowsWCA;
- (void*)_copyAttribute:(struct __CFString { }*)arg1;
- (struct OpaqueCFHTTPCookieStorage { }*)_copyCFCookieStorage;
- (struct _CFHSTSPolicy { }*)copyHSTSPolicy;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)encodeWithCoder:(id)arg1;
- (struct HTTPConnectionCacheLimits { int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; int x10; })getConnectionCacheLimits;
- (id)initWithCoder:(id)arg1;
- (id)initWithDisposition:(id)arg1;
- (long long)multipathServiceType;
- (void)setMultipathServiceType:(long long)arg1;
- (void)set_allowsWCA:(BOOL)arg1;

// Image: /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices

// NSURLSessionConfiguration (ConnectionProperties)

- (void)applyNSURLConnectionProperties:(id)arg1;

// NSURLSessionConfiguration (GEOApplicationAuditToken)

- (BOOL)geo_hasApplicationAttribution:(id)arg1;
- (void)geo_setApplicationAttribution:(id)arg1;

// NSURLSessionConfiguration (GEODataRequest)

- (void)geo_configureWithRequest:(id)arg1;
- (BOOL)geo_isCompatibleWithRequest:(id)arg1;

// Image: /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer

// NSURLSessionConfiguration (ConnectionProperties)

- (void)applyNSURLConnectionProperties:(id)arg1;

@end
