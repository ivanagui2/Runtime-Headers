/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
 */

@interface NSURLSessionTask : NSObject <NSCopying, NSProgressReporting> {
    BOOL  __extractorFinishedDecoding;
    BOOL  __extractorPreparedForExtraction;
    double  __loadingPriority;
    double  __timeoutIntervalForResource;
    float  _priority;
}

@property (atomic, readwrite, copy) NSDictionary *_DuetActivityProperties;
@property (atomic, readwrite, copy) NSData *_TCPConnectionMetadata;
@property (atomic, readwrite) unsigned long long _allowedProtocolTypes;
@property (atomic, readwrite) BOOL _allowsCellular;
@property (nonatomic, readwrite) BOOL _allowsQUIC;
@property (setter=_setAppleIDContext:, atomic, readwrite, copy) <NSURLSessionAppleIDContext> *_appleIDContext;
@property (atomic, readwrite) BOOL _authenticatorConfiguredViaTaskProperty;
@property (nonatomic, readwrite, retain) NSURL *_backgroundPublishingURL;
@property (nonatomic, readwrite, copy) NSDictionary *_backgroundTaskTimingData;
@property (atomic, readwrite, copy) NSString *_boundInterfaceIdentifier;
@property (atomic, readwrite) long long _bytesPerSecondLimit;
@property (atomic, readwrite) BOOL _cacheOnly;
@property (atomic, readwrite) int _cachePolicy;
@property (atomic, readwrite, retain) struct _CFURLCache { }*_cfCache;
@property (atomic, readwrite, retain) struct OpaqueCFHTTPCookieStorage { }*_cfCookies;
@property (atomic, readwrite, retain) struct _CFURLCredentialStorage { }*_cfCreds;
@property (atomic, readwrite, retain) struct _CFHSTSPolicy { }*_cfHSTS;
@property (setter=_setConnectionIsCellular:, atomic, readwrite) BOOL _connectionIsCellular;
@property (atomic, readwrite, copy) NSArray *_contentDispositionFallbackArray;
@property (atomic, readwrite) int _cookieAcceptPolicy;
@property (atomic, readwrite) long long _countOfBytesReceivedEncoded;
@property (atomic, readwrite) long long _countOfPendingBytesReceivedEncoded;
@property (atomic, readwrite, retain) struct _CFURLRequest { }*_currentCFURLRequest;
@property (atomic, readwrite) unsigned int _darkWakePowerAssertion;
@property (nonatomic, readwrite, retain) NSDictionary *_dependencyInfo;
@property (atomic, readwrite) BOOL _disallowCellular;
@property (atomic, readwrite) long long _expectedWorkload;
@property (nonatomic, readwrite, retain) <SZExtractor> *_extractor;
@property (atomic, readwrite) BOOL _extractorFinishedDecoding;
@property (atomic, readwrite) BOOL _extractorPreparedForExtraction;
@property (nonatomic, readwrite, retain) NSURLSessionTaskMetrics *_incompleteTaskMetrics;
@property (nonatomic, readonly) BOOL _isAVAssetTask;
@property (atomic, readwrite, copy) NSURL *_ledBellyFallbackURL;
@property (atomic, readwrite, copy) NSString *_ledBellyServiceIdentifier;
@property (atomic, readwrite, copy) NSDictionary *_legacySocketStreamProperties;
@property (atomic, readwrite) double _loadingPriority;
@property (atomic, readwrite) double _loadingPriorityValue;
@property (atomic, readwrite) int _networkServiceType;
@property (atomic, readwrite, copy) NSString *_pathToDownloadTaskFile;
@property (nonatomic, readwrite, retain) struct __PerformanceTiming { }*_performanceTiming;
@property (atomic, readwrite) unsigned int _powerAssertion;
@property (nonatomic, readwrite) BOOL _preconnect;
@property (atomic, readwrite) BOOL _preventsIdleSystemSleep;
@property (atomic, readwrite) BOOL _preventsSystemHTTPProxyAuthentication;
@property (atomic, readwrite) long long _priority;
@property (atomic, readwrite) long long _priorityValue;
@property (atomic, readwrite) BOOL _prohibitAuthUI;
@property (nonatomic, readwrite) id _protocolForTask;
@property (atomic, readwrite, copy) NSDictionary *_proxySettings;
@property (nonatomic, readwrite, retain) NSURL *_publishingURL;
@property (atomic, readwrite) long long _requestPriority;
@property (atomic, readwrite) BOOL _shouldHandleCookies;
@property (atomic, readwrite) BOOL _shouldPipelineHTTP;
@property (nonatomic, readwrite) BOOL _shouldReportTimingDataToAWD;
@property (atomic, readwrite) BOOL _shouldSkipPipelineProbe;
@property (atomic, readwrite) BOOL _shouldSkipPreferredClientCertificateLookup;
@property (atomic, readwrite) BOOL _shouldUsePipelineHeuristics;
@property (atomic, readwrite, copy) NSDictionary *_sslSettings;
@property (atomic, readwrite, copy) NSString *_storagePartitionIdentifier;
@property (atomic, readwrite) BOOL _strictContentLength;
@property (atomic, readwrite) long long _suspensionThreshhold;
@property (atomic, readwrite) double _timeWindowDelay;
@property (atomic, readwrite) double _timeWindowDuration;
@property (atomic, readwrite) double _timeoutInterval;
@property (atomic, readwrite) double _timeoutIntervalForResource;
@property (nonatomic, readwrite, retain) NSDictionary *_trailers;
@property (atomic, readwrite, copy) NSString *_uniqueIdentifier;
@property (atomic, readwrite, copy) NSURLSessionTaskHTTPAuthenticator *authenticator;
@property (atomic, readwrite) long long countOfBytesClientExpectsToReceive;
@property (atomic, readwrite) long long countOfBytesClientExpectsToSend;
@property (atomic, readwrite) long long countOfBytesExpectedToReceive;
@property (atomic, readwrite) long long countOfBytesExpectedToSend;
@property (atomic, readwrite) long long countOfBytesReceived;
@property (atomic, readwrite) long long countOfBytesSent;
@property (atomic, readwrite, copy) NSURLRequest *currentRequest;
@property (atomic, readonly, retain) NSURL *currentRequest_URL;
@property (atomic, readonly, retain) NSURL *currentRequest_mainDocumentURL;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (nonatomic, readwrite, retain) NSURLSessionTaskDependencyTree *dependencyTree;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite, copy) NSDate *earliestBeginDate;
@property (atomic, readwrite, copy) NSError *error;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite, copy) NSURLRequest *originalRequest;
@property (atomic, readwrite) float priority;
@property (atomic, readonly) NSProgress *progress;
@property (atomic, readwrite, copy) NSURLResponse *response;
@property (atomic, readwrite, retain) NSURLSession *session;
@property (atomic, readwrite) double startTime;
@property (atomic, readwrite) long long state;
@property (atomic, readonly) Class superclass;
@property (nonatomic, readwrite, retain) NSURLSessionTaskDependency *taskDependency;
@property (atomic, readwrite, copy) NSString *taskDescription;
@property (atomic, readwrite) unsigned long long taskIdentifier;
@property (atomic, readonly, retain) NSObject<OS_dispatch_queue> *workQueue;

+ (id)taskForWrappedRequest:(id)arg1;

- (void)_appendCountOfPendingBytesReceivedEncoded:(long long)arg1;
- (void)_completeUploadProgress;
- (void)_consumePendingBytesReceivedEncoded;
- (struct _CFURLRequest { }*)_copyCurrentCFURLRequest;
- (struct _CFHSTSPolicy { }*)_copyHSTSPolicy;
- (struct _CFURLRequest { }*)_copyOriginalCFURLRequest;
- (struct __CFDictionary { }*)_copySocketStreamProperties;
- (const struct XCookieStorage { int (**x1)(); struct __CFAllocator {} *x2; int x3; }*)_createXCookieStorage;
- (const struct XCredentialStorage { int (**x1)(); struct __CFAllocator {} *x2; int x3; }*)_createXCredentialStorage;
- (const struct XURLCache { int (**x1)(); struct __CFAllocator {} *x2; int x3; }*)_createXURLCache;
- (BOOL)_extractorFinishedDecoding;
- (BOOL)_extractorPreparedForExtraction;
- (void)_finishProgressReporting;
- (void)_initializeTimingDataWithSessionConfiguration:(id)arg1;
- (BOOL)_isAVAssetTask;
- (double)_loadingPriority;
- (id)_loggableDescription;
- (void)_onSessionQueue_cleanupAndBreakCycles;
- (void)_onqueue_adjustBytesPerSecondLimit:(long long)arg1;
- (void)_onqueue_adjustPriorityHint:(float)arg1;
- (void)_onqueue_releasePowerAsssertion;
- (void)_prepareNewTimingDataContainer;
- (void)_setBytesPerSecondLimit:(long long)arg1;
- (void)_setExplicitCookieStorage:(struct OpaqueCFHTTPCookieStorage { }*)arg1;
- (void)_setExplicitStorageSession:(struct __CFURLStorageSession { }*)arg1;
- (void)_setSocketProperties:(struct __CFDictionary { }*)arg1 connectionProperties:(struct __CFDictionary { }*)arg2;
- (double)_timeoutIntervalForResource;
- (id)_transactionMetrics;
- (void)cancel;
- (long long)computeAdjustedPoolPriority;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)initWithOriginalRequest:(id)arg1 updatedRequest:(id)arg2 ident:(unsigned long long)arg3 session:(id)arg4;
- (id)initWithTask:(id)arg1;
- (void)initializeHTTPAuthenticatorWithAppleIDContext:(id)arg1 statusCodes:(id)arg2;
- (float)priority;
- (void)resume;
- (void)setPriority:(float)arg1;
- (void)set_extractorFinishedDecoding:(BOOL)arg1;
- (void)set_extractorPreparedForExtraction:(BOOL)arg1;
- (void)set_loadingPriority:(double)arg1;
- (void)set_timeoutIntervalForResource:(double)arg1;
- (bool)shouldHandleCookiesAndSchemeIsAppropriate;
- (void)suspend;
- (void)updateCurrentRequest:(id)arg1;

@end
