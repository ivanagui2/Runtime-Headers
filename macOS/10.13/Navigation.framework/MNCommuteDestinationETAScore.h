/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Navigation.framework/Versions/A/Navigation
 */

@interface MNCommuteDestinationETAScore : MNCommuteDestinationScore <MNCommuteDestinationComparisonScore, MNCommuteDestinationObserver> {
    BOOL  _destinationInvalid;
    <GEODirectionServiceTicket> * _directionsRequestTicket;
    NSDate * _lastRouteUpdate;
    MNCommuteDestination * _otherDestination;
    double  _otherDestinationTravelTime;
    int  _score;
}

@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (nonatomic, readwrite, retain) <GEODirectionServiceTicket> *directionsRequestTicket;
@property (atomic, readonly) unsigned long long hash;
@property (nonatomic, readwrite, retain) NSDate *lastRouteUpdate;
@property (nonatomic, readwrite) MNCommuteDestination *otherDestination;
@property (nonatomic, readwrite) double otherDestinationTravelTime;
@property (atomic, readonly) Class superclass;

+ (double)weight;

- (void).cxx_destruct;
- (id)_directionsRequestFeedback;
- (void)_handleDirectionsResponse:(id)arg1 error:(id)arg2 forRequest:(id)arg3;
- (BOOL)_readyForRoute;
- (void)_requestRoute;
- (id)_routeAttributes;
- (void)_updateScoreAndDestinationInvalid;
- (void)commuteDestination:(id)arg1 didChangeRemainingTime:(double)arg2;
- (id)descriptionExtras;
- (BOOL)destinationInvalid;
- (id)directionsRequestTicket;
- (id)initWithDestination:(id)arg1;
- (id)lastRouteUpdate;
- (id)otherDestination;
- (double)otherDestinationTravelTime;
- (int)score;
- (void)setDirectionsRequestTicket:(id)arg1;
- (void)setLastRouteUpdate:(id)arg1;
- (void)setOtherDestination:(id)arg1;
- (void)setOtherDestinationTravelTime:(double)arg1;
- (BOOL)supportsComparisonType:(unsigned long long)arg1;
- (void)updateComparisonDestination:(id)arg1 ofType:(unsigned long long)arg2;
- (void)updateScoreIfPossible;

@end
