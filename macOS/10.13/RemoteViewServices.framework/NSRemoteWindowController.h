/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices
 */

@interface NSRemoteWindowController : NSObject <NSRemoteServiceConnectionDelegate> {
    BOOL  _canBecomeKeyWindow;
    BOOL  _canBecomeMainWindow;
    NSRemoteServiceConnection * _connection;
    <NSObject><NSRemoteWindowControllerDelegate> * _delegate;
    NSObject<OS_dispatch_queue> * _delegateQueue;
    unsigned int  _disableAutomaticTermination;
    BOOL  _isSheet;
    NSLocalWindowWrappingRemoteWindow * _localProxyWindow;
    id  _pendingGrantOfferedBlock;
    NSString * _pendingingWindowRightsGrantToken;
    unsigned int  _remoteConnectionID;
    unsigned int  _remoteOrderPlaceRequestsAccepted;
    NSString * _remoteWindowClass;
    unsigned int  _remoteWindowID;
    unsigned long long  _styleMask;
    unsigned long long  _windowRights;
    BOOL  _windowRightsGrantRetried;
}

@property (atomic, readwrite) BOOL canBecomeKeyWindow;
@property (atomic, readwrite) BOOL canBecomeMainWindow;
@property (atomic, readonly, retain) NSRemoteServiceConnection *connection;
@property (atomic, readwrite) id delegate;
@property (atomic, readwrite) NSObject<OS_dispatch_queue> *delegateQueue;
@property (atomic, readwrite) unsigned int disableAutomaticTermination;
@property (atomic, readwrite) BOOL isSheet;
@property (atomic, readwrite, copy) NSString *remoteWindowClass;
@property (atomic, readonly, retain) NSPanel *window;

+ (Class)localWindowClass;

- (void)_clearPendingWindowRightsGrant;
- (int)_completeWindowRightsGrant:(const struct { unsigned int x1; unsigned int x2; int x3; unsigned int x4; struct __CFDictionary {} *x5; struct __CFString {} *x6; }*)arg1;
- (void)_handleModalSession:(id)arg1;
- (void)_handleReplyActivateSharedWindow:(id)arg1;
- (void)_handleReplySetupSharedWindow:(id)arg1;
- (void)_handleRequestUpdateSharedWindowFrame:(id)arg1;
- (void)_handleUserValueChanged:(id)arg1;
- (BOOL)_performKeyEquivalentWithRequest:(id)arg1;
- (void)_sharedWindowShouldChange:(id)arg1;
- (void)_thisWindowShouldChange:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)asyncSelectFirstResponderWithDirection:(unsigned long long)arg1;
- (BOOL)blacklistedSelector:(SEL)arg1;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (void)cleanup;
- (id)connection;
- (void)connection:(id)arg1 didReceiveError:(id)arg2;
- (void)connection:(id)arg1 didReceiveRequest:(id)arg2;
- (id)createAccessibilityChildWindow:(id)arg1 withStyle:(id)arg2;
- (void)dealloc;
- (id)delegate;
- (id)delegateQueue;
- (unsigned int)disableAutomaticTermination;
- (id)findAccessibilityChildWindow:(id)arg1;
- (void)hideSharedWindow:(BOOL)arg1 atLocation:(struct CGPoint { double x1; double x2; })arg2;
- (id)initWithConnection:(id)arg1;
- (id)initWithConnection:(id)arg1 rights:(unsigned long long)arg2;
- (id)initWithRemotePanel:(id)arg1 remoteServiceReply:(id)arg2 rights:(unsigned long long)arg3;
- (BOOL)initializeRemoteWindow;
- (BOOL)isSheet;
- (id)remoteWindowClass;
- (void)sendEvent:(id)arg1;
- (id)sendSynchronousRequest:(id)arg1;
- (void)setCanBecomeKeyWindow:(BOOL)arg1;
- (void)setCanBecomeMainWindow:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDelegateQueue:(id)arg1;
- (void)setDisableAutomaticTermination:(unsigned int)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setIsSheet:(BOOL)arg1;
- (void)setRemoteWindowClass:(id)arg1;
- (id)window;

@end
