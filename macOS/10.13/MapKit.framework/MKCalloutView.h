/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MapKit.framework/Versions/A/MapKit
 */

@interface MKCalloutView : NSView {
    struct { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGPoint { 
            double x; 
            double y; 
        } offset; 
        int position; 
        struct CGPoint { 
            double x; 
            double y; 
        } desiredPoint; 
        struct CGRect { 
            struct CGPoint { 
                double x; 
                double y; 
            } origin; 
            struct CGSize { 
                double width; 
                double height; 
            } size; 
        } desiredBounds; 
    }  _anchor;
    NSVisualEffectView * _backdropView;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _boundary;
    MKSmallCalloutView * _calloutView;
    CAShapeLayer * _contentMaskLayer;
    NSView * _contentView;
    id  _delegate;
    struct { 
        unsigned int animated : 1; 
        unsigned int didMoveCalled : 1; 
        unsigned int hasPendingAnimatedLayout : 1; 
        unsigned int reserved : 28; 
    }  _flags;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _frame;
    NSTimer * _layoutAnimationTimer;
    NSView * _leftViewBackground;
    NSColor * _leftViewColor;
    NSView * _shadowView;
}

@property (getter=isLeftAnchored, nonatomic, readonly) BOOL leftAnchored;

+ (double)defaultHeight;

- (void).cxx_destruct;
- (void)_layoutAnimation;
- (void)_layoutSubviews:(BOOL)arg1;
- (void)_markDidMoveCalled;
- (double)_minimumCalloutWidthForView:(id)arg1;
- (struct CGPoint { double x1; double x2; })_originForScale:(double)arg1;
- (void)_runBounceAnimation;
- (void)_scheduleLayoutAnimation;
- (void)_setLayoutAnimationTimer:(id)arg1;
- (void)_setOriginForScale:(double)arg1;
- (void)_updateLeftBackgroundView;
- (void)_updateMask;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (struct CGPoint { double x1; double x2; })anchorPoint;
- (void)animationDidStop:(id)arg1 finished:(id)arg2 context:(void*)arg3;
- (void)completeBounceAnimation;
- (void)dealloc;
- (id)delegate;
- (void)fadeOutWithDuration:(double)arg1;
- (void)forceAnchorPosition:(int)arg1;
- (void)getActualAnchorPoint:(struct CGPoint { double x1; double x2; }*)arg1 frame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 forDesiredAnchorPoint:(struct CGPoint { double x1; double x2; })arg3 boundaryRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)isFlipped;
- (BOOL)isLeftAnchored;
- (struct CGPath { }*)newMaskCGPath;
- (struct CGPoint { double x1; double x2; })offset;
- (void)removeFromSuperview;
- (void)setAnchorPoint:(struct CGPoint { double x1; double x2; })arg1 boundaryRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 animate:(BOOL)arg3;
- (void)setDelegate:(id)arg1;
- (void)setDetailView:(id)arg1;
- (void)setDetailView:(id)arg1 animated:(BOOL)arg2;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setLeftView:(id)arg1;
- (void)setLeftView:(id)arg1 animated:(BOOL)arg2;
- (void)setLeftView:(id)arg1 backgroundColor:(id)arg2 animated:(BOOL)arg3;
- (void)setOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setRightView:(id)arg1;
- (void)setRightView:(id)arg1 animated:(BOOL)arg2;
- (void)setSubtitle:(id)arg1;
- (void)setSubtitle:(id)arg1 animated:(BOOL)arg2;
- (void)setTitle:(id)arg1;
- (id)subtitle;

@end
