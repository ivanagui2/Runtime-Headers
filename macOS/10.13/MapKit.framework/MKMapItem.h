/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MapKit.framework/Versions/A/MapKit
 */

@interface MKMapItem : NSObject <GEOURLSerializable, NSSecureCoding> {
    NSString * ABUUID;
    _MKMapItemPlaceAttribution * _attribution;
    <GEOMapItemTransitInfo> * _defaultTransitInfo;
    <NSObject> * _didResolveAttributionToken;
    NSString * _firstLocalizedCategoryName;
    NSArray * _formattedAddressLines;
    <GEOMapItem> * _geoMapItem;
    MKMapItemIdentifier * _identifier;
    BOOL  _isCurrentLocation;
    BOOL  _isMapItemTypeTransit;
    BOOL  _isPlaceHolder;
    BOOL  _isTransitInfoUpdated;
    NSString * _localizedSampleSizeForUserRatingScoreString;
    MKMapItemMetadata * _metadata;
    NSNumberFormatter * _numberFormatterForAdamId;
    _MKMapItemPhotosAttribution * _photosAttribution;
    GEOPlace * _place;
    _MKPlaceReservationInfo * _reservationInfo;
    _MKMapItemReviewsAttribution * _reviewsAttribution;
    NSString * _shortAddress;
    <GEOTransitAttribution> * _updatedTransitAttribution;
    <GEOMapItemTransitInfo> * _updatedTransitInfo;
    GEOMapItemStorageUserValues * _userValues;
    NSArray * formattedAddressLinesCache;
    NSString * singleLineAddress;
}

@property (nonatomic, readwrite, retain) NSString *ABUUID;
@property (getter=_acceptsApplePay, nonatomic, readonly) BOOL acceptsApplePay;
@property (getter=_alternativeAppAdamIds, nonatomic, readonly) NSArray *alternativeAppAdamIds;
@property (getter=_attribution, nonatomic, readonly) _MKMapItemPlaceAttribution *attribution;
@property (getter=_browseCategories, nonatomic, readonly) NSArray *browseCategories;
@property (getter=_businessClaim, nonatomic, readonly) GEOPDBusinessClaim *businessClaim;
@property (getter=_coordinate, nonatomic, readonly) struct CLLocationCoordinate2D { double x1; double x2; } coordinate;
@property (getter=_customIconID, nonatomic, readonly) unsigned long long customIconID;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (getter=_detourInfo, nonatomic, readonly) GEOMapItemDetourInfo *detourInfo;
@property (getter=_disambiguationName, nonatomic, readonly) NSString *disambiguationName;
@property (getter=_displayMapRegion, nonatomic, readonly) GEOMapRegion *displayMapRegion;
@property (getter=_displayMaxZoom, nonatomic, readonly) float displayMaxZoom;
@property (getter=_displayMinZoom, nonatomic, readonly) float displayMinZoom;
@property (getter=_encyclopedicInfo, nonatomic, readonly) <GEOEncyclopedicInfo> *encyclopedicInfo;
@property (getter=_externalTransitStationCode, nonatomic, readonly) NSData *externalTransitStationCode;
@property (getter=_firstLocalizedCategoryName, nonatomic, readonly) NSString *firstLocalizedCategoryName;
@property (getter=_flyover, nonatomic, readonly) GEOPDFlyover *flyover;
@property (getter=_flyoverAnnouncementMessage, nonatomic, readonly) NSString *flyoverAnnouncementMessage;
@property (nonatomic, readonly) NSArray *formattedAddressLines;
@property (nonatomic, readwrite, retain) NSArray *formattedAddressLinesCache;
@property (nonatomic, readonly) NSString *formattedNumberOfReviews;
@property (nonatomic, readonly) NSString *formattedNumberOfReviewsIncludingProvider;
@property (getter=_geoAddress, nonatomic, readonly) GEOAddress *geoAddress;
@property (getter=_geoFenceMapRegion, nonatomic, readonly) GEOMapRegion *geoFenceMapRegion;
@property (getter=_geoMapItem, nonatomic, readonly) <GEOMapItemPrivate> *geoMapItem;
@property (getter=_geoMapItemStorageForDragAndDrop, nonatomic, readonly) GEOMapItemStorage *geoMapItemStorageForDragAndDrop;
@property (getter=_geoMapItemStorageForPersistence, nonatomic, readonly) GEOMapItemStorage *geoMapItemStorageForPersistence;
@property (getter=_goodForKids, nonatomic, readonly) BOOL goodForKids;
@property (getter=_handle, nonatomic, readonly) NSData *handle;
@property (getter=_hasAcceptsApplePayAmenity, nonatomic, readonly) BOOL hasAcceptsApplePayAmenity;
@property (getter=_hasAnyAmenities, nonatomic, readonly) BOOL hasAnyAmenities;
@property (getter=_hasBusinessClaim, nonatomic, readonly) BOOL hasBusinessClaim;
@property (getter=_hasCorrectedHomeWorkCoordinate, nonatomic, readonly) BOOL hasCorrectedHomeWorkCoordinate;
@property (getter=_hasDelivery, nonatomic, readonly) BOOL hasDelivery;
@property (getter=_hasDeliveryAmenity, nonatomic, readonly) BOOL hasDeliveryAmenity;
@property (getter=_hasDisplayMaxZoom, nonatomic, readonly) BOOL hasDisplayMaxZoom;
@property (getter=_hasDisplayMinZoom, nonatomic, readonly) BOOL hasDisplayMinZoom;
@property (getter=_hasDisplayableAmenities, atomic, readonly) BOOL hasDisplayableAmenities;
@property (getter=_hasEncyclopedicInfo, nonatomic, readonly) BOOL hasEncyclopedicInfo;
@property (getter=_hasFlyover, nonatomic, readonly) BOOL hasFlyover;
@property (getter=_hasGoodForKidsAmenity, nonatomic, readonly) BOOL hasGoodForKidsAmenity;
@property (getter=_hasLocalizedOperatingHours, nonatomic, readonly) BOOL hasLocalizedOperatingHours;
@property (getter=_hasMUID, nonatomic, readonly) BOOL hasMUID;
@property (getter=_hasOperatingHours, nonatomic, readonly) BOOL hasOperatingHours;
@property (getter=_hasPriceDescription, nonatomic, readonly) BOOL hasPriceDescription;
@property (getter=_hasPriceRange, nonatomic, readonly) BOOL hasPriceRange;
@property (getter=_hasResolvablePartialInformation, nonatomic, readonly) BOOL hasResolvablePartialInformation;
@property (getter=_hasResultProviderID, nonatomic, readonly) BOOL hasResultProviderID;
@property (getter=_hasTakesReservationsAmenity, nonatomic, readonly) BOOL hasTakesReservationsAmenity;
@property (getter=_hasTransit, nonatomic, readonly) BOOL hasTransit;
@property (getter=_hasTransitDisplayName, nonatomic, readonly) BOOL hasTransitDisplayName;
@property (getter=_hasTransitLabels, nonatomic, readonly) BOOL hasTransitLabels;
@property (getter=_hasUserRatingScore, nonatomic, readonly) BOOL hasUserRatingScore;
@property (getter=_hasVenueFeatureType, nonatomic, readonly) BOOL hasVenueFeatureType;
@property (atomic, readonly) unsigned long long hash;
@property (getter=_identifier, nonatomic, readonly) MKMapItemIdentifier *identifier;
@property (nonatomic, readwrite) BOOL isCurrentLocation;
@property (getter=_isEmptyContactMapItem, atomic, readonly) BOOL isEmptyContactMapItem;
@property (getter=_isMapItemTypeAddress, nonatomic, readonly) BOOL isMapItemTypeAddress;
@property (getter=_isMapItemTypeBrand, nonatomic, readonly) BOOL isMapItemTypeBrand;
@property (getter=_isMapItemTypeBusiness, nonatomic, readonly) BOOL isMapItemTypeBusiness;
@property (getter=_isMapItemTypeSettlement, nonatomic, readonly) BOOL isMapItemTypeSettlement;
@property (getter=_isMapItemTypeTransit, nonatomic, readwrite) BOOL isMapItemTypeTransit;
@property (getter=_isMapItemTypeUnknown, nonatomic, readonly) BOOL isMapItemTypeUnknown;
@property (nonatomic, readonly) BOOL isPlaceHolder;
@property (getter=_isStandAloneBrand, nonatomic, readonly) BOOL isStandAloneBrand;
@property (getter=_localizedMessageBusinessOperatingHours, nonatomic, readonly) NSString *localizedMessageBusinessOperatingHours;
@property (getter=_localizedOperatingHours, nonatomic, readonly) NSString *localizedOperatingHours;
@property (getter=_localizedResponseTime, nonatomic, readonly) NSString *localizedResponseTime;
@property (getter=_localizedSampleSizeForUserRatingScoreString, nonatomic, readonly) NSString *localizedSampleSizeForUserRatingScoreString;
@property (getter=_messageBusinessHours, nonatomic, readonly) NSArray *messageBusinessHours;
@property (getter=_messageID, nonatomic, readonly) NSString *messageID;
@property (getter=_messageURLString, nonatomic, readonly) NSString *messageURLString;
@property (nonatomic, readonly) MKMapItemMetadata *metadata;
@property (getter=_muid, nonatomic, readonly) unsigned long long muid;
@property (nonatomic, readwrite, copy) NSString *name;
@property (getter=_needsAttribution, nonatomic, readonly) BOOL needsAttribution;
@property (getter=_normalizedUserRatingScore, nonatomic, readonly) float normalizedUserRatingScore;
@property (getter=_openingHoursOptions, nonatomic, readonly) unsigned long long openingHoursOptions;
@property (getter=_parsecSectionType, nonatomic, readonly) int parsecSectionType;
@property (nonatomic, readwrite, copy) NSString *phoneNumber;
@property (getter=_phoneNumberOptsOutOfAds, nonatomic, readonly) BOOL phoneNumberOptsOutOfAds;
@property (getter=_photosAttribution, nonatomic, readonly) _MKMapItemPhotosAttribution *photosAttribution;
@property (nonatomic, readonly) GEOPlace *place;
@property (getter=_placeDataAsData, nonatomic, readonly) NSData *placeDataAsData;
@property (getter=_placeDisplayStyle, nonatomic, readonly) int placeDisplayStyle;
@property (nonatomic, readonly) MKPlacemark *placemark;
@property (getter=_poiPinpointURLString, nonatomic, readonly) NSString *poiPinpointURLString;
@property (getter=_poiSurveyURLString, nonatomic, readonly) NSString *poiSurveyURLString;
@property (getter=_preferedAppAdamID, nonatomic, readonly) NSNumber *preferedAppAdamID;
@property (getter=_priceDescription, nonatomic, readonly) NSString *priceDescription;
@property (getter=_priceRangeString, nonatomic, readonly) NSString *priceRangeString;
@property (getter=_providerURL, nonatomic, readonly, copy) NSURL *providerURL;
@property (getter=_quickLinks, nonatomic, readonly) NSArray *quickLinks;
@property (nonatomic, readwrite, retain) _MKPlaceReservationInfo *reservationInfo;
@property (getter=_responseStatusIsIncomplete, nonatomic, readonly) BOOL responseStatusIncomplete;
@property (getter=_resultProviderID, nonatomic, readonly) int resultProviderID;
@property (getter=_reviews, nonatomic, readonly) NSArray *reviews;
@property (getter=_reviewsAttribution, nonatomic, readonly) _MKMapItemReviewsAttribution *reviewsAttribution;
@property (getter=_reviewsDisplayName, nonatomic, readonly) NSString *reviewsDisplayName;
@property (nonatomic, readonly) NSString *reviewsProviderDisplayName;
@property (getter=_sampleSizeForUserRatingScore, nonatomic, readonly) unsigned int sampleSizeForUserRatingScore;
@property (getter=_shortAddress, nonatomic, readonly) NSString *shortAddress;
@property (nonatomic, readwrite, copy) NSString *singleLineAddress;
@property (getter=_styleAttributes, nonatomic, readonly) GEOFeatureStyleAttributes *styleAttributes;
@property (atomic, readonly) Class superclass;
@property (getter=_takesReservations, nonatomic, readonly) BOOL takesReservations;
@property (nonatomic, readwrite, copy) NSTimeZone *timeZone;
@property (getter=_tips, nonatomic, readonly) NSArray *tips;
@property (getter=_transitAttribution, nonatomic, readonly) <GEOTransitAttribution> *transitAttribution;
@property (getter=_transitDisplayName, nonatomic, readonly) NSString *transitDisplayName;
@property (getter=_transitInfo, nonatomic, readonly) <GEOMapItemTransitInfo> *transitInfo;
@property (nonatomic, readwrite, retain) NSURL *url;
@property (nonatomic, readonly) GEOMapItemStorageUserValues *userValues;
@property (getter=_vendorID, nonatomic, readonly, copy) NSString *vendorID;
@property (getter=_venueFeatureType, nonatomic, readonly) long long venueFeatureType;
@property (getter=_venueInfo, nonatomic, readonly) <GEOMapItemVenueInfo> *venueInfo;
@property (getter=_webURL, nonatomic, readonly, copy) NSURL *webURL;
@property (nonatomic, readonly) NSString *yelpID;

+ (id)_deserializeResourceOptionsFromURL:(id)arg1 error:(out id*)arg2;
+ (id)_launchOptionsFromResourceOptionsDictionary:(id)arg1;
+ (id)_launchOptionsWithOptions:(id)arg1;
+ (id)_localizedNextOpeningDayOftheWeekFormatter;
+ (id)_localizedNextOpeningHoursFormatter;
+ (id)_mapItemBackedByURL:(id)arg1;
+ (void)_mapItemFromHandle:(id)arg1 completionHandler:(id)arg2;
+ (void)_mapItemsFromHandleURL:(id)arg1 completionHandler:(id)arg2;
+ (BOOL)_openHandleInMaps:(id)arg1 withLaunchOptions:(id)arg2;
+ (void)_openHandleInMaps:(id)arg1 withLaunchOptions:(id)arg2 completionHandler:(id)arg3;
+ (id)_sharedSessionURLForPunchoutURL:(id)arg1;
+ (id)_sharedSessionUserInfoForPunchoutUserInfo:(id)arg1;
+ (id)_sourceAppIdFromLaunchURL:(id)arg1;
+ (id)_sourceAppIdFromLaunchUserInfo:(id)arg1;
+ (id)_urlForMapItemHandles:(id)arg1 options:(id)arg2;
+ (id)launchOptionsFromURL:(id)arg1;
+ (id)mapItemForCurrentLocation;
+ (id)mapItemWithDictionary:(id)arg1;
+ (id)mapItemsFromURL:(id)arg1 options:(id*)arg2;
+ (BOOL)openMapsWithItems:(id)arg1 launchOptions:(id)arg2;
+ (void)openMapsWithItems:(id)arg1 launchOptions:(id)arg2 completionHandler:(id)arg3;
+ (id)plistCompatibleDictionaryFromStandardOptions:(id)arg1;
+ (id)standardOptionsFromPlistCompatibleDictionary:(id)arg1;
+ (id)urlForMapItem:(id)arg1 options:(id)arg2;
+ (id)urlForMapItems:(id)arg1 options:(id)arg2;

- (void).cxx_destruct;
- (id)ABUUID;
- (BOOL)_acceptsApplePay;
- (id)_activityURL;
- (id)_activityURLUsingWebPlaceCard:(BOOL)arg1;
- (id)_addressFormattedAsCity;
- (id)_addressFormattedAsMultilineAddress;
- (id)_addressFormattedAsName;
- (id)_addressFormattedAsShortenedAddress;
- (id)_addressFormattedAsSinglelineAddress;
- (id)_addressFormattedAsTitlesForMapRect:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_addressFormattedAsWeatherDisplayName;
- (id)_addressOrNil:(id)arg1;
- (id)_alternativeAppAdamIds;
- (id)_attribution;
- (id)_attributionFor:(id)arg1 sourceStringFormat:(id)arg2 moreSourceStringFormat:(id)arg3 imageTintColor:(id)arg4;
- (id)_attributionWithDisplayName:(id)arg1 attributionFormat:(id)arg2 logo:(id)arg3 isSnippetLogo:(BOOL)arg4;
- (id)_bestBrandIconURLForSize:(struct CGSize { double x1; double x2; })arg1 allowSmaller:(BOOL)arg2;
- (id)_browseCategories;
- (id)_businessClaim;
- (BOOL)_canGetDirections;
- (id)_cnPostalAddress;
- (struct CLLocationCoordinate2D { double x1; double x2; })_coordinate;
- (unsigned long long)_customIconID;
- (id)_detourInfo;
- (id)_disambiguationName;
- (id)_displayMapRegion;
- (float)_displayMaxZoom;
- (float)_displayMinZoom;
- (id)_encyclopedicInfo;
- (id)_externalTransitStationCode;
- (id)_firstLocalizedCategoryName;
- (id)_flyover;
- (id)_flyoverAnnouncementMessage;
- (id)_formatterForAdamId;
- (id)_fullAddressWithMultiline:(BOOL)arg1;
- (id)_geoAddress;
- (id)_geoFenceMapRegion;
- (id)_geoMapItem;
- (id)_geoMapItemStorageForDragAndDrop;
- (id)_geoMapItemStorageForPersistence;
- (id)_getBusiness;
- (BOOL)_goodForKids;
- (id)_handle;
- (BOOL)_hasAcceptsApplePayAmenity;
- (BOOL)_hasAnyAmenities;
- (BOOL)_hasBusinessClaim;
- (BOOL)_hasCorrectedHomeWorkCoordinate;
- (BOOL)_hasDelivery;
- (BOOL)_hasDeliveryAmenity;
- (BOOL)_hasDisplayMaxZoom;
- (BOOL)_hasDisplayMinZoom;
- (BOOL)_hasEncyclopedicInfo;
- (BOOL)_hasFlyover;
- (BOOL)_hasGoodForKidsAmenity;
- (BOOL)_hasLocalizedCategoryNamesForType:(unsigned int)arg1;
- (BOOL)_hasLocalizedOperatingHours;
- (BOOL)_hasMUID;
- (BOOL)_hasOperatingHours;
- (BOOL)_hasPriceDescription;
- (BOOL)_hasPriceRange;
- (BOOL)_hasResolvablePartialInformation;
- (BOOL)_hasResultProviderID;
- (BOOL)_hasTakesReservationsAmenity;
- (BOOL)_hasTransit;
- (BOOL)_hasTransitDisplayName;
- (BOOL)_hasTransitLabels;
- (BOOL)_hasUserRatingScore;
- (BOOL)_hasVenueFeatureType;
- (id)_identifier;
- (BOOL)_isEquivalentURLRepresentationTo:(id)arg1;
- (BOOL)_isMapItemTypeAddress;
- (BOOL)_isMapItemTypeBrand;
- (BOOL)_isMapItemTypeBusiness;
- (BOOL)_isMapItemTypeSettlement;
- (BOOL)_isMapItemTypeTransit;
- (BOOL)_isMapItemTypeUnknown;
- (BOOL)_isStandAloneBrand;
- (id)_localizedCategoryNamesForType:(unsigned int)arg1;
- (id)_localizedMessageBusinessOperatingHours;
- (id)_localizedNextOpeningStringShort:(BOOL)arg1;
- (id)_localizedOperatingHours;
- (id)_localizedResponseTime;
- (id)_localizedSampleSizeForUserRatingScoreString;
- (id)_messageBusinessHours;
- (id)_messageID;
- (id)_messageURLString;
- (unsigned long long)_muid;
- (BOOL)_needsAttribution;
- (float)_normalizedUserRatingScore;
- (unsigned long long)_openingHoursOptions;
- (int)_parsecSectionType;
- (BOOL)_phoneNumberOptsOutOfAds;
- (id)_photosAttribution;
- (id)_placeDataAsData;
- (int)_placeDisplayStyle;
- (id)_poiPinpointURLString;
- (id)_poiSurveyURLString;
- (id)_preferedAppAdamID;
- (id)_priceDescription;
- (id)_priceRangeString;
- (id)_providerURL;
- (id)_quickLinks;
- (void)_refreshAttribution;
- (BOOL)_responseStatusIsIncomplete;
- (int)_resultProviderID;
- (id)_reviews;
- (id)_reviewsAttribution;
- (id)_reviewsDisplayName;
- (unsigned int)_sampleSizeForUserRatingScore;
- (id)_shortAddress;
- (id)_styleAttributes;
- (BOOL)_takesReservations;
- (id)_tips;
- (id)_transitAttribution;
- (id)_transitDisplayName;
- (id)_transitInfo;
- (id)_urlExtraStorage;
- (id)_vendorID;
- (long long)_venueFeatureType;
- (id)_venueInfo;
- (id)_weatherDisplayName;
- (id)_webURL;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (id)formattedAddressLines;
- (id)formattedAddressLinesCache;
- (unsigned long long)hash;
- (id)initWithAddressDictionary:(id)arg1;
- (id)initWithCLLocation:(id)arg1;
- (id)initWithCLLocation:(id)arg1 name:(id)arg2 address:(id)arg3 formattedAddressLinesCache:(id)arg4 singleLineAddress:(id)arg5 contactIdentifier:(id)arg6 timeZone:(id)arg7;
- (id)initWithGeoMapItem:(id)arg1 isPlaceHolderPlace:(BOOL)arg2;
- (id)initWithGeoMapItemAsCurrentLocation:(id)arg1;
- (id)initWithPlace:(id)arg1;
- (id)initWithPlace:(id)arg1 isPlaceHolderPlace:(BOOL)arg2;
- (id)initWithPlacemark:(id)arg1;
- (id)initWithUrlRepresentation:(id)arg1;
- (BOOL)isCurrentLocation;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isPlaceHolder;
- (id)metadata;
- (id)name;
- (BOOL)openInMapsWithLaunchOptions:(id)arg1;
- (void)openInMapsWithLaunchOptions:(id)arg1 completionHandler:(id)arg2;
- (id)phoneNumber;
- (id)place;
- (id)placemark;
- (id)reservationInfo;
- (id)reviewsProviderDisplayName;
- (void)setABUUID:(id)arg1;
- (void)setFormattedAddressLinesCache:(id)arg1;
- (void)setIsCurrentLocation:(BOOL)arg1;
- (void)setIsMapItemTypeTransit:(BOOL)arg1;
- (void)setName:(id)arg1;
- (void)setPhoneNumber:(id)arg1;
- (void)setReservationInfo:(id)arg1;
- (void)setSingleLineAddress:(id)arg1;
- (void)setTimeZone:(id)arg1;
- (void)setUrl:(id)arg1;
- (id)singleLineAddress;
- (id)timeZone;
- (id)url;
- (id)urlRepresentation;
- (id)userValues;
- (void)validateMessageIDWithCompletion:(id)arg1;
- (id)venueLabelWithContext:(unsigned long long)arg1;
- (id)yelpID;

// MKMapItem (AssistantUI)

+ (id)_mapItemWithWithLocation:(id)arg1 addressDictionary:(id)arg2 name:(id)arg3 businessURL:(id)arg4 phoneNumber:(id)arg5 sessionID:(id)arg6 muid:(unsigned long long)arg7 attributionID:(id)arg8 sampleSizeForUserRatingScore:(unsigned int)arg9 normalizedUserRatingScore:(float)arg10;

- (id)_reviewForIdentifier:(id)arg1;

// MKMapItem (GEOPlaceCard)

+ (id)_itemWithGeoMapItem:(id)arg1;
+ (void)_mapItemsWithSerializedPlaceDataResponse:(id)arg1 handler:(id)arg2;
+ (id)mapItemWithSerializedPlaceData:(id)arg1;
+ (id)mapItemWithSerializedPlaceData:(id)arg1 serializedDetourInfo:(id)arg2 currentLocation:(BOOL)arg3;

// MKMapItem (Internal)

- (id)_localizedBusinessHoursWithCurrentOpeningHoursOptions;
- (id)_localizedBusinessHoursWithOpeningHoursOptions:(unsigned long long)arg1 andOperationsHours:(id)arg2;
- (id)_localizedMessageBusinessHoursWithCurrentOpeningHoursOptions;
- (void)updateTransitInfoWithMapItem:(id)arg1;

// MKMapItem (Localization)

- (BOOL)_isBusinessClosed;
- (id)_localizedBusinessHoursWithOptions:(unsigned long long)arg1;
- (id)formattedNumberOfReviews;
- (id)formattedNumberOfReviewsIncludingProvider;
- (id)formattedNumberOfReviewsIncludingProvider:(BOOL)arg1 formatter:(id)arg2;

// MKMapItem (MKMapItemExtras)

+ (void)_fillOutRequest:(id)arg1 withMapsDataString:(id)arg2;
+ (id)contactsAddressDictionaryFromGeoAddressDictionary:(id)arg1;
+ (id)contactsAddressKeysForGeoAddressKeys;
+ (id)ticketForMapsDataString:(id)arg1 name:(id)arg2;

- (BOOL)_hasDisplayableAmenities;
- (id)_initWithLabelMarker:(id)arg1;
- (BOOL)_isEmptyContactMapItem;
- (id)_mapsDataString;
- (id)_placeCardContact;
- (id)initWithContact:(id)arg1;

// MKMapItem (MKMapItemSerialization)

+ (BOOL)supportsSecureCoding;

- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

// MKMapItem (MKPlaceCardURLProvider)

- (id)sharingURL;
- (id)thumbnailWithSize:(struct CGSize { double x1; double x2; })arg1 annotationView:(id)arg2;

// MKMapItem (MXExtensionHelper)

- (BOOL)_hasRestaurantExtensionInfo;
- (unsigned long long)_restaurantExtensionModeForFirstProvider;
- (id)_restaurantLink_firstProviderDisplayName;
- (id)_restaurantLink_firstProviderIdentifier;
- (id)_restaurantLink_firstProviderPlaceIdentifier;
- (id)_restaurantLink_firstVendorID;
- (BOOL)_restaurantLink_hasFeatureType:(unsigned long long)arg1;
- (id)_restaurantLink_overridenBundleIDsForVendorIDs;

// MKMapItem (NSUserActivity_BrandStores)

- (void)_launchActivityForBrandItem;

@end
