/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MapKit.framework/Versions/A/MapKit
 */

@interface MKSharingController : NSObject <NSSharingServiceDelegate, NSSharingServicePickerDelegate> {
    NSURL * _airDropURL;
    <NSSharingServiceDelegate><NSSharingServicePickerDelegate> * _delegate;
    NSArray * _items;
    NSURL * _mapsURL;
    NSString * _name;
    NSSharingServicePicker * _picker;
    <_MKPlaceItem> * _placeItem;
    NSString * _vCardTemporaryPath;
}

@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readwrite) <NSSharingServiceDelegate><NSSharingServicePickerDelegate> *delegate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite, copy) NSArray *items;
@property (atomic, readwrite, copy) NSURL *mapsURL;
@property (atomic, readwrite, copy) NSString *name;
@property (atomic, readonly) NSSharingServicePicker *picker;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite, copy) NSString *vCardTemporaryPath;

+ (void)addMapItemToContacts:(id)arg1;
+ (id)sharingControllerForPlaceItem:(id)arg1;

- (void).cxx_destruct;
- (BOOL)_exportVCard;
- (id)airDropURL;
- (void)dealloc;
- (id)delegate;
- (id)initWithPlaceItem:(id)arg1;
- (id)items;
- (id)mapsURL;
- (id)name;
- (id)picker;
- (void)setDelegate:(id)arg1;
- (void)setItems:(id)arg1;
- (void)setMapsURL:(id)arg1;
- (void)setName:(id)arg1;
- (void)setVCardTemporaryPath:(id)arg1;
- (BOOL)sharingService:(id)arg1 canShareAlternatePDFForItems:(id)arg2;
- (void)sharingService:(id)arg1 didFailToShareItems:(id)arg2 error:(id)arg3;
- (void)sharingService:(id)arg1 didShareItems:(id)arg2;
- (id)sharingService:(id)arg1 imageForShareItem:(id)arg2 size:(struct CGSize { double x1; double x2; })arg3 contentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg4;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })sharingService:(id)arg1 opaqueFrameForSourceWindow:(id)arg2;
- (id)sharingService:(id)arg1 optionsForItems:(id)arg2;
- (id)sharingService:(id)arg1 sharedItemsFromProposedItems:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })sharingService:(id)arg1 sourceFrameOnScreenForShareItem:(id)arg2;
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long*)arg3;
- (id)sharingService:(id)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg3;
- (void)sharingService:(id)arg1 willShareItems:(id)arg2;
- (id)sharingServicePicker:(id)arg1 delegateForSharingService:(id)arg2;
- (void)sharingServicePicker:(id)arg1 didChooseSharingService:(id)arg2;
- (id)sharingServicePicker:(id)arg1 sharingServicesForItems:(id)arg2 proposedSharingServices:(id)arg3;
- (id)vCardTemporaryPath;

@end
