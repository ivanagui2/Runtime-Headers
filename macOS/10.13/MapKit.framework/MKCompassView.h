/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MapKit.framework/Versions/A/MapKit
 */

@interface MKCompassView : NSView {
    struct CGPoint { 
        double x; 
        double y; 
    }  _clickPosition;
    BOOL  _enabled;
    BOOL  _innerClick;
    long long  _innerDiscTooltipTag;
    long long  _innerDiscTrackingRectTag;
    long long  _outerRingTooltipTag;
    BOOL  _wasDragged;
    CAGradientLayer * gradientLayer;
    CALayer * rotationLayer;
    CATextLayer * textLayer;
    CALayer * tiltLayer;
}

@property (getter=isEnabled, nonatomic, readwrite) BOOL enabled;

- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_innerDiscRect;
- (BOOL)accessibilityIsIgnored;
- (BOOL)canBecomeKeyView;
- (void)commonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)isEnabled;
- (BOOL)isPointInInnerPortion:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)isPointInOuterRing:(struct CGPoint { double x1; double x2; })arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)resetCompassFlatWithMapPitch:(double)arg1 pitchEnabled:(BOOL)arg2;
- (void)resetNeedleToNorthWithMapYaw:(double)arg1;
- (void)setEnabled:(BOOL)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setupCompassForDPI:(BOOL)arg1;
- (void)updateAccessibilityDescriptionWithAngle:(double)arg1;
- (void)updateHighlight;
- (void)updateTooltip;
- (void)updateTooltipForInnerDiscHovered:(BOOL)arg1;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint { double x1; double x2; })arg3 userData:(void*)arg4;
- (void)viewDidChangeBackingProperties;
- (void)viewDidMoveToWindow;

@end
