/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MapKit.framework/Versions/A/MapKit
 */

@interface MKImageView : NSView {
    NSLayoutConstraint * _aspectRatioConstraint;
    NSImage * _currentImage;
    NSColor * _highlightColor;
    NSImage * _highlightImage;
    NSImage * _image;
    long long  _imageContentMode;
    BOOL  _shouldHighlight;
}

@property (nonatomic, readwrite, retain) NSColor *highlightColor;
@property (nonatomic, readwrite, retain) NSImage *highlightImage;
@property (nonatomic, readwrite, retain) NSImage *image;
@property (atomic, readwrite) long long imageContentMode;
@property (atomic, readwrite) BOOL shouldHighlight;

- (void).cxx_destruct;
- (id)_currentImage;
- (void)_setCurrentImage:(id)arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)highlightColor;
- (id)highlightImage;
- (id)image;
- (long long)imageContentMode;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithImage:(id)arg1;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (void)invalidateHighlightImage;
- (void)removeConstraintToMaintainAspectRatio;
- (void)setBackgroundStyle:(long long)arg1;
- (void)setConstraintToMaintainAspectRatio;
- (void)setHighlightColor:(id)arg1;
- (void)setHighlightImage:(id)arg1;
- (void)setImage:(id)arg1;
- (void)setImageContentMode:(long long)arg1;
- (void)setShouldHighlight:(BOOL)arg1;
- (BOOL)shouldHighlight;
- (void)sizeToFit;

@end
