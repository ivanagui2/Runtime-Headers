/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MapKit.framework/Versions/A/MapKit
 */

@interface _MKResultView : NSView <MKLocationManagerObserver> {
    BOOL  _alwaysUsesBusinessLayout;
    <_MKResultViewDelegate> * _delegate;
    double  _fallbackDistance;
    MKImageView * _imageView;
    BOOL  _isResizableImage;
    int  _layoutType;
    MKLocationManager * _locManager;
    NSArray * _mapItems;
    _MKUILabel * _nameLabel;
    NSString * _primaryLabelText;
    NSColor * _primaryTextColor;
    NSTimer * _refLocationTimer;
    CLLocation * _referenceLocation;
    NSMutableArray * _resultConstraints;
    _MKUILabel * _secondaryLabel;
    NSString * _secondaryLabelText;
    NSColor * _secondaryTextColor;
    BOOL  _selected;
    BOOL  _showsDistance;
    _MKUILabel * _tertiaryLabel;
    <_MKResultViewDelegate> * delegate;
}

@property (nonatomic, readwrite) BOOL alwaysUsesBusinessLayout;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (nonatomic, readwrite) <_MKResultViewDelegate> *delegate;
@property (atomic, readonly, copy) NSString *description;
@property (nonatomic, readwrite) double fallbackDistance;
@property (atomic, readonly) unsigned long long hash;
@property (nonatomic, readwrite, retain) MKImageView *imageView;
@property (nonatomic, readwrite, retain) MKMapItem *mapItem;
@property (nonatomic, readwrite, retain) NSArray *mapItems;
@property (nonatomic, readwrite, retain) _MKUILabel *nameLabel;
@property (nonatomic, readonly) double preferredHeight;
@property (nonatomic, readwrite, retain) NSString *primaryLabelText;
@property (nonatomic, readwrite, retain) NSColor *primaryTextColor;
@property (nonatomic, readwrite, retain) CLLocation *referenceLocation;
@property (nonatomic, readwrite, retain) _MKUILabel *secondaryLabel;
@property (nonatomic, readwrite, retain) NSString *secondaryLabelText;
@property (nonatomic, readwrite, retain) NSColor *secondaryTextColor;
@property (nonatomic, readwrite) BOOL selected;
@property (nonatomic, readwrite) BOOL showsDistance;
@property (atomic, readonly) Class superclass;
@property (nonatomic, readwrite, retain) _MKUILabel *tertiaryLabel;

+ (BOOL)requiresConstraintBasedLayout;

- (void).cxx_destruct;
- (void)_cancelReferenceLocationTimer;
- (id)_defaultPrimaryLabel;
- (id)_defaultSecondaryCategoryLabel;
- (double)_expectedHeightForLabels;
- (void)_fireReferenceLocationTimer;
- (struct CGSize { double x1; double x2; })_imageSize;
- (id)_labelWithFontSize:(double)arg1;
- (void)_locationApprovalDidChange;
- (unsigned long long)_maxNameLengthForEndingString:(id)arg1;
- (unsigned long long)_maxSecondaryStringLengthForEndingString:(id)arg1;
- (void)_updateColors;
- (void)_updateLayoutForAddress;
- (void)_updateLayoutForBusinessOrCategory;
- (void)_updatePrimaryColors;
- (void)_updateSecondaryColors;
- (void)addLabelIfNecessary:(id)arg1;
- (BOOL)alwaysUsesBusinessLayout;
- (void)commonInit;
- (void)dealloc;
- (id)delegate;
- (double)fallbackDistance;
- (id)imageView;
- (id)init;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 highlightsOnTouch:(BOOL)arg2;
- (id)initWithMapItem:(id)arg1;
- (id)initWithMapItems:(id)arg1 primaryLabelText:(id)arg2;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (void)locationManagerDidReset:(id)arg1;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (BOOL)locationManagerShouldPauseLocationUpdates:(id)arg1;
- (void)locationManagerUpdatedLocation:(id)arg1;
- (id)mapItem;
- (id)mapItems;
- (void)mouseUp:(id)arg1;
- (id)nameLabel;
- (double)preferredHeight;
- (id)primaryLabelText;
- (id)primaryTextColor;
- (id)referenceLocation;
- (id)secondaryLabel;
- (id)secondaryLabelText;
- (id)secondaryTextColor;
- (BOOL)selected;
- (void)setAlwaysUsesBusinessLayout:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFallbackDistance:(double)arg1;
- (void)setImageView:(id)arg1;
- (void)setMapItem:(id)arg1;
- (void)setMapItems:(id)arg1;
- (void)setNameLabel:(id)arg1;
- (void)setNeedsUpdateConstraints;
- (void)setPrimaryLabelText:(id)arg1;
- (void)setPrimaryTextColor:(id)arg1;
- (void)setReferenceLocation:(id)arg1;
- (void)setSecondaryLabel:(id)arg1;
- (void)setSecondaryLabelText:(id)arg1;
- (void)setSecondaryTextColor:(id)arg1;
- (void)setSelected:(BOOL)arg1;
- (void)setShowsDistance:(BOOL)arg1;
- (void)setTertiaryLabel:(id)arg1;
- (BOOL)showsDistance;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)tertiaryLabel;
- (void)updateConstraints;
- (void)updateImageView;
- (void)updateLayout;
- (void)updateSubviews;

@end
