/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore
 */

@interface ICDevice : NSObject {
    id  _deviceProperties;
}

@property (atomic, readonly) NSString *UUIDString;
@property (atomic, readwrite) BOOL autoOpenSession;
@property (atomic, readwrite, copy) NSString *autolaunchApplicationPath;
@property (atomic, readonly) NSString *bonjourServiceName;
@property (atomic, readonly) NSString *bonjourServiceType;
@property (atomic, readonly) NSDictionary *bonjourTXTRecord;
@property (atomic, readonly) NSString *buttonPressed;
@property (atomic, readonly) BOOL canCancelSoftwareInstallation;
@property (atomic, readonly) NSArray *capabilities;
@property (atomic, readwrite) BOOL closeSessionPending;
@property (atomic, readonly) NSNumber *connectionID;
@property (atomic, readwrite) <ICDeviceDelegate> *delegate;
@property (nonatomic, readwrite) BOOL deviceBusy;
@property (atomic, readonly) NSNumber *deviceID;
@property (atomic, readonly) NSNumber *deviceRef;
@property (atomic, readonly) long long fwGUID;
@property (atomic, readonly) BOOL hasConfigurableWiFiInterface;
@property (atomic, readonly) BOOL hasOpenSession;
@property (atomic, readonly) struct CGImage { }*icon;
@property (atomic, readonly) NSString *iconPath;
@property (atomic, readonly) NSString *ipAddress;
@property (atomic, readonly) int ipPort;
@property (nonatomic, readonly) BOOL isIKCamera;
@property (nonatomic, readonly) BOOL isIKScanner;
@property (atomic, readonly) NSString *locationDescription;
@property (atomic, readonly) int moduleExecutableArchitecture;
@property (atomic, readonly) NSString *modulePath;
@property (atomic, readonly) NSString *moduleVersion;
@property (atomic, readwrite) NSString *name;
@property (atomic, readwrite) BOOL openSessionPending;
@property (atomic, readonly) NSString *persistentIDString;
@property (atomic, readonly) BOOL preferred;
@property (atomic, readonly) NSString *productKind;
@property (atomic, readonly) BOOL ready;
@property (getter=isRemote, atomic, readonly) BOOL remote;
@property (atomic, readonly) NSNumber *remoteDeviceID;
@property (atomic, readonly) NSString *serialNumberString;
@property (atomic, readwrite, retain) NSNumber *sessionID;
@property (getter=isShared, atomic, readonly) BOOL shared;
@property (atomic, readonly) double softwareInstallPercentDone;
@property (atomic, readonly) NSString *softwareUpdateQueryString;
@property (nonatomic, readonly) BOOL supportsDelete;
@property (nonatomic, readonly) BOOL supportsHEIF;
@property (atomic, readonly) NSString *transportType;
@property (atomic, readonly) unsigned long long type;
@property (atomic, readonly) int usbIntefaceClass;
@property (atomic, readonly) int usbInterfaceProtocol;
@property (atomic, readonly) int usbInterfaceSubClass;
@property (atomic, readonly) int usbLocationID;
@property (atomic, readonly) int usbProductID;
@property (atomic, readonly) int usbVendorID;
@property (atomic, readonly) NSMutableDictionary *userData;
@property (atomic, readwrite, retain) id userObject;

// Image: /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore

- (id)UUIDString;
- (void)addCapabilities:(id)arg1;
- (void)addCapability:(id)arg1;
- (void)addCommonConnectionInfo:(id)arg1;
- (BOOL)autoOpenSession;
- (id)autolaunchApplicationPath;
- (BOOL)autolaunchDevice;
- (id)bonjourServiceName;
- (id)bonjourServiceType;
- (id)bonjourTXTRecord;
- (id)buttonPressed;
- (BOOL)canCancelSoftwareInstallation;
- (id)capabilities;
- (void)cleanupDeviceWithErrorCode:(id)arg1;
- (BOOL)closeSessionPending;
- (void)connectConnection;
- (void)connectWithParameters:(id)arg1;
- (id)connectionID;
- (id)createBonjourLocationNameWithTxtRecord:(id)arg1 andServiceName:(id)arg2;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (id)deviceID;
- (id)deviceRef;
- (void)disconnect;
- (id)endpoint;
- (void)finalize;
- (long long)fwGUID;
- (id)getConnection;
- (BOOL)handleCommandCompletion:(id)arg1;
- (void)handleImageCaptureEventNotification:(id)arg1;
- (BOOL)hasConfigurableWiFiInterface;
- (BOOL)hasEndpoint;
- (BOOL)hasOpenSession;
- (struct CGImage { }*)icon;
- (id)iconPath;
- (id)init;
- (id)initWithDictionary:(id)arg1;
- (void)initializeDeviceProperties:(id)arg1;
- (id)ipAddress;
- (int)ipPort;
- (BOOL)isAppleDevice;
- (BOOL)isConnected;
- (BOOL)isRemote;
- (BOOL)isShared;
- (id)locationDescription;
- (int)moduleExecutableArchitecture;
- (id)modulePath;
- (id)moduleVersion;
- (id)name;
- (BOOL)openSessionPending;
- (id)persistentIDString;
- (BOOL)preferred;
- (id)productKind;
- (BOOL)ready;
- (void)releasePowerAssertion;
- (id)remoteDeviceID;
- (void)removeCapability:(id)arg1;
- (void)requestCancelSoftwareInstallation;
- (void)requestCloseSession;
- (void)requestEjectOrDisconnect;
- (void)requestInstallSoftware;
- (void)requestOpenSession;
- (void)requestSendMessage:(unsigned int)arg1 outData:(id)arg2 maxReturnedDataSize:(unsigned int)arg3 sendMessageDelegate:(id)arg4 didSendMessageSelector:(SEL)arg5 contextInfo:(void*)arg6;
- (void)requestYield;
- (void)resetConnection;
- (BOOL)sendMessageCmd:(id)arg1;
- (id)serialNumberString;
- (id)sessionID;
- (void)setAutoOpenSession:(BOOL)arg1;
- (void)setAutolaunchApplicationPath:(id)arg1;
- (void)setAutolaunchDevice:(BOOL)arg1;
- (void)setButtonPressed:(id)arg1;
- (void)setCloseSessionPending:(BOOL)arg1;
- (void)setConnection:(id)arg1;
- (void)setConnectionID:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeviceID:(id)arg1;
- (void)setName:(id)arg1;
- (void)setOpenSessionPending:(BOOL)arg1;
- (void)setPreferred:(BOOL)arg1;
- (void)setReady:(BOOL)arg1;
- (void)setRemoteDeviceID:(id)arg1;
- (void)setSessionID:(id)arg1;
- (void)setUserObject:(id)arg1;
- (double)softwareInstallPercentDone;
- (id)softwareUpdateQueryString;
- (void)takePowerAssertion:(id)arg1;
- (id)transportType;
- (unsigned long long)type;
- (void)updateCapabilities:(id)arg1;
- (BOOL)updateIcon:(id)arg1;
- (BOOL)updateName:(id)arg1;
- (BOOL)updateProperties:(id)arg1;
- (void)updateSoftwareInstallStatus:(id)arg1;
- (int)usbIntefaceClass;
- (int)usbInterfaceProtocol;
- (int)usbInterfaceSubClass;
- (int)usbLocationID;
- (int)usbProductID;
- (int)usbVendorID;
- (id)userData;
- (id)userObject;
- (id)validIconPath:(id)arg1;
- (id)valueForUndefinedKey:(id)arg1;

// Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit

// ICDevice (IKDeviceBrowserViewExtension)

- (id)children;
- (BOOL)deviceBusy;
- (id)imageRepresentation;
- (id)imageRepresentationType;
- (id)imageTitle;
- (id)imageUID;
- (BOOL)isIKCamera;
- (BOOL)isIKScanner;
- (void)setDeviceBusy:(BOOL)arg1;
- (BOOL)supportsDelete;
- (BOOL)supportsHEIF;

@end
