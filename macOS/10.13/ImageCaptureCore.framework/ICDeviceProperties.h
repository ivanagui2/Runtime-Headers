/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore
 */

@interface ICDeviceProperties : NSObject {
    NSString * _UUIDString;
    unsigned int  _assertionID;
    BOOL  _autoOpenSession;
    NSString * _autolaunchApplicationPath;
    BOOL  _autolaunchDevice;
    NSString * _bonjourServiceName;
    NSString * _bonjourServiceType;
    NSDictionary * _bonjourTXTRecord;
    NSString * _buttonPressed;
    BOOL  _canCancelSoftwareInstallation;
    NSMutableSet * _capabilities;
    BOOL  _closeSessionPending;
    NSXPCConnection * _connection;
    NSNumber * _connectionID;
    NSLock * _connectionLock;
    id  _delegate;
    NSNumber * _deviceID;
    NSNumber * _deviceRef;
    unsigned long long  _deviceSoftwareInstallPercentCompleted;
    NSXPCListenerEndpoint * _endpoint;
    long long  _fwGUID;
    BOOL  _hasConfigurableWiFiInterface;
    struct CGImage { } * _icon;
    NSString * _iconPath;
    BOOL  _installSoftwareRequested;
    NSString * _ipAddress;
    int  _ipPort;
    NSDictionary * _lastSoftwareInstallStatus;
    NSString * _locationDescription;
    int  _moduleExecutableArchitecture;
    NSString * _modulePath;
    NSString * _moduleVersion;
    NSString * _name;
    BOOL  _openSessionPending;
    NSString * _persistentIDString;
    BOOL  _preferred;
    double  _preferredTimeStamp;
    NSString * _productKind;
    BOOL  _ready;
    BOOL  _remote;
    NSNumber * _remoteDeviceID;
    NSString * _serialNumberString;
    NSNumber * _sessionID;
    BOOL  _shared;
    double  _softwareInstallPercentDone;
    NSString * _softwareUpdateQueryString;
    BOOL  _systemReportsEjectable;
    NSString * _transportType;
    unsigned long long  _type;
    int  _usbIntefaceClass;
    int  _usbInterfaceProtocol;
    int  _usbInterfaceSubClass;
    int  _usbLocationID;
    int  _usbProductID;
    int  _usbVendorID;
    NSMutableDictionary * _userData;
    id  _userObject;
}

@property (atomic, readwrite, retain) NSString *UUIDString;
@property (atomic, readwrite) unsigned int assertionID;
@property (atomic, readwrite) BOOL autoOpenSession;
@property (atomic, readwrite, retain) NSString *autolaunchApplicationPath;
@property (atomic, readwrite) BOOL autolaunchDevice;
@property (atomic, readwrite, retain) NSString *bonjourServiceName;
@property (atomic, readwrite, retain) NSString *bonjourServiceType;
@property (atomic, readwrite, retain) NSDictionary *bonjourTXTRecord;
@property (atomic, readwrite, copy) NSString *buttonPressed;
@property (atomic, readwrite) BOOL canCancelSoftwareInstallation;
@property (atomic, readonly) NSSet *capabilities;
@property (atomic, readwrite) BOOL closeSessionPending;
@property (atomic, readwrite, retain) NSXPCConnection *connection;
@property (atomic, readwrite, retain) NSNumber *connectionID;
@property (atomic, readwrite, retain) NSLock *connectionLock;
@property (atomic, readwrite) id delegate;
@property (atomic, readwrite, retain) NSNumber *deviceID;
@property (atomic, readwrite, retain) NSNumber *deviceRef;
@property (atomic, readwrite, retain) NSXPCListenerEndpoint *endpoint;
@property (atomic, readwrite) long long fwGUID;
@property (atomic, readwrite) BOOL hasConfigurableWiFiInterface;
@property (atomic, readwrite) struct CGImage { }*icon;
@property (atomic, readwrite, retain) NSString *iconPath;
@property (atomic, readwrite) BOOL installSoftwareRequested;
@property (atomic, readwrite, retain) NSString *ipAddress;
@property (atomic, readwrite) int ipPort;
@property (atomic, readwrite, retain) NSDictionary *lastSoftwareInstallStatus;
@property (atomic, readwrite, retain) NSString *locationDescription;
@property (atomic, readwrite) int moduleExecutableArchitecture;
@property (atomic, readwrite, retain) NSString *modulePath;
@property (atomic, readwrite, retain) NSString *moduleVersion;
@property (atomic, readwrite, retain) NSString *name;
@property (atomic, readwrite) BOOL openSessionPending;
@property (atomic, readwrite, retain) NSString *persistentIDString;
@property (atomic, readwrite) BOOL preferred;
@property (atomic, readwrite, retain) NSString *productKind;
@property (atomic, readwrite) BOOL ready;
@property (atomic, readwrite) BOOL remote;
@property (atomic, readwrite, retain) NSNumber *remoteDeviceID;
@property (atomic, readwrite, retain) NSString *serialNumberString;
@property (atomic, readwrite, retain) NSNumber *sessionID;
@property (atomic, readwrite) BOOL shared;
@property (atomic, readwrite) double softwareInstallPercentDone;
@property (atomic, readwrite, retain) NSString *softwareUpdateQueryString;
@property (atomic, readwrite) BOOL systemReportsEjectable;
@property (atomic, readwrite, retain) NSString *transportType;
@property (atomic, readwrite) unsigned long long type;
@property (atomic, readwrite) int usbIntefaceClass;
@property (atomic, readwrite) int usbInterfaceProtocol;
@property (atomic, readwrite) int usbInterfaceSubClass;
@property (atomic, readwrite) int usbLocationID;
@property (atomic, readwrite) int usbProductID;
@property (atomic, readwrite) int usbVendorID;
@property (atomic, readwrite, retain) NSMutableDictionary *userData;
@property (atomic, readwrite, retain) id userObject;

- (id)UUIDString;
- (void)addCapability:(id)arg1;
- (unsigned int)assertionID;
- (BOOL)autoOpenSession;
- (id)autolaunchApplicationPath;
- (BOOL)autolaunchDevice;
- (id)bonjourServiceName;
- (id)bonjourServiceType;
- (id)bonjourTXTRecord;
- (id)buttonPressed;
- (BOOL)canCancelSoftwareInstallation;
- (id)capabilities;
- (BOOL)closeSessionPending;
- (id)connection;
- (id)connectionID;
- (id)connectionLock;
- (void)dealloc;
- (id)delegate;
- (id)deviceID;
- (id)deviceRef;
- (id)endpoint;
- (void)finalize;
- (long long)fwGUID;
- (BOOL)hasConfigurableWiFiInterface;
- (struct CGImage { }*)icon;
- (id)iconPath;
- (id)init;
- (void)initPowerAssertion;
- (BOOL)installSoftwareRequested;
- (id)ipAddress;
- (int)ipPort;
- (id)lastSoftwareInstallStatus;
- (id)locationDescription;
- (void)lockConnection;
- (int)moduleExecutableArchitecture;
- (id)modulePath;
- (id)moduleVersion;
- (id)name;
- (BOOL)openSessionPending;
- (id)persistentIDString;
- (BOOL)preferred;
- (id)productKind;
- (BOOL)ready;
- (void)releaseConnection;
- (void)releasePowerAssertion;
- (BOOL)remote;
- (id)remoteDeviceID;
- (void)removeCapabilities;
- (void)removeCapability:(id)arg1;
- (id)serialNumberString;
- (id)sessionID;
- (void)setAssertionID:(unsigned int)arg1;
- (void)setAutoOpenSession:(BOOL)arg1;
- (void)setAutolaunchApplicationPath:(id)arg1;
- (void)setAutolaunchDevice:(BOOL)arg1;
- (void)setBonjourServiceName:(id)arg1;
- (void)setBonjourServiceType:(id)arg1;
- (void)setBonjourTXTRecord:(id)arg1;
- (void)setButtonPressed:(id)arg1;
- (void)setCanCancelSoftwareInstallation:(BOOL)arg1;
- (void)setCloseSessionPending:(BOOL)arg1;
- (void)setConnection:(id)arg1;
- (void)setConnectionID:(id)arg1;
- (void)setConnectionLock:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeviceID:(id)arg1;
- (void)setDeviceRef:(id)arg1;
- (void)setEndpoint:(id)arg1;
- (void)setFwGUID:(long long)arg1;
- (void)setHasConfigurableWiFiInterface:(BOOL)arg1;
- (void)setIcon:(struct CGImage { }*)arg1;
- (void)setIconPath:(id)arg1;
- (void)setInstallSoftwareRequested:(BOOL)arg1;
- (void)setIpAddress:(id)arg1;
- (void)setIpPort:(int)arg1;
- (void)setLastSoftwareInstallStatus:(id)arg1;
- (void)setLocationDescription:(id)arg1;
- (void)setModuleExecutableArchitecture:(int)arg1;
- (void)setModulePath:(id)arg1;
- (void)setModuleVersion:(id)arg1;
- (void)setName:(id)arg1;
- (void)setOpenSessionPending:(BOOL)arg1;
- (void)setPersistentIDString:(id)arg1;
- (void)setPreferred:(BOOL)arg1;
- (void)setProductKind:(id)arg1;
- (void)setReady:(BOOL)arg1;
- (void)setRemote:(BOOL)arg1;
- (void)setRemoteDeviceID:(id)arg1;
- (void)setSerialNumberString:(id)arg1;
- (void)setSessionID:(id)arg1;
- (void)setShared:(BOOL)arg1;
- (void)setSoftwareInstallPercentDone:(double)arg1;
- (void)setSoftwareUpdateQueryString:(id)arg1;
- (void)setSystemReportsEjectable:(BOOL)arg1;
- (void)setTransportType:(id)arg1;
- (void)setType:(unsigned long long)arg1;
- (void)setUUIDString:(id)arg1;
- (void)setUsbIntefaceClass:(int)arg1;
- (void)setUsbInterfaceProtocol:(int)arg1;
- (void)setUsbInterfaceSubClass:(int)arg1;
- (void)setUsbLocationID:(int)arg1;
- (void)setUsbProductID:(int)arg1;
- (void)setUsbVendorID:(int)arg1;
- (void)setUserData:(id)arg1;
- (void)setUserObject:(id)arg1;
- (BOOL)shared;
- (double)softwareInstallPercentDone;
- (id)softwareUpdateQueryString;
- (BOOL)systemReportsEjectable;
- (void)takePowerAssertion:(id)arg1;
- (id)transportType;
- (unsigned long long)type;
- (void)unlockConnection;
- (int)usbIntefaceClass;
- (int)usbInterfaceProtocol;
- (int)usbInterfaceSubClass;
- (int)usbLocationID;
- (int)usbProductID;
- (int)usbVendorID;
- (id)userData;
- (id)userObject;

@end
