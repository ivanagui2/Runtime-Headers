/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore
 */

@interface ICScannerFunctionalUnitProps : NSObject {
    BOOL  _acceptsThresholdForBlackAndWhiteScanning;
    unsigned char  _backgroundGrayValue;
    unsigned long long  _bitDepth;
    unsigned char  _defaultThresholdForBlackAndWhiteScanning;
    struct CGColorSpace { } * _grayColorSpace;
    struct CGImage { } * _grayOverviewImage;
    unsigned long long  _measurementUnit;
    unsigned long long  _measurementUnitPrivate;
    struct CGSize { 
        double width; 
        double height; 
    }  _minimumScanSizeInInches;
    unsigned long long  _nativeXResolution;
    unsigned long long  _nativeYResolution;
    struct CGImage { } * _overviewImage;
    ICScannerImageRep * _overviewImageBufferRep;
    struct CGDataProvider { } * _overviewImageDataProvider;
    unsigned long long  _overviewResolution;
    struct CGSize { 
        double width; 
        double height; 
    }  _physicalSizeInInches;
    unsigned long long  _pixelDataType;
    NSMutableIndexSet * _preferredResolutions;
    NSMutableIndexSet * _preferredScaleFactors;
    unsigned long long  _resolution;
    unsigned long long  _scaleFactor;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _scanArea;
    unsigned long long  _scanAreaOrientation;
    NSMutableDictionary * _scanParams;
    double  _scanProgressPercentDone;
    ICScannerDevice * _scanner;
    unsigned int  _state;
    NSMutableIndexSet * _supportedBitDepths;
    NSMutableIndexSet * _supportedMeasurementUnits;
    NSMutableIndexSet * _supportedResolutions;
    NSMutableIndexSet * _supportedScaleFactors;
    BOOL  _supportsProgressNotificationsWithScanData;
    unsigned long long  _templateMeasurementUnit;
    NSArray * _templates;
    unsigned char  _thresholdForBlackAndWhiteScanning;
    BOOL  _useOverviewImageAsFinalImage;
    BOOL  _usesThresholdForBlackAndWhiteScanning;
    NSArray * _vendorFeatures;
}

@property (atomic, readwrite) BOOL acceptsThresholdForBlackAndWhiteScanning;
@property (atomic, readwrite) unsigned char backgroundGrayValue;
@property (atomic, readwrite) unsigned long long bitDepth;
@property (atomic, readonly) NSMutableDictionary *currentSettings;
@property (atomic, readwrite) unsigned char defaultThresholdForBlackAndWhiteScanning;
@property (atomic, readwrite) struct CGColorSpace { }*grayColorSpace;
@property (atomic, readwrite) struct CGImage { }*grayOverviewImage;
@property (atomic, readwrite) unsigned long long measurementUnit;
@property (atomic, readwrite) unsigned long long measurementUnitPrivate;
@property (atomic, readwrite) struct CGSize { double x1; double x2; } minimumScanSizeInInches;
@property (atomic, readwrite) unsigned long long nativeXResolution;
@property (atomic, readwrite) unsigned long long nativeYResolution;
@property (atomic, readwrite) struct CGImage { }*overviewImage;
@property (atomic, readwrite, retain) ICScannerImageRep *overviewImageBufferRep;
@property (atomic, readwrite) unsigned long long overviewResolution;
@property (atomic, readwrite) struct CGSize { double x1; double x2; } physicalSizeInInches;
@property (atomic, readwrite) unsigned long long pixelDataType;
@property (atomic, readwrite, retain) NSMutableIndexSet *preferredResolutions;
@property (atomic, readwrite, retain) NSMutableIndexSet *preferredScaleFactors;
@property (atomic, readwrite) unsigned long long resolution;
@property (atomic, readwrite) unsigned long long scaleFactor;
@property (atomic, readwrite) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } scanArea;
@property (atomic, readwrite) unsigned long long scanAreaOrientation;
@property (atomic, readwrite, retain) NSMutableDictionary *scanParams;
@property (atomic, readwrite) double scanProgressPercentDone;
@property (atomic, readwrite) ICScannerDevice *scanner;
@property (atomic, readwrite) unsigned int state;
@property (atomic, readwrite, retain) NSMutableIndexSet *supportedBitDepths;
@property (atomic, readwrite, retain) NSMutableIndexSet *supportedMeasurementUnits;
@property (atomic, readwrite, retain) NSMutableIndexSet *supportedResolutions;
@property (atomic, readwrite, retain) NSMutableIndexSet *supportedScaleFactors;
@property (atomic, readwrite) BOOL supportsProgressNotificationsWithScanData;
@property (atomic, readwrite) unsigned long long templateMeasurementUnit;
@property (atomic, readwrite, retain) NSArray *templates;
@property (atomic, readwrite) unsigned char thresholdForBlackAndWhiteScanning;
@property (atomic, readwrite) BOOL useOverviewImageAsFinalImage;
@property (atomic, readwrite) BOOL usesThresholdForBlackAndWhiteScanning;
@property (atomic, readwrite, retain) NSArray *vendorFeatures;

- (BOOL)acceptsThresholdForBlackAndWhiteScanning;
- (unsigned char)backgroundGrayValue;
- (unsigned long long)bitDepth;
- (id)currentSettings;
- (void)dealloc;
- (unsigned char)defaultThresholdForBlackAndWhiteScanning;
- (void)finalize;
- (struct CGColorSpace { }*)grayColorSpace;
- (struct CGImage { }*)grayOverviewImage;
- (id)initWithDictionary:(id)arg1 andScanner:(id)arg2;
- (unsigned long long)measurementUnit;
- (unsigned long long)measurementUnitPrivate;
- (struct CGSize { double x1; double x2; })minimumScanSizeInInches;
- (unsigned long long)nativeXResolution;
- (unsigned long long)nativeYResolution;
- (struct CGImage { }*)overviewImage;
- (id)overviewImageBufferRep;
- (unsigned long long)overviewResolution;
- (struct CGSize { double x1; double x2; })physicalSizeInInches;
- (unsigned long long)pixelDataType;
- (id)preferredResolutions;
- (id)preferredScaleFactors;
- (unsigned long long)resolution;
- (unsigned long long)scaleFactor;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })scanArea;
- (unsigned long long)scanAreaOrientation;
- (id)scanParams;
- (double)scanProgressPercentDone;
- (id)scanner;
- (void)setAcceptsThresholdForBlackAndWhiteScanning:(BOOL)arg1;
- (void)setBackgroundGrayValue:(unsigned char)arg1;
- (void)setBitDepth:(unsigned long long)arg1;
- (void)setDefaultThresholdForBlackAndWhiteScanning:(unsigned char)arg1;
- (void)setGrayColorSpace:(struct CGColorSpace { }*)arg1;
- (void)setGrayOverviewImage:(struct CGImage { }*)arg1;
- (void)setMeasurementUnit:(unsigned long long)arg1;
- (void)setMeasurementUnitPrivate:(unsigned long long)arg1;
- (void)setMinimumScanSizeInInches:(struct CGSize { double x1; double x2; })arg1;
- (void)setNativeXResolution:(unsigned long long)arg1;
- (void)setNativeYResolution:(unsigned long long)arg1;
- (void)setOverviewImage:(struct CGImage { }*)arg1;
- (void)setOverviewImageBufferRep:(id)arg1;
- (void)setOverviewResolution:(unsigned long long)arg1;
- (void)setPhysicalSizeInInches:(struct CGSize { double x1; double x2; })arg1;
- (void)setPixelDataType:(unsigned long long)arg1;
- (void)setPreferredResolutions:(id)arg1;
- (void)setPreferredScaleFactors:(id)arg1;
- (void)setResolution:(unsigned long long)arg1;
- (void)setScaleFactor:(unsigned long long)arg1;
- (void)setScanArea:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setScanAreaOrientation:(unsigned long long)arg1;
- (void)setScanParams:(id)arg1;
- (void)setScanProgressPercentDone:(double)arg1;
- (void)setScanner:(id)arg1;
- (void)setState:(unsigned int)arg1;
- (void)setSupportedBitDepths:(id)arg1;
- (void)setSupportedMeasurementUnits:(id)arg1;
- (void)setSupportedResolutions:(id)arg1;
- (void)setSupportedScaleFactors:(id)arg1;
- (void)setSupportsProgressNotificationsWithScanData:(BOOL)arg1;
- (void)setTemplateMeasurementUnit:(unsigned long long)arg1;
- (void)setTemplates:(id)arg1;
- (void)setThresholdForBlackAndWhiteScanning:(unsigned char)arg1;
- (void)setUseOverviewImageAsFinalImage:(BOOL)arg1;
- (void)setUsesThresholdForBlackAndWhiteScanning:(BOOL)arg1;
- (void)setVendorFeatures:(id)arg1;
- (unsigned int)state;
- (id)supportedBitDepths;
- (id)supportedMeasurementUnits;
- (id)supportedResolutions;
- (id)supportedScaleFactors;
- (BOOL)supportsProgressNotificationsWithScanData;
- (unsigned long long)templateMeasurementUnit;
- (id)templates;
- (unsigned char)thresholdForBlackAndWhiteScanning;
- (BOOL)useOverviewImageAsFinalImage;
- (BOOL)usesThresholdForBlackAndWhiteScanning;
- (id)vendorFeatures;

@end
