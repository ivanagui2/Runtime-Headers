/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/Versions/A/WebKit
 */

@interface WKView : NSView <NSTextInputClient, NSTouchBarProvider, WebViewImplDelegate> {
    WKViewData * _data;
    unsigned int  _unused;
}

@property (setter=_setAutomaticallyAdjustsContentInsets:, nonatomic, readwrite) BOOL _automaticallyAdjustsContentInsets;
@property (setter=_setFixedLayoutSize:, nonatomic, readwrite) struct CGSize { double x1; double x2; } _fixedLayoutSize;
@property (setter=_setIgnoresAllEvents:, atomic, readwrite) BOOL _ignoresAllEvents;
@property (setter=_setIgnoresNonWheelEvents:, atomic, readwrite) BOOL _ignoresNonWheelEvents;
@property (setter=_setInspectorAttachmentView:, nonatomic, readwrite, retain) NSView *_inspectorAttachmentView;
@property (setter=_setLayoutMode:, nonatomic, readwrite) unsigned int _layoutMode;
@property (nonatomic, readonly) id _mediaPlaybackControlsView;
@property (setter=_setOverlayScrollbarStyle:, nonatomic, readwrite) unsigned long long _overlayScrollbarStyle;
@property (setter=_setOverrideDeviceScaleFactor:, nonatomic, readwrite) double _overrideDeviceScaleFactor;
@property (atomic, readonly) NSColor *_pageExtendedBackgroundColor;
@property (setter=_setRequiresUserActionForEditingControlsManager:, nonatomic, readwrite) BOOL _requiresUserActionForEditingControlsManager;
@property (setter=_setThumbnailView:, nonatomic, readwrite) _WKThumbnailView *_thumbnailView;
@property (setter=_setTopContentInset:, nonatomic, readwrite) double _topContentInset;
@property (setter=_setTotalHeightOfBanners:, nonatomic, readwrite) double _totalHeightOfBanners;
@property (setter=_setViewScale:, nonatomic, readwrite) double _viewScale;
@property (setter=_setWantsMediaPlaybackControlsView:, nonatomic, readwrite) BOOL _wantsMediaPlaybackControlsView;
@property (atomic, readwrite) BOOL allowsBackForwardNavigationGestures;
@property (atomic, readwrite) BOOL allowsMagnification;
@property (atomic, readonly) WKBrowsingContextController *browsingContextController;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite) BOOL drawsBackground;
@property (atomic, readwrite) BOOL drawsTransparentBackground;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite) double magnification;
@property (atomic, readwrite) struct CGSize { double x1; double x2; } minimumSizeForAutoLayout;
@property (atomic, readonly) struct OpaqueWKPage { }*pageRef;
@property (atomic, readwrite) BOOL shouldClipToVisibleRect;
@property (atomic, readwrite) BOOL shouldExpandToViewHeightForAutoLayout;
@property (atomic, readonly) Class superclass;
@property (atomic, readonly) NSTouchBar *touchBar;
@property (nonatomic, readwrite, copy) NSColor *underlayColor;
@property (getter=isUsingUISideCompositing, atomic, readonly) BOOL usingUISideCompositing;

- (void)_activeSpaceDidChange:(id)arg1;
- (long long)_addTrackingRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 owner:(id)arg2 userData:(void*)arg3 assumeInside:(BOOL)arg4 useTrackingNum:(int)arg5;
- (void)_addTrackingRects:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 owner:(id)arg2 userDataList:(void**)arg3 assumeInsideList:(BOOL*)arg4 trackingNums:(long long*)arg5 count:(int)arg6;
- (void)_didHandleAcceptedCandidate;
- (void)_didUpdateCandidateListVisibility:(BOOL)arg1;
- (id)_hitTest:(struct CGPoint { double x1; double x2; }*)arg1 dragTypes:(id)arg2;
- (void)_removeTrackingRects:(long long*)arg1 count:(int)arg2;
- (void)_setThumbnailView:(id)arg1;
- (id)_thumbnailView;
- (BOOL)_wantsKeyDownForEvent:(id)arg1;
- (void)_web_cancelImmediateActionAnimation;
- (void)_web_completeImmediateActionAnimation;
- (void)_web_didAddMediaControlsManager:(id)arg1;
- (void)_web_didChangeContentSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_web_didRemoveMediaControlsManager;
- (void)_web_dismissContentRelativeChildWindows;
- (void)_web_dismissContentRelativeChildWindowsWithAnimation:(BOOL)arg1;
- (unsigned long long)_web_dragDestinationActionForDraggingInfo:(id)arg1;
- (void)_web_gestureEventWasNotHandledByWebCore:(id)arg1;
- (id)_web_immediateActionAnimationControllerForHitTestResultInternal:(struct HitTestResult { int (**x1)(); id x2; /* Warning: Unrecognized filer type: 'W' using 'void*' */ void*x3; void*x4; unsigned int x5/* : ? */; void*x6; int x7; void*x8; void*x9; void*x10; short x11; void*x12; void*x13; void*x14; short x15; void*x16; long x17; void*x18; long doublex19; void*x20; void*x21; void*x22; void*x23; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_24_1_1; } x24; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_25_1_1; } x25; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_26_1_1; } x26; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_27_1_1; } x27; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_28_1_1; } x28; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_29_1_1; } x29; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_30_1_1; } x30; bool x31; struct IntRect { struct IntPoint { int x_1_2_1; int x_1_2_2; } x_32_1_1; struct IntSize { int x_2_2_1; int x_2_2_2; } x_32_1_2; } x32; }*)arg1 withType:(unsigned int)arg2 userData:(/* Warning: unhandled struct encoding: '{Object=^^?@}' */ struct Object { int (**x1)(); id x2; }*)arg3;
- (void)_web_prepareForImmediateActionAnimation;
- (id)_web_superAccessibilityAttributeValue:(id)arg1;
- (void)_web_superDoCommandBySelector:(SEL)arg1;
- (id)_web_superHitTest:(struct CGPoint { double x1; double x2; })arg1;
- (id)_web_superInputContext;
- (void)_web_superKeyDown:(id)arg1;
- (void)_web_superMagnifyWithEvent:(id)arg1;
- (BOOL)_web_superPerformKeyEquivalent:(id)arg1;
- (void)_web_superQuickLookWithEvent:(id)arg1;
- (void)_web_superRemoveTrackingRect:(long long)arg1;
- (void)_web_superSmartMagnifyWithEvent:(id)arg1;
- (void)_web_superSwipeWithEvent:(id)arg1;
- (BOOL)_windowResizeMouseLocationIsInVisibleScrollerThumb:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)accessibilityIsIgnored;
- (long long)addTrackingRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 owner:(id)arg2 userData:(void*)arg3 assumeInside:(BOOL)arg4;
- (void)alignCenter:(id)arg1;
- (void)alignJustified:(id)arg1;
- (void)alignLeft:(id)arg1;
- (void)alignRight:(id)arg1;
- (id)attributedSubstringForProposedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 actualRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (void)attributedSubstringForProposedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 completionHandler:(id)arg2;
- (BOOL)becomeFirstResponder;
- (id)browsingContextController;
- (id)candidateListTouchBarItem;
- (void)capitalizeWord:(id)arg1;
- (void)centerSelectionInVisibleArea:(id)arg1;
- (void)changeFont:(id)arg1;
- (void)changeSpelling:(id)arg1;
- (unsigned long long)characterIndexForPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)characterIndexForPoint:(struct CGPoint { double x1; double x2; })arg1 completionHandler:(id)arg2;
- (void)checkSpelling:(id)arg1;
- (long long)conversationIdentifier;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)dealloc;
- (void)delete:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)deleteBackwardByDecomposingPreviousCharacter:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteToBeginningOfLine:(id)arg1;
- (void)deleteToBeginningOfParagraph:(id)arg1;
- (void)deleteToEndOfLine:(id)arg1;
- (void)deleteToEndOfParagraph:(id)arg1;
- (void)deleteToMark:(id)arg1;
- (void)deleteWordBackward:(id)arg1;
- (void)deleteWordForward:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint { double x1; double x2; })arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)drawsBackground;
- (BOOL)drawsTransparentBackground;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })firstRectForCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 actualRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (void)firstRectForCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 completionHandler:(id)arg2;
- (void)flagsChanged:(id)arg1;
- (BOOL)hasMarkedText;
- (void)hasMarkedTextWithCompletionHandler:(id)arg1;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1;
- (void)ignoreSpelling:(id)arg1;
- (void)indent:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 processGroup:(id)arg2 browsingContextGroup:(id)arg3;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 processGroup:(id)arg2 browsingContextGroup:(id)arg3 relatedToView:(id)arg4;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 processPool:(struct WebProcessPool { int (**x1)(); id x2; int (*x3)(); struct Ref<API::ProcessPoolConfiguration> { struct ProcessPoolConfiguration {} *x_4_1_1; } x4; struct MessageReceiverMap { struct HashMap<IPC::StringReference, IPC::MessageReceiver *, IPC::StringReference::Hash, WTF::HashTraits<IPC::StringReference>, WTF::HashTraits<IPC::MessageReceiver *> > { struct HashTable<IPC::StringReference, WTF::KeyValuePair<IPC::StringReference, IPC::MessageReceiver *>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<IPC::StringReference, IPC::MessageReceiver *> >, IPC::StringReference::Hash, WTF::HashMap<IPC::StringReference, IPC::MessageReceiver *, IPC::StringReference::Hash, WTF::HashTraits<IPC::StringReference>, WTF::HashTraits<IPC::MessageReceiver *> >::KeyValuePairTraits, WTF::HashTraits<IPC::StringReference> > { struct KeyValuePair<IPC::StringReference, IPC::MessageReceiver *> {} *x_1_3_1; unsigned int x_1_3_2; unsigned int x_1_3_3; unsigned int x_1_3_4; unsigned int x_1_3_5; } x_1_2_1; } x_5_1_1; struct HashMap<std::__1::pair<IPC::StringReference, unsigned long long>, IPC::MessageReceiver *, WTF::PairHash<IPC::StringReference, unsigned long long>, WTF::HashTraits<std::__1::pair<IPC::StringReference, unsigned long long> >, WTF::HashTraits<IPC::MessageReceiver *> > { struct HashTable<std::__1::pair<IPC::StringReference, unsigned long long>, WTF::KeyValuePair<std::__1::pair<IPC::StringReference, unsigned long long>, IPC::MessageReceiver *>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<std::__1::pair<IPC::StringReference, unsigned long long>, IPC::MessageReceiver *> >, WTF::PairHash<IPC::StringReference, unsigned long long>, WTF::HashMap<std::__1::pair<IPC::StringReference, unsigned long long>, IPC::MessageReceiver *, WTF::PairHash<IPC::StringReference, unsigned long long>, WTF::HashTraits<std::__1::pair<IPC::StringReference, unsigned long long> >, WTF::HashTraits<IPC::MessageReceiver *> >::KeyValuePairTraits, WTF::HashTraits<std::__1::pair<IPC::StringReference, unsigned long long> > > { struct KeyValuePair<std::__1::pair<IPC::StringReference, unsigned long long>, IPC::MessageReceiver *> {} *x_1_3_1; unsigned int x_1_3_2; unsigned int x_1_3_3; unsigned int x_1_3_4; unsigned int x_1_3_5; } x_2_2_1; } x_5_1_2; } x5; }*)arg2 configuration:(struct Ref<API::PageConfiguration> { struct PageConfiguration {} *x1; }*)arg3;
- (id)inputContext;
- (void)insertBacktab:(id)arg1;
- (void)insertLineBreak:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)insertParagraphSeparator:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)insertTabIgnoringFieldEditor:(id)arg1;
- (void)insertText:(id)arg1;
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (BOOL)isAutomaticDashSubstitutionEnabled;
- (BOOL)isAutomaticLinkDetectionEnabled;
- (BOOL)isAutomaticQuoteSubstitutionEnabled;
- (BOOL)isAutomaticTextReplacementEnabled;
- (BOOL)isFlipped;
- (BOOL)isGrammarCheckingEnabled;
- (BOOL)isOpaque;
- (void)keyDown:(id)arg1;
- (void)keyUp:(id)arg1;
- (void)lowercaseWord:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionNatural:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (id)makeTouchBar;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })markedRange;
- (void)markedRangeWithCompletionHandler:(id)arg1;
- (void)maybeInstallIconLoadingClient;
- (void)mouseDown:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseDragged:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)moveBackward:(id)arg1;
- (void)moveBackwardAndModifySelection:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveForward:(id)arg1;
- (void)moveForwardAndModifySelection:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveParagraphBackwardAndModifySelection:(id)arg1;
- (void)moveParagraphForwardAndModifySelection:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveToBeginningOfDocument:(id)arg1;
- (void)moveToBeginningOfDocumentAndModifySelection:(id)arg1;
- (void)moveToBeginningOfLine:(id)arg1;
- (void)moveToBeginningOfLineAndModifySelection:(id)arg1;
- (void)moveToBeginningOfParagraph:(id)arg1;
- (void)moveToBeginningOfParagraphAndModifySelection:(id)arg1;
- (void)moveToBeginningOfSentence:(id)arg1;
- (void)moveToBeginningOfSentenceAndModifySelection:(id)arg1;
- (void)moveToEndOfDocument:(id)arg1;
- (void)moveToEndOfDocumentAndModifySelection:(id)arg1;
- (void)moveToEndOfLine:(id)arg1;
- (void)moveToEndOfLineAndModifySelection:(id)arg1;
- (void)moveToEndOfParagraph:(id)arg1;
- (void)moveToEndOfParagraphAndModifySelection:(id)arg1;
- (void)moveToEndOfSentence:(id)arg1;
- (void)moveToEndOfSentenceAndModifySelection:(id)arg1;
- (void)moveToLeftEndOfLine:(id)arg1;
- (void)moveToLeftEndOfLineAndModifySelection:(id)arg1;
- (void)moveToRightEndOfLine:(id)arg1;
- (void)moveToRightEndOfLineAndModifySelection:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)moveWordBackward:(id)arg1;
- (void)moveWordBackwardAndModifySelection:(id)arg1;
- (void)moveWordForward:(id)arg1;
- (void)moveWordForwardAndModifySelection:(id)arg1;
- (void)moveWordLeft:(id)arg1;
- (void)moveWordLeftAndModifySelection:(id)arg1;
- (void)moveWordRight:(id)arg1;
- (void)moveWordRightAndModifySelection:(id)arg1;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (void)orderFrontSubstitutionsPanel:(id)arg1;
- (void)otherMouseDown:(id)arg1;
- (void)otherMouseDragged:(id)arg1;
- (void)otherMouseUp:(id)arg1;
- (void)outdent:(id)arg1;
- (void)pageDown:(id)arg1;
- (void)pageDownAndModifySelection:(id)arg1;
- (void)pageUp:(id)arg1;
- (void)pageUpAndModifySelection:(id)arg1;
- (void)paste:(id)arg1;
- (void)pasteAsPlainText:(id)arg1;
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;
- (void)pasteboardChangedOwner:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)prepareContentInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)pressureChangeWithEvent:(id)arg1;
- (void)quickLookWithEvent:(id)arg1;
- (BOOL)readSelectionFromPasteboard:(id)arg1;
- (void)removeTrackingRect:(long long)arg1;
- (void)renewGState;
- (BOOL)resignFirstResponder;
- (void)rightMouseDown:(id)arg1;
- (void)rightMouseDragged:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)scrollLineDown:(id)arg1;
- (void)scrollLineUp:(id)arg1;
- (void)scrollPageDown:(id)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)scrollToBeginningOfDocument:(id)arg1;
- (void)scrollToEndOfDocument:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)selectLine:(id)arg1;
- (void)selectParagraph:(id)arg1;
- (void)selectSentence:(id)arg1;
- (void)selectToMark:(id)arg1;
- (void)selectWord:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })selectedRange;
- (void)selectedRangeWithCompletionHandler:(id)arg1;
- (void)setAutomaticDashSubstitutionEnabled:(BOOL)arg1;
- (void)setAutomaticLinkDetectionEnabled:(BOOL)arg1;
- (void)setAutomaticQuoteSubstitutionEnabled:(BOOL)arg1;
- (void)setAutomaticTextReplacementEnabled:(BOOL)arg1;
- (void)setDrawsBackground:(BOOL)arg1;
- (void)setDrawsTransparentBackground:(BOOL)arg1;
- (void)setFrameSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setGrammarCheckingEnabled:(BOOL)arg1;
- (void)setMark:(id)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 replacementRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (void)showGuessPanel:(id)arg1;
- (void)startSpeaking:(id)arg1;
- (void)stopSpeaking:(id)arg1;
- (void)subscript:(id)arg1;
- (void)superscript:(id)arg1;
- (void)swapWithMark:(id)arg1;
- (void)swipeWithEvent:(id)arg1;
- (void)takeFindStringFromSelection:(id)arg1;
- (void)toggleAutomaticDashSubstitution:(id)arg1;
- (void)toggleAutomaticLinkDetection:(id)arg1;
- (void)toggleAutomaticQuoteSubstitution:(id)arg1;
- (void)toggleAutomaticSpellingCorrection:(id)arg1;
- (void)toggleAutomaticTextReplacement:(id)arg1;
- (void)toggleContinuousSpellChecking:(id)arg1;
- (void)toggleGrammarChecking:(id)arg1;
- (void)toggleSmartInsertDelete:(id)arg1;
- (void)transpose:(id)arg1;
- (void)underline:(id)arg1;
- (void)unmarkText;
- (void)unscript:(id)arg1;
- (void)uppercaseWord:(id)arg1;
- (id)validAttributesForMarkedText;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint { double x1; double x2; })arg3 userData:(void*)arg4;
- (void)viewDidChangeBackingProperties;
- (void)viewDidEndLiveResize;
- (void)viewDidHide;
- (void)viewDidMoveToWindow;
- (void)viewDidUnhide;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewWillStartLiveResize;
- (BOOL)writeSelectionToPasteboard:(id)arg1 types:(id)arg2;
- (void)yank:(id)arg1;
- (void)yankAndSelect:(id)arg1;

// WKView (Private)

+ (void)hideWordDefinitionWindow;

- (void)_addMediaPlaybackControlsView:(id)arg1;
- (BOOL)_automaticallyAdjustsContentInsets;
- (void)_cancelImmediateActionAnimation;
- (void)_completeImmediateActionAnimation;
- (void)_didChangeContentSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_dismissContentRelativeChildWindows;
- (void)_dismissContentRelativeChildWindowsWithAnimation:(BOOL)arg1;
- (struct CGSize { double x1; double x2; })_fixedLayoutSize;
- (void)_gestureEventWasNotHandledByWebCore:(id)arg1;
- (BOOL)_ignoresAllEvents;
- (BOOL)_ignoresNonWheelEvents;
- (id)_immediateActionAnimationControllerForHitTestResult:(struct OpaqueWKHitTestResult { }*)arg1 withType:(unsigned int)arg2 userData:(void*)arg3;
- (id)_inspectorAttachmentView;
- (unsigned int)_layoutMode;
- (id)_mediaPlaybackControlsView;
- (unsigned long long)_overlayScrollbarStyle;
- (double)_overrideDeviceScaleFactor;
- (id)_pageExtendedBackgroundColor;
- (void)_prepareForImmediateActionAnimation;
- (void)_prepareForMoveToWindow:(id)arg1 withCompletionHandler:(id)arg2;
- (void)_removeMediaPlaybackControlsView;
- (BOOL)_requiresUserActionForEditingControlsManager;
- (void)_setAutomaticallyAdjustsContentInsets:(BOOL)arg1;
- (void)_setCustomSwipeViews:(id)arg1;
- (void)_setCustomSwipeViewsTopContentInset:(float)arg1;
- (void)_setDidMoveSwipeSnapshotCallback:(id)arg1;
- (void)_setFixedLayoutSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_setIgnoresAllEvents:(BOOL)arg1;
- (void)_setIgnoresNonWheelEvents:(BOOL)arg1;
- (void)_setIgnoresNonWheelMouseEvents:(BOOL)arg1;
- (void)_setInspectorAttachmentView:(id)arg1;
- (void)_setLayoutMode:(unsigned int)arg1;
- (void)_setOverlayScrollbarStyle:(unsigned long long)arg1;
- (void)_setOverrideDeviceScaleFactor:(double)arg1;
- (void)_setRequiresUserActionForEditingControlsManager:(BOOL)arg1;
- (void)_setTopContentInset:(double)arg1;
- (void)_setTotalHeightOfBanners:(double)arg1;
- (void)_setViewScale:(double)arg1;
- (void)_setWantsMediaPlaybackControlsView:(BOOL)arg1;
- (double)_topContentInset;
- (double)_totalHeightOfBanners;
- (BOOL)_tryToSwipeWithEvent:(id)arg1 ignoringPinnedState:(BOOL)arg2;
- (double)_viewScale;
- (BOOL)_wantsMediaPlaybackControlsView;
- (BOOL)allowsBackForwardNavigationGestures;
- (BOOL)allowsLinkPreview;
- (BOOL)allowsMagnification;
- (void)beginDeferringViewInWindowChanges;
- (BOOL)canChangeFrameLayout:(struct OpaqueWKFrame { }*)arg1;
- (id)createFullScreenWindow;
- (void)disableFrameSizeUpdates;
- (void)enableFrameSizeUpdates;
- (void)endDeferringViewInWindowChanges;
- (void)endDeferringViewInWindowChangesSync;
- (BOOL)frameSizeUpdatesDisabled;
- (id)fullScreenPlaceholderView;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 configurationRef:(struct OpaqueWKPageConfiguration { }*)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 contextRef:(struct OpaqueWKContext { }*)arg2 pageGroupRef:(struct OpaqueWKPageGroup { }*)arg3;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 contextRef:(struct OpaqueWKContext { }*)arg2 pageGroupRef:(struct OpaqueWKPageGroup { }*)arg3 relatedToPage:(struct OpaqueWKPage { }*)arg4;
- (BOOL)isDeferringViewInWindowChanges;
- (BOOL)isUsingUISideCompositing;
- (double)magnification;
- (void)magnifyWithEvent:(id)arg1;
- (struct CGSize { double x1; double x2; })minimumSizeForAutoLayout;
- (struct OpaqueWKPage { }*)pageRef;
- (id)printOperationWithPrintInfo:(id)arg1 forFrame:(struct OpaqueWKFrame { }*)arg2;
- (void)rotateWithEvent:(id)arg1;
- (void)saveBackForwardSnapshotForCurrentItem;
- (void)saveBackForwardSnapshotForItem:(struct OpaqueWKBackForwardListItem { }*)arg1;
- (void)setAllowsBackForwardNavigationGestures:(BOOL)arg1;
- (void)setAllowsLinkPreview:(BOOL)arg1;
- (void)setAllowsMagnification:(BOOL)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 andScrollBy:(struct CGSize { double x1; double x2; })arg2;
- (void)setMagnification:(double)arg1;
- (void)setMagnification:(double)arg1 centeredAtPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)setMinimumSizeForAutoLayout:(struct CGSize { double x1; double x2; })arg1;
- (void)setShouldClipToVisibleRect:(BOOL)arg1;
- (void)setShouldExpandToViewHeightForAutoLayout:(BOOL)arg1;
- (void)setUnderlayColor:(id)arg1;
- (void)setUserInterfaceLayoutDirection:(long long)arg1;
- (void)setWindowOcclusionDetectionEnabled:(BOOL)arg1;
- (BOOL)shouldClipToVisibleRect;
- (BOOL)shouldExpandToViewHeightForAutoLayout;
- (void)smartMagnifyWithEvent:(id)arg1;
- (id)underlayColor;
- (void)updateLayer;
- (BOOL)wantsUpdateLayer;
- (BOOL)windowOcclusionDetectionEnabled;

@end
