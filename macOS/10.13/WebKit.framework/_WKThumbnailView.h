/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/Versions/A/WebKit
 */

@interface _WKThumbnailView : NSView {
    BOOL  _exclusivelyUsesSnapshot;
    struct CGSize { 
        double width; 
        double height; 
    }  _lastSnapshotMaximumSize;
    double  _lastSnapshotScale;
    struct CGSize { 
        double width; 
        double height; 
    }  _maximumSnapshotSize;
    BOOL  _originalMayStartMediaWhenInWindow;
    BOOL  _originalSourceViewIsInWindow;
    double  _scale;
    BOOL  _shouldKeepSnapshotWhenRemovedFromSuperview;
    struct CGSize { 
        double width; 
        double height; 
    }  _snapshotSize;
    BOOL  _snapshotWasDeferred;
    BOOL  _waitingForSnapshot;
    struct WebPageProxy { int (**x1)(); id x2; int (*x3)(); int (**x4)(); int (**x5)(); int (**x6)(); int (**x7)(); struct RetainPtr<NSArray> { void *x_8_1_1; } x8; struct PageClient {} *x9; struct Ref<API::PageConfiguration> { struct PageConfiguration {} *x_10_1_1; } x10; struct unique_ptr<API::LoaderClient, std::__1::default_delete<API::LoaderClient> > { struct __compressed_pair<API::LoaderClient *, std::__1::default_delete<API::LoaderClient> > { struct LoaderClient {} *x_1_2_1; } x_11_1_1; } x11; struct unique_ptr<API::PolicyClient, std::__1::default_delete<API::PolicyClient> > { struct __compressed_pair<API::PolicyClient *, std::__1::default_delete<API::PolicyClient> > { struct PolicyClient {} *x_1_2_1; } x_12_1_1; } x12; struct unique_ptr<API::NavigationClient, std::__1::default_delete<API::NavigationClient> > { struct __compressed_pair<API::NavigationClient *, std::__1::default_delete<API::NavigationClient> > { struct NavigationClient {} *x_1_2_1; } x_13_1_1; } x13; struct unique_ptr<API::HistoryClient, std::__1::default_delete<API::HistoryClient> > { struct __compressed_pair<API::HistoryClient *, std::__1::default_delete<API::HistoryClient> > { struct HistoryClient {} *x_1_2_1; } x_14_1_1; } x14; } * _webPageProxy;
    struct RetainPtr<WKView> { 
        void *m_ptr; 
    }  _wkView;
}

@property (setter=_setThumbnailLayer:, nonatomic, readwrite) CALayer *_thumbnailLayer;
@property (setter=_setWaitingForSnapshot:, nonatomic, readwrite) BOOL _waitingForSnapshot;
@property (nonatomic, readwrite) BOOL exclusivelyUsesSnapshot;
@property (nonatomic, readwrite) struct CGSize { double x1; double x2; } maximumSnapshotSize;
@property (nonatomic, readwrite) double scale;
@property (nonatomic, readwrite) BOOL shouldKeepSnapshotWhenRemovedFromSuperview;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } snapshotSize;
@property (nonatomic, readwrite) BOOL usesSnapshot;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_didTakeSnapshot:(struct CGImage { }*)arg1;
- (void)_requestSnapshotIfNeeded;
- (void)_setThumbnailLayer:(id)arg1;
- (void)_setWaitingForSnapshot:(BOOL)arg1;
- (id)_thumbnailLayer;
- (void)_viewWasParented;
- (void)_viewWasUnparented;
- (BOOL)_waitingForSnapshot;
- (BOOL)exclusivelyUsesSnapshot;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 fromWKView:(id)arg2;
- (struct CGSize { double x1; double x2; })maximumSnapshotSize;
- (void)requestSnapshot;
- (double)scale;
- (void)setExclusivelyUsesSnapshot:(BOOL)arg1;
- (void)setMaximumSnapshotSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setScale:(double)arg1;
- (void)setShouldKeepSnapshotWhenRemovedFromSuperview:(BOOL)arg1;
- (void)setUsesSnapshot:(BOOL)arg1;
- (BOOL)shouldKeepSnapshotWhenRemovedFromSuperview;
- (struct CGSize { double x1; double x2; })snapshotSize;
- (BOOL)usesSnapshot;
- (void)viewDidMoveToWindow;

@end
