/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/Versions/A/WebKit
 */

@interface WKWebViewConfiguration : NSObject <NSCoding, NSCopying> {
    BOOL  _allowMediaContentTypesRequiringHardwareSupportAsFallback;
    BOOL  _allowUniversalAccessFromFileURLs;
    BOOL  _allowsAirPlayForMediaPlayback;
    BOOL  _allowsJavaScriptMarkup;
    BOOL  _allowsMetaRefresh;
    /* Warning: unhandled struct encoding: '{WeakObjCPtr<WKWebView>="m_weakReference"@}' */ struct WeakObjCPtr<WKWebView> { 
        id m_weakReference; 
    }  _alternateWebViewForNavigationGestures;
    BOOL  _applePayEnabled;
    struct LazyInitialized<WTF::RetainPtr<NSString> > { 
        bool m_isInitialized; 
        struct RetainPtr<NSString> { 
            void *m_ptr; 
        } m_value; 
    }  _applicationNameForUserAgent;
    BOOL  _attachmentElementEnabled;
    BOOL  _controlledByAutomation;
    BOOL  _convertsPositionStyleOnCopy;
    struct RetainPtr<NSString> { 
        void *m_ptr; 
    }  _groupIdentifier;
    BOOL  _imageControlsEnabled;
    double  _incrementalRenderingSuppressionTimeout;
    BOOL  _initialCapitalizationEnabled;
    BOOL  _invisibleAutoplayNotPermitted;
    BOOL  _legacyEncryptedMediaAPIEnabled;
    BOOL  _mainContentUserGestureOverrideEnabled;
    struct RetainPtr<NSString> { 
        void *m_ptr; 
    }  _mediaContentTypesRequiringHardwareSupport;
    BOOL  _mediaDataLoadsAutomatically;
    unsigned long long  _mediaTypesRequiringUserActionForPlayback;
    BOOL  _needsStorageAccessFromFileURLsQuirk;
    struct RetainPtr<NSString> { 
        void *m_ptr; 
    }  _overrideContentSecurityPolicy;
    struct LazyInitialized<WTF::RetainPtr<WKPreferences> > { 
        bool m_isInitialized; 
        struct RetainPtr<WKPreferences> { 
            void *m_ptr; 
        } m_value; 
    }  _preferences;
    BOOL  _printsBackgrounds;
    struct LazyInitialized<WTF::RetainPtr<WKProcessPool> > { 
        bool m_isInitialized; 
        struct RetainPtr<WKProcessPool> { 
            void *m_ptr; 
        } m_value; 
    }  _processPool;
    /* Warning: unhandled struct encoding: '{WeakObjCPtr<WKWebView>="m_weakReference"@}' */ struct WeakObjCPtr<WKWebView> { 
        id m_weakReference; 
    }  _relatedWebView;
    BOOL  _requiresUserActionForEditingControlsManager;
    BOOL  _respectsImageOrientation;
    BOOL  _serviceControlsEnabled;
    BOOL  _showsURLsInToolTips;
    BOOL  _suppressesIncrementalRendering;
    BOOL  _treatsSHA1SignedCertificatesAsInsecure;
    struct LazyInitialized<WTF::RetainPtr<NSMutableDictionary<NSString *,id<WKURLSchemeHandler>> > > { 
        bool m_isInitialized; 
        struct RetainPtr<NSMutableDictionary<NSString *,id<WKURLSchemeHandler>> > { 
            void *m_ptr; 
        } m_value; 
    }  _urlSchemeHandlers;
    struct LazyInitialized<WTF::RetainPtr<WKUserContentController> > { 
        bool m_isInitialized; 
        struct RetainPtr<WKUserContentController> { 
            void *m_ptr; 
        } m_value; 
    }  _userContentController;
    long long  _userInterfaceDirectionPolicy;
    struct LazyInitialized<WTF::RetainPtr<_WKVisitedLinkStore> > { 
        bool m_isInitialized; 
        struct RetainPtr<_WKVisitedLinkStore> { 
            void *m_ptr; 
        } m_value; 
    }  _visitedLinkStore;
    BOOL  _waitsForPaintAfterViewDidMoveToWindow;
    struct LazyInitialized<WTF::RetainPtr<WKWebsiteDataStore> > { 
        bool m_isInitialized; 
        struct RetainPtr<WKWebsiteDataStore> { 
            void *m_ptr; 
        } m_value; 
    }  _websiteDataStore;
}

@property (setter=_setAllowMediaContentTypesRequiringHardwareSupportAsFallback:, nonatomic, readwrite) BOOL _allowMediaContentTypesRequiringHardwareSupportAsFallback;
@property (setter=_setAllowUniversalAccessFromFileURLs:, nonatomic, readwrite) BOOL _allowUniversalAccessFromFileURLs;
@property (setter=_setAllowsJavaScriptMarkup:, nonatomic, readwrite) BOOL _allowsJavaScriptMarkup;
@property (setter=_setAllowsMetaRefresh:, nonatomic, readwrite) BOOL _allowsMetaRefresh;
@property (setter=_setAlternateWebViewForNavigationGestures:, nonatomic, readwrite) WKWebView *_alternateWebViewForNavigationGestures;
@property (setter=_setApplePayEnabled:, nonatomic, readwrite) BOOL _applePayEnabled;
@property (setter=_setAttachmentElementEnabled:, nonatomic, readwrite) BOOL _attachmentElementEnabled;
@property (getter=_isControlledByAutomation, setter=_setControlledByAutomation:, nonatomic, readwrite) BOOL _controlledByAutomation;
@property (setter=_setConvertsPositionStyleOnCopy:, nonatomic, readwrite) BOOL _convertsPositionStyleOnCopy;
@property (setter=_setGroupIdentifier:, nonatomic, readwrite, copy) NSString *_groupIdentifier;
@property (setter=_setImageControlsEnabled:, nonatomic, readwrite) BOOL _imageControlsEnabled;
@property (setter=_setIncrementalRenderingSuppressionTimeout:, nonatomic, readwrite) double _incrementalRenderingSuppressionTimeout;
@property (setter=_setInitialCapitalizationEnabled:, nonatomic, readwrite) BOOL _initialCapitalizationEnabled;
@property (setter=_setInvisibleAutoplayNotPermitted:, nonatomic, readwrite) BOOL _invisibleAutoplayNotPermitted;
@property (setter=_setLegacyEncryptedMediaAPIEnabled:, nonatomic, readwrite) BOOL _legacyEncryptedMediaAPIEnabled;
@property (setter=_setMainContentUserGestureOverrideEnabled:, nonatomic, readwrite) BOOL _mainContentUserGestureOverrideEnabled;
@property (setter=_setMediaContentTypesRequiringHardwareSupport:, nonatomic, readwrite) NSString *_mediaContentTypesRequiringHardwareSupport;
@property (setter=_setMediaDataLoadsAutomatically:, nonatomic, readwrite) BOOL _mediaDataLoadsAutomatically;
@property (setter=_setNeedsStorageAccessFromFileURLsQuirk:, nonatomic, readwrite) BOOL _needsStorageAccessFromFileURLsQuirk;
@property (setter=_setOverrideContentSecurityPolicy:, nonatomic, readwrite) NSString *_overrideContentSecurityPolicy;
@property (setter=_setPrintsBackgrounds:, nonatomic, readwrite) BOOL _printsBackgrounds;
@property (setter=_setRelatedWebView:, nonatomic, readwrite) WKWebView *_relatedWebView;
@property (setter=_setRequiresUserActionForAudioPlayback:, nonatomic, readwrite) BOOL _requiresUserActionForAudioPlayback;
@property (setter=_setRequiresUserActionForEditingControlsManager:, nonatomic, readwrite) BOOL _requiresUserActionForEditingControlsManager;
@property (setter=_setRequiresUserActionForVideoPlayback:, nonatomic, readwrite) BOOL _requiresUserActionForVideoPlayback;
@property (setter=_setRespectsImageOrientation:, nonatomic, readwrite) BOOL _respectsImageOrientation;
@property (setter=_setServiceControlsEnabled:, nonatomic, readwrite) BOOL _serviceControlsEnabled;
@property (setter=_setShowsURLsInToolTips:, nonatomic, readwrite) BOOL _showsURLsInToolTips;
@property (setter=_setTreatsSHA1SignedCertificatesAsInsecure:, nonatomic, readwrite) BOOL _treatsSHA1SignedCertificatesAsInsecure;
@property (nonatomic, readonly) NSMutableDictionary *_urlSchemeHandlers;
@property (setter=_setVisitedLinkStore:, nonatomic, readwrite, retain) _WKVisitedLinkStore *_visitedLinkStore;
@property (setter=_setWaitsForPaintAfterViewDidMoveToWindow:, nonatomic, readwrite) BOOL _waitsForPaintAfterViewDidMoveToWindow;
@property (setter=_setWebsiteDataStore:, nonatomic, readwrite, retain) _WKWebsiteDataStore *_websiteDataStore;
@property (nonatomic, readwrite) BOOL allowsAirPlayForMediaPlayback;
@property (nonatomic, readwrite, copy) NSString *applicationNameForUserAgent;
@property (nonatomic, readwrite) unsigned long long mediaTypesRequiringUserActionForPlayback;
@property (nonatomic, readwrite, retain) WKPreferences *preferences;
@property (nonatomic, readwrite, retain) WKProcessPool *processPool;
@property (nonatomic, readwrite) BOOL suppressesIncrementalRendering;
@property (nonatomic, readwrite, retain) WKUserContentController *userContentController;
@property (nonatomic, readwrite) long long userInterfaceDirectionPolicy;
@property (nonatomic, readwrite, retain) WKWebsiteDataStore *websiteDataStore;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_setVisitedLinkStore:(id)arg1;
- (void)_setWebsiteDataStore:(id)arg1;
- (id)_urlSchemeHandlers;
- (void)_validate;
- (id)_visitedLinkStore;
- (id)_websiteDataStore;
- (BOOL)allowsAirPlayForMediaPlayback;
- (id)applicationNameForUserAgent;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)mediaTypesRequiringUserActionForPlayback;
- (id)preferences;
- (id)processPool;
- (void)setAllowsAirPlayForMediaPlayback:(BOOL)arg1;
- (void)setApplicationNameForUserAgent:(id)arg1;
- (void)setMediaTypesRequiringUserActionForPlayback:(unsigned long long)arg1;
- (void)setPreferences:(id)arg1;
- (void)setProcessPool:(id)arg1;
- (void)setSuppressesIncrementalRendering:(BOOL)arg1;
- (void)setURLSchemeHandler:(id)arg1 forURLScheme:(id)arg2;
- (void)setUserContentController:(id)arg1;
- (void)setUserInterfaceDirectionPolicy:(long long)arg1;
- (void)setWebsiteDataStore:(id)arg1;
- (BOOL)suppressesIncrementalRendering;
- (id)urlSchemeHandlerForURLScheme:(id)arg1;
- (id)userContentController;
- (long long)userInterfaceDirectionPolicy;
- (id)websiteDataStore;

// WKWebViewConfiguration (WKBinaryCompatibilityWithIOS10)

- (void)_setVisitedLinkProvider:(id)arg1;
- (id)_visitedLinkProvider;

// WKWebViewConfiguration (WKPrivate)

- (BOOL)_allowMediaContentTypesRequiringHardwareSupportAsFallback;
- (BOOL)_allowUniversalAccessFromFileURLs;
- (BOOL)_allowsJavaScriptMarkup;
- (BOOL)_allowsMetaRefresh;
- (id)_alternateWebViewForNavigationGestures;
- (BOOL)_applePayEnabled;
- (BOOL)_attachmentElementEnabled;
- (BOOL)_convertsPositionStyleOnCopy;
- (id)_groupIdentifier;
- (BOOL)_imageControlsEnabled;
- (double)_incrementalRenderingSuppressionTimeout;
- (BOOL)_initialCapitalizationEnabled;
- (BOOL)_invisibleAutoplayNotPermitted;
- (BOOL)_isControlledByAutomation;
- (BOOL)_legacyEncryptedMediaAPIEnabled;
- (BOOL)_mainContentUserGestureOverrideEnabled;
- (id)_mediaContentTypesRequiringHardwareSupport;
- (BOOL)_mediaDataLoadsAutomatically;
- (BOOL)_needsStorageAccessFromFileURLsQuirk;
- (id)_overrideContentSecurityPolicy;
- (BOOL)_printsBackgrounds;
- (id)_relatedWebView;
- (BOOL)_requiresUserActionForAudioPlayback;
- (BOOL)_requiresUserActionForEditingControlsManager;
- (BOOL)_requiresUserActionForVideoPlayback;
- (BOOL)_respectsImageOrientation;
- (BOOL)_serviceControlsEnabled;
- (void)_setAllowMediaContentTypesRequiringHardwareSupportAsFallback:(BOOL)arg1;
- (void)_setAllowUniversalAccessFromFileURLs:(BOOL)arg1;
- (void)_setAllowsJavaScriptMarkup:(BOOL)arg1;
- (void)_setAllowsMetaRefresh:(BOOL)arg1;
- (void)_setAlternateWebViewForNavigationGestures:(id)arg1;
- (void)_setApplePayEnabled:(BOOL)arg1;
- (void)_setAttachmentElementEnabled:(BOOL)arg1;
- (void)_setControlledByAutomation:(BOOL)arg1;
- (void)_setConvertsPositionStyleOnCopy:(BOOL)arg1;
- (void)_setGroupIdentifier:(id)arg1;
- (void)_setImageControlsEnabled:(BOOL)arg1;
- (void)_setIncrementalRenderingSuppressionTimeout:(double)arg1;
- (void)_setInitialCapitalizationEnabled:(BOOL)arg1;
- (void)_setInvisibleAutoplayNotPermitted:(BOOL)arg1;
- (void)_setLegacyEncryptedMediaAPIEnabled:(BOOL)arg1;
- (void)_setMainContentUserGestureOverrideEnabled:(BOOL)arg1;
- (void)_setMediaContentTypesRequiringHardwareSupport:(id)arg1;
- (void)_setMediaDataLoadsAutomatically:(BOOL)arg1;
- (void)_setNeedsStorageAccessFromFileURLsQuirk:(BOOL)arg1;
- (void)_setOverrideContentSecurityPolicy:(id)arg1;
- (void)_setPrintsBackgrounds:(BOOL)arg1;
- (void)_setRelatedWebView:(id)arg1;
- (void)_setRequiresUserActionForAudioPlayback:(BOOL)arg1;
- (void)_setRequiresUserActionForEditingControlsManager:(BOOL)arg1;
- (void)_setRequiresUserActionForVideoPlayback:(BOOL)arg1;
- (void)_setRespectsImageOrientation:(BOOL)arg1;
- (void)_setServiceControlsEnabled:(BOOL)arg1;
- (void)_setShowsURLsInToolTips:(BOOL)arg1;
- (void)_setTreatsSHA1SignedCertificatesAsInsecure:(BOOL)arg1;
- (void)_setWaitsForPaintAfterViewDidMoveToWindow:(BOOL)arg1;
- (BOOL)_showsURLsInToolTips;
- (BOOL)_treatsSHA1SignedCertificatesAsInsecure;
- (BOOL)_waitsForPaintAfterViewDidMoveToWindow;

@end
