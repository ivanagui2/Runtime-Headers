/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebKitLegacy.framework/Versions/A/WebKitLegacy
 */

@interface WebFrame : NSObject {
    WebFramePrivate * _private;
}

@property (nonatomic, readonly) DOMDocument *DOMDocument;
@property (nonatomic, readonly, copy) NSArray *childFrames;
@property (nonatomic, readonly) WebDataSource *dataSource;
@property (nonatomic, readonly) DOMHTMLElement *frameElement;
@property (nonatomic, readonly) WebFrameView *frameView;
@property (nonatomic, readonly) struct OpaqueJSContext { }*globalContext;
@property (nonatomic, readonly) BOOL hasRichlyEditableDragCaret;
@property (nonatomic, readonly) JSContext *javaScriptContext;
@property (nonatomic, readonly, copy) NSString *name;
@property (nonatomic, readonly) WebFrame *parentFrame;
@property (nonatomic, readonly) WebDataSource *provisionalDataSource;
@property (nonatomic, readonly) WebView *webView;
@property (nonatomic, readonly) WebScriptObject *windowObject;

- (id)DOMDocument;
- (void)_loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4 unreachableURL:(id)arg5;
- (void)_loadHTMLString:(id)arg1 baseURL:(id)arg2 unreachableURL:(id)arg3;
- (id)childFrames;
- (id)dataSource;
- (void)dealloc;
- (id)findFrameNamed:(id)arg1;
- (id)frameElement;
- (id)frameView;
- (struct OpaqueJSContext { }*)globalContext;
- (id)init;
- (id)initWithName:(id)arg1 webFrameView:(id)arg2 webView:(id)arg3;
- (id)javaScriptContext;
- (void)loadAlternateHTMLString:(id)arg1 baseURL:(id)arg2 forUnreachableURL:(id)arg3;
- (void)loadArchive:(id)arg1;
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)loadRequest:(id)arg1;
- (id)name;
- (id)parentFrame;
- (id)provisionalDataSource;
- (void)reload;
- (void)reloadFromOrigin;
- (void)stopLoading;
- (id)webView;
- (id)windowObject;

// WebFrame (WebInternal)

+ (struct Ref<WebCore::Frame> { struct Frame {} *x1; })_createFrameWithPage:(struct Page { struct HashMap<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > >, WTF::PtrHash<const char *>, WTF::HashTraits<const char *>, WTF::HashTraits<std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > > { struct HashTable<const char *, WTF::KeyValuePair<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > >, WTF::PtrHash<const char *>, WTF::HashMap<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > >, WTF::PtrHash<const char *>, WTF::HashTraits<const char *>, WTF::HashTraits<std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > >::KeyValuePairTraits, WTF::HashTraits<const char *> > { struct KeyValuePair<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > {} *x_1_2_1; unsigned int x_1_2_2; unsigned int x_1_2_3; unsigned int x_1_2_4; unsigned int x_1_2_5; } x_1_1_1; } x1; }*)arg1 frameName:(const struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_1_1; } x1; }*)arg2 frameView:(id)arg3 ownerElement:(struct HTMLFrameOwnerElement { int (**x1)(); struct Weak<WebCore::JSDOMObject> { struct WeakImpl {} *x_2_1_1; } x2; int x3; unsigned int x4; struct ContainerNode {} *x5; struct TreeScope {} *x6; struct Node {} *x7; struct Node {} *x8; union DataUnion { struct RenderObject {} *x_9_1_1; struct NodeRareDataBase {} *x_9_1_2; } x9; struct Node {} *x10; struct Node {} *x11; struct QualifiedName { struct RefPtr<WebCore::QualifiedName::QualifiedNameImpl> { struct QualifiedNameImpl {} *x_1_2_1; } x_12_1_1; } x12; struct RefPtr<WebCore::ElementData> { struct ElementData {} *x_13_1_1; } x13; struct Frame {} *x14; int x15; }*)arg4;
+ (void)_createMainFrameWithPage:(struct Page { struct HashMap<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > >, WTF::PtrHash<const char *>, WTF::HashTraits<const char *>, WTF::HashTraits<std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > > { struct HashTable<const char *, WTF::KeyValuePair<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > >, WTF::PtrHash<const char *>, WTF::HashMap<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > >, WTF::PtrHash<const char *>, WTF::HashTraits<const char *>, WTF::HashTraits<std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > >::KeyValuePairTraits, WTF::HashTraits<const char *> > { struct KeyValuePair<const char *, std::__1::unique_ptr<WebCore::Supplement<WebCore::Page>, std::__1::default_delete<WebCore::Supplement<WebCore::Page> > > > {} *x_1_2_1; unsigned int x_1_2_2; unsigned int x_1_2_3; unsigned int x_1_2_4; unsigned int x_1_2_5; } x_1_1_1; } x1; }*)arg1 frameName:(const struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_1_1; } x1; }*)arg2 frameView:(id)arg3;
+ (struct Ref<WebCore::Frame> { struct Frame {} *x1; })_createSubframeWithOwnerElement:(struct HTMLFrameOwnerElement { int (**x1)(); struct Weak<WebCore::JSDOMObject> { struct WeakImpl {} *x_2_1_1; } x2; int x3; unsigned int x4; struct ContainerNode {} *x5; struct TreeScope {} *x6; struct Node {} *x7; struct Node {} *x8; union DataUnion { struct RenderObject {} *x_9_1_1; struct NodeRareDataBase {} *x_9_1_2; } x9; struct Node {} *x10; struct Node {} *x11; struct QualifiedName { struct RefPtr<WebCore::QualifiedName::QualifiedNameImpl> { struct QualifiedNameImpl {} *x_1_2_1; } x_12_1_1; } x12; struct RefPtr<WebCore::ElementData> { struct ElementData {} *x_13_1_1; } x13; struct Frame {} *x14; int x15; }*)arg1 frameName:(const struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_1_1; } x1; }*)arg2 frameView:(id)arg3;

- (void)_attachScriptDebugger;
- (BOOL)_canProvideDocumentSource;
- (BOOL)_canSaveAsWebArchive;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_caretRectAtPosition:(const struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_1_1; } x1; int x2; unsigned int x3 : 3; unsigned int x4 : 1; }*)arg1 affinity:(unsigned long long)arg2;
- (id)_characterRangeAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_clearCoreFrame;
- (void)_clearSelection;
- (void)_clearSelectionInOtherFrames;
- (void)_commitData:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_convertDOMRangeToNSRange:(id)arg1;
- (id)_convertNSRangeToDOMRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct RefPtr<WebCore::Range> { struct Range {} *x1; })_convertToDOMRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct RefPtr<WebCore::Range> { struct Range {} *x1; })_convertToDOMRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 rangeIsRelativeTo:(unsigned char)arg2;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_convertToNSRange:(struct Range { unsigned int x1; struct Ref<WebCore::Document> { struct Document {} *x_2_1_1; } x2; struct RangeBoundaryPoint { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_3_1_1; struct optional<unsigned int> { bool x_2_2_1; union constexpr_storage_t<unsigned int> { unsigned char x_2_3_1; unsigned int x_2_3_2; } x_2_2_2; } x_3_1_2; struct RefPtr<WebCore::Node> { struct Node {} *x_3_2_1; } x_3_1_3; } x3; struct RangeBoundaryPoint { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_4_1_1; struct optional<unsigned int> { bool x_2_2_1; union constexpr_storage_t<unsigned int> { unsigned char x_2_3_1; unsigned int x_2_3_2; } x_2_2_2; } x_4_1_2; struct RefPtr<WebCore::Node> { struct Node {} *x_3_2_1; } x_4_1_3; } x4; }*)arg1;
- (id)_dataSource;
- (void)_detachScriptDebugger;
- (id)_documentFragmentWithMarkupString:(id)arg1 baseURLString:(id)arg2;
- (id)_documentFragmentWithNodesAsParagraphs:(id)arg1;
- (void)_dragSourceEndedAt:(struct CGPoint { double x1; double x2; })arg1 operation:(unsigned long long)arg2;
- (void)_drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 contentsOnly:(BOOL)arg2;
- (id)_findFrameWithSelection;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_firstRectForDOMRange:(id)arg1;
- (BOOL)_getVisibleRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1;
- (BOOL)_hasSelection;
- (id)_initWithWebFrameView:(id)arg1 webView:(id)arg2;
- (void)_insertParagraphSeparatorInQuotedContent;
- (id)_internalLoadDelegate;
- (BOOL)_isIncludedInWebKitStatistics;
- (id)_markDOMRange;
- (BOOL)_needsLayout;
- (id)_nodesFromList:(struct Vector<WebCore::Node *, 0, WTF::CrashOnOverflow, 16> { struct Node {} **x1; unsigned int x2; unsigned int x3; }*)arg1;
- (unsigned int)_paintBehaviorForDestinationContext:(struct CGContext { }*)arg1;
- (id)_rangeByAlteringCurrentSelection:(int)arg1 direction:(unsigned char)arg2 granularity:(int)arg3;
- (void)_replaceSelectionWithNode:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3 matchStyle:(BOOL)arg4;
- (void)_scrollDOMRangeToVisible:(id)arg1;
- (id)_selectedString;
- (int)_selectionGranularity;
- (void)_setInternalLoadDelegate:(id)arg1;
- (void)_setTypingStyle:(id)arg1 withUndoAction:(int)arg2;
- (id)_stringByEvaluatingJavaScriptFromString:(id)arg1;
- (id)_stringByEvaluatingJavaScriptFromString:(id)arg1 forceUserGesture:(BOOL)arg2;
- (id)_stringForRange:(id)arg1;
- (id)_typingStyle;
- (void)_unmarkAllBadGrammar;
- (void)_unmarkAllMisspellings;
- (void)_updateBackgroundAndUpdatesWhileOffscreen;
- (struct VisiblePosition { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_1_1_1; int x_1_1_2; unsigned int x_1_1_3 : 3; unsigned int x_1_1_4 : 1; } x1; int x2; })_visiblePositionForPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)_webHTMLDocumentView;

// WebFrame (WebKitDebug)

- (int)numberOfPagesWithPageWidth:(float)arg1 pageHeight:(float)arg2;
- (void)printToCGContext:(struct CGContext { }*)arg1 pageWidth:(float)arg2 pageHeight:(float)arg3;
- (id)renderTreeAsExternalRepresentationForPrinting:(BOOL)arg1;

// WebFrame (WebPrivate)

- (BOOL)_allowsFollowingLink:(id)arg1;
- (id)_bodyBackgroundColor;
- (id)_cacheabilityDictionary;
- (void)_clearOpener;
- (id)_computePageRectsWithPrintScaleFactor:(float)arg1 pageSize:(struct CGSize { double x1; double x2; })arg2;
- (BOOL)_firstLayoutDone;
- (struct OpaqueJSContext { }*)_globalContextForScriptWorld:(id)arg1;
- (BOOL)_isDescendantOfFrame:(id)arg1;
- (BOOL)_isDisplayingStandaloneImage;
- (BOOL)_isFrameSet;
- (BOOL)_isVisuallyNonEmpty;
- (id)_javaScriptContextForScriptWorld:(id)arg1;
- (id)_layerTreeAsText;
- (int)_loadType;
- (unsigned int)_pendingFrameUnloadEventCount;
- (void)_recursive_pauseNullEventsForAllNetscapePlugins;
- (void)_recursive_resumeNullEventsForAllNetscapePlugins;
- (void)_replaceSelectionWithFragment:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3 matchStyle:(BOOL)arg4;
- (void)_replaceSelectionWithMarkupString:(id)arg1 baseURLString:(id)arg2 selectReplacement:(BOOL)arg3 smartReplace:(BOOL)arg4;
- (void)_replaceSelectionWithText:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3;
- (void)_selectNSRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_selectedNSRange;
- (void)_setShouldCreateRenderers:(BOOL)arg1;
- (void)_setTextAutosizingWidth:(double)arg1;
- (void)_setVisibleSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_smartInsertForString:(id)arg1 replacingRange:(id)arg2 beforeString:(id*)arg3 afterString:(id*)arg4;
- (id)_stringByEvaluatingJavaScriptFromString:(id)arg1 withGlobalObject:(struct OpaqueJSValue { }*)arg2 inScriptWorld:(id)arg3;
- (id)_unreachableURL;
- (id)accessibilityRoot;
- (id)elementAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)enhancedAccessibilityEnabled;
- (BOOL)hasRichlyEditableDragCaret;
- (struct OpaqueJSValue { }*)jsWrapperForNode:(id)arg1 inScriptWorld:(id)arg2;
- (void)resetTextAutosizingBeforeLayout;
- (void)setAccessibleName:(id)arg1;
- (void)setAllowsScrollersToOverlapContent:(BOOL)arg1;
- (void)setAlwaysHideHorizontalScroller:(BOOL)arg1;
- (void)setAlwaysHideVerticalScroller:(BOOL)arg1;
- (void)setEnhancedAccessibility:(BOOL)arg1;

@end
