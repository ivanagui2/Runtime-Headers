/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/Versions/A/WebKit
 */

@interface WKNavigationAction : NSObject <WKObject> {
    struct ObjectStorage<API::NavigationAction> { 
        struct type { 
            unsigned char __lx[384]; 
        } data; 
    }  _navigationAction;
}

@property (atomic, readonly) /* Warning: unhandled struct encoding: '{Object=^^?@}' */ struct Object { int (**x1)(); id x2; }*_apiObject;
@property (nonatomic, readonly) BOOL _canHandleRequest;
@property (nonatomic, readonly) BOOL _isRedirect;
@property (nonatomic, readonly) NSURL *_originalURL;
@property (nonatomic, readonly) BOOL _shouldOpenAppLinks;
@property (nonatomic, readonly) BOOL _shouldOpenExternalSchemes;
@property (nonatomic, readonly) BOOL _shouldOpenExternalURLs;
@property (getter=_isUserInitiated, nonatomic, readonly) BOOL _userInitiated;
@property (nonatomic, readonly) _WKUserInitiatedAction *_userInitiatedAction;
@property (nonatomic, readonly) long long buttonNumber;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (nonatomic, readonly) unsigned long long modifierFlags;
@property (nonatomic, readonly) long long navigationType;
@property (nonatomic, readonly, copy) NSURLRequest *request;
@property (nonatomic, readonly, copy) WKFrameInfo *sourceFrame;
@property (atomic, readonly) Class superclass;
@property (nonatomic, readonly, copy) WKFrameInfo *targetFrame;

- (/* Warning: unhandled struct encoding: '{Object=^^?@}' */ struct Object { int (**x1)(); id x2; }*)_apiObject;
- (long long)buttonNumber;
- (void)dealloc;
- (id)description;
- (unsigned long long)modifierFlags;
- (long long)navigationType;
- (id)request;
- (id)sourceFrame;
- (id)targetFrame;

// WKNavigationAction (WKPrivate)

- (BOOL)_canHandleRequest;
- (BOOL)_isRedirect;
- (BOOL)_isUserInitiated;
- (id)_originalURL;
- (BOOL)_shouldOpenAppLinks;
- (BOOL)_shouldOpenExternalSchemes;
- (BOOL)_shouldOpenExternalURLs;
- (id)_userInitiatedAction;

@end
