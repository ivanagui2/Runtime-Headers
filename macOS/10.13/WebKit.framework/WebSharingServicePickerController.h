/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebKitLegacy.framework/Versions/A/WebKitLegacy
 */

@interface WebSharingServicePickerController : NSObject <NSSharingServiceDelegate, NSSharingServicePickerDelegate> {
    BOOL  _handleEditingReplacement;
    BOOL  _includeEditorServices;
    struct RetainPtr<NSSharingServicePicker> { 
        void *m_ptr; 
    }  _picker;
    /* Warning: unhandled struct encoding: '{WebSharingServicePickerClient=^^?@}' */ struct WebSharingServicePickerClient { int (**x1)(); id x2; } * _pickerClient;
}

@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)clear;
- (void)didShareImageData:(id)arg1 confirmDataIsValidTIFFData:(BOOL)arg2;
- (id)initWithItems:(id)arg1 includeEditorServices:(BOOL)arg2 client:(/* Warning: unhandled struct encoding: '{WebSharingServicePickerClient=^^?@}' */ struct WebSharingServicePickerClient { int (**x1)(); id x2; }*)arg3 style:(long long)arg4;
- (id)initWithSharingServicePicker:(id)arg1 client:(/* Warning: unhandled struct encoding: '{WebSharingServicePickerClient=^^?@}' */ struct WebSharingServicePickerClient { int (**x1)(); id x2; }*)arg2;
- (id)menu;
- (void)sharingService:(id)arg1 didFailToShareItems:(id)arg2 error:(id)arg3;
- (void)sharingService:(id)arg1 didShareItems:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })sharingService:(id)arg1 sourceFrameOnScreenForShareItem:(id)arg2;
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long*)arg3;
- (id)sharingService:(id)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg3;
- (id)sharingServicePicker:(id)arg1 delegateForSharingService:(id)arg2;
- (void)sharingServicePicker:(id)arg1 didChooseSharingService:(id)arg2;
- (id)sharingServicePicker:(id)arg1 sharingServicesForItems:(id)arg2 mask:(unsigned long long)arg3 proposedSharingServices:(id)arg4;

@end
