/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore
 */

@interface WebPlaybackControlsManager : NSObject <AVTouchBarPlaybackControlsControlling> {
    struct RetainPtr<NSArray<AVTouchBarMediaSelectionOption *> > { 
        void *m_ptr; 
    }  _audioTouchBarMediaSelectionOptions;
    BOOL  _canTogglePlayback;
    double  _contentDuration;
    struct RetainPtr<AVTouchBarMediaSelectionOption> { 
        void *m_ptr; 
    }  _currentAudioTouchBarMediaSelectionOption;
    struct RetainPtr<AVTouchBarMediaSelectionOption> { 
        void *m_ptr; 
    }  _currentLegibleTouchBarMediaSelectionOption;
    BOOL  _hasEnabledAudio;
    BOOL  _hasEnabledVideo;
    struct RetainPtr<NSArray<AVTouchBarMediaSelectionOption *> > { 
        void *m_ptr; 
    }  _legibleTouchBarMediaSelectionOptions;
    float  _rate;
    double  _seekToTime;
    struct RetainPtr<NSArray> { 
        void *m_ptr; 
    }  _seekableTimeRanges;
    struct RetainPtr<AVValueTiming> { 
        void *m_ptr; 
    }  _timing;
    struct RefPtr<WebCore::WebPlaybackSessionInterfaceMac> { 
        struct WebPlaybackSessionInterfaceMac {} *m_ptr; 
    }  _webPlaybackSessionInterfaceMac;
    BOOL  allowsPictureInPicturePlayback;
    BOOL  canTogglePictureInPicture;
    BOOL  pictureInPictureActive;
}

@property (atomic, readwrite) BOOL allowsPictureInPicturePlayback;
@property (atomic, readonly) NSURL *assetURL;
@property (atomic, readonly) NSArray *audioTouchBarMediaSelectionOptions;
@property (atomic, readonly) BOOL canBeginTouchBarScrubbing;
@property (atomic, readwrite) BOOL canTogglePictureInPicture;
@property (atomic, readwrite) BOOL canTogglePlayback;
@property (atomic, readwrite) double contentDuration;
@property (atomic, readwrite) AVTouchBarMediaSelectionOption *currentAudioTouchBarMediaSelectionOption;
@property (atomic, readwrite) AVTouchBarMediaSelectionOption *currentLegibleTouchBarMediaSelectionOption;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (nonatomic, readwrite) BOOL hasEnabledAudio;
@property (nonatomic, readwrite) BOOL hasEnabledVideo;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readonly) NSArray *legibleTouchBarMediaSelectionOptions;
@property (getter=isPictureInPictureActive, atomic, readwrite) BOOL pictureInPictureActive;
@property (getter=isPlaying, atomic, readwrite) BOOL playing;
@property (nonatomic, readwrite) float rate;
@property (nonatomic, readwrite) double seekToTime;
@property (nonatomic, readwrite, retain) NSArray *seekableTimeRanges;
@property (getter=isSeeking, atomic, readonly) BOOL seeking;
@property (atomic, readonly) Class superclass;
@property (nonatomic, readwrite, retain) AVValueTiming *timing;
@property (atomic, readwrite) /* Warning: unhandled struct encoding: '{WebPlaybackSessionInterfaceMac=^^?^^?I^{WebPlaybackSessionModel}@}' */ struct WebPlaybackSessionInterfaceMac { int (**x1)(); int (**x2)(); unsigned int x3; struct WebPlaybackSessionModel {} *x4; id x5; }*webPlaybackSessionInterfaceMac;

- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)allowsPictureInPicturePlayback;
- (id)audioTouchBarMediaSelectionOptions;
- (void)beginTouchBarScrubbing;
- (BOOL)canBeginTouchBarScrubbing;
- (BOOL)canTogglePictureInPicture;
- (BOOL)canTogglePlayback;
- (void)cancelThumbnailAndAudioAmplitudeSampleGeneration;
- (double)contentDuration;
- (id)currentAudioTouchBarMediaSelectionOption;
- (id)currentLegibleTouchBarMediaSelectionOption;
- (void)dealloc;
- (void)endTouchBarScrubbing;
- (void)generateTouchBarAudioAmplitudeSamples:(long long)arg1 completionHandler:(id)arg2;
- (void)generateTouchBarThumbnailsForTimes:(id)arg1 tolerance:(double)arg2 size:(struct CGSize { double x1; double x2; })arg3 thumbnailHandler:(id)arg4;
- (BOOL)hasEnabledAudio;
- (BOOL)hasEnabledVideo;
- (BOOL)isPictureInPictureActive;
- (BOOL)isPlaying;
- (BOOL)isSeeking;
- (id)legibleTouchBarMediaSelectionOptions;
- (float)rate;
- (double)seekToTime;
- (void)seekToTime:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;
- (id)seekableTimeRanges;
- (void)setAllowsPictureInPicturePlayback:(BOOL)arg1;
- (void)setAudioMediaSelectionIndex:(unsigned long long)arg1;
- (void)setAudioMediaSelectionOptions:(const struct Vector<WebCore::MediaSelectionOption, 0, WTF::CrashOnOverflow, 16> { struct MediaSelectionOption {} *x1; unsigned int x2; unsigned int x3; }*)arg1 withSelectedIndex:(unsigned long long)arg2;
- (void)setAudioTouchBarMediaSelectionOptions:(id)arg1;
- (void)setCanTogglePictureInPicture:(BOOL)arg1;
- (void)setCanTogglePlayback:(BOOL)arg1;
- (void)setContentDuration:(double)arg1;
- (void)setCurrentAudioTouchBarMediaSelectionOption:(id)arg1;
- (void)setCurrentLegibleTouchBarMediaSelectionOption:(id)arg1;
- (void)setHasEnabledAudio:(BOOL)arg1;
- (void)setHasEnabledVideo:(BOOL)arg1;
- (void)setLegibleMediaSelectionIndex:(unsigned long long)arg1;
- (void)setLegibleMediaSelectionOptions:(const struct Vector<WebCore::MediaSelectionOption, 0, WTF::CrashOnOverflow, 16> { struct MediaSelectionOption {} *x1; unsigned int x2; unsigned int x3; }*)arg1 withSelectedIndex:(unsigned long long)arg2;
- (void)setLegibleTouchBarMediaSelectionOptions:(id)arg1;
- (void)setPictureInPictureActive:(BOOL)arg1;
- (void)setPlaying:(BOOL)arg1;
- (void)setRate:(float)arg1;
- (void)setSeekToTime:(double)arg1;
- (void)setSeekableTimeRanges:(id)arg1;
- (void)setTiming:(id)arg1;
- (void)setWebPlaybackSessionInterfaceMac:(/* Warning: unhandled struct encoding: '{WebPlaybackSessionInterfaceMac=^^?^^?I^{WebPlaybackSessionModel}@}' */ struct WebPlaybackSessionInterfaceMac { int (**x1)(); int (**x2)(); unsigned int x3; struct WebPlaybackSessionModel {} *x4; id x5; }*)arg1;
- (id)timing;
- (void)togglePictureInPicture;
- (void)togglePlayback;
- (/* Warning: unhandled struct encoding: '{WebPlaybackSessionInterfaceMac=^^?^^?I^{WebPlaybackSessionModel}@}' */ struct WebPlaybackSessionInterfaceMac { int (**x1)(); int (**x2)(); unsigned int x3; struct WebPlaybackSessionModel {} *x4; id x5; }*)webPlaybackSessionInterfaceMac;

@end
