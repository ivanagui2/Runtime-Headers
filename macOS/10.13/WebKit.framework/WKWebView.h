/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/Versions/A/WebKit
 */

@interface WKWebView : NSView <NSTextInputClient, NSTouchBarProvider, NSUserInterfaceValidations, WebViewImplDelegate> {
    struct RetainPtr<WKWebViewConfiguration> { 
        void *m_ptr; 
    }  _configuration;
    struct unique_ptr<WebKit::IconLoadingDelegate, std::__1::default_delete<WebKit::IconLoadingDelegate> > { 
        struct __compressed_pair<WebKit::IconLoadingDelegate *, std::__1::default_delete<WebKit::IconLoadingDelegate> > { 
            struct IconLoadingDelegate {} *__first_; 
        } __ptr_; 
    }  _iconLoadingDelegate;
    struct unique_ptr<WebKit::WebViewImpl, std::__1::default_delete<WebKit::WebViewImpl> > { 
        struct __compressed_pair<WebKit::WebViewImpl *, std::__1::default_delete<WebKit::WebViewImpl> > { 
            struct WebViewImpl {} *__first_; 
        } __ptr_; 
    }  _impl;
    /* Warning: unhandled struct encoding: '{WeakObjCPtr<id<_WKInputDelegate> >="m_weakReference"@}' */ struct WeakObjCPtr<id<_WKInputDelegate> > { 
        id m_weakReference; 
    }  _inputDelegate;
    struct unique_ptr<WebKit::NavigationState, std::__1::default_delete<WebKit::NavigationState> > { 
        struct __compressed_pair<WebKit::NavigationState *, std::__1::default_delete<WebKit::NavigationState> > { 
            struct NavigationState {} *__first_; 
        } __ptr_; 
    }  _navigationState;
    unsigned long long  _observedRenderingProgressEvents;
    struct RefPtr<WebKit::WebPageProxy> { 
        struct WebPageProxy {} *m_ptr; 
    }  _page;
    struct RetainPtr<WKTextFinderClient> { 
        void *m_ptr; 
    }  _textFinderClient;
    struct unique_ptr<WebKit::UIDelegate, std::__1::default_delete<WebKit::UIDelegate> > { 
        struct __compressed_pair<WebKit::UIDelegate *, std::__1::default_delete<WebKit::UIDelegate> > { 
            struct UIDelegate {} *__first_; 
        } __ptr_; 
    }  _uiDelegate;
}

@property (nonatomic, readwrite) <WKUIDelegate> *UIDelegate;
@property (nonatomic, readonly, copy) NSURL *URL;
@property (nonatomic, readonly) NSString *_MIMEType;
@property (setter=_setAddsVisitedLinks:, nonatomic, readwrite) BOOL _addsVisitedLinks;
@property (getter=_allowsMediaDocumentInlinePlayback, setter=_setAllowsMediaDocumentInlinePlayback:, nonatomic, readwrite) BOOL _allowsMediaDocumentInlinePlayback;
@property (setter=_setAllowsRemoteInspection:, nonatomic, readwrite) BOOL _allowsRemoteInspection;
@property (setter=_setApplicationNameForUserAgent:, atomic, readwrite, copy) NSString *_applicationNameForUserAgent;
@property (setter=_setAutomaticallyAdjustsContentInsets:, nonatomic, readwrite) BOOL _automaticallyAdjustsContentInsets;
@property (nonatomic, readonly) NSArray *_certificateChain;
@property (nonatomic, readonly) NSURL *_committedURL;
@property (setter=_setCustomUserAgent:, atomic, readwrite, copy) NSString *_customUserAgent;
@property (setter=_setDiagnosticLoggingDelegate:, nonatomic, readwrite) <_WKDiagnosticLoggingDelegate> *_diagnosticLoggingDelegate;
@property (getter=_isDisplayingStandaloneImageDocument, nonatomic, readonly) BOOL _displayingStandaloneImageDocument;
@property (getter=_isDisplayingStandaloneMediaDocument, nonatomic, readonly) BOOL _displayingStandaloneMediaDocument;
@property (setter=_setDrawsBackground:, nonatomic, readwrite) BOOL _drawsBackground;
@property (getter=_isEditable, setter=_setEditable:, nonatomic, readwrite) BOOL _editable;
@property (setter=_setFindDelegate:, nonatomic, readwrite) <_WKFindDelegate> *_findDelegate;
@property (setter=_setFixedLayoutSize:, nonatomic, readwrite) struct CGSize { double x1; double x2; } _fixedLayoutSize;
@property (setter=_setFullscreenDelegate:, nonatomic, readwrite) <_WKFullscreenDelegate> *_fullscreenDelegate;
@property (setter=_setGapBetweenPages:, nonatomic, readwrite) double _gapBetweenPages;
@property (nonatomic, readonly) WKBrowsingContextHandle *_handle;
@property (nonatomic, readonly) BOOL _hasActiveVideoForControlsManager;
@property (setter=_setHistoryDelegate:, nonatomic, readwrite) <WKHistoryDelegatePrivate> *_historyDelegate;
@property (setter=_setIconLoadingDelegate:, nonatomic, readwrite) <_WKIconLoadingDelegate> *_iconLoadingDelegate;
@property (setter=_setInputDelegate:, nonatomic, readwrite) <_WKInputDelegate> *_inputDelegate;
@property (nonatomic, readonly) BOOL _isInFullscreen;
@property (setter=_setLayoutMode:, nonatomic, readwrite) unsigned long long _layoutMode;
@property (setter=_setMediaCaptureEnabled:, nonatomic, readwrite) BOOL _mediaCaptureEnabled;
@property (nonatomic, readonly) id _mediaPlaybackControlsView;
@property (setter=_setMinimumLayoutWidth:, nonatomic, readwrite) double _minimumLayoutWidth;
@property (nonatomic, readonly) BOOL _networkRequestsInProgress;
@property (setter=_setObservedRenderingProgressEvents:, nonatomic, readwrite) unsigned long long _observedRenderingProgressEvents;
@property (setter=_setOverrideDeviceScaleFactor:, nonatomic, readwrite) double _overrideDeviceScaleFactor;
@property (atomic, readonly) unsigned long long _pageCount;
@property (atomic, readonly) NSColor *_pageExtendedBackgroundColor;
@property (setter=_setPageLength:, nonatomic, readwrite) double _pageLength;
@property (setter=_setPageZoomFactor:, nonatomic, readwrite) double _pageZoomFactor;
@property (setter=_setPaginationBehavesLikeColumns:, nonatomic, readwrite) BOOL _paginationBehavesLikeColumns;
@property (setter=_setPaginationLineGridEnabled:, nonatomic, readwrite) BOOL _paginationLineGridEnabled;
@property (setter=_setPaginationMode:, nonatomic, readwrite) long long _paginationMode;
@property (setter=_setRemoteInspectionNameOverride:, nonatomic, readwrite, copy) NSString *_remoteInspectionNameOverride;
@property (nonatomic, readonly) id _remoteObjectRegistry;
@property (nonatomic, readonly) NSArray *_scrollPerformanceData;
@property (setter=_setScrollPerformanceDataCollectionEnabled:, nonatomic, readwrite) BOOL _scrollPerformanceDataCollectionEnabled;
@property (nonatomic, readonly) _WKSessionState *_sessionState;
@property (nonatomic, readonly) NSData *_sessionStateData;
@property (setter=_setShouldExpandContentToViewHeightForAutoLayout:, nonatomic, readwrite) BOOL _shouldExpandContentToViewHeightForAutoLayout;
@property (nonatomic, readonly) BOOL _shouldRequestCandidates;
@property (getter=_isShowingNavigationGestureSnapshot, nonatomic, readonly) BOOL _showingNavigationGestureSnapshot;
@property (nonatomic, readonly) BOOL _supportsTextZoom;
@property (setter=_setTextZoomFactor:, nonatomic, readwrite) double _textZoomFactor;
@property (setter=_setTopContentInset:, nonatomic, readwrite) double _topContentInset;
@property (nonatomic, readonly) NSURL *_unreachableURL;
@property (nonatomic, readonly) NSString *_userAgent;
@property (setter=_setUserContentExtensionsEnabled:, nonatomic, readwrite) BOOL _userContentExtensionsEnabled;
@property (setter=_setViewScale:, nonatomic, readwrite) double _viewScale;
@property (setter=_setViewportSizeForCSSViewportUnits:, nonatomic, readwrite) struct CGSize { double x1; double x2; } _viewportSizeForCSSViewportUnits;
@property (setter=_setWantsMediaPlaybackControlsView:, nonatomic, readwrite) BOOL _wantsMediaPlaybackControlsView;
@property (nonatomic, readonly) int _webProcessIdentifier;
@property (nonatomic, readonly) BOOL _webProcessIsResponsive;
@property (setter=_setWindowOcclusionDetectionEnabled:, nonatomic, readwrite) BOOL _windowOcclusionDetectionEnabled;
@property (nonatomic, readwrite) BOOL allowsBackForwardNavigationGestures;
@property (nonatomic, readwrite) BOOL allowsLinkPreview;
@property (nonatomic, readwrite) BOOL allowsMagnification;
@property (nonatomic, readonly) WKBackForwardList *backForwardList;
@property (nonatomic, readonly) BOOL canGoBack;
@property (nonatomic, readonly) BOOL canGoForward;
@property (nonatomic, readonly, copy) NSArray *certificateChain;
@property (nonatomic, readonly, copy) WKWebViewConfiguration *configuration;
@property (nonatomic, readwrite, copy) NSString *customUserAgent;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (nonatomic, readonly) double estimatedProgress;
@property (nonatomic, readonly) BOOL hasOnlySecureContent;
@property (atomic, readonly) unsigned long long hash;
@property (getter=isLoading, nonatomic, readonly) BOOL loading;
@property (nonatomic, readwrite) double magnification;
@property (nonatomic, readwrite) <WKNavigationDelegate> *navigationDelegate;
@property (nonatomic, readonly) struct __SecTrust { }*serverTrust;
@property (atomic, readonly) Class superclass;
@property (nonatomic, readonly, copy) NSString *title;
@property (atomic, readonly) NSTouchBar *touchBar;

// Image: /System/Library/Frameworks/WebKit.framework/Versions/A/WebKit

+ (BOOL)handlesURLScheme:(id)arg1;

- (void).cxx_destruct;
- (void)_activeSpaceDidChange:(id)arg1;
- (long long)_addTrackingRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 owner:(id)arg2 userData:(void*)arg3 assumeInside:(BOOL)arg4 useTrackingNum:(int)arg5;
- (void)_addTrackingRects:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 owner:(id)arg2 userDataList:(void**)arg3 assumeInsideList:(BOOL*)arg4 trackingNums:(long long*)arg5 count:(int)arg6;
- (id)_ensureTextFinderClient;
- (void)_evaluateJavaScript:(id)arg1 forceUserGesture:(BOOL)arg2 completionHandler:(id)arg3;
- (id)_hitTest:(struct CGPoint { double x1; double x2; }*)arg1 dragTypes:(id)arg2;
- (id)_iconLoadingDelegate;
- (void)_initializeWithConfiguration:(id)arg1;
- (void)_interactWithMediaControlsForTesting;
- (BOOL)_isValid;
- (struct OpaqueWKPage { }*)_pageForTesting;
- (void)_removeTrackingRects:(long long*)arg1 count:(int)arg2;
- (void)_setIconLoadingDelegate:(id)arg1;
- (void)_setUpSQLiteDatabaseTrackerClient;
- (void)_setViewportSizeForCSSViewportUnits:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })_viewportSizeForCSSViewportUnits;
- (BOOL)_wantsKeyDownForEvent:(id)arg1;
- (void)_web_cancelImmediateActionAnimation;
- (void)_web_completeImmediateActionAnimation;
- (void)_web_didAddMediaControlsManager:(id)arg1;
- (void)_web_didChangeContentSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_web_didRemoveMediaControlsManager;
- (void)_web_dismissContentRelativeChildWindows;
- (void)_web_dismissContentRelativeChildWindowsWithAnimation:(BOOL)arg1;
- (unsigned long long)_web_dragDestinationActionForDraggingInfo:(id)arg1;
- (void)_web_gestureEventWasNotHandledByWebCore:(id)arg1;
- (id)_web_immediateActionAnimationControllerForHitTestResultInternal:(struct HitTestResult { int (**x1)(); id x2; /* Warning: Unrecognized filer type: 'W' using 'void*' */ void*x3; void*x4; unsigned int x5/* : ? */; void*x6; int x7; void*x8; void*x9; void*x10; short x11; void*x12; void*x13; void*x14; short x15; void*x16; long x17; void*x18; long doublex19; void*x20; void*x21; void*x22; void*x23; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_24_1_1; } x24; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_25_1_1; } x25; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_26_1_1; } x26; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_27_1_1; } x27; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_28_1_1; } x28; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_29_1_1; } x29; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_30_1_1; } x30; bool x31; struct IntRect { struct IntPoint { int x_1_2_1; int x_1_2_2; } x_32_1_1; struct IntSize { int x_2_2_1; int x_2_2_2; } x_32_1_2; } x32; }*)arg1 withType:(unsigned int)arg2 userData:(/* Warning: unhandled struct encoding: '{Object=^^?@}' */ struct Object { int (**x1)(); id x2; }*)arg3;
- (void)_web_prepareForImmediateActionAnimation;
- (id)_web_superAccessibilityAttributeValue:(id)arg1;
- (void)_web_superDoCommandBySelector:(SEL)arg1;
- (id)_web_superHitTest:(struct CGPoint { double x1; double x2; })arg1;
- (id)_web_superInputContext;
- (void)_web_superKeyDown:(id)arg1;
- (void)_web_superMagnifyWithEvent:(id)arg1;
- (BOOL)_web_superPerformKeyEquivalent:(id)arg1;
- (void)_web_superQuickLookWithEvent:(id)arg1;
- (void)_web_superRemoveTrackingRect:(long long)arg1;
- (void)_web_superSmartMagnifyWithEvent:(id)arg1;
- (void)_web_superSwipeWithEvent:(id)arg1;
- (BOOL)_windowResizeMouseLocationIsInVisibleScrollerThumb:(struct CGPoint { double x1; double x2; })arg1;
- (void)dealloc;

// WKWebView (WKBinaryCompatibilityWithIOS10)

- (id)_formDelegate;
- (void)_setFormDelegate:(id)arg1;

// WKWebView (WKPrivate)

- (id)_MIMEType;
- (void)_addMediaPlaybackControlsView:(id)arg1;
- (BOOL)_addsVisitedLinks;
- (BOOL)_allowsMediaDocumentInlinePlayback;
- (BOOL)_allowsRemoteInspection;
- (id)_applicationNameForUserAgent;
- (BOOL)_automaticallyAdjustsContentInsets;
- (id)_certificateChain;
- (void)_close;
- (id)_committedURL;
- (void)_countStringMatches:(id)arg1 options:(unsigned long long)arg2 maxCount:(unsigned long long)arg3;
- (id)_customUserAgent;
- (id)_diagnosticLoggingDelegate;
- (void)_didRelaunchProcess;
- (BOOL)_drawsBackground;
- (void)_evaluateJavaScriptWithoutUserGesture:(id)arg1 completionHandler:(id)arg2;
- (id)_findDelegate;
- (void)_findString:(id)arg1 options:(unsigned long long)arg2 maxCount:(unsigned long long)arg3;
- (struct CGSize { double x1; double x2; })_fixedLayoutSize;
- (id)_fullscreenDelegate;
- (double)_gapBetweenPages;
- (void)_getContentsAsStringWithCompletionHandler:(id)arg1;
- (void)_getMainResourceDataWithCompletionHandler:(id)arg1;
- (void)_getWebArchiveDataWithCompletionHandler:(id)arg1;
- (id)_handle;
- (void)_hideFindUI;
- (id)_historyDelegate;
- (id)_immediateActionAnimationControllerForHitTestResult:(id)arg1 withType:(long long)arg2 userData:(id)arg3;
- (id)_inputDelegate;
- (id)_inspectorAttachmentView;
- (BOOL)_isDisplayingStandaloneImageDocument;
- (BOOL)_isDisplayingStandaloneMediaDocument;
- (BOOL)_isEditable;
- (BOOL)_isInFullscreen;
- (BOOL)_isShowingNavigationGestureSnapshot;
- (void)_killWebContentProcess;
- (void)_killWebContentProcessAndResetState;
- (unsigned long long)_layoutMode;
- (void)_loadAlternateHTMLString:(id)arg1 baseURL:(id)arg2 forUnreachableURL:(id)arg3;
- (id)_loadData:(id)arg1 MIMEType:(id)arg2 characterEncodingName:(id)arg3 baseURL:(id)arg4 userData:(id)arg5;
- (id)_loadRequest:(id)arg1 shouldOpenExternalURLs:(BOOL)arg2;
- (BOOL)_mediaCaptureEnabled;
- (id)_mediaPlaybackControlsView;
- (double)_minimumLayoutWidth;
- (void)_muteMediaCapture;
- (BOOL)_networkRequestsInProgress;
- (unsigned long long)_observedRenderingProgressEvents;
- (double)_overrideDeviceScaleFactor;
- (unsigned long long)_pageCount;
- (id)_pageExtendedBackgroundColor;
- (double)_pageLength;
- (double)_pageZoomFactor;
- (BOOL)_paginationBehavesLikeColumns;
- (BOOL)_paginationLineGridEnabled;
- (long long)_paginationMode;
- (void)_prepareForMoveToWindow:(id)arg1 completionHandler:(id)arg2;
- (id)_printOperationWithPrintInfo:(id)arg1;
- (id)_printOperationWithPrintInfo:(id)arg1 forFrame:(id)arg2;
- (id)_reloadExpiredOnly;
- (id)_reloadWithoutContentBlockers;
- (id)_remoteInspectionNameOverride;
- (id)_remoteObjectRegistry;
- (void)_removeMediaPlaybackControlsView;
- (void)_restoreFromSessionStateData:(id)arg1;
- (id)_restoreSessionState:(id)arg1 andNavigate:(BOOL)arg2;
- (BOOL)_safeAreaShouldAffectObscuredInsets;
- (void)_saveBackForwardSnapshotForItem:(id)arg1;
- (id)_scrollPerformanceData;
- (BOOL)_scrollPerformanceDataCollectionEnabled;
- (id)_sessionState;
- (id)_sessionStateData;
- (id)_sessionStateWithFilter:(id)arg1;
- (void)_setAddsVisitedLinks:(BOOL)arg1;
- (void)_setAllowsMediaDocumentInlinePlayback:(BOOL)arg1;
- (void)_setAllowsRemoteInspection:(BOOL)arg1;
- (void)_setApplicationNameForUserAgent:(id)arg1;
- (void)_setAutomaticallyAdjustsContentInsets:(BOOL)arg1;
- (void)_setCustomUserAgent:(id)arg1;
- (void)_setDiagnosticLoggingDelegate:(id)arg1;
- (void)_setDrawsBackground:(BOOL)arg1;
- (void)_setDrawsTransparentBackground:(BOOL)arg1;
- (void)_setEditable:(BOOL)arg1;
- (void)_setFindDelegate:(id)arg1;
- (void)_setFixedLayoutSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_setFullscreenDelegate:(id)arg1;
- (void)_setGapBetweenPages:(double)arg1;
- (void)_setHistoryDelegate:(id)arg1;
- (void)_setInputDelegate:(id)arg1;
- (void)_setInspectorAttachmentView:(id)arg1;
- (void)_setLayoutMode:(unsigned long long)arg1;
- (void)_setMediaCaptureEnabled:(BOOL)arg1;
- (void)_setMinimumLayoutWidth:(double)arg1;
- (void)_setObservedRenderingProgressEvents:(unsigned long long)arg1;
- (void)_setOverrideDeviceScaleFactor:(double)arg1;
- (void)_setPageLength:(double)arg1;
- (void)_setPageMuted:(long long)arg1;
- (void)_setPageZoomFactor:(double)arg1;
- (void)_setPaginationBehavesLikeColumns:(BOOL)arg1;
- (void)_setPaginationLineGridEnabled:(BOOL)arg1;
- (void)_setPaginationMode:(long long)arg1;
- (void)_setRemoteInspectionNameOverride:(id)arg1;
- (void)_setScrollPerformanceDataCollectionEnabled:(BOOL)arg1;
- (void)_setShouldExpandContentToViewHeightForAutoLayout:(BOOL)arg1;
- (void)_setShouldSuppressFirstResponderChanges:(BOOL)arg1;
- (void)_setTextZoomFactor:(double)arg1;
- (void)_setTopContentInset:(double)arg1;
- (void)_setUserContentExtensionsEnabled:(BOOL)arg1;
- (void)_setViewScale:(double)arg1;
- (void)_setWantsMediaPlaybackControlsView:(BOOL)arg1;
- (void)_setWindowOcclusionDetectionEnabled:(BOOL)arg1;
- (BOOL)_shouldExpandContentToViewHeightForAutoLayout;
- (BOOL)_supportsTextZoom;
- (double)_textZoomFactor;
- (double)_topContentInset;
- (id)_unreachableURL;
- (void)_updateWebsitePolicies:(id)arg1;
- (id)_userAgent;
- (BOOL)_userContentExtensionsEnabled;
- (double)_viewScale;
- (BOOL)_wantsMediaPlaybackControlsView;
- (int)_webProcessIdentifier;
- (BOOL)_webProcessIsResponsive;
- (BOOL)_windowOcclusionDetectionEnabled;

// WKWebView (WKTesting)

- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_candidateRect;
- (id)_contentsOfUserInterfaceItem:(id)arg1;
- (void)_didHandleAcceptedCandidate;
- (void)_didUpdateCandidateListVisibility:(BOOL)arg1;
- (void)_disableBackForwardSnapshotVolatilityForTesting;
- (void)_doAfterNextPresentationUpdate:(id)arg1;
- (void)_doAfterNextPresentationUpdateWithoutWaitingForPainting:(id)arg1;
- (void)_doAfterNextVisibleContentRectUpdate:(id)arg1;
- (void)_forceRequestCandidates;
- (void)_handleAcceptedCandidate:(id)arg1;
- (void)_handleActiveNowPlayingSessionInfoResponse:(BOOL)arg1 title:(id)arg2 duration:(double)arg3 elapsedTime:(double)arg4;
- (void)_handleControlledElementIDResponse:(id)arg1;
- (BOOL)_hasActiveVideoForControlsManager;
- (void)_insertText:(id)arg1 replacementRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (double)_pageScale;
- (void)_requestActiveNowPlayingSessionInfo;
- (void)_requestControlledElementID;
- (void)_setFooterBannerHeight:(int)arg1;
- (void)_setHeaderBannerHeight:(int)arg1;
- (void)_setPageScale:(double)arg1 withOrigin:(struct CGPoint { double x1; double x2; })arg2;
- (BOOL)_shouldRequestCandidates;

// Image: /Applications/Xcode.app/Contents/Developer/usr/lib/libMainThreadChecker.dylib

- (id).cxx_construct;
- (id)UIDelegate;
- (id)URL;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)accessibilityIsIgnored;
- (long long)addTrackingRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 owner:(id)arg2 userData:(void*)arg3 assumeInside:(BOOL)arg4;
- (void)alignCenter:(id)arg1;
- (void)alignJustified:(id)arg1;
- (void)alignLeft:(id)arg1;
- (void)alignRight:(id)arg1;
- (BOOL)allowsBackForwardNavigationGestures;
- (BOOL)allowsLinkPreview;
- (BOOL)allowsMagnification;
- (id)attributedSubstringForProposedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 actualRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (void)attributedSubstringForProposedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 completionHandler:(id)arg2;
- (id)backForwardList;
- (BOOL)becomeFirstResponder;
- (BOOL)canGoBack;
- (BOOL)canGoForward;
- (id)candidateListTouchBarItem;
- (void)capitalizeWord:(id)arg1;
- (void)centerSelectionInVisibleArea:(id)arg1;
- (id)certificateChain;
- (void)changeFont:(id)arg1;
- (void)changeSpelling:(id)arg1;
- (unsigned long long)characterIndexForPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)characterIndexForPoint:(struct CGPoint { double x1; double x2; })arg1 completionHandler:(id)arg2;
- (void)checkSpelling:(id)arg1;
- (id)configuration;
- (long long)conversationIdentifier;
- (void)copy:(id)arg1;
- (id)customUserAgent;
- (void)cut:(id)arg1;
- (void)delete:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)deleteBackwardByDecomposingPreviousCharacter:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteToBeginningOfLine:(id)arg1;
- (void)deleteToBeginningOfParagraph:(id)arg1;
- (void)deleteToEndOfLine:(id)arg1;
- (void)deleteToEndOfParagraph:(id)arg1;
- (void)deleteToMark:(id)arg1;
- (void)deleteWordBackward:(id)arg1;
- (void)deleteWordForward:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (id)documentContainerView;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint { double x1; double x2; })arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)encodeWithCoder:(id)arg1;
- (double)estimatedProgress;
- (void)evaluateJavaScript:(id)arg1 completionHandler:(id)arg2;
- (void)findMatchesForString:(id)arg1 relativeToMatch:(id)arg2 findOptions:(unsigned long long)arg3 maxResults:(unsigned long long)arg4 resultCollector:(id)arg5;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })firstRectForCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 actualRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (void)firstRectForCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 completionHandler:(id)arg2;
- (void)flagsChanged:(id)arg1;
- (void)getSelectedText:(id)arg1;
- (id)goBack;
- (void)goBack:(id)arg1;
- (id)goForward;
- (void)goForward:(id)arg1;
- (id)goToBackForwardListItem:(id)arg1;
- (BOOL)hasMarkedText;
- (void)hasMarkedTextWithCompletionHandler:(id)arg1;
- (BOOL)hasOnlySecureContent;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1;
- (void)ignoreSpelling:(id)arg1;
- (void)indent:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 configuration:(id)arg2;
- (id)inputContext;
- (void)insertBacktab:(id)arg1;
- (void)insertLineBreak:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)insertParagraphSeparator:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)insertTabIgnoringFieldEditor:(id)arg1;
- (void)insertText:(id)arg1;
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (BOOL)isAutomaticDashSubstitutionEnabled;
- (BOOL)isAutomaticLinkDetectionEnabled;
- (BOOL)isAutomaticQuoteSubstitutionEnabled;
- (BOOL)isAutomaticTextReplacementEnabled;
- (BOOL)isFlipped;
- (BOOL)isGrammarCheckingEnabled;
- (BOOL)isLoading;
- (BOOL)isOpaque;
- (void)keyDown:(id)arg1;
- (void)keyUp:(id)arg1;
- (id)loadData:(id)arg1 MIMEType:(id)arg2 characterEncodingName:(id)arg3 baseURL:(id)arg4;
- (id)loadFileURL:(id)arg1 allowingReadAccessToURL:(id)arg2;
- (id)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (id)loadRequest:(id)arg1;
- (void)lowercaseWord:(id)arg1;
- (double)magnification;
- (void)magnifyWithEvent:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionNatural:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (id)makeTouchBar;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })markedRange;
- (void)markedRangeWithCompletionHandler:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseDragged:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)moveBackward:(id)arg1;
- (void)moveBackwardAndModifySelection:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveForward:(id)arg1;
- (void)moveForwardAndModifySelection:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveParagraphBackwardAndModifySelection:(id)arg1;
- (void)moveParagraphForwardAndModifySelection:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveToBeginningOfDocument:(id)arg1;
- (void)moveToBeginningOfDocumentAndModifySelection:(id)arg1;
- (void)moveToBeginningOfLine:(id)arg1;
- (void)moveToBeginningOfLineAndModifySelection:(id)arg1;
- (void)moveToBeginningOfParagraph:(id)arg1;
- (void)moveToBeginningOfParagraphAndModifySelection:(id)arg1;
- (void)moveToBeginningOfSentence:(id)arg1;
- (void)moveToBeginningOfSentenceAndModifySelection:(id)arg1;
- (void)moveToEndOfDocument:(id)arg1;
- (void)moveToEndOfDocumentAndModifySelection:(id)arg1;
- (void)moveToEndOfLine:(id)arg1;
- (void)moveToEndOfLineAndModifySelection:(id)arg1;
- (void)moveToEndOfParagraph:(id)arg1;
- (void)moveToEndOfParagraphAndModifySelection:(id)arg1;
- (void)moveToEndOfSentence:(id)arg1;
- (void)moveToEndOfSentenceAndModifySelection:(id)arg1;
- (void)moveToLeftEndOfLine:(id)arg1;
- (void)moveToLeftEndOfLineAndModifySelection:(id)arg1;
- (void)moveToRightEndOfLine:(id)arg1;
- (void)moveToRightEndOfLineAndModifySelection:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)moveWordBackward:(id)arg1;
- (void)moveWordBackwardAndModifySelection:(id)arg1;
- (void)moveWordForward:(id)arg1;
- (void)moveWordForwardAndModifySelection:(id)arg1;
- (void)moveWordLeft:(id)arg1;
- (void)moveWordLeftAndModifySelection:(id)arg1;
- (void)moveWordRight:(id)arg1;
- (void)moveWordRightAndModifySelection:(id)arg1;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (id)navigationDelegate;
- (void)orderFrontSubstitutionsPanel:(id)arg1;
- (void)otherMouseDown:(id)arg1;
- (void)otherMouseDragged:(id)arg1;
- (void)otherMouseUp:(id)arg1;
- (void)outdent:(id)arg1;
- (void)pageDown:(id)arg1;
- (void)pageDownAndModifySelection:(id)arg1;
- (void)pageUp:(id)arg1;
- (void)pageUpAndModifySelection:(id)arg1;
- (void)paste:(id)arg1;
- (void)pasteAsPlainText:(id)arg1;
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;
- (void)pasteboardChangedOwner:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)prepareContentInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)pressureChangeWithEvent:(id)arg1;
- (void)quickLookWithEvent:(id)arg1;
- (BOOL)readSelectionFromPasteboard:(id)arg1;
- (id)reload;
- (void)reload:(id)arg1;
- (id)reloadFromOrigin;
- (void)reloadFromOrigin:(id)arg1;
- (void)removeTrackingRect:(long long)arg1;
- (void)renewGState;
- (BOOL)resignFirstResponder;
- (void)rightMouseDown:(id)arg1;
- (void)rightMouseDragged:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)rotateWithEvent:(id)arg1;
- (void)scrollLineDown:(id)arg1;
- (void)scrollLineUp:(id)arg1;
- (void)scrollPageDown:(id)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)scrollToBeginningOfDocument:(id)arg1;
- (void)scrollToEndOfDocument:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)selectFindMatch:(id)arg1 completionHandler:(id)arg2;
- (void)selectLine:(id)arg1;
- (void)selectParagraph:(id)arg1;
- (void)selectSentence:(id)arg1;
- (void)selectToMark:(id)arg1;
- (void)selectWord:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })selectedRange;
- (void)selectedRangeWithCompletionHandler:(id)arg1;
- (struct __SecTrust { }*)serverTrust;
- (void)setAllowsBackForwardNavigationGestures:(BOOL)arg1;
- (void)setAllowsLinkPreview:(BOOL)arg1;
- (void)setAllowsMagnification:(BOOL)arg1;
- (void)setAutomaticDashSubstitutionEnabled:(BOOL)arg1;
- (void)setAutomaticLinkDetectionEnabled:(BOOL)arg1;
- (void)setAutomaticQuoteSubstitutionEnabled:(BOOL)arg1;
- (void)setAutomaticTextReplacementEnabled:(BOOL)arg1;
- (void)setCustomUserAgent:(id)arg1;
- (void)setFrameSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setGrammarCheckingEnabled:(BOOL)arg1;
- (void)setMagnification:(double)arg1;
- (void)setMagnification:(double)arg1 centeredAtPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)setMark:(id)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 replacementRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (void)setNavigationDelegate:(id)arg1;
- (void)setUIDelegate:(id)arg1;
- (void)setUserInterfaceLayoutDirection:(long long)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (void)showGuessPanel:(id)arg1;
- (void)smartMagnifyWithEvent:(id)arg1;
- (void)startSpeaking:(id)arg1;
- (void)stopLoading;
- (void)stopLoading:(id)arg1;
- (void)stopSpeaking:(id)arg1;
- (void)subscript:(id)arg1;
- (void)superscript:(id)arg1;
- (void)swapWithMark:(id)arg1;
- (void)swipeWithEvent:(id)arg1;
- (void)takeFindStringFromSelection:(id)arg1;
- (void)takeSnapshotWithConfiguration:(id)arg1 completionHandler:(id)arg2;
- (id)title;
- (void)toggleAutomaticDashSubstitution:(id)arg1;
- (void)toggleAutomaticLinkDetection:(id)arg1;
- (void)toggleAutomaticQuoteSubstitution:(id)arg1;
- (void)toggleAutomaticSpellingCorrection:(id)arg1;
- (void)toggleAutomaticTextReplacement:(id)arg1;
- (void)toggleContinuousSpellChecking:(id)arg1;
- (void)toggleGrammarChecking:(id)arg1;
- (void)toggleSmartInsertDelete:(id)arg1;
- (void)transpose:(id)arg1;
- (void)underline:(id)arg1;
- (void)unmarkText;
- (void)unscript:(id)arg1;
- (void)updateLayer;
- (void)uppercaseWord:(id)arg1;
- (id)urlSchemeHandlerForURLScheme:(id)arg1;
- (id)validAttributesForMarkedText;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint { double x1; double x2; })arg3 userData:(void*)arg4;
- (void)viewDidChangeBackingProperties;
- (void)viewDidEndLiveResize;
- (void)viewDidHide;
- (void)viewDidMoveToWindow;
- (void)viewDidUnhide;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewWillStartLiveResize;
- (BOOL)wantsUpdateLayer;
- (BOOL)writeSelectionToPasteboard:(id)arg1 types:(id)arg2;
- (void)yank:(id)arg1;
- (void)yankAndSelect:(id)arg1;

@end
