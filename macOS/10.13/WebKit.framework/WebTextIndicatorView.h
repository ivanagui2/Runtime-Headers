/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore
 */

@interface WebTextIndicatorView : NSView {
    struct RetainPtr<NSArray> { 
        void *m_ptr; 
    }  _bounceLayers;
    BOOL  _fadingOut;
    bool  _hasCompletedAnimation;
    struct CGSize { 
        double width; 
        double height; 
    }  _margin;
    struct RefPtr<WebCore::TextIndicator> { 
        struct TextIndicator {} *m_ptr; 
    }  _textIndicator;
}

@property (getter=isFadingOut, nonatomic, readwrite) BOOL fadingOut;

- (id).cxx_construct;
- (void).cxx_destruct;
- (double)_animationDuration;
- (BOOL)hasCompletedAnimation;
- (void)hideWithCompletionHandler:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 textIndicator:(struct TextIndicator { unsigned int x1; struct TextIndicatorData { struct FloatRect { struct FloatPoint { float x_1_3_1; float x_1_3_2; } x_1_2_1; struct FloatSize { float x_2_3_1; float x_2_3_2; } x_1_2_2; } x_2_1_1; struct FloatRect { struct FloatPoint { float x_1_3_1; float x_1_3_2; } x_2_2_1; struct FloatSize { float x_2_3_1; float x_2_3_2; } x_2_2_2; } x_2_1_2; struct FloatRect { struct FloatPoint { float x_1_3_1; float x_1_3_2; } x_3_2_1; struct FloatSize { float x_2_3_1; float x_2_3_2; } x_3_2_2; } x_2_1_3; struct Vector<WebCore::FloatRect, 0, WTF::CrashOnOverflow, 16> { struct FloatRect {} *x_4_2_1; unsigned int x_4_2_2; unsigned int x_4_2_3; } x_2_1_4; float x_2_1_5; struct RefPtr<WebCore::Image> { struct Image {} *x_6_2_1; } x_2_1_6; struct RefPtr<WebCore::Image> { struct Image {} *x_7_2_1; } x_2_1_7; struct RefPtr<WebCore::Image> { struct Image {} *x_8_2_1; } x_2_1_8; struct Color { union { unsigned long long x_1_3_1; struct ExtendedColor {} *x_1_3_2; } x_9_2_1; } x_2_1_9; unsigned char x_2_1_10; unsigned short x_2_1_11; } x2; }*)arg2 margin:(struct CGSize { double x1; double x2; })arg3 offset:(struct CGPoint { double x1; double x2; })arg4;
- (BOOL)isFadingOut;
- (BOOL)isFlipped;
- (void)present;
- (void)setAnimationProgress:(float)arg1;
- (void)setFadingOut:(BOOL)arg1;

@end
