/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/Versions/A/WebKit
 */

@interface WKPrintingView : NSView {
    NSTimer * _autodisplayResumeTimer;
    unsigned long long  _expectedComputedPagesCallback;
    struct HashMap<unsigned long long, WebCore::IntRect, WTF::IntHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WebCore::IntRect> > { 
        struct HashTable<unsigned long long, WTF::KeyValuePair<unsigned long long, WebCore::IntRect>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long long, WebCore::IntRect> >, WTF::IntHash<unsigned long long>, WTF::HashMap<unsigned long long, WebCore::IntRect, WTF::IntHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<WebCore::IntRect> >::KeyValuePairTraits, WTF::HashTraits<unsigned long long> > { 
            struct KeyValuePair<unsigned long long, WebCore::IntRect> {} *m_table; 
            unsigned int m_tableSize; 
            unsigned int m_tableSizeMask; 
            unsigned int m_keyCount; 
            unsigned int m_deletedCount; 
        } m_impl; 
    }  _expectedPreviewCallbacks;
    unsigned long long  _expectedPrintCallback;
    BOOL  _isPrintingFromSecondaryThread;
    unsigned long long  _latestExpectedPreviewCallback;
    struct Vector<WTF::Vector<WTF::RetainPtr<PDFDestination>, 0, WTF::CrashOnOverflow, 16>, 0, WTF::CrashOnOverflow, 16> { 
        struct Vector<WTF::RetainPtr<PDFDestination>, 0, WTF::CrashOnOverflow, 16> {} *m_buffer; 
        unsigned int m_capacity; 
        unsigned int m_size; 
    }  _linkDestinationsPerPage;
    struct HashMap<WebCore::IntRect, WTF::RefPtr<WebKit::ShareableBitmap>, WTF::IntHash<WebCore::IntRect>, WTF::HashTraits<WebCore::IntRect>, WTF::HashTraits<WTF::RefPtr<WebKit::ShareableBitmap> > > { 
        struct HashTable<WebCore::IntRect, WTF::KeyValuePair<WebCore::IntRect, WTF::RefPtr<WebKit::ShareableBitmap> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebCore::IntRect, WTF::RefPtr<WebKit::ShareableBitmap> > >, WTF::IntHash<WebCore::IntRect>, WTF::HashMap<WebCore::IntRect, WTF::RefPtr<WebKit::ShareableBitmap>, WTF::IntHash<WebCore::IntRect>, WTF::HashTraits<WebCore::IntRect>, WTF::HashTraits<WTF::RefPtr<WebKit::ShareableBitmap> > >::KeyValuePairTraits, WTF::HashTraits<WebCore::IntRect> > { 
            struct KeyValuePair<WebCore::IntRect, WTF::RefPtr<WebKit::ShareableBitmap> > {} *m_table; 
            unsigned int m_tableSize; 
            unsigned int m_tableSizeMask; 
            unsigned int m_keyCount; 
            unsigned int m_deletedCount; 
        } m_impl; 
    }  _pagePreviews;
    NSPrintOperation * _printOperation;
    struct Vector<unsigned char, 0, WTF::CrashOnOverflow, 16> { 
        char *m_buffer; 
        unsigned int m_capacity; 
        unsigned int m_size; 
    }  _printedPagesData;
    struct RetainPtr<PDFDocument> { 
        void *m_ptr; 
    }  _printedPagesPDFDocument;
    struct Condition { 
        struct Atomic<bool> { 
            struct atomic<bool> { 
                bool __a_; 
            } value; 
        } m_hasWaiters; 
    }  _printingCallbackCondition;
    struct Lock { 
        struct Atomic<unsigned char> { 
            struct atomic<unsigned char> { 
                unsigned char __a_; 
            } value; 
        } m_byte; 
    }  _printingCallbackMutex;
    struct Vector<WebCore::IntRect, 0, WTF::CrashOnOverflow, 16> { 
        struct IntRect {} *m_buffer; 
        unsigned int m_capacity; 
        unsigned int m_size; 
    }  _printingPageRects;
    double  _totalScaleFactorForPrinting;
    struct RefPtr<WebKit::WebFrameProxy> { 
        struct WebFrameProxy {} *m_ptr; 
    }  _webFrame;
    struct RetainPtr<NSView> { 
        void *m_ptr; 
    }  _wkView;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_adjustPrintingMarginsForHeaderAndFooter;
- (BOOL)_askPageToComputePageRects;
- (void)_delayedResumeAutodisplay;
- (void)_delayedResumeAutodisplayTimerFired;
- (void)_drawPDFDocument:(id)arg1 page:(unsigned int)arg2 atPoint:(struct CGPoint { double x1; double x2; })arg3;
- (void)_drawPageBorderWithSizeOnMainThread:(struct CGSize { double x1; double x2; })arg1;
- (void)_drawPreview:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (unsigned long long)_expectedPreviewCallbackForRect:(const struct IntRect { struct IntPoint { int x_1_1_1; int x_1_1_2; } x1; struct IntSize { int x_2_1_1; int x_2_1_2; } x2; }*)arg1;
- (unsigned long long)_firstPrintedPageNumber;
- (BOOL)_hasPageRects;
- (BOOL)_isPrintingPreview;
- (unsigned long long)_lastPrintedPageNumber;
- (unsigned int)_pageForRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_preparePDFDataForPrintingOnSecondaryThread;
- (void)_setAutodisplay:(BOOL)arg1;
- (void)_suspendAutodisplay;
- (void)_updatePreview;
- (void)beginDocument;
- (void)dealloc;
- (void)drawPageBorderWithSize:(struct CGSize { double x1; double x2; })arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)endDocument;
- (id)initWithFrameProxy:(struct WebFrameProxy { int (**x1)(); id x2; struct WebPageProxy {} x3; struct FrameLoadState { int x_4_1_1; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_3_1; } x_2_2_1; } x_4_1_2; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_3_1; } x_3_2_1; } x_4_1_3; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_3_1; } x_4_2_1; } x_4_1_4; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_3_1; } x_5_2_1; } x_4_1_5; } x4; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_5_1_1; } x5; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_6_1_1; } x6; bool x7; bool x8; struct RefPtr<WebKit::WebCertificateInfo> { struct WebCertificateInfo {} *x_9_1_1; } x9; struct RefPtr<WebKit::WebFrameListenerProxy> { struct WebFrameListenerProxy {} *x_10_1_1; } x10; unsigned long long x11; struct ContentFilterUnblockHandler { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_3_1; } x_1_2_1; } x_12_1_1; struct URL { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_2_2_1; unsigned int x_2_2_2 : 1; unsigned int x_2_2_3 : 1; unsigned int x_2_2_4 : 1; unsigned int x_2_2_5; unsigned int x_2_2_6; unsigned int x_2_2_7; unsigned int x_2_2_8; unsigned int x_2_2_9; unsigned int x_2_2_10; unsigned int x_2_2_11; unsigned int x_2_2_12; unsigned int x_2_2_13; } x_12_1_2; struct function<void (std::__1::function<void (bool)>)>={type=[32C] {} x_12_1_3; struct __base<void (std::__1::function<void (bool)>)> {} *x_12_1_4; } x12; }*)arg1 view:(id)arg2;
- (BOOL)isFlipped;
- (BOOL)knowsPageRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg1;
- (struct CGPoint { double x1; double x2; })locationOfPrintRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectForPage:(long long)arg1;

@end
