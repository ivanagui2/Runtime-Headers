/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebKitLegacy.framework/Versions/A/WebKitLegacy
 */

@interface WebBaseNetscapePluginView : NSView {
    struct RetainPtr<NSString> { 
        void *m_ptr; 
    }  _MIMEType;
    struct RetainPtr<NSURL> { 
        void *m_ptr; 
    }  _baseURL;
    struct RetainPtr<NSImage> { 
        void *m_ptr; 
    }  _cachedSnapshot;
    struct RefPtr<WebCore::HTMLPlugInElement> { 
        struct HTMLPlugInElement {} *m_ptr; 
    }  _element;
    BOOL  _hasFocus;
    BOOL  _isCompletelyObscured;
    BOOL  _isPrivateBrowsingEnabled;
    BOOL  _isStarted;
    BOOL  _loadManually;
    int  _mode;
    struct RetainPtr<WebNetscapePluginPackage> { 
        void *m_ptr; 
    }  _pluginPackage;
    BOOL  _shouldFireTimers;
    BOOL  _snapshotting;
    struct RetainPtr<NSURL> { 
        void *m_ptr; 
    }  _sourceURL;
    long long  _trackingTag;
    BOOL  _triedAndFailedToCreatePlugin;
    WebFrame * _webFrame;
}

+ (void)initialize;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)URLWithCString:(const char *)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_windowClipRect;
- (BOOL)acceptsFirstResponder;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })actualVisibleRectInWindow;
- (void)addWindowObservers;
- (BOOL)becomeFirstResponder;
- (void)cacheSnapshot;
- (void)clearCachedSnapshot;
- (BOOL)convertFromX:(double)arg1 andY:(double)arg2 space:(int)arg3 toX:(double*)arg4 andY:(double*)arg5 space:(int)arg6;
- (void)copy:(id)arg1;
- (BOOL)createPlugin;
- (id)currentWindow;
- (void)cut:(id)arg1;
- (id)dataSource;
- (void)dealloc;
- (void)destroyPlugin;
- (struct HTMLPlugInElement { int (**x1)(); struct Weak<WebCore::JSDOMObject> { struct WeakImpl {} *x_2_1_1; } x2; int x3; unsigned int x4; struct ContainerNode {} *x5; struct TreeScope {} *x6; struct Node {} *x7; struct Node {} *x8; union DataUnion { struct RenderObject {} *x_9_1_1; struct NodeRareDataBase {} *x_9_1_2; } x9; struct Node {} *x10; struct Node {} *x11; struct QualifiedName { struct RefPtr<WebCore::QualifiedName::QualifiedNameImpl> { struct QualifiedNameImpl {} *x_1_2_1; } x_12_1_1; } x12; struct RefPtr<WebCore::ElementData> { struct ElementData {} *x_13_1_1; } x13; struct Frame {} *x14; int x15; bool x16; struct RefPtr<JSC::Bindings::Instance> { struct Instance {} *x_17_1_1; } x17; struct Timer { int (**x_18_1_1)(); struct MonotonicTime { double x_2_2_1; } x_18_1_2; struct MonotonicTime { double x_3_2_1; } x_18_1_3; struct Seconds { double x_4_2_1; } x_18_1_4; int x_18_1_5; unsigned int x_18_1_6; struct Vector<WebCore::TimerBase *, 0, WTF::CrashOnOverflow, 16> {} *x_18_1_7; struct Function<void ()>={unique_ptr<WTF::Function<void ()>::CallableWrapperBase, std::__1::default_delete<WTF::Function<void ()>::CallableWrapperBase> >={__compressed_pair<WTF::Function<void ()>::CallableWrapperBase *, std::__1::default_delete<WTF::Function<void ()>::CallableWrapperBase> >=^{CallableWrapperBase {} x_18_1_8; } x18; }*)element;
- (void)focusChanged;
- (BOOL)getFormValue:(id*)arg1;
- (void)handleMouseEntered:(id)arg1;
- (void)handleMouseExited:(id)arg1;
- (void)handleMouseMoved:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 pluginPackage:(id)arg2 URL:(id)arg3 baseURL:(id)arg4 MIMEType:(id)arg5 attributeKeys:(id)arg6 attributeValues:(id)arg7 loadManually:(BOOL)arg8 element:(struct RefPtr<WebCore::HTMLPlugInElement> { struct HTMLPlugInElement {} *x1; }*)arg9;
- (void)invalidatePluginContentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)isFlipped;
- (void)loadStream;
- (void)loginWindowDidSwitchFromUser:(id)arg1;
- (void)loginWindowDidSwitchToUser:(id)arg1;
- (void)paste:(id)arg1;
- (id)pluginLayer;
- (id)pluginPackage;
- (void)preferencesHaveChanged:(id)arg1;
- (void)privateBrowsingModeDidChange;
- (void)removeTrackingRect;
- (void)removeWindowObservers;
- (void)renewGState;
- (id)requestWithURLCString:(const char *)arg1;
- (void)resetTrackingRect;
- (BOOL)resignFirstResponder;
- (void)restartTimers;
- (void)rightMouseDown:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)sendActivateEvent:(BOOL)arg1;
- (void)sendModifierEventWithKeyCode:(int)arg1 character:(BOOL)arg2;
- (void)setAttributeKeys:(id)arg1 andValues:(id)arg2;
- (void)setHasFocus:(BOOL)arg1;
- (BOOL)shouldClipOutPlugin;
- (BOOL)shouldStop;
- (void)start;
- (void)startTimers;
- (void)stop;
- (void)stopTimers;
- (BOOL)supportsSnapshotting;
- (void)updateAndSetWindow;
- (void)viewDidMoveToHostWindow;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToHostWindow:(id)arg1;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })visibleRect;
- (id)webFrame;
- (id)webView;
- (void)windowBecameKey:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (void)windowFocusChanged:(BOOL)arg1;
- (void)windowResignedKey:(id)arg1;
- (void)windowWillClose:(id)arg1;

@end
