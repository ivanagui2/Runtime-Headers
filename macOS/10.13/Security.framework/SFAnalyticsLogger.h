/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Security.framework/Versions/A/Security
 */

@interface SFAnalyticsLogger : NSObject <NSURLSessionDelegate> {
    unsigned int  _allowInsecureSplunkCert;
    NSArray * _blacklistedEvents;
    NSArray * _blacklistedFields;
    SFAnalyticsLoggerSQLiteStore * _database;
    unsigned int  _disableLogging;
    unsigned int  _disableUploads;
    unsigned int  _ignoreServersMessagesTellingUsToGoAway;
    NSDictionary * _metricsBase;
    NSObject<OS_dispatch_queue> * _queue;
    long long  _secondsBetweenUploads;
    NSURL * _splunkBagURL;
    NSString * _splunkTopicName;
    NSURL * _splunkUploadURL;
}

@property (atomic, readonly) BOOL allowsInsecureSplunkCert;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite) BOOL ignoreServerDisablingMessages;
@property (atomic, readonly) NSURL *splunkBagURL;
@property (atomic, readonly) NSObject<OS_dispatch_queue> *splunkLoggingQueue;
@property (atomic, readonly) NSString *splunkTopicName;
@property (atomic, readonly) NSURL *splunkUploadURL;
@property (atomic, readonly) Class superclass;

+ (id)databasePath;
+ (long long)fuzzyDaysSinceDate:(id)arg1;
+ (id)logger;

- (void).cxx_destruct;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(id)arg3;
- (BOOL)_onQueuePostJSON:(id)arg1 error:(id*)arg2;
- (BOOL)allowsInsecureSplunkCert;
- (id)datePropertyForKey:(id)arg1;
- (id)eventDictForEventName:(id)arg1 withAttributes:(id)arg2 eventClass:(long long)arg3;
- (id)eventDictWithBlacklistedFieldsStrippedFrom:(id)arg1;
- (id)extraValuesToUploadToServer;
- (BOOL)forceUploadWithError:(id*)arg1;
- (id)getLoggingJSONWithError:(id*)arg1;
- (id)getSysdiagnoseDumpWithError:(id*)arg1;
- (BOOL)ignoreServerDisablingMessages;
- (id)init;
- (void)logEventNamed:(id)arg1 class:(long long)arg2 attributes:(id)arg3;
- (void)logHardFailureForEventNamed:(id)arg1 withAttributes:(id)arg2;
- (void)logSoftFailureForEventNamed:(id)arg1 withAttributes:(id)arg2;
- (void)logSuccessForEventNamed:(id)arg1;
- (void)noteEventNamed:(id)arg1;
- (void)resetUploadDate:(BOOL)arg1;
- (void)setAllowsInsecureSplunkCert:(BOOL)arg1;
- (void)setDateProperty:(id)arg1 forKey:(id)arg2;
- (void)setIgnoreServerDisablingMessages:(BOOL)arg1;
- (id)splunkBagURL;
- (id)splunkLoggingQueue;
- (id)splunkTopicName;
- (id)splunkUploadURL;
- (id)stringForEventClass:(long long)arg1;
- (id)sysdiagnoseStringForEventRecord:(id)arg1;

@end
