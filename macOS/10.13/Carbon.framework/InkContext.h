/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink
 */

@interface InkContext : NSObject {
    BOOL  _allowInkWithMouse;
    struct __CFString { } * _bundleIdentifier;
    unsigned int  _cgsConnectionID;
    InkClientSideEvent * _clientEvent;
    BOOL  _coalescingDisabled;
    BOOL  _inPhrase;
    BOOL  _inProximity;
    BOOL  _inStroke;
    BOOL  _inkCGInstantMousing;
    BOOL  _inkOnDemandModeOverridden;
    BOOL  _isSoftTerminated;
    BOOL  _lastEventWasOverWindowInOurProcess;
    BOOL  _lastEventWasRepostedAsEraserEvent;
    struct __CFMessagePort { } * _messagesFromServerPort;
    BOOL  _mousing;
    BOOL  _mousingNotEnabled;
    void * _oldMouseCoalescingToken;
    struct __EventLoopTimer { } * _phraseTerminationTimer;
    void * _privateInkGlobals;
    NSMutableArray * _queuedEventsArray;
    float  _resumeCGInkingDelay;
    struct __EventLoopTimer { } * _resumeCGInkingTimer;
    BOOL  _resumeCGInkingTimerActive;
    unsigned short  _sEventTarget;
    BOOL  _shouldDisableCoalescingDuringInking;
    struct ProcessSerialNumber { 
        unsigned int highLongOfPSN; 
        unsigned int lowLongOfPSN; 
    }  _thisProcessPSN;
    unsigned int  _userInkOnDemandButtonMask;
    unsigned int  _userInkOnDemandModeOverrideValue;
}

@property (atomic, readwrite) unsigned int cgConnectionID;
@property (atomic, readwrite) BOOL coalescingIsDisabled;
@property (atomic, readwrite) unsigned short eventTarget;
@property (atomic, readwrite) BOOL gatheringDataForAPhrase;
@property (atomic, readwrite) BOOL gatheringDataForAStroke;
@property (atomic, readwrite) BOOL isCGInstantMousing;
@property (atomic, readwrite) BOOL lastEventWasOverWindowInOurProcess;
@property (atomic, readwrite) BOOL lastEventWasRepostedAsEraserEvent;
@property (atomic, readwrite) struct __CFMessagePort { }*messagesFromServerPort;
@property (atomic, readwrite) BOOL mousingTestMode;
@property (atomic, readwrite) BOOL resumeCGInkingTimerActive;
@property (atomic, readwrite) BOOL shouldDisableCoalescingDuringInking;
@property (atomic, readwrite) BOOL stylusInProximity;
@property (atomic, readwrite) struct ProcessSerialNumber { unsigned int x1; unsigned int x2; } thisProcessPSN;
@property (atomic, readwrite) BOOL trackingMouse;
@property (atomic, readwrite) unsigned int userInkOnDemandButtonMask;
@property (atomic, readwrite) unsigned int userInkOnDemandModeOverrideValue;

+ (int)launchWithFSRef:(struct FSRef { unsigned char x1[80]; }*)arg1;

- (BOOL)IsCGInstantMousing:(id)arg1;
- (int)addEventToQueue:(id)arg1 withUpdatedPen:(BOOL)arg2;
- (BOOL)allowInkWithMouse;
- (struct __CFString { }*)bundleID;
- (BOOL)canInkAtThisEventLocation:(struct CGPoint { double x1; double x2; })arg1;
- (unsigned int)cgConnectionID;
- (BOOL)cgsInkingStateAppInkingEnabled;
- (void)clearEventQueue;
- (BOOL)clientDidChangeInkDisposition:(id)arg1 withDisposition:(unsigned int*)arg2;
- (BOOL)clientEvent:(id)arg1 HasValidInkOnDemandModeButtonForMode:(unsigned int)arg2;
- (BOOL)clientEventIsInkPointEvent:(id)arg1;
- (BOOL)clientEventLocationIsInCarbonInstantMouser:(id)arg1;
- (void)closePortForMessagesFromInkServer;
- (BOOL)coalescingIsDisabled;
- (void)configForInkServerContext;
- (void)configureForCGInstantMousing:(BOOL)arg1;
- (short)convertPointListToNewStroke:(struct DLList { struct DLListElement {} *x1; struct DLListElement {} *x2; struct DLListElement {} *x3; int x4; }*)arg1 withStrokePtr:(struct InkStroke {}**)arg2;
- (void)dealloc;
- (unsigned int)determineEventDispositionForClientEvent:(id)arg1;
- (unsigned int)determineEventDispositionForClientEventMousing:(id)arg1;
- (unsigned int)determineEventDispositionForClientEventTapEvent:(id)arg1;
- (unsigned int)determineEventDispositionForClientEventWithNoInkPointsYetAccumlated:(id)arg1;
- (void)disableMouseCoalescingForProximity:(BOOL)arg1;
- (int)dispatchQueuedEvent:(id)arg1 withDisposition:(unsigned int)arg2 andRepostType:(int)arg3 isFinalDispatch:(BOOL)arg4;
- (void)enableLocalRecognition;
- (BOOL)eventLocationIsWithinInkBarOrInkWindowBounds:(struct CGPoint { double x1; double x2; })arg1;
- (unsigned short)eventTarget;
- (void)extendResumeCGInkingTimer;
- (void)finalize;
- (int)finishPhraseRecognition:(void*)arg1;
- (BOOL)gatheringDataForAPhrase;
- (BOOL)gatheringDataForAStroke;
- (BOOL)getSharedErasingState;
- (BOOL)getSharedInkEnabledState;
- (unsigned int)getSharedUserInkOnDemandMode;
- (unsigned int)getSystemInkOnDemandButtonMask;
- (BOOL)hasEventsQueued;
- (BOOL)hasQueuedPointsOrStrokes;
- (void)initPrivateGlobals;
- (int)initTerminationTimer;
- (id)initWithBundleID:(struct __CFString { }*)arg1 andProcessPSN:(struct ProcessSerialNumber { unsigned int x1; unsigned int x2; })arg2;
- (unsigned int)inkIMKPointDispositionForClientSideEvent:(id)arg1;
- (BOOL)inkOnDemandIsMode:(unsigned int)arg1;
- (unsigned int)inspectEvent:(struct OpaqueEventRef { }*)arg1;
- (BOOL)isCGInstantMousing;
- (BOOL)lastEventWasOverWindowInOurProcess;
- (BOOL)lastEventWasRepostedAsEraserEvent;
- (int)launchServer;
- (struct __CFMessagePort { }*)messagesFromServerPort;
- (unsigned int)metaDispatch:(id)arg1 triggerEventDisposition:(unsigned int)arg2;
- (unsigned int)metaDispatchForClientEventStartingToInk:(id)arg1;
- (unsigned int)metaDispatchRepostEventsForMousing:(id)arg1;
- (unsigned int)metaDispatchRepostEventsForTap:(id)arg1;
- (BOOL)mousingTestMode;
- (void)openPortForMessagesFromInkServer;
- (id)peekNextEventFromQueue:(id)arg1;
- (void)postTextFromServerCallbackMessage:(char *)arg1;
- (struct InkGlobals { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned int x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned int x13; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_14_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_14_1_2; } x14; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_15_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_15_1_2; } x15; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_16_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_16_1_2; } x16; unsigned int x17; struct CGContext {} *x18; struct CGPoint { double x_19_1_1; double x_19_1_2; } x19; struct timeval { long long x_20_1_1; int x_20_1_2; } x20; struct CGSize { double x_21_1_1; double x_21_1_2; } x21; struct CGPattern {} *x22; struct CGSize { double x_23_1_1; double x_23_1_2; } x23; void *x24; struct timeval { long long x_25_1_1; int x_25_1_2; } x25; }*)privateGlobals;
- (int)processInkStroke:(struct InkStroke { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned long long x_1_1_2; } x1; unsigned short x2; unsigned short x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned char x7; unsigned char x8; unsigned short x9; int x10; int x11; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_12_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_12_1_2; } x12; struct InkPoint {} *x13; unsigned int x14; }*)arg1;
- (BOOL)processNameMatches:(id)arg1;
- (void)processPhraseList;
- (int)processTabletPointEvent:(id)arg1;
- (int)processTabletProximityEvent:(id)arg1;
- (int)processTabletProximityEventRef:(struct OpaqueEventRef { }*)arg1;
- (void)processTerminatedPhrase:(struct InkPhrase { unsigned short x1; unsigned short x2; int x3; unsigned int x4; unsigned int x5; unsigned char x6; unsigned int x7; struct InkStroke {} **x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; struct InkGesture {} *x10; unsigned char x11; unsigned char x12[3]; struct InkPhraseWordGroup {} **x13; void *x14; }*)arg1;
- (id)pullNextEventFromQueue:(id)arg1;
- (id)pullPrevEventFromQueue:(id)arg1;
- (void)recognitionEnabledStateChanged:(BOOL)arg1;
- (int)recognizeAsSystemGesture:(struct InkPhrase { unsigned short x1; unsigned short x2; int x3; unsigned int x4; unsigned int x5; unsigned char x6; unsigned int x7; struct InkStroke {} **x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; struct InkGesture {} *x10; unsigned char x11; unsigned char x12[3]; struct InkPhraseWordGroup {} **x13; void *x14; }*)arg1;
- (void)removeNotificationObservers;
- (void)restoreMouseCoalescingState;
- (void)resumeCGInking;
- (void)resumeCGInkingOnTimer;
- (BOOL)resumeCGInkingTimerActive;
- (id)rewindEventQueue:(BOOL)arg1;
- (void)setAllowInkWithMouse:(BOOL)arg1;
- (void)setCGSInkingState:(unsigned int)arg1 cgsBoolValueTo:(bool)arg2;
- (void)setCgConnectionID:(unsigned int)arg1;
- (void)setCoalescingIsDisabled:(BOOL)arg1;
- (void)setEventTarget:(unsigned short)arg1;
- (void)setGatheringDataForAPhrase:(BOOL)arg1;
- (void)setGatheringDataForAStroke:(BOOL)arg1;
- (void)setInkOnDemandModeViaSPI:(unsigned int)arg1 buttonMask:(unsigned short)arg2;
- (void)setIsCGInstantMousing:(BOOL)arg1;
- (void)setLastEventWasOverWindowInOurProcess:(BOOL)arg1;
- (void)setLastEventWasRepostedAsEraserEvent:(BOOL)arg1;
- (void)setMessagesFromServerPort:(struct __CFMessagePort { }*)arg1;
- (void)setMousingTestMode:(BOOL)arg1;
- (void)setResumeCGInkingTimerActive:(BOOL)arg1;
- (void)setShouldDisableCoalescingDuringInking:(BOOL)arg1;
- (void)setStylusInProximity:(BOOL)arg1;
- (void)setThisProcessPSN:(struct ProcessSerialNumber { unsigned int x1; unsigned int x2; })arg1;
- (void)setTrackingMouse:(BOOL)arg1;
- (void)setUpClientEvent:(struct OpaqueEventRef { }*)arg1;
- (void)setUserInkOnDemandButtonMask:(unsigned int)arg1;
- (void)setUserInkOnDemandModeOverrideValue:(unsigned int)arg1;
- (void)setWaitingForEndOfPhrase:(BOOL)arg1 startTimer:(BOOL)arg2;
- (BOOL)shouldDisableCoalescingDuringInking;
- (void)showCursorForProximityIfNecessary;
- (void)softReInitialize;
- (void)softTerminate;
- (int)startPhraseTerminationTimer;
- (BOOL)stylusInProximity;
- (void)terminatePhrase:(unsigned char)arg1;
- (int)terminateStroke:(unsigned char)arg1;
- (struct ProcessSerialNumber { unsigned int x1; unsigned int x2; })thisProcessPSN;
- (BOOL)trackingMouse;
- (void)updateInkStateForMouseUp:(BOOL)arg1 andTabletPointEventSubtype:(BOOL)arg2;
- (unsigned int)userInkOnDemandButtonMask;
- (unsigned int)userInkOnDemandModeOverrideValue;
- (BOOL)willRepostToInkPadInInkPadMode;

@end
