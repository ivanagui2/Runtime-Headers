/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/RemoteXPC.framework/Versions/A/RemoteXPC
 */

@interface OS_xpc_remote_connection : NSObject {
    id  _event_handler;
    NSObject<OS_dispatch_queue> * _internal_queue;
    OS_xpc_remote_listener * _listener;
    OS_xpc_remote_message * _msgq_head;
    OS_xpc_remote_message * _msgq_tail;
    int  _preexisting_socket;
    OS_remote_service * _remote_service;
    bool  _send_in_progress;
    int  _state;
    NSObject<OS_dispatch_queue> * _target_queue;
    int  _type;
    unsigned long long  first_msg_id;
    unsigned long long  local_service_version;
    void * multiverse_device;
    unsigned int  multiverse_port;
    unsigned long long  next_msg_id;
    OS_xpc_remote_outstanding_reply * outstanding_reply_head;
    OS_xpc_remote_pending_stream * pending_stream_head;
    unsigned char  protocol_version;
    char * remote_service_name;
    unsigned long long  remote_service_version;
    OS_xpc_remote_channel * reply_channel;
    bool  reply_channel_helo_received;
    OS_xpc_remote_channel * root_channel;
    bool  root_channel_helo_received;
    NSObject<OS_nw_connection> * root_connection;
    NSObject<OS_nw_listener> * root_listener;
    bool  server_mode;
    unsigned int  traffic_class;
}

@property (atomic, readwrite, copy) id event_handler;
@property (atomic, readwrite, retain) NSObject<OS_dispatch_queue> *internal_queue;
@property (atomic, readwrite, retain) OS_xpc_remote_listener *listener;
@property (atomic, readwrite, retain) OS_xpc_remote_message *msgq_head;
@property (atomic, readwrite, retain) OS_xpc_remote_message *msgq_tail;
@property (atomic, readwrite) int preexisting_socket;
@property (atomic, readwrite, retain) OS_remote_service *remote_service;
@property (atomic, readwrite) bool send_in_progress;
@property (atomic, readwrite) int state;
@property (atomic, readwrite, retain) NSObject<OS_dispatch_queue> *target_queue;
@property (atomic, readwrite) int type;

- (void).cxx_destruct;
- (void)dealloc;
- (id)event_handler;
- (id)internal_queue;
- (id)listener;
- (id)msgq_head;
- (id)msgq_tail;
- (int)preexisting_socket;
- (id)remote_service;
- (bool)send_in_progress;
- (void)setEvent_handler:(id)arg1;
- (void)setInternal_queue:(id)arg1;
- (void)setListener:(id)arg1;
- (void)setMsgq_head:(id)arg1;
- (void)setMsgq_tail:(id)arg1;
- (void)setPreexisting_socket:(int)arg1;
- (void)setRemote_service:(id)arg1;
- (void)setSend_in_progress:(bool)arg1;
- (void)setState:(int)arg1;
- (void)setTarget_queue:(id)arg1;
- (void)setType:(int)arg1;
- (int)state;
- (id)target_queue;
- (int)type;

@end
