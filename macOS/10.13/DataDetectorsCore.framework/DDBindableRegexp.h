/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore
 */

@interface DDBindableRegexp : NSObject <NSCopying> {
    DDBinderInfo * _binderInfo;
    DDBasicRegexp * _coreRegexp;
    DDLocation * _location;
    BOOL  _nonSkippable;
}

@property (atomic, readwrite) BOOL nonSkippable;

+ (id)bindableRegexpWithBasicRegexp:(id)arg1 location:(id)arg2;
+ (id)bindableRegexpWithBindableRegexp:(id)arg1 extraBinder:(id)arg2;
+ (id)bindableRegexpWithBindableRegexp:(id)arg1 extraBinder:(id)arg2 displayName:(id)arg3;
+ (id)concatWithBinderAndRegexpes:(id)arg1;
+ (id)disjunctionWithBinderAndRegexpes:(id)arg1;
+ (id)errorDictionary;
+ (id)errorEmptyPattern;
+ (id)errorInvalidRange;
+ (id)errorVariableNotFoundWithName:(id)arg1;
+ (id)kleeneStarOfRegexp:(id)arg1 binder:(id)arg2;
+ (id)regexpMatchingBetweenFirstChar:(unsigned short)arg1 endChar:(unsigned short)arg2;
+ (id)regexpMatchingString:(id)arg1;
+ (id)regexpMatchingString:(id)arg1 binder:(id)arg2;
+ (id)regexpMatchingString:(id)arg1 binder:(id)arg2 caseInsensitive:(BOOL)arg3;
+ (id)regexpWithBasicRegexp:(id)arg1 binder:(id)arg2;

- (BOOL)acceptEmptyWordWithManager:(id)arg1;
- (void)appendDescriptionToString:(id)arg1 depth:(int)arg2;
- (id)binderInfo;
- (id)binderName;
- (id)coreRegexp;
- (void)dealloc;
- (id)effectiveArgument;
- (id)humanReadableName;
- (id)initWithRegexp:(id)arg1 binder:(id)arg2;
- (id)initWithRegexp:(id)arg1 binderInfo:(id)arg2;
- (BOOL)isSimpleExpression;
- (id)location;
- (struct __CFString { }*)locationFilename;
- (struct __DDExpressionPosition { int x1; int x2; int x3; int x4; })locationPosition;
- (id)longDescription;
- (BOOL)nonSkippable;
- (id)prettyPrint;
- (id)prettyPrintWithPriority:(int)arg1;
- (void)setBinderInfo:(id)arg1;
- (void)setCoreRegexp:(id)arg1;
- (void)setLocation:(id)arg1;
- (void)setLocationFilename:(struct __CFString { }*)arg1 position:(struct __DDExpressionPosition { int x1; int x2; int x3; int x4; })arg2;
- (void)setNonSkippable:(BOOL)arg1;
- (int)splitRegexpWithDelegate:(id)arg1;

// DDBindableRegexp (ASTConversion)

- (id)symbolsInGrammar:(id)arg1 withManager:(id)arg2;

// DDBindableRegexp (DDASTCopy)

- (id)copyWithZone:(struct _NSZone { }*)arg1;

// DDBindableRegexp (DDASTToICU)

- (void)appendToDescription:(id)arg1 priority:(int)arg2 withManager:(id)arg3;
- (id)icuEquivalentWithManager:(id)arg1;

// DDBindableRegexp (TypeBuilder)

- (id)computeTypeWithManager:(id)arg1;

// DDBindableRegexp (XMLOutput)

- (id)monElement;

@end
