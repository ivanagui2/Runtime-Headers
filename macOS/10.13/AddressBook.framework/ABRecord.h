/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AddressBook.framework/Versions/A/AddressBook
 */

@interface ABRecord : NSObject <NSCopying, NSLocking> {
    id  _databaseImpl;
    id  _reserved1;
    id  _reserved2;
    id  _reserved3;
}

+ (BOOL)_isPublicRecord;
+ (id)_newUniqueIdForTable:(id)arg1;
+ (id)_table;
+ (BOOL)accessInstanceVariablesDirectly;
+ (id)builtInProperties;
+ (id)copyPasteboardDictionaryForRecords:(id)arg1;
+ (id)copyPasteboardStringForRecords:(id)arg1;
+ (void)discardOriginalUniqueIds;
+ (void)globalAPILockForAddressBook:(id)arg1 inFile:(const char *)arg2 line:(unsigned long long)arg3;
+ (void)globalAPIUnlockForAddressBook:(id)arg1 inFile:(const char *)arg2 line:(unsigned long long)arg3;
+ (id)makeUniqueId;
+ (id)managedObjectContextForAddressBook:(id)arg1;
+ (id)nts_RecordFromDictionaryRepresentation:(id)arg1 withRecordMapping:(id)arg2 addressBook:(id)arg3 generateIds:(BOOL)arg4;
+ (id)nts_RecordFromDictionaryRepresentation:(id)arg1 withRecordMapping:(id)arg2 addressBook:(id)arg3 generateIds:(BOOL)arg4 account:(id)arg5;
+ (long long)nts_TypeOfProperty:(id)arg1 withAddressBook:(id)arg2;
+ (id)originalUniqueIdOfRecordPastedWithUniqueId:(id)arg1;
+ (void)pastedRecordWithUniqueId:(id)arg1 asRecordWithUniqueId:(id)arg2;
+ (id)properties;
+ (id)propertiesWithAddressBook:(id)arg1;
+ (id)propertyTypes;
+ (id)propertyTypesWithAddressBook:(id)arg1;
+ (id)propertyTypesWithAddressBook:(id)arg1 acquireLock:(BOOL)arg2;
+ (id)recordFromDictionaryRepresentation:(id)arg1 withRecordMapping:(id)arg2 addressBook:(id)arg3 generateIds:(BOOL)arg4;
+ (Class)remoteObjectClass;
+ (id)searchElementForTerms:(id)arg1;
+ (long long)typeOfProperty:(id)arg1;
+ (long long)typeOfProperty:(id)arg1 withAddressBook:(id)arg2;
+ (void)writeRecords:(id)arg1 toPasteboard:(id)arg2;

- (void).cxx_destruct;
- (id)_21vCardRepresentationAsData;
- (id)_addressBook;
- (id)_allLocation;
- (id)_contextInfo;
- (id)_dictionaryRepresentationForPropertyTypes:(id)arg1 andProperties:(id)arg2;
- (id)_firstMatchingProperty:(id)arg1;
- (BOOL)_isCompany;
- (BOOL)_isMe;
- (BOOL)_isPublicRecord;
- (void)_markAsViewed;
- (id)_realCompositeName;
- (BOOL)_shouldAssignNewDatabaseImplToAccount;
- (BOOL)_shouldAssignNewDatabaseImplToPrimaryStore;
- (id)_table;
- (id)_vCardRepresentationAsString;
- (id)_vCardRepresentationAsStringUsingPreferencesForOptions;
- (id)abDatabaseImpl;
- (id)account;
- (id)accountPermissions;
- (void)addSubrecordsToSet:(id)arg1;
- (id)addressBook;
- (BOOL)canEditInCardView;
- (BOOL)canSetProperty:(id)arg1 error:(id*)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)destinationStoreUrlWithAddressBook:(id)arg1 storeUrl:(id)arg2;
- (id)dictionaryRepresentation;
- (id)displayName;
- (BOOL)doesPropertyExist:(id)arg1;
- (id)duplicate;
- (id)duplicateWithClass:(Class)arg1;
- (id)fetchUpdatedBackingObject;
- (void)finalize;
- (unsigned long long)hash;
- (id)init;
- (id)initSpecialRecordWithUniqueId:(id)arg1 addressBook:(id)arg2;
- (id)initWithAddressBook:(id)arg1;
- (id)initWithAddressBook:(id)arg1 account:(id)arg2;
- (id)initWithDatabaseImpl:(id)arg1 addressBook:(id)arg2;
- (id)initWithDatabaseImpl_nts:(id)arg1 addressBook:(id)arg2;
- (id)initWithDictionaryRepresentation:(id)arg1 addressBook:(id)arg2;
- (id)initWithDictionaryRepresentation:(id)arg1 addressBook:(id)arg2 account:(id)arg3;
- (id)initWithDictionaryRepresentation_nts:(id)arg1 addressBook:(id)arg2;
- (id)initWithDictionaryRepresentation_nts:(id)arg1 addressBook:(id)arg2 storeUrl:(id)arg3;
- (id)initWithUniqueId:(id)arg1;
- (id)initWithUniqueId:(id)arg1 addressBook:(id)arg2;
- (id)initWithUniqueId:(id)arg1 addressBook:(id)arg2 account:(id)arg3;
- (id)initWithUniqueId:(id)arg1 addressBook:(id)arg2 storeUrl:(id)arg3;
- (BOOL)isAddressBookReadOnly;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isReadOnly;
- (BOOL)isSubscribed;
- (void)lock;
- (id)metadataURL;
- (id)nts_AddressBook;
- (id)nts_AffectsSmartGroupsIsNew:(BOOL)arg1;
- (void)nts_CascadeRemove;
- (id)nts_ChangedProperties;
- (id)nts_Description;
- (id)nts_DescriptionDictionary;
- (BOOL)nts_HasChangedProperties;
- (BOOL)nts_IsSubscribed;
- (BOOL)nts_MoveIntoAddressBook:(id)arg1 account:(id)arg2 error:(id*)arg3;
- (id)nts_ParentGroups;
- (void)nts_PopulateWithDictionary:(id)arg1 includeCoreProperties:(BOOL)arg2 addressBook:(id)arg3;
- (void)nts_PopulateWithDictionary:(id)arg1 withRecordMapping:(id)arg2 generateIds:(BOOL)arg3 addressBook:(id)arg4;
- (void)nts_PopulateWithDictionary:(id)arg1 withRecordMapping:(id)arg2 generateIds:(BOOL)arg3 includeCoreProperties:(BOOL)arg4 addressBook:(id)arg5;
- (id)nts_RemoteLocation;
- (BOOL)nts_RemoveFromAddressBook:(id)arg1;
- (BOOL)nts_RemoveValueForProperty:(id)arg1;
- (BOOL)nts_SetValue:(id)arg1 forProperty:(id)arg2;
- (BOOL)nts_SetValue:(id)arg1 forProperty:(id)arg2 error:(id*)arg3;
- (BOOL)nts_SetValue:(id)arg1 forProperty:(id)arg2 error:(id*)arg3 account:(id)arg4;
- (id)nts_StringForIndexing;
- (BOOL)nts_Touch;
- (id)nts_UniqueId;
- (id)nts_ValueForProperty:(id)arg1;
- (id)nts_account;
- (id)nts_accountFromDatabaseImpl;
- (id)nts_accountWithIdentifier:(id)arg1;
- (void)nts_addPropertyValueToArchive:(id)arg1 forPropertyKey:(id)arg2;
- (BOOL)nts_canRemove;
- (void)nts_importSingleValue:(id)arg1 fromArchive:(id)arg2 forPropertyKey:(id)arg3;
- (id)nts_initWithUniqueId:(id)arg1 addressBook:(id)arg2;
- (id)nts_initWithUniqueId:(id)arg1 addressBook:(id)arg2 storeUrl:(id)arg3;
- (id)parentGroups;
- (id)parentGroupsIncludingSubscriptions;
- (id)persistentRepresentation;
- (void)populateWithDictionaryRepresentation:(id)arg1;
- (id)quicklookURL;
- (BOOL)remoteBackingObjectIsStale;
- (id)remoteBackingObjectUpdateIfNecessary;
- (id)remoteLocation;
- (BOOL)removeValueForProperty:(id)arg1;
- (id)sanitizeValue:(id)arg1 forProperty:(id)arg2;
- (void)setAddressBook:(id)arg1;
- (void)setNilValueForKey:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;
- (BOOL)setValue:(id)arg1 forProperty:(id)arg2;
- (BOOL)setValue:(id)arg1 forProperty:(id)arg2 error:(id*)arg3;
- (BOOL)setValue:(id)arg1 forProperty:(id)arg2 error:(id*)arg3 account:(id)arg4;
- (id)sharingUniqueId;
- (id)stringForIndexing;
- (id)stringForXcode;
- (void)takeValue:(id)arg1 forKey:(id)arg2;
- (id)uniqueId;
- (void)unlock;
- (id)vCardRepresentationUsingPreferencesForOptions;
- (BOOL)validateForAccount:(id)arg1 error:(id*)arg2;
- (BOOL)validateValue:(id*)arg1 forProperty:(id)arg2 error:(id*)arg3;
- (BOOL)validateValue:(id*)arg1 forProperty:(id)arg2 error:(id*)arg3 account:(id)arg4;
- (id)valueForKey:(id)arg1;
- (id)valueForKeyPath:(id)arg1;
- (id)valueForProperty:(id)arg1;
- (id)valueSanitizer;

// ABRecord (ABDirectCoreDataAccess)

- (id)abcdMutableSetValueForKey:(id)arg1;
- (void)abcdSetValue:(id)arg1 forKey:(id)arg2;
- (id)abcdValueForKey:(id)arg1;

// ABRecord (ABPrivateDatabaseImplSwivelingStuff)

- (void)setDatabaseImpl:(id)arg1 andAddressBook:(id)arg2;

// ABRecord (ABRecordAdditions)

+ (id)calendarWithOffsetFromGMT:(long long)arg1;
+ (id)dateByNormalizingToGMT:(id)arg1;
+ (id)gmtCalendar;
+ (id)gmtDateOccurringAtNoonOnSameCalendarDayAsDateInLocalTime:(id)arg1;
+ (id)localCalendar;
+ (id)localDateOccurringAtNoonOnSameCalendarDayAsDate:(id)arg1 inTimeZoneSecondsFromGMT:(long long)arg2;
+ (id)localDateOccurringAtNoonOnSameCalendarDayAsDateInGMT:(id)arg1;
+ (id)localDateOccurringOnSameCalendarDayAsDateInGMT:(id)arg1;
+ (id)localDateWithHour:(unsigned long long)arg1 occurringOnSameCalendarDayAsDate:(id)arg2 inTimeZoneSecondsFromGMT:(long long)arg3;
+ (id)localDateWithHour:(unsigned long long)arg1 occurringOnSameCalendarDayAsDateInLocalTimeZone:(id)arg2;
+ (id)makeCalendarWithOffsetFromGMT:(long long)arg1;

- (id)allProperties;
- (id)createAlternateName;
- (id)createFirstLastSorting:(BOOL)arg1 part1:(BOOL)arg2;
- (id)dateByNormalizingToGMT:(id)arg1;
- (id)gmtDateOccurringAtNoonOnSameCalendarDayAsDateInLocalTime:(id)arg1;
- (id)localDateOccurringAtNoonOnSameCalendarDayAsDate:(id)arg1 inTimeZoneSecondsFromGMT:(long long)arg2;
- (id)localDateOccurringAtNoonOnSameCalendarDayAsDateInGMT:(id)arg1;
- (id)localDateOccurringOnSameCalendarDayAsDateInGMT:(id)arg1;
- (id)localDateWithHour:(unsigned long long)arg1 occurringOnSameCalendarDayAsDate:(id)arg2 inTimeZoneSecondsFromGMT:(long long)arg3;
- (id)localDateWithHour:(unsigned long long)arg1 occurringOnSameCalendarDayAsDateInLocalTimeZone:(id)arg2;
- (void)setAllProperties:(id)arg1;

// ABRecord (ABRecordImageAdditionsInternal)

- (id)imageMemento;
- (void)setImageFromMemento:(id)arg1;

// ABRecord (ABRecordVCardAdditions)

- (void)_setUnknownProperties:(id)arg1;
- (id)_unknownProperties;

// ABRecord (ABRecord_Compare)

- (long long)_abCompare:(id)arg1 ascending:(BOOL)arg2 options:(unsigned long long)arg3;
- (BOOL)_abCompareContainsSubString:(id)arg1 options:(unsigned long long)arg2;
- (BOOL)_abComparePrefixMatch:(id)arg1 options:(unsigned long long)arg2;

@end
