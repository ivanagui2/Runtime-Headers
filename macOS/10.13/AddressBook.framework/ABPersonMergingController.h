/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AddressBook.framework/Versions/A/AddressBook
 */

@interface ABPersonMergingController : NSObject {
    NSMutableArray * _addedPeople;
    NSMutableArray * _addedToGroup;
    NSMutableArray * _allPeople;
    ABMultiDictionary * _collisionMap;
    <ABPersonMergingControllerDelegate> * _delegate;
    NSMutableArray * _deletedPeople;
    ABGroup * _group;
    ABPerson * _meCard;
    NSMutableDictionary * _mergedIntoGroup;
    NSArray * _personProperties;
    NSMutableDictionary * _selfMergedPeople;
    ABAccount * _targetAccount;
    ABAddressBook * _targetAddressBook;
    NSMutableArray * _updatedPeople;
    NSMutableArray * _updatedPeopleProperties;
    NSMutableSet * _updatedPeopleSet;
}

@property (atomic, readwrite) <NSObject><ABPersonMergingControllerDelegate> *delegate;
@property (atomic, readwrite, retain) ABAccount *targetAccount;
@property (atomic, readwrite, retain) ABAddressBook *targetAddressBook;

- (void)_addPeople:(id)arg1 usingAddressBook:(id)arg2;
- (unsigned long long)_insertionIndexForPerson:(id)arg1;
- (void)addMember:(id)arg1 toGroup:(id)arg2;
- (void)addPerson:(id)arg1;
- (id)addedPeople;
- (id)addedToGroup;
- (id)allPeople;
- (id)allPersonProperties;
- (BOOL)applyChanges;
- (BOOL)applyChangesAndSave:(BOOL)arg1;
- (id)collisionMap;
- (void)dealloc;
- (id)delegate;
- (void)deletePerson:(id)arg1;
- (id)deletedPeople;
- (id)duplicatesForPeople:(id)arg1;
- (id)emulateUpdateCard:(id)arg1 withImportedCard:(id)arg2 changes:(id)arg3 inAddressBook:(id)arg4;
- (void)finalize;
- (id)findExistingPeopleWhoseNamesMatchPeople:(id)arg1;
- (BOOL)findSimilarMultiValuesForPerson:(id)arg1;
- (BOOL)hasPendingChanges;
- (id)initWithGroup:(id)arg1;
- (void)mergeSimilarMultiValuesForPerson:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setMeCard:(id)arg1;
- (void)setTargetAccount:(id)arg1;
- (void)setTargetAddressBook:(id)arg1;
- (BOOL)shouldMergeValuesForProperty:(id)arg1;
- (id)targetAccount;
- (id)targetAddressBook;
- (id)updateCard:(id)arg1 withImportedCard:(id)arg2;
- (id)updateCard:(id)arg1 withImportedCard:(id)arg2 replaceValues:(BOOL)arg3;
- (id)updatedPeople;

@end
