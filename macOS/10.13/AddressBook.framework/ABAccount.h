/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AddressBook.framework/Versions/A/AddressBook
 */

@interface ABAccount : NSObject <ABAccountPermissions> {
    NSString * _allContactsLabel;
    NSURL * _baseURL;
    BOOL  _canBecomeDefaultAccount;
    BOOL  _canReimportFromMetadata;
    id  _config;
    id  _customizationPolicy;
    NSString * _directoryLabel;
    id  _futureSource;
    BOOL  _groupsCanRemoveMembers;
    NSString * _identifier;
    bool  _invalid;
    BOOL  _isMainAccount;
    NSString * _name;
    NSURL * _persistentStoreURL;
    id  _searchPolicy;
    BOOL  _showAllContactsIfOnlyOneGroup;
    long long  _sortOrder;
    Class  _sourceClass;
    BOOL  _supportsDistributionLists;
    BOOL  _usesSyncServices;
}

@property (atomic, readwrite, copy) NSString *allContactsLabel;
@property (atomic, readonly) BOOL allowsDistributionLists;
@property (atomic, readonly, copy) NSURL *baseURL;
@property (atomic, readwrite) BOOL canBecomeDefaultAccount;
@property (atomic, readwrite) BOOL canReimportFromMetadata;
@property (atomic, readonly, retain) <ABAccountConfiguration> *config;
@property (atomic, readonly, retain) <ABAccountCustomizationPolicy> *customizationPolicy;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) ABAccountDirectory *directory;
@property (atomic, readwrite, copy) NSString *directoryLabel;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readonly, copy) NSString *identifier;
@property (atomic, readonly, copy) NSURL *imagesFolderURL;
@property (getter=isInitialSyncComplete, atomic, readonly) BOOL initialSyncComplete;
@property (nonatomic, readonly, retain) <ABAccountConfigurationInternal> *internalConfig;
@property (getter=isInvalid, atomic, readonly) bool invalid;
@property (atomic, readonly) BOOL isMainAccount;
@property (atomic, readonly) BOOL isPersistentAccount;
@property (atomic, readonly) BOOL isSearchable;
@property (atomic, readwrite, copy) NSString *name;
@property (atomic, readonly, copy) NSURL *persistentStoreURL;
@property (atomic, readonly, retain) <ABAccountSearchPolicy> *searchPolicy;
@property (atomic, readwrite) BOOL showAllContactsIfOnlyOneGroup;
@property (atomic, readonly) long long sortOrder;
@property (atomic, readonly) Class sourceClass;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite) BOOL supportsDistributionLists;
@property (atomic, readwrite) BOOL usesSyncServices;

+ (id)builderWithIdentifier:(id)arg1;
+ (id)defaultAccountComparator;
+ (id)peopleByAccountIdentifier:(id)arg1;
+ (id)userInterfaceComparator;

- (id)aListPluginIdentifier;
- (id)accountOrParentAccountTypeIdentifier;
- (id)accountTypeIdentifier;
- (id)addressBook;
- (id)allContactsLabel;
- (BOOL)allowsDistributionLists;
- (id)baseURL;
- (BOOL)canBecomeDefaultAccount;
- (BOOL)canCreateGroups;
- (BOOL)canCreatePeople;
- (BOOL)canDeletePeople;
- (BOOL)canEditGroup:(id)arg1;
- (BOOL)canEditPerson:(id)arg1;
- (BOOL)canReimportFromMetadata;
- (BOOL)canRemoveGroup:(id)arg1;
- (BOOL)canRenameGroup:(id)arg1;
- (void)cancelFutureSource;
- (id)config;
- (int)containmentPersonality;
- (id)copy;
- (id)customizationPolicy;
- (void)dealloc;
- (id)description;
- (void)didImportPeople:(id)arg1 intoGroup:(id)arg2;
- (void)didRemoveFromRepository:(id)arg1;
- (id)directory;
- (id)directoryLabel;
- (id)futureSource;
- (BOOL)groupsCanRemoveMembers;
- (id)identifier;
- (id)imagesFolderURL;
- (id)initWithIdentifier:(id)arg1 baseURL:(id)arg2;
- (id)internalConfig;
- (void)invalidate;
- (void)invalidateConfig;
- (BOOL)isInitialSyncComplete;
- (bool)isInvalid;
- (BOOL)isMainAccount;
- (BOOL)isPersistentAccount;
- (BOOL)isSearchable;
- (id)labelsConstraint;
- (id)name;
- (id)password;
- (id)persistentStoreURL;
- (void)primitiveUpdateName:(id)arg1;
- (BOOL)record:(id)arg1 validateValue:(id*)arg2 forProperty:(id)arg3 error:(id*)arg4;
- (BOOL)requiresSeparateBirthdayCalendar;
- (id)searchOperationWithString:(id)arg1 delegate:(id)arg2;
- (id)searchOperationWithTerms:(id)arg1 delegate:(id)arg2;
- (id)searchPolicy;
- (void)setAllContactsLabel:(id)arg1;
- (void)setCanBecomeDefaultAccount:(BOOL)arg1;
- (void)setCanReimportFromMetadata:(BOOL)arg1;
- (void)setDirectoryLabel:(id)arg1;
- (bool)setInvalidateFlag;
- (void)setName:(id)arg1;
- (void)setPassword:(id)arg1;
- (void)setShowAllContactsIfOnlyOneGroup:(BOOL)arg1;
- (void)setSupportsDistributionLists:(BOOL)arg1;
- (void)setUsesSyncServices:(BOOL)arg1;
- (BOOL)showAllContactsIfOnlyOneGroup;
- (id)socialProfileTransform;
- (long long)sortOrder;
- (long long)sortOrderForGroup:(id)arg1;
- (id)source;
- (Class)sourceClass;
- (id)sourceOrNil;
- (BOOL)supportsDistributionLists;
- (BOOL)supportsPhoneticName;
- (BOOL)supportsPhotos;
- (void)unloadSource;
- (id)unwrapSourceFromFuture:(id)arg1;
- (void)updateName:(id)arg1;
- (BOOL)usesSyncServices;

// ABAccount (ABAccountBuilder)

- (id)initWithBuilder:(id)arg1;

// ABAccount (ABCDContainer)

+ (long long)coreDataContainerTypeFromAccountType:(id)arg1;

- (id)containerRepresentation;
- (long long)coreDataContainerType;

// ABAccount (ABRemoteAccountCollection)

- (id)initWithRemoteAccount:(id)arg1 baseURL:(id)arg2;

@end
