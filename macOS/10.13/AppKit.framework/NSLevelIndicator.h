/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSLevelIndicator : NSControl <DebugHierarchyObject>

@property (atomic, readwrite, copy) NSColor *criticalFillColor;
@property (atomic, readwrite) double criticalValue;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite) BOOL drawsTieredCapacityLevels;
@property (getter=isEditable, atomic, readwrite) BOOL editable;
@property (atomic, readwrite, copy) NSColor *fillColor;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite) unsigned long long levelIndicatorStyle;
@property (atomic, readwrite) double maxValue;
@property (atomic, readwrite) double minValue;
@property (atomic, readwrite) long long numberOfMajorTickMarks;
@property (atomic, readwrite) long long numberOfTickMarks;
@property (atomic, readwrite) long long placeholderVisibility;
@property (atomic, readwrite, retain) NSImage *ratingImage;
@property (atomic, readwrite, retain) NSImage *ratingPlaceholderImage;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite) unsigned long long tickMarkPosition;
@property (atomic, readwrite, copy) NSColor *warningFillColor;
@property (atomic, readwrite) double warningValue;

// Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit

+ (id)defaultAnimationForKey:(id)arg1;
+ (void)initialize;

// Image: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Debugger/libViewDebuggerSupport.dylib

// NSLevelIndicator (DebugHierarchyAdditions)

- (id)debugHierarchyPropertyDescriptions;
- (id)debugHierarchyValueForPropertyWithName:(id)arg1;

// Image: /Applications/Xcode.app/Contents/Developer/usr/lib/libMainThreadChecker.dylib

- (struct NSEdgeInsets { double x1; double x2; double x3; double x4; })alignmentRectInsets;
- (BOOL)alwaysDrawRatingPlaceholder;
- (id)criticalFillColor;
- (double)criticalValue;
- (id)customCriticalFillColor;
- (id)customFillColor;
- (id)customWarningFillColor;
- (BOOL)drawsTieredCapacityLevels;
- (id)fillColor;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (BOOL)isEditable;
- (BOOL)isFlipped;
- (unsigned long long)levelIndicatorStyle;
- (double)maxValue;
- (double)minValue;
- (id)ns_widgetType;
- (long long)numberOfMajorTickMarks;
- (long long)numberOfTickMarks;
- (long long)placeholderVisibility;
- (id)ratingImage;
- (id)ratingPlaceholderImage;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectOfTickMarkAtIndex:(long long)arg1;
- (void)setAlwaysDrawRatingPlaceholder:(BOOL)arg1;
- (void)setCriticalFillColor:(id)arg1;
- (void)setCriticalValue:(double)arg1;
- (void)setCustomCriticalFillColor:(id)arg1;
- (void)setCustomFillColor:(id)arg1;
- (void)setCustomWarningFillColor:(id)arg1;
- (void)setDrawsTieredCapacityLevels:(BOOL)arg1;
- (void)setEditable:(BOOL)arg1;
- (void)setFillColor:(id)arg1;
- (void)setLevelIndicatorStyle:(unsigned long long)arg1;
- (void)setMaxValue:(double)arg1;
- (void)setMinValue:(double)arg1;
- (void)setNumberOfMajorTickMarks:(long long)arg1;
- (void)setNumberOfTickMarks:(long long)arg1;
- (void)setPlaceholderVisibility:(long long)arg1;
- (void)setRatingImage:(id)arg1;
- (void)setRatingPlaceholderImage:(id)arg1;
- (void)setTickMarkPosition:(unsigned long long)arg1;
- (void)setWarningFillColor:(id)arg1;
- (void)setWarningValue:(double)arg1;
- (void)sizeToFit;
- (unsigned long long)tickMarkPosition;
- (double)tickMarkValueAtIndex:(long long)arg1;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (id)warningFillColor;
- (double)warningValue;

@end
