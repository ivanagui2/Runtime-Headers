/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSScrubber : NSView <NSGestureRecognizerDelegate, NSScrollViewDelegate> {
    NSButton * _arrowLeft;
    NSButton * _arrowRight;
    double  _autoscrollBasis;
    struct CGPoint { 
        double x; 
        double y; 
    }  _autoscrollEffectivePoint;
    id  _autoscrollLink;
    double  _autoscrollRatio;
    double  _autoscrollVelocity;
    NSColor * _backgroundColor;
    NSView * _backgroundView;
    unsigned int  _continuous;
    id  _dataSource;
    id  _delegate;
    unsigned int  _ignoresTouches;
    unsigned int  _isInteracting;
    unsigned int  _isMovingSelection;
    long long  _itemAlignment;
    long long  _mode;
    NSPressGestureRecognizer * _pressGestureRecognizer;
    unsigned int  _reservedFlags;
    NSPanGestureRecognizer * _scrollGestureRecognizer;
    NSScrollView * _scrollView;
    NSPanGestureRecognizer * _scrubGestureRecognizer;
    unsigned int  _trackingChangedItem;
    NSView * _translationView;
    id  _tx;
}

@property (atomic, readwrite, copy) NSColor *backgroundColor;
@property (atomic, readwrite, retain) NSView *backgroundView;
@property (getter=isContinuous, atomic, readwrite) BOOL continuous;
@property (atomic, readwrite) <NSScrubberDataSource> *dataSource;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readwrite) <NSScrubberDelegate> *delegate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite) double endcapCornerRadius;
@property (atomic, readwrite) BOOL floatsSelectionViews;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readonly) long long highlightedIndex;
@property (getter=_ignoresTouches, setter=_setIgnoresTouches:, atomic, readwrite) BOOL ignoresTouches;
@property (atomic, readwrite) long long itemAlignment;
@property (atomic, readwrite) long long mode;
@property (atomic, readonly) long long numberOfItems;
@property (atomic, readwrite, retain) NSScrubberPendingChanges *pendingChanges;
@property (atomic, readonly) NSArray *populatedItemViews;
@property (atomic, readonly) NSScrollView *scrollView;
@property (atomic, readwrite, retain) NSScrubberLayout *scrubberLayout;
@property (atomic, readwrite) long long selectedIndex;
@property (atomic, readwrite, retain) NSScrubberSelectionStyle *selectionBackgroundStyle;
@property (atomic, readwrite) long long selectionIndex;
@property (atomic, readwrite, retain) NSTimer *selectionLensPopTimer;
@property (atomic, readwrite) struct CGSize { double x1; double x2; } selectionLensSize;
@property (atomic, readwrite, retain) NSScrubberSelectionStyle *selectionOverlayStyle;
@property (atomic, readwrite) NSScrubberSelectionStyle *selectionStyle;
@property (atomic, readwrite) BOOL showsAdditionalContentIndicators;
@property (atomic, readwrite) BOOL showsArrowButtons;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite) long long tag;

// Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit

+ (id)keyPathsForValuesAffectingAlignmentRectInsets;
+ (id)keyPathsForValuesInvalidatingItemLayout;
+ (id)keyPathsForValuesInvalidatingSelectionLayout;

- (void).cxx_destruct;
- (void)_animateAutoscrollLandingAnimation;
- (Class)_animatorClass;
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
- (BOOL)_contentHuggingDefault_isUsuallyFixedWidth;
- (void)_didTriggerPanGestureRecognizer:(id)arg1;
- (void)_didTriggerPressGestureRecognizer:(id)arg1;
- (void)_didWaitForSelectionLensPop:(id)arg1;
- (void)_earlyCommonInit;
- (BOOL)_ignoresTouches;
- (long long)_indexForItemView:(id)arg1;
- (void)_interactiveHighlightItemAtIndex:(long long)arg1 animated:(BOOL)arg2;
- (void)_interactiveSelectItemAtIndex:(long long)arg1 animated:(BOOL)arg2;
- (void)_lateCommonInit;
- (long long)_numberOfItemsFromDataSource;
- (id)_preferredAppearance;
- (void)_scrollView:(id)arg1 adjustScrollOffset:(inout struct CGPoint { double x1; double x2; }*)arg2 withVelocity:(struct CGPoint { double x1; double x2; })arg3 toItemWithAlignment:(long long)arg4 pinningTarget:(BOOL)arg5;
- (void)_setIgnoresTouches:(BOOL)arg1;
- (void)_tellDelegateHighlightIndexDidChange:(long long)arg1;
- (void)_tellDelegateInteractionBeganIfNeeded;
- (void)_tellDelegateInteractionCancelled;
- (void)_tellDelegateInteractionFinished;
- (void)_tellDelegatePressedItemAtIndex:(long long)arg1;
- (void)_tellDelegateSelectionIndexDidChange:(long long)arg1;
- (void)_tellDelegateVisibleRangeDidChange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_updateArrowButtonStates;
- (void)_updateAutoscrollWithDisplayLink:(id)arg1;
- (void)_updateAutoscrollWithPointInScrollView:(struct CGPoint { double x1; double x2; })arg1 trackingStatus:(BOOL)arg2;
- (void)_updateBackground;
- (void)_updateNumberOfItems;
- (void)_updateScrollViewCornerRadius;
- (void)dealloc;

// NSScrubber (NSScrubberAccessibility)

- (BOOL)_accessibilityChildIsVisible:(id)arg1;
- (id)_accessibilityChildrenAtIndexes:(id)arg1;
- (long long)_accessibilityIndexOfChildAfterVisible;
- (long long)_accessibilityIndexOfChildBeforeVisible;
- (long long)_accessibilityNumberOfChildren;
- (id)_accessibilityVisibleChildren;
- (id)_accessibilityVisibleChildrenAtIndexes:(id)arg1;

// NSScrubber (NSScrubberDeprecated)

+ (id)outlineSelectionOverlayView;
+ (id)roundedSelectionBackgroundView;

// NSScrubber (NSScrubberPressAndHold)

- (id)_gestureRecognizersForPressAndHoldBehavior;
- (id)_touchTargetViewForPressAndHoldBehavior;

// NSScrubber (NSScrubberPrivate)

+ (id)texturedBackgroundColor;

// NSScrubber (NSTouchBarColorListPicker)

+ (id)touchBarColorListPickerScrubberWithDataSource:(id)arg1 delegate:(id)arg2;

// Image: /Applications/Xcode.app/Contents/Developer/usr/lib/libMainThreadChecker.dylib

- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (unsigned long long)accessibilityArrayAttributeCount:(id)arg1;
- (id)accessibilityArrayAttributeValues:(id)arg1 index:(unsigned long long)arg2 maxCount:(unsigned long long)arg3;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityAutoScrollContentIntoView;
- (id)accessibilityChildrenAttribute;
- (unsigned long long)accessibilityIndexOfChild:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityParameterizedAttributeNames;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityScrollChangesSelection;
- (id)accessibilityScrollToShowDescendantAttributeForParameter:(id)arg1;
- (id)accessibilitySelectedChildrenAttribute;
- (id)accessibilityVisibleChildrenAttribute;
- (struct NSEdgeInsets { double x1; double x2; double x3; double x4; })alignmentRectInsets;
- (BOOL)allowPanningInScrollView:(id)arg1;
- (id)backgroundColor;
- (id)backgroundView;
- (id)dataSource;
- (id)delegate;
- (void)didBeginScrollInScrollView:(id)arg1;
- (void)didEndScrollInScrollView:(id)arg1;
- (void)didPressArrowButton:(id)arg1;
- (id)documentView;
- (void)encodeWithCoder:(id)arg1;
- (double)endcapCornerRadius;
- (BOOL)floatsSelectionViews;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (long long)highlightedIndex;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 scrubberLayout:(id)arg2;
- (void)insertItemAtIndex:(long long)arg1;
- (void)insertItemsAtIndexes:(id)arg1;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (BOOL)isContinuous;
- (long long)itemAlignment;
- (id)itemViewForItemAtIndex:(long long)arg1;
- (void)layout;
- (id)makeItemWithIdentifier:(id)arg1 owner:(id)arg2;
- (long long)mode;
- (void)mouseDown:(id)arg1;
- (void)moveItemAtIndex:(long long)arg1 toIndex:(long long)arg2;
- (long long)numberOfItems;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)pendingChanges;
- (void)performBatchUpdates:(id)arg1;
- (void)performSequentialBatchUpdates:(id)arg1;
- (id)populatedItemViews;
- (struct { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; long long x2; long long x3; double x4; long long x5; long long x6; struct CGPoint { double x_7_1_1; double x_7_1_2; } x7; BOOL x8; })proxyState;
- (void)registerClass:(Class)arg1 forItemIdentifier:(id)arg2;
- (void)registerDependencyObservations;
- (void)registerNib:(id)arg1 forItemIdentifier:(id)arg2;
- (void)reloadData;
- (void)reloadItemAtIndex:(long long)arg1;
- (void)reloadItemsAtIndexes:(id)arg1;
- (void)removeItemAtIndex:(long long)arg1;
- (void)removeItemsAtIndexes:(id)arg1;
- (void)scrollItemAtIndex:(long long)arg1 toAlignment:(long long)arg2;
- (id)scrollView;
- (void)scrollViewBeganMomentum:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg3;
- (id)scrubberLayout;
- (long long)selectedIndex;
- (id)selectionBackgroundStyle;
- (long long)selectionIndex;
- (id)selectionLensPopTimer;
- (struct CGSize { double x1; double x2; })selectionLensSize;
- (id)selectionOverlayStyle;
- (id)selectionStyle;
- (void)setBackgroundColor:(id)arg1;
- (void)setBackgroundView:(id)arg1;
- (void)setContinuous:(BOOL)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEndcapCornerRadius:(double)arg1;
- (void)setFloatsSelectionViews:(BOOL)arg1;
- (void)setHighlightedIndex:(long long)arg1;
- (void)setItemAlignment:(long long)arg1;
- (void)setMode:(long long)arg1;
- (void)setPendingChanges:(id)arg1;
- (void)setProxyState:(struct { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; long long x2; long long x3; double x4; long long x5; long long x6; struct CGPoint { double x_7_1_1; double x_7_1_2; } x7; BOOL x8; })arg1;
- (void)setScrubberLayout:(id)arg1;
- (void)setSelectedIndex:(long long)arg1;
- (void)setSelectedIndex:(long long)arg1 animated:(BOOL)arg2;
- (void)setSelectionBackgroundStyle:(id)arg1;
- (void)setSelectionIndex:(long long)arg1;
- (void)setSelectionLensPopTimer:(id)arg1;
- (void)setSelectionLensSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setSelectionOverlayStyle:(id)arg1;
- (void)setSelectionStyle:(id)arg1;
- (void)setShowsAdditionalContentIndicators:(BOOL)arg1;
- (void)setShowsArrowButtons:(BOOL)arg1;
- (void)setTag:(long long)arg1;
- (void)setUserInterfaceLayoutDirection:(long long)arg1;
- (BOOL)showsAdditionalContentIndicators;
- (BOOL)showsArrowButtons;
- (long long)tag;
- (void)unregisterDependencyObservations;
- (void)viewDidMoveToWindow;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })visibleContentRectForLayout;

@end
