/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSTouchBarItemContainerView : NSView <_NSTouchBarItemLayoutWrapper> {
    BOOL  _disabled;
    NSGroupTouchBarItem * _groupItemContainingItem;
    BOOL  _isEncapsulatingLayoutEngine;
    BOOL  _isInCustomizationPalette;
    BOOL  _isMeasuringView;
    BOOL  _isSpace;
    struct CGSize { 
        double width; 
        double height; 
    }  _maxSize;
    struct CGSize { 
        double width; 
        double height; 
    }  _minSize;
    struct CGSize { 
        double width; 
        double height; 
    }  _preferredSize;
    long long  _priorityIndex;
    NSTouchBarItem * _touchBarItem;
}

@property (atomic, readwrite, retain) NSGroupTouchBarItem *compressionItemContainingItem;
@property (atomic, readonly) struct CGSize { double x1; double x2; } contentClippingSize;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite) BOOL disabled;
@property (atomic, readwrite, retain) NSGroupTouchBarItem *groupItemContainingItem;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite) BOOL isInCustomizationPalette;
@property (atomic, readonly) BOOL isSpace;
@property (atomic, readonly) double itemPadding;
@property (atomic, readonly) unsigned long long itemPosition;
@property (atomic, readonly) struct CGSize { double x1; double x2; } maxSize;
@property (atomic, readonly) struct CGSize { double x1; double x2; } minSize;
@property (atomic, readonly) struct CGSize { double x1; double x2; } preferredSize;
@property (atomic, readonly) double preferredZOrder;
@property (atomic, readwrite) long long priorityIndex;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite, retain) NSTouchBarItem *touchBarItem;

// Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit

- (void)_deferringLayoutNotifications:(id)arg1;
- (void)_noteTouchBarItemViewChanged;
- (BOOL)_shouldDoLayerPerformanceUpdates;
- (void)_updateMeasuredSizes;
- (id)_viewForItem;
- (void)dealloc;

// Image: /Applications/Xcode.app/Contents/Developer/usr/lib/libMainThreadChecker.dylib

- (struct NSEdgeInsets { double x1; double x2; double x3; double x4; })alignmentRectInsets;
- (id)compressionItemContainingItem;
- (void)constraintsDidChangeInEngine:(id)arg1;
- (struct CGSize { double x1; double x2; })contentClippingSize;
- (BOOL)disabled;
- (id)groupItemContainingItem;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)isInCustomizationPalette;
- (BOOL)isSpace;
- (unsigned long long)itemPosition;
- (struct CGSize { double x1; double x2; })maxSize;
- (struct CGSize { double x1; double x2; })minSize;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (struct CGSize { double x1; double x2; })preferredSize;
- (double)preferredZOrder;
- (long long)priorityIndex;
- (void)setCompressionItemContainingItem:(id)arg1;
- (void)setDisabled:(BOOL)arg1;
- (void)setGroupItemContainingItem:(id)arg1;
- (void)setIsInCustomizationPalette:(BOOL)arg1;
- (void)setPriorityIndex:(long long)arg1;
- (void)setTouchBarItem:(id)arg1;
- (id)touchBarItem;
- (void)touchesBeganWithEvent:(id)arg1;

// Image: /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge

// NSTouchBarItemContainerView (ViewBridge)

- (void)setFrameSize:(struct CGSize { double x1; double x2; })arg1;

@end
