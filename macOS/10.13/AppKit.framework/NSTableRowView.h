/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSTableRowView : NSView <NSAccessibilityRow> {
    NSColor * _backgroundColor;
    unsigned int  _backgroundStylesDirty;
    unsigned int  _checkingFontRefColor;
    NSMutableDictionary * _columnConstraints;
    long long  _columnCount;
    id * _columnViews;
    long long  _draggingDestinationFeedbackStyle;
    double  _dropOperationIndentation;
    unsigned int  _emphasized;
    unsigned int  _emphasizedForDropOperation;
    unsigned int  _forDeletion;
    unsigned int  _gridStyleMask;
    unsigned int  _groupRowStyle;
    unsigned int  _hasAssociatedViews;
    unsigned int  _hasCustomGridColor;
    unsigned int  _hasLayoutChangedListener;
    unsigned int  _hasSelectedBackgroundView;
    unsigned int  _hasSelectionAlpha;
    unsigned int  _isFloating;
    unsigned int  _isStatic;
    unsigned int  _keyViewLoopIsDirty;
    unsigned int  _locationNeedsUpdating;
    unsigned int  _nextRowSelected;
    unsigned int  _priorRowSelected;
    unsigned int  _selected;
    unsigned int  _selectionBlendingMode;
    long long  _selectionHighlightStyle;
    unsigned int  _targetForDropOperation;
    unsigned int  _updatingBackgroundStyle;
    unsigned int  _usingCachedImageOnly;
}

@property (setter=_setKeyViewLoopIsDirty:, atomic, readwrite) BOOL _keyViewLoopIsDirty;
@property (setter=_setLayoutChangedListener:, atomic, readwrite, copy) id _layoutEngineChangedListener;
@property (setter=_setLocationNeedsUpdating:, atomic, readwrite) BOOL _locationNeedsUpdating;
@property (setter=_setUsingCachedImageOnly:, atomic, readwrite) BOOL _usingCachedImageOnly;
@property (atomic, readwrite, copy) NSColor *backgroundColor;
@property (atomic, readwrite, retain) NSTableViewActionButton *consumingRowActionButton;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite) long long draggingDestinationFeedbackStyle;
@property (atomic, readwrite, retain) NSArray *editActionButtons;
@property (getter=isEmphasized, atomic, readwrite) BOOL emphasized;
@property (atomic, readwrite) BOOL emphasizedForDropOperation;
@property (getter=isFloating, atomic, readwrite) BOOL floating;
@property (atomic, readwrite, retain) NSView *grayView;
@property (atomic, readwrite) unsigned long long gridStyleMask;
@property (getter=isGroupRowStyle, atomic, readwrite) BOOL groupRowStyle;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite) double indentationForDropOperation;
@property (atomic, readonly) long long interiorBackgroundStyle;
@property (atomic, readwrite) BOOL isStatic;
@property (getter=isNextRowSelected, atomic, readwrite) BOOL nextRowSelected;
@property (atomic, readwrite) long long numberOfColumns;
@property (getter=isPreviousRowSelected, atomic, readwrite) BOOL previousRowSelected;
@property (getter=isPriorRowSelected, atomic, readwrite) BOOL priorRowSelected;
@property (getter=isSelected, atomic, readwrite) BOOL selected;
@property (atomic, readwrite) double selectionAlpha;
@property (atomic, readwrite) long long selectionHighlightStyle;
@property (atomic, readwrite, retain) NSColor *separatorColor;
@property (atomic, readonly) Class superclass;
@property (getter=isTargetForDropOperation, atomic, readwrite) BOOL targetForDropOperation;

// Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit

+ (id)defaultAnimationForKey:(id)arg1;

- (void)_addRowNumberBadge;
- (BOOL)_alwaysNeedsSelectedBackgroundView;
- (BOOL)_appearsSelected;
- (id)_associatedViews;
- (id)_backgroundColorForFloatingGroupFromColor:(id)arg1;
- (id)_backgroundColorForFontSmoothing;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_backgroundRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_backgroundRectForDirtyRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_badgeAttributes;
- (BOOL)_canDisableBaseVibrancy;
- (void)_commonTRVInit;
- (id)_constraintsAtColumn:(long long)arg1;
- (id)_containingBackdropView;
- (id)_contentsFacetForSelectedBackground;
- (id)_currentLayerBackgroundColor;
- (void)_decodeStaticContentWithCoder:(id)arg1;
- (void)_didRemoveLayer;
- (void)_drawRowNumber:(long long)arg1;
- (void)_drawRowNumberBadge;
- (void)_drawSeparatorInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withColor:(id)arg2;
- (void)_drawSourceListBackgroundInnerEdgeInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_dropAboveFeedbackLayer;
- (void)_dropAllConstraints;
- (id)_dropFeedbackLayer;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_dropTargetRect;
- (id)_enclosingTableView;
- (void)_encodeStaticContentWithCoder:(id)arg1;
- (void)_ensureColumnViews;
- (id)_finderStyleGroupRowTopSeparatorColor;
- (id)_flashingKeyForLayerContentsProvider;
- (id)_floatingBackgroundColor;
- (BOOL)_forDeletion;
- (BOOL)_hasManagedAttributes;
- (BOOL)_hasSourceListBackground;
- (BOOL)_hasSourceListBackgroundColorOrNil;
- (BOOL)_ignoreForKeyViewLoop;
- (void)_invalidateLayoutOrRedisplay;
- (BOOL)_isFadingSelection;
- (BOOL)_isSourceListBackgroundColor:(id)arg1;
- (BOOL)_isUsingUpdateLayer;
- (void)_ivarSetSelectionAlpha:(double)arg1;
- (BOOL)_keyViewLoopIsDirty;
- (id)_layoutEngineChangedListener;
- (BOOL)_locationNeedsUpdating;
- (id)_makeBlurBackgroundView;
- (id)_makeEngineHostConstraints;
- (id)_makeLayerForDropFeedbackThatIsAbove:(BOOL)arg1;
- (id)_makeSelectedBackgroundView;
- (void)_moveConstraintsFromColumn:(long long)arg1 toColumn:(long long)arg2;
- (BOOL)_needsBlurBackgroundView;
- (BOOL)_needsOverlayDrawing;
- (BOOL)_needsSelectionBackgroundView;
- (id)_nonFirstResponderTextColor;
- (id)_preferredAppearance;
- (long long)_realSelectionHighlightStyle;
- (void)_removeBackgroundDropAboveFeedbackLayer;
- (void)_removeBackgroundDropFeedbackLayer;
- (void)_removeSelectedBackgroundView;
- (void)_removeSeparatorBackgroundView;
- (long long)_row;
- (id)_selectedBackgroundColorForFontSmoothing;
- (id)_selectedBackgroundView;
- (void)_selectionHighlightColorChanged;
- (BOOL)_selectionNeedsRedrawingOnFrameChange;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_separatorRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_separatorRectAtTop;
- (id)_separatorView;
- (void)_setAssociatedViews:(id)arg1;
- (void)_setBackgroundStyle:(long long)arg1 forView:(id)arg2;
- (void)_setConstraints:(id)arg1 atColumn:(long long)arg2;
- (void)_setDropAboveFeedbackLayer:(id)arg1;
- (void)_setDropFeedbackLayer:(id)arg1;
- (void)_setForDeletion:(BOOL)arg1;
- (void)_setKeyViewLoopIsDirty:(BOOL)arg1;
- (void)_setLayoutChangedListener:(id)arg1;
- (void)_setLocationNeedsUpdating:(BOOL)arg1;
- (void)_setSelectedBackgroundView:(id)arg1;
- (void)_setSeparatorView:(id)arg1;
- (void)_setUsingCachedImageOnly:(BOOL)arg1;
- (void)_setupBackgroundLayer:(id)arg1;
- (BOOL)_shouldDrawSelection;
- (BOOL)_shouldHaveDropFeedback;
- (BOOL)_shouldRemoveSelectedBackgroundViewWhenNotSelected;
- (BOOL)_shouldShowRowNumbers;
- (BOOL)_shouldUseBackgroundColor;
- (id)_springLoadedBlendColor;
- (id)_textFieldFromView:(id)arg1;
- (void)_udpateBackgroundDropAboveFeedbackLayer;
- (void)_updateBackgroundDropFeedbackLayer;
- (void)_updateBackgroundStyles;
- (void)_updateBackgroundStylesForReals;
- (void)_updateLightHighlightAttributesForView:(id)arg1;
- (void)_updateLightHighlightColorForSelectedTextField:(id)arg1;
- (void)_updateManagedAttributesForSubviews;
- (void)_updateSelectedBackgroundView;
- (void)_updateSelectedBackgroundViewForStateChange;
- (void)_updateSelectionStateForVisualEffectView:(id)arg1;
- (void)_updateSeparatorBackgroundView;
- (void)_updateSourceListGroupRowAttributesForView:(id)arg1;
- (BOOL)_userInterfaceDirectionIsLTR;
- (BOOL)_usingCachedImageOnly;
- (void)_windowChangedKeyState;
- (void)dealloc;
- (id)description;
- (void)nsis_valueOfVariable:(id)arg1 didChangeInEngine:(id)arg2;

// NSTableRowView (NSAccessibility)

- (id)_accessibilityParentForSubview:(id)arg1;

// Image: /Applications/Xcode.app/Contents/Developer/usr/lib/libMainThreadChecker.dylib

- (id)accessibilityFocusedUIElement;
- (long long)accessibilityIndex;
- (id)accessibilityParentAttribute;
- (void)associateView:(id)arg1 withColumn:(long long)arg2;
- (id)associatedViewWithReuseIdentifier:(id)arg1;
- (id)associatedViewsForColumn:(long long)arg1;
- (id)backgroundColor;
- (long long)backgroundStyle;
- (long long)columnCount;
- (id)consumingRowActionButton;
- (void)didAddSubview:(id)arg1;
- (long long)draggingDestinationFeedbackStyle;
- (void)drawBackgroundInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawDraggingDestinationFeedbackInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawGroupRowStyleFinderInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawGroupRowStyleGrayInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawGroupRowStyleGrayInverseInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawOverlayRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawSelectionInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawSeparatorInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)drawsBackground;
- (BOOL)drawsSeparator;
- (id)dropHighlightBackgroundColor;
- (id)dropHighlightColor;
- (id)editActionButtons;
- (BOOL)emphasizedForDropOperation;
- (void)encodeWithCoder:(id)arg1;
- (id)extractAssociatedViewWithReuseIdentifier:(id)arg1;
- (BOOL)floatingStyle;
- (id)fontSmoothingBackgroundColor;
- (id)grayView;
- (unsigned long long)gridStyleMask;
- (long long)groupRowStyle2;
- (double)indentationForDropOperation;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)insertColumnAtIndex:(long long)arg1;
- (long long)interiorBackgroundStyle;
- (BOOL)isEmphasized;
- (BOOL)isFloating;
- (BOOL)isGroupRowStyle;
- (BOOL)isNextRowSelected;
- (BOOL)isOpaque;
- (BOOL)isPreviousRowSelected;
- (BOOL)isPriorRowSelected;
- (BOOL)isSelected;
- (BOOL)isStatic;
- (BOOL)isTargetForDropOperation;
- (void)layout;
- (void)moveViewsFromColumn:(long long)arg1 toColumn:(long long)arg2;
- (long long)numberOfColumns;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })overlayBounds;
- (void)performHandler:(id)arg1 onAssociatedViewsWithColumn:(long long)arg2;
- (void)prepareForReuse;
- (BOOL)preservesContentDuringLiveResize;
- (id)primarySelectionColor;
- (void)removeAssociatedView:(id)arg1;
- (void)removeColumnAtIndex:(long long)arg1;
- (void)removeViewAtUnknownColumn:(id)arg1;
- (id)secondarySelectedControlColor;
- (id)selectedTextColor;
- (double)selectionAlpha;
- (long long)selectionBlendingMode;
- (long long)selectionHighlightStyle;
- (id)separatorColor;
- (void)setBackgroundColor:(id)arg1;
- (void)setConsumingRowActionButton:(id)arg1;
- (void)setDraggingDestinationFeedbackStyle:(long long)arg1;
- (void)setEditActionButtons:(id)arg1;
- (void)setEmphasized:(BOOL)arg1;
- (void)setEmphasizedForDropOperation:(BOOL)arg1;
- (void)setFloating:(BOOL)arg1;
- (void)setFrameSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setGrayView:(id)arg1;
- (void)setGridStyleMask:(unsigned long long)arg1;
- (void)setGroupRowStyle2:(long long)arg1;
- (void)setGroupRowStyle:(BOOL)arg1;
- (void)setIndentationForDropOperation:(double)arg1;
- (void)setIsStatic:(BOOL)arg1;
- (void)setNextRowSelected:(BOOL)arg1;
- (void)setNumberOfColumns:(long long)arg1;
- (void)setPreviousRowSelected:(BOOL)arg1;
- (void)setPriorRowSelected:(BOOL)arg1;
- (void)setSelected:(BOOL)arg1;
- (void)setSelectionAlpha:(double)arg1;
- (void)setSelectionBlendingMode:(long long)arg1;
- (void)setSelectionHighlightStyle:(long long)arg1;
- (void)setSeparatorColor:(id)arg1;
- (void)setTargetForDropOperation:(BOOL)arg1;
- (void)setView:(id)arg1 atColumn:(long long)arg2;
- (BOOL)shouldSetFontSmoothingBackgroundColor;
- (id)updateKeyViewLoop;
- (void)updateLayer;
- (id)viewAtColumn:(long long)arg1;
- (void)viewDidMoveToSuperview;
- (void)viewWillDraw;
- (BOOL)wantsUpdateLayer;

@end
