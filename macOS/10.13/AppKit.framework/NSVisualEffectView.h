/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSVisualEffectView : NSView {
    /* Warning: unhandled struct encoding: '{NSVisualEffectViewInternal=@@@@@@@qqqqq@@@@@}' */ struct NSVisualEffectViewInternal { id x1; id x2; id x3; id x4; long long x5; long long x6; long long x7; long long x8; id x9; id x10; id x11; } * _NSVisualEffectViewInternal;
    unsigned int  _appearsDarker;
    CALayer * _backdropLayer;
    CALayer * _backdropLayerForMask;
    unsigned int  _clear;
    CALayer * _clearCopyLayer;
    CALayer * _darkenLayer;
    unsigned int  _dirty;
    unsigned int  _disableBlurFilter;
    unsigned int  _emphasized;
    unsigned int  _hasAcceleration;
    unsigned int  _hasAccelerationCached;
    unsigned int  _hasMask;
    unsigned int  _inheritsBlendGroup;
    CALayer * _maskLayer;
    unsigned int  _maskSet;
    unsigned int  _needsClearProxy;
    unsigned int  _registeredForFrameChanges;
    unsigned int  _requiresBackdrop;
    unsigned int  _reservedFlags;
    unsigned int  _titlebarMaterialDrawsSeparator;
    unsigned int  _updateInDidMoveToWindow;
}

@property (atomic, readwrite) long long blendingMode;
@property (getter=isEmphasized, atomic, readwrite) BOOL emphasized;
@property (atomic, readonly) long long interiorBackgroundStyle;
@property (atomic, readwrite, retain) NSImage *maskImage;
@property (atomic, readwrite) long long material;
@property (atomic, readwrite) long long state;

// Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit

+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (id)keyPathsForValuesAffecting_effectiveGroupName;

- (id)_accessibilityFillColor;
- (void)_accessiblityTransChanged:(id)arg1;
- (id)_backdropLayer;
- (id)_backgroundColorForFontSmoothing;
- (BOOL)_canDirectlyUpdateActiveState;
- (BOOL)_canUpdate;
- (id)_clearColorForCGSFill;
- (void)_commonInit;
- (id)_createOrUpdateBackdrop:(id)arg1 view:(id)arg2 vibrancyEffect:(long long)arg3;
- (id)_createOrUpdateProxyLayer:(id)arg1 view:(id)arg2 vibrancyEffect:(long long)arg3;
- (void)_cuiMakeOrUpdateBackgroundLayer:(id*)arg1;
- (id)_cuiOptionsForCurrentMaterial;
- (id)_cuiOptionsForWindowType:(struct __CFString { }*)arg1;
- (struct __CFString { }*)_cuiWindowType;
- (const struct { struct { double x_1_1_1; double x_1_1_2; double x_1_1_3; double x_1_1_4; } x1; struct { double x_2_1_1; double x_2_1_2; double x_2_1_3; double x_2_1_4; } x2; struct { double x_3_1_1; double x_3_1_2; double x_3_1_3; double x_3_1_4; } x3; id *x4; /* Warning: Unrecognized filer type: '?' using 'void*' */ void*x5; void*x6; double x7; double x8; double x9; double x10; }*)_currentBackdropViewSpec;
- (id)_currentColorMonochromeColor;
- (id)_currentFillColor;
- (id)_currentInsideWindowBackgroundColor;
- (id)_currentMaterialName;
- (void)_didRemoveLayer;
- (void)_directlyUpdateActiveState;
- (void)_doHoverColorFillInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_drawClearInMaskImage;
- (id)_effectiveGroupName;
- (id)_fillLayer;
- (void)_freeCachedMaskImages;
- (id)_generateMaskImage;
- (id)_generateMaskImageWithCurrentFillColor;
- (id)_groupName;
- (long long)_internalMaterialFromMaterial:(long long)arg1;
- (long long)_internalMaterialType;
- (void)_invalidateAllSubviewsBecauseFontReferenceColorChanged;
- (void)_invalidateSubviewsOfView:(id)arg1;
- (void)_invalidateTextAndFontSmoothignInView:(id)arg1;
- (BOOL)_isClear;
- (BOOL)_isHUDWindow;
- (BOOL)_isTexturedWindow;
- (BOOL)_isUtility;
- (void)_markDirty;
- (void)_markDirtyIfHasAccelerationChanged;
- (void)_materialTypeChanged;
- (BOOL)_needsBackgroundLayer;
- (BOOL)_needsCGSBackdrop;
- (BOOL)_needsCGSMaterial;
- (BOOL)_needsClearProxyLayer;
- (BOOL)_needsDarkenLayer;
- (BOOL)_needsFilters;
- (BOOL)_needsMaskImage;
- (BOOL)_needsMaterialLayer;
- (BOOL)_needsProxyLayer;
- (BOOL)_needsUpdateIfNotUsingProxyLayers;
- (void)_recursiveRemoveCachedContainngBackdropViewFromView:(id)arg1;
- (void)_registerAssociatedView:(id)arg1;
- (BOOL)_registeredForFrameChanges;
- (void)_removeBackdropIfNeeded;
- (void)_removeClearCopyLayersIfNeeded;
- (void)_removeMaterialLayerIfNeeded;
- (void)_removeProxyLayerIfNeeded;
- (void)_setClear:(BOOL)arg1;
- (void)_setFillColorAndDrawMaskInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setGroupName:(id)arg1;
- (void)_setInternalMaterialType:(long long)arg1;
- (void)_setNeedsClearProxyLayer:(BOOL)arg1;
- (void)_setRequiresBackdrop:(BOOL)arg1;
- (void)_setWindow:(id)arg1;
- (BOOL)_shouldAddBorderLayer;
- (BOOL)_shouldUseActiveAppearance;
- (void)_sleepWakeChanged:(id)arg1;
- (void)_startObservingViewFrameChanges:(id)arg1;
- (void)_stopObservingViewFrameChanges:(id)arg1;
- (void)_subviewGeometryChanged:(id)arg1;
- (id)_tintLayer;
- (void)_unregisterAssociatedView:(id)arg1;
- (void)_update;
- (void)_updateActiveStateForBackdrop:(id)arg1;
- (void)_updateActiveStateForProxyLayer:(id)arg1;
- (void)_updateAssociatedViewProxyLayersOrBackdrops;
- (void)_updateAssociatedViewProxyLayersOrBackdropsActiveState;
- (void)_updateBackdropLayer;
- (void)_updateBackgroundLayer;
- (void)_updateCABackdropLayerGroupName;
- (void)_updateCGSWindowBackdrop;
- (void)_updateCGSWindowBackdropForActiveState;
- (void)_updateDarkenLayer;
- (void)_updateIfNeeded;
- (void)_updateIfNeededIfNotUsingProxyLayers;
- (void)_updateLayerMaskForWithinWindowBlending;
- (void)_updateLayerToPokeOutWindowPixels;
- (void)_updateMaterialLayer;
- (void)_updateMaterialLayerForBlendingInsideWindow;
- (void)_updateProperiesForProxyLayer:(id)arg1 view:(id)arg2 vibrancyEffect:(long long)arg3;
- (void)_updateProxyLayer;
- (void)_updateProxyLayerForActiveState;
- (void)_updateVibrancy;
- (BOOL)_useAccessibilityColors;
- (int)_vibrancyBlendMode;
- (id)_vibrancyFilter;
- (void)_viewDidChangeAppearance:(id)arg1;
- (void)_windowChangedKeyState;
- (void)dealloc;
- (id)debugDescription;

// Image: /Applications/Xcode.app/Contents/Developer/usr/lib/libMainThreadChecker.dylib

- (BOOL)allowsVibrancy;
- (BOOL)appearsDarker;
- (long long)blendingMode;
- (id)contentView;
- (BOOL)disableBlurFilter;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)emphasized;
- (void)encodeWithCoder:(id)arg1;
- (id)fontSmoothingBackgroundColor;
- (BOOL)inheritsBlendGroup;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (long long)interiorBackgroundStyle;
- (BOOL)isEmphasized;
- (void)layout;
- (id)maskImage;
- (long long)material;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectToClearBackingStore;
- (void)renewGState;
- (void)setAppearsDarker:(BOOL)arg1;
- (void)setBlendingMode:(long long)arg1;
- (void)setDisableBlurFilter:(BOOL)arg1;
- (void)setEmphasized:(BOOL)arg1;
- (void)setFrameSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setInheritsBlendGroup:(BOOL)arg1;
- (void)setLayer:(id)arg1;
- (void)setMaskImage:(id)arg1;
- (void)setMaterial:(long long)arg1;
- (void)setState:(long long)arg1;
- (void)setTitlebarMaterialDrawsSeparator:(BOOL)arg1;
- (void)setVibrancyEffect:(long long)arg1;
- (BOOL)shouldSetFontSmoothingBackgroundColor;
- (long long)state;
- (unsigned long long)styleMask;
- (BOOL)titlebarMaterialDrawsSeparator;
- (void)updateLayer;
- (long long)vibrancyEffect;
- (void)viewDidHide;
- (void)viewDidMoveToWindow;
- (void)viewDidUnhide;
- (void)viewWillMoveToWindow:(id)arg1;
- (BOOL)wantsLayer;
- (BOOL)wantsUpdateLayer;

@end
