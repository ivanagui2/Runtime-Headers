/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface _NSOverlayBackgroundView : NSView {
    SEL  _action;
    CABackdropLayer * _backdropLayer;
    id  _backgroundImageRef;
    CALayer * _backgroundLayer;
    double  _backgroundScaleFactor;
    unsigned int  _darkened;
    unsigned int  _debugMode;
    struct CGColor { } * _defaultBackgroundColor;
    double  _defaultBlurRadius;
    double  _defaultSaturationMultiplier;
    unsigned int  _hasAcceleration;
    unsigned int  _hasAccelerationCached;
    unsigned int  _isActive;
    CALayer * _materialLayer;
    double  _paletteScaleFactor;
    unsigned int  _pressed;
    id  _target;
    CALayer * _tintLayer;
}

@property (atomic, readwrite) SEL action;
@property (atomic, readwrite, retain) id backgroundImageRef;
@property (atomic, readwrite) double backgroundScaleFactor;
@property (setter=setDarkened:, atomic, readwrite) BOOL darkened;
@property (atomic, readwrite) BOOL debugMode;
@property (setter=setActive:, atomic, readwrite) BOOL isActive;
@property (atomic, readwrite) double paletteScaleFactor;
@property (atomic, readwrite) id target;

- (void).cxx_destruct;
- (id)_cuiOptionsForCurrentMaterial;
- (BOOL)_shouldDoLayerPerformanceUpdates;
- (void)_updateMaterialForState;
- (SEL)action;
- (id)backgroundImageRef;
- (double)backgroundScaleFactor;
- (BOOL)darkened;
- (void)dealloc;
- (BOOL)debugMode;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)isActive;
- (void)mouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (double)paletteScaleFactor;
- (void)setAction:(SEL)arg1;
- (void)setActive:(BOOL)arg1;
- (void)setBackgroundImageRef:(id)arg1;
- (void)setBackgroundScaleFactor:(double)arg1;
- (void)setDarkened:(BOOL)arg1;
- (void)setDebugMode:(BOOL)arg1;
- (void)setPaletteScaleFactor:(double)arg1;
- (void)setPressed:(BOOL)arg1;
- (void)setTarget:(id)arg1;
- (id)target;
- (void)updateLayer;
- (BOOL)wantsLayer;

@end
