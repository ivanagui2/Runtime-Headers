/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSWindowStackController : NSWindowTabGroup <NSTabBarDelegate, NSTabPickerDelegate> {
    unsigned int  _changingSelection;
    unsigned int  _doingClose;
    _NSFullScreenModalStackController * _fullScreenModalStackController;
    unsigned int  _inFullScreen;
    NSWindow * _minimizedWindow;
    NSMenu * _pinnedTabItemMenu;
    unsigned int  _shouldAnimate;
    NSString * _stateIdentifier;
    NSMutableArray * _syncedItems;
    NSTabBar * _tabBar;
    NSMenu * _tabItemMenu;
    NSTabPickerViewController * _tabPickerViewController;
    NSMutableDictionary * _talTabbingOrder;
    NSWindow * _windowBeingDragged;
    NSWindow * _windowBeingRemoved;
}

@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite) _NSFullScreenModalStackController *fullScreenModalStackController;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readonly) long long numberOfTabs;
@property (atomic, readwrite) NSWindow *selectedWindow;
@property (atomic, readwrite) BOOL shouldAnimate;
@property (atomic, readwrite) BOOL shouldShowTabBarWithOneItem;
@property (atomic, readwrite, copy) NSString *stateIdentifier;
@property (atomic, readonly) Class superclass;
@property (getter=isTabBarVisible, atomic, readwrite) BOOL tabBarVisible;
@property (atomic, readonly) NSWindow *windowBeingDragged;

+ (BOOL)_tabBarIsVisibleForIdentifier:(id)arg1;
+ (BOOL)canJoinExistingStackForWindow:(id)arg1;
+ (void)didFinishRestoring;
+ (void)disableTabBar;
+ (void)enableTabBar;
+ (id)findStackControllerForIdentifier:(id)arg1 stateIdentifier:(id)arg2;
+ (BOOL)mergeAllWindowsWithWindow:(id)arg1;
+ (void)moveWindow:(id)arg1 toModalStackController:(id)arg2;
+ (void)setTabPlusButtonWasClicked:(BOOL)arg1;
+ (void)setupStackControllerForWindow:(id)arg1 attemptToJoinExistingStack:(BOOL)arg2 makeIfNeeded:(BOOL)arg3;
+ (void)setupStackControllerIfTabBarShownForWindow:(id)arg1;
+ (BOOL)tabPlusButtonWasClicked;
+ (id)topStackController;

- (void).cxx_destruct;
- (void)_addSyncedTabBarItemForWindow:(id)arg1 atIndex:(long long)arg2;
- (void)_addTabPickerView:(id)arg1 toWindow:(id)arg2;
- (BOOL)_animateTabMergeOfWindowsFromTargetWindow:(id)arg1;
- (void)_checkIfWindowWasClosedByTabPicker:(id)arg1;
- (void)_closeAllWindowsExceptItemAtIndex:(long long)arg1;
- (void)_closeTabPickerAnimated:(BOOL)arg1;
- (void)_closeWindowAtIndex:(long long)arg1;
- (id)_currentTabMenuTargetedForWindow:(id)arg1;
- (void)_doCloseButtonCloseOnWindow:(id)arg1 withHighlight:(BOOL)arg2;
- (void)_doDockWindowMinimizeOfSelectedWindow;
- (void)_doTabSelectionAndWindowOrderingAtIndex:(unsigned long long)arg1;
- (void)_doTabSelectionAndWindowOrderingAtIndex:(unsigned long long)arg1 makeKeyAndOrderFront:(BOOL)arg2 justOrderFront:(BOOL)arg3;
- (void)_doWindowOrderingToSwapPriorWindow:(id)arg1 withNewWindow:(id)arg2;
- (void)_ensureAccessoryViewControllerExistsForWindow:(id)arg1;
- (void)_ensureTabBarBasedOnWindow:(id)arg1;
- (void)_ensureTabPickerViewController;
- (void)_ensureWindowHasTabBar:(id)arg1;
- (void)_enterWindow:(id)arg1 intoFullScreenWithWindow:(id)arg2;
- (void)_enumerateTabMergableWindows:(id)arg1 targetWindow:(id)arg2;
- (void)_exitWindowFromFullScreenIfNeeded:(id)arg1 basedOnWindow:(id)arg2;
- (unsigned long long)_indexOfWrapperForTabBarItem:(id)arg1;
- (BOOL)_insertDraggedItemAtIndex:(unsigned long long)arg1 fromController:(id)arg2 sourceIndex:(unsigned long long)arg3;
- (void)_makeTabBarForWindow:(id)arg1 visible:(BOOL)arg2;
- (id)_makeTabPickerSnapshotForWindow:(id)arg1;
- (void)_moveItemAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)_moveTabPickerToWindow:(id)arg1;
- (unsigned long long)_nextSelectedIndexAfterRemovingIndex:(unsigned long long)arg1;
- (void)_noteTabbingChangedForWindow:(id)arg1;
- (long long)_onePastLastPinnedTab;
- (void)_openTabPickerAnimated:(BOOL)arg1;
- (BOOL)_regularTabMergeOfWindowsFromTargetWindow:(id)arg1;
- (void)_removeSyncedItemAtIndex:(unsigned long long)arg1;
- (void)_removeSyncedTabBarItem:(id)arg1;
- (void)_removeTabBarAccessoryViewControllerForWindow:(id)arg1;
- (void)_removeTabPickerFromWindow:(id)arg1;
- (void)_selectNextTabWhenRemovingTabAtIndex:(unsigned long long)arg1;
- (void)_selectWindowWithoutOrderingFront:(id)arg1;
- (id)_selectedWindow;
- (void)_sendTabOverviewIsVisibleDidChange;
- (void)_setTabBarIsVisible:(BOOL)arg1 force:(BOOL)arg2;
- (BOOL)_shouldAnimateTabInsertion;
- (id)_shouldShowTabBarKey;
- (void)_syncInactiveTabWindowSizesForSnapshot;
- (void)_syncToolbarOfWindow:(id)arg1 withPropertiesOfWindow:(id)arg2;
- (id)_syncedWrapperForTabBarItem:(id)arg1;
- (BOOL)_tabBarShouldBeVisible;
- (id)_windowForTabViewItem:(id)arg1;
- (id)_windowYankedOutIntoNewControllerFromIndex:(long long)arg1;
- (id)_wrapperForTabBarItem:(id)arg1;
- (void)_yankWindowFromIndex:(long long)arg1;
- (void)addWindow:(id)arg1;
- (BOOL)attemptToCloseEntireStack:(id)arg1;
- (void)beginNextSheetAfterWindow:(id)arg1;
- (void)createNewTabInTabBar:(id)arg1;
- (id)detachedFullScreenModalTabBar;
- (void)didEnterFullScreenForWindow:(id)arg1;
- (void)didExitFullScreenForWindow:(id)arg1;
- (void)didFinishDeminiaturizeWindow:(id)arg1;
- (id)fullScreenModalStackController;
- (BOOL)handleDeminimizingWindow:(id)arg1;
- (BOOL)handleMinimizingWindow:(id)arg1;
- (id)initWithTabbingIdentifier:(id)arg1;
- (void)insertWindow:(id)arg1 atIndex:(long long)arg2;
- (BOOL)isOverviewVisible;
- (BOOL)isTabBarVisible;
- (void)makeActiveStack;
- (void)moveTabToNewWindow:(id)arg1;
- (void)moveWindow:(id)arg1 toWindowStackController:(id)arg2 atIndex:(long long)arg3;
- (id)nextWindowToSelectAfterClosingWindow:(id)arg1;
- (long long)numberOfTabs;
- (void)performCloseAllWindowsExcept:(id)arg1;
- (void)pinTabForWindow:(id)arg1;
- (void)reattachFullScreenModalTabBar;
- (void)removeWindow:(id)arg1;
- (void)selectNextTab;
- (void)selectPreviousTab;
- (id)selectedTabBarViewItemAfterClosingCurrentTabInTabBar:(id)arg1;
- (unsigned long long)selectedTabButtonIndex;
- (id)selectedWindow;
- (void)setFullScreenModalStackController:(id)arg1;
- (void)setOverviewVisible:(BOOL)arg1;
- (void)setSelectedTabButtonIndex:(unsigned long long)arg1;
- (void)setSelectedWindow:(id)arg1;
- (void)setShouldAnimate:(BOOL)arg1;
- (void)setShouldShowTabBarWithOneItem:(BOOL)arg1;
- (void)setStateIdentifier:(id)arg1;
- (void)setTALTabIndex:(long long)arg1 forWindow:(id)arg2;
- (void)setTabBarVisible:(BOOL)arg1;
- (BOOL)shouldAnimate;
- (BOOL)shouldShowTabBarWithOneItem;
- (id)stateIdentifier;
- (void)syncToolbarsBasedOnWindow:(id)arg1;
- (BOOL)tabBar:(id)arg1 acceptDrop:(id)arg2 index:(unsigned long long)arg3;
- (BOOL)tabBar:(id)arg1 acceptTabDrop:(id)arg2 index:(unsigned long long)arg3;
- (BOOL)tabBar:(id)arg1 canCloseTabBarViewItem:(id)arg2;
- (void)tabBar:(id)arg1 closeTabBarViewItem:(id)arg2;
- (id)tabBar:(id)arg1 destinationWindowForDetachedTabBarViewItem:(id)arg2;
- (id)tabBar:(id)arg1 detachedWindowImageForDraggedTabBarViewItem:(id)arg2;
- (void)tabBar:(id)arg1 didFinishTransitionAnimationForWindow:(id)arg2;
- (void)tabBar:(id)arg1 didMoveTabBarViewItem:(id)arg2 fromIndex:(unsigned long long)arg3 toIndex:(unsigned long long)arg4 isChangingPinnedness:(BOOL)arg5;
- (BOOL)tabBar:(id)arg1 droppedWindowTabShouldMoveToSpace:(long long)arg2;
- (void)tabBar:(id)arg1 hideWindowForDraggingItemAtIndex:(unsigned long long)arg2;
- (id)tabBar:(id)arg1 menuForTabBarViewItem:(id)arg2 event:(id)arg3;
- (void)tabBar:(id)arg1 selectTabBarViewItem:(id)arg2;
- (void)tabBar:(id)arg1 showWindowForDraggingItemAtIndex:(unsigned long long)arg2;
- (unsigned long long)tabBar:(id)arg1 validateDrop:(id)arg2;
- (unsigned long long)tabBar:(id)arg1 validateTabDrop:(id)arg2;
- (BOOL)tabBarCanDragItems:(id)arg1;
- (id)tabBarSnapshotForTabPicker:(id)arg1;
- (long long)tabIndexForWindow:(id)arg1;
- (void)tabPicker:(id)arg1 closeTabBarItem:(id)arg2;
- (void)tabPicker:(id)arg1 didSelectTabItemWhenClosing:(id)arg2;
- (id)tabPicker:(id)arg1 nextTabPickerItemAfterClosingItem:(id)arg2;
- (id)tabPicker:(id)arg1 thumbnailViewForTabItem:(id)arg2;
- (id)tabPickerCreatingNewTabItem:(id)arg1;
- (id)tabPickerCurrentlySelectedTabItem:(id)arg1;
- (void)tabPickerDidClose:(id)arg1;
- (void)tabPickerDidOpen:(id)arg1;
- (id)tabPickerItemsForTabPicker:(id)arg1;
- (void)tabPickerWillClose:(id)arg1;
- (void)tabPickerWillOpen:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })tabRectForWindow:(id)arg1;
- (void)unpinTabForWindow:(id)arg1;
- (void)updateTabBarAppearanceBasedOnWindow:(id)arg1;
- (void)willEnterFullScreenForWindow:(id)arg1;
- (id)windowBeingDragged;
- (long long)windowCount;
- (void)windowDidGainToolbar:(id)arg1;
- (id)windows;

@end
