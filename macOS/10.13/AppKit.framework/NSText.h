/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSText : NSView <DebugHierarchyObject, NSChangeSpelling, NSIgnoreMisspelledWords> {
    id  _ivars;
}

@property (atomic, readwrite) unsigned long long alignment;
@property (atomic, readwrite, copy) NSColor *backgroundColor;
@property (atomic, readwrite) long long baseWritingDirection;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readwrite) <NSTextDelegate> *delegate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite) BOOL drawsBackground;
@property (getter=isEditable, atomic, readwrite) BOOL editable;
@property (getter=isFieldEditor, atomic, readwrite) BOOL fieldEditor;
@property (atomic, readwrite, retain) NSFont *font;
@property (atomic, readonly) unsigned long long hash;
@property (getter=isHorizontallyResizable, atomic, readwrite) BOOL horizontallyResizable;
@property (atomic, readwrite) BOOL importsGraphics;
@property (atomic, readwrite) struct CGSize { double x1; double x2; } maxSize;
@property (atomic, readwrite) struct CGSize { double x1; double x2; } minSize;
@property (getter=isRichText, atomic, readwrite) BOOL richText;
@property (getter=isRulerVisible, atomic, readonly) BOOL rulerVisible;
@property (getter=isSelectable, atomic, readwrite) BOOL selectable;
@property (atomic, readwrite) struct _NSRange { unsigned long long x1; unsigned long long x2; } selectedRange;
@property (atomic, readwrite, copy) NSString *string;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite, copy) NSColor *textColor;
@property (atomic, readwrite) BOOL usesFontPanel;
@property (getter=isVerticallyResizable, atomic, readwrite) BOOL verticallyResizable;

// Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit

+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (void)initialize;

// Image: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Debugger/libViewDebuggerSupport.dylib

// NSText (DebugHierarchyAdditions)

- (id)debugHierarchyPropertyDescriptions;

// Image: /Applications/Xcode.app/Contents/Developer/usr/lib/libMainThreadChecker.dylib

- (id)RTFDFromRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)RTFFromRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)accessibilityAXAttributedStringForCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 parent:(id)arg2;
- (id)accessibilityAttachmentAtIndex:(unsigned long long)arg1;
- (id)accessibilityAttachments;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })accessibilityBoundsForCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilityCharacterRangeForLineNumber:(unsigned long long)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilityCharacterRangeForPosition:(struct CGPoint { double x1; double x2; })arg1;
- (unsigned long long)accessibilityIndexForAttachment:(id)arg1;
- (unsigned long long)accessibilityInsertionPointLineNumber;
- (BOOL)accessibilityIsSelectedRangeSettable;
- (BOOL)accessibilityIsSelectedTextSettable;
- (BOOL)accessibilityIsVisibleCharacterRangeSettable;
- (unsigned long long)accessibilityLineNumberForCharacterIndex:(unsigned long long)arg1;
- (void)accessibilityPostNotification:(id)arg1;
- (void)accessibilityPostNotification:(id)arg1 withNotificationElement:(id)arg2;
- (id)accessibilityRTFForCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilitySelectedRange;
- (id)accessibilitySelectedText;
- (void)accessibilitySetSelectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)accessibilitySetSelectedText:(id)arg1;
- (void)accessibilitySetVisibleCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilitySharedCharacterRange;
- (id)accessibilitySharedTextViews;
- (id)accessibilitySharedViewForIndex:(long long)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilityStyleRangeForCharacterIndex:(unsigned long long)arg1;
- (id)accessibilityTextLinkAtIndex:(unsigned long long)arg1;
- (id)accessibilityTextLinks;
- (id)accessibilityTextView;
- (id)accessibilityValueAttribute;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilityVisibleCharacterRange;
- (void)alignCenter:(id)arg1;
- (void)alignLeft:(id)arg1;
- (void)alignRight:(id)arg1;
- (unsigned long long)alignment;
- (id)backgroundColor;
- (long long)baseWritingDirection;
- (void)changeFont:(id)arg1;
- (void)changeSpelling:(id)arg1;
- (void)checkSpelling:(id)arg1;
- (void)copy:(id)arg1;
- (void)copyFont:(id)arg1;
- (void)copyRuler:(id)arg1;
- (void)cut:(id)arg1;
- (id)delegate;
- (void)delete:(id)arg1;
- (BOOL)drawsBackground;
- (id)font;
- (void)ignoreSpelling:(id)arg1;
- (BOOL)importsGraphics;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)isEditable;
- (BOOL)isFieldEditor;
- (BOOL)isHorizontallyResizable;
- (BOOL)isRichText;
- (BOOL)isRulerVisible;
- (BOOL)isSelectable;
- (BOOL)isVerticallyResizable;
- (struct CGSize { double x1; double x2; })maxSize;
- (struct CGSize { double x1; double x2; })minSize;
- (void)paste:(id)arg1;
- (void)pasteFont:(id)arg1;
- (void)pasteRuler:(id)arg1;
- (BOOL)readRTFDFromFile:(id)arg1;
- (void)replaceCharactersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withRTF:(id)arg2;
- (void)replaceCharactersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withRTFD:(id)arg2;
- (void)replaceCharactersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withString:(id)arg2;
- (void)scrollRangeToVisible:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)selectAll:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })selectedRange;
- (void)setAlignment:(unsigned long long)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setBaseWritingDirection:(long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDrawsBackground:(BOOL)arg1;
- (void)setEditable:(BOOL)arg1;
- (void)setFieldEditor:(BOOL)arg1;
- (void)setFont:(id)arg1;
- (void)setFont:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)setHorizontallyResizable:(BOOL)arg1;
- (void)setImportsGraphics:(BOOL)arg1;
- (void)setMaxSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setMinSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setRichText:(BOOL)arg1;
- (void)setSelectable:(BOOL)arg1;
- (void)setSelectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setString:(id)arg1;
- (void)setTextColor:(id)arg1;
- (void)setTextColor:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)setUsesFontPanel:(BOOL)arg1;
- (void)setVerticallyResizable:(BOOL)arg1;
- (void)showGuessPanel:(id)arg1;
- (void)sizeToFit;
- (id)string;
- (void)subscript:(id)arg1;
- (void)superscript:(id)arg1;
- (id)textColor;
- (void)toggleRuler:(id)arg1;
- (void)underline:(id)arg1;
- (void)unscript:(id)arg1;
- (BOOL)usesFontPanel;
- (BOOL)writeRTFDToFile:(id)arg1 atomically:(BOOL)arg2;

@end
