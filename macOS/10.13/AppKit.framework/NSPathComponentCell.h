/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSPathComponentCell : NSTextFieldCell {
    double  _currentWidth;
    struct { 
        unsigned int shouldDrawArrow : 1; 
        unsigned int drawsAsNavigationBar : 1; 
        unsigned int isFirstItem : 1; 
        unsigned int isLastItem : 1; 
        unsigned int isDropTarget : 1; 
        unsigned int reserved : 27; 
    }  _flags;
    double  _fullWidth;
    NSImage * _image;
    NSImage * _originalImage;
    double  _resizedWidth;
    NSURL * _url;
}

@property (atomic, readwrite, copy) NSURL *URL;
@property (atomic, readwrite, retain) NSImage *image;

// Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit

+ (struct CGSize { double x1; double x2; })_iconSizeForControlSize:(unsigned long long)arg1;

- (long long)_compareToCell:(id)arg1;
- (double)_currentWidth;
- (void)_drawNavigationBarBackgroundWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inView:(id)arg2;
- (BOOL)_drawsAsNavigationBar;
- (int)_effectiveBackgroundStyleInView:(id)arg1;
- (double)_fullWidth;
- (struct CGSize { double x1; double x2; })_iconSize;
- (unsigned long long)_interiorContentAppearanceInView:(id)arg1;
- (unsigned long long)_interiorContentValueStateInView:(id)arg1;
- (BOOL)_isDropTarget;
- (BOOL)_isFirstItem;
- (BOOL)_isLastItem;
- (double)_minWidth;
- (double)_overlapAmount;
- (double)_resizedWidth;
- (void)_setCurrentWidth:(double)arg1;
- (void)_setDrawsAsNavigationBar:(BOOL)arg1;
- (void)_setIsDropTarget:(BOOL)arg1;
- (void)_setIsFirstItem:(BOOL)arg1;
- (void)_setIsLastItem:(BOOL)arg1;
- (void)_setResizedWidth:(double)arg1;
- (void)_setShouldDrawArrow:(BOOL)arg1;
- (void)_setShouldDrawArrowYes;
- (BOOL)_shouldDrawArrow;
- (BOOL)_shouldDrawHighlightRect;
- (BOOL)_shouldDrawRTL;
- (BOOL)_shouldHighlightDropTarget;
- (BOOL)_shouldStyleUneditableTextInView:(id)arg1;
- (id)_textAttributes;
- (BOOL)_textDimsWhenDisabled;
- (BOOL)_wantsDefaultLineFragmentPaddingInView:(id)arg1;
- (void)dealloc;
- (id)description;

// Image: /Applications/Xcode.app/Contents/Developer/usr/lib/libMainThreadChecker.dylib

- (id)URL;
- (struct CGSize { double x1; double x2; })cellSizeForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)drawInteriorWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inView:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)image;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })imageRectForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)init;
- (id)initImageCell:(id)arg1;
- (id)initTextCell:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (long long)interiorBackgroundStyle;
- (void)setBaseWritingDirection:(long long)arg1;
- (void)setFont:(id)arg1;
- (void)setImage:(id)arg1;
- (void)setURL:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })titleRectForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })titleRectForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 imageRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;

@end
