/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSSurface : NSObject {
    double  _alphaValue;
    double  _backgroundBlurRadius;
    unsigned int  _backingStore;
    int  _focused;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _frame;
    NSGraphicsContext * _graphicsContext;
    double  _lastResolution;
    int  _lastScreenNumber;
    struct { 
        unsigned int opaque : 1; 
        unsigned int orderedIn : 1; 
        unsigned int ordersOutWhileAlphaValueIsZero : 1; 
        unsigned int deferSync : 1; 
        unsigned int needsDisplay : 1; 
        unsigned int reserved : 27; 
    }  _sFlags;
    int  _saveWeighting;
    NSCGSWindowLegacySurface * _surface;
    unsigned int  _surfaceID;
    NSView * _view;
    NSWindow * _window;
}

- (double)_cgScaleFactor;
- (void)_configureAutoFlattening;
- (void)_createBackingStore;
- (struct CGSRegionObject { }*)_createRoundedBottomRegionForRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_createSurface;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_currentSurfaceFrame;
- (void)_disposeBackingStore;
- (void)_disposeSurface;
- (void)_surfaceDidChangeScreen;
- (void)_updateLastScreenNumber;
- (void)_windowDidChangeScreens:(id)arg1;
- (void)_windowDidChangeWindowNumber:(id)arg1;
- (void)_windowDidComeBack:(id)arg1;
- (void)_windowDidMove:(id)arg1;
- (void)_windowWillClose:(id)arg1;
- (void)_windowWillGoAway:(id)arg1;
- (double)alphaValue;
- (double)backgroundBlurRadius;
- (void)clearBackingStore;
- (void)dealloc;
- (BOOL)deferSync;
- (id)description;
- (void)displayIfNeeded;
- (void)flush;
- (void)flushWithOptions:(unsigned long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;
- (BOOL)hasBackingStore;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inWindow:(id)arg2;
- (id)initWithView:(id)arg1;
- (BOOL)isFocused;
- (BOOL)isOpaque;
- (BOOL)isOrderedIn;
- (BOOL)isVisible;
- (void)lockFocus;
- (BOOL)lockFocusIfCanDraw;
- (BOOL)needsDisplay;
- (void)orderBack;
- (void)orderFront;
- (void)orderOut;
- (void)orderSurface:(long long)arg1 relativeTo:(id)arg2;
- (BOOL)ordersOutWhileAlphaValueIsZero;
- (int)saveWeighting;
- (id)screen;
- (void)setAlphaValue:(double)arg1;
- (void)setBackgroundBlurRadius:(double)arg1;
- (void)setDeferSync:(BOOL)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setNeedsDisplay;
- (void)setOpaque:(BOOL)arg1;
- (void)setOrdersOutWhileAlphaValueIsZero:(BOOL)arg1;
- (void)setSaveWeighting:(int)arg1;
- (void)setView:(id)arg1;
- (void)setWindow:(id)arg1;
- (unsigned int)surfaceID;
- (void)syncBackingStoreResolution;
- (void)syncSurfaceResolution;
- (void)syncSurfaceWantsExtendedDynamicRange;
- (void)syncToView:(BOOL)arg1;
- (void)syncToViewUnconditionally;
- (void)unlockFocus;
- (void)updateColorSpace;
- (void)updateOrderingForAlphaValue;
- (id)view;
- (id)window;

@end
