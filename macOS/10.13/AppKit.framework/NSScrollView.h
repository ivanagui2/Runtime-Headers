/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSScrollView : NSView <DebugHierarchyObject, NSScrollerImpPairDelegate, NSTextFinderBarContainer> {
    NSClipView * _contentView;
    NSView * _cornerView;
    id  _extraIvars;
    NSScroller * _hScroller;
    NSClipView * _headerClipView;
    NSRulerView * _horizontalRuler;
    id  _ruler;
    struct __SFlags { 
        unsigned int RESERVED : 3; 
        unsigned int unarchiving : 1; 
        unsigned int registeredForWindowWillClose : 1; 
        unsigned int findBarPosition : 2; 
        unsigned int predominantAxisScrolling : 1; 
        unsigned int hContentElasticity : 2; 
        unsigned int vContentElasticity : 2; 
        unsigned int unused : 1; 
        unsigned int findBarVisible : 1; 
        unsigned int autoforwardsScrollWheelEvents : 1; 
        unsigned int autohidesScrollers : 1; 
        unsigned int hasCustomLineBorderColor : 1; 
        unsigned int focusRingNeedsRedisplay : 1; 
        unsigned int skipRemoveSuperviewCheck : 1; 
        unsigned int doesNotDrawBackground : 1; 
        unsigned int needsTile : 1; 
        unsigned int hasVerticalRuler : 1; 
        unsigned int hasHorizontalRuler : 1; 
        unsigned int showRulers : 1; 
        unsigned int oldRulerInstalled : 1; 
        unsigned int borderType : 2; 
        unsigned int noDynamicScrolling : 1; 
        unsigned int hScrollerStatus : 1; 
        unsigned int vScrollerStatus : 1; 
        unsigned int hScrollerRequired : 1; 
        unsigned int vScrollerRequired : 1; 
    }  _sFlags;
    NSScroller * _vScroller;
    NSRulerView * _verticalRuler;
}

@property (atomic, readwrite) BOOL allowsMagnification;
@property (atomic, readwrite) BOOL autohidesScrollers;
@property (atomic, readwrite) BOOL automaticallyAdjustsContentInsets;
@property (atomic, readwrite) BOOL automaticallyAdjustsContentViewInsets;
@property (atomic, readwrite, copy) NSColor *backgroundColor;
@property (atomic, readwrite) unsigned long long borderType;
@property (atomic, readwrite) struct NSEdgeInsets { double x1; double x2; double x3; double x4; } contentInset;
@property (atomic, readwrite) struct NSEdgeInsets { double x1; double x2; double x3; double x4; } contentInsets;
@property (atomic, readonly) struct CGSize { double x1; double x2; } contentSize;
@property (atomic, readwrite, retain) NSClipView *contentView;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readwrite) double decelerationRate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite, retain) NSCursor *documentCursor;
@property (atomic, readwrite, retain) NSView *documentView;
@property (atomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } documentVisibleRect;
@property (atomic, readwrite) BOOL drawsBackground;
@property (atomic, readwrite, retain) NSView *findBarView;
@property (getter=isFindBarVisible, atomic, readwrite) BOOL findBarVisible;
@property (atomic, readwrite) BOOL hasHorizontalMoreContentIndicators;
@property (atomic, readwrite) BOOL hasHorizontalRuler;
@property (atomic, readwrite) BOOL hasHorizontalScroller;
@property (atomic, readwrite) BOOL hasVerticalRuler;
@property (atomic, readwrite) BOOL hasVerticalScroller;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite) double horizontalLineScroll;
@property (atomic, readwrite) double horizontalPageScroll;
@property (atomic, readwrite, retain) NSRulerView *horizontalRulerView;
@property (atomic, readwrite) double horizontalScrollDecelerationFactor;
@property (atomic, readwrite) long long horizontalScrollElasticity;
@property (atomic, readwrite, retain) NSScroller *horizontalScroller;
@property (atomic, readwrite) double lineScroll;
@property (atomic, readwrite) double magnification;
@property (atomic, readwrite) double maxMagnification;
@property (atomic, readwrite) double minMagnification;
@property (atomic, readwrite) double pageScroll;
@property (atomic, readwrite) BOOL rulersVisible;
@property (atomic, readwrite) struct NSEdgeInsets { double x1; double x2; double x3; double x4; } scrollerInsets;
@property (atomic, readwrite) long long scrollerKnobStyle;
@property (atomic, readwrite) long long scrollerStyle;
@property (atomic, readwrite) BOOL scrollsDynamically;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite) BOOL usesPredominantAxisScrolling;
@property (atomic, readwrite) double verticalLineScroll;
@property (atomic, readwrite) double verticalPageScroll;
@property (atomic, readwrite, retain) NSRulerView *verticalRulerView;
@property (atomic, readwrite) double verticalScrollDecelerationFactor;
@property (atomic, readwrite) long long verticalScrollElasticity;
@property (atomic, readwrite, retain) NSScroller *verticalScroller;

// Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (BOOL)automaticallyNotifiesObserversOfDocumentView;
+ (struct CGSize { double x1; double x2; })contentSizeForFrameSize:(struct CGSize { double x1; double x2; })arg1 hasHorizontalScroller:(BOOL)arg2 hasVerticalScroller:(BOOL)arg3 borderType:(unsigned long long)arg4;
+ (struct CGSize { double x1; double x2; })contentSizeForFrameSize:(struct CGSize { double x1; double x2; })arg1 horizontalScrollerClass:(Class)arg2 verticalScrollerClass:(Class)arg3 borderType:(unsigned long long)arg4 controlSize:(unsigned long long)arg5 scrollerStyle:(long long)arg6;
+ (id)defaultAnimationForKey:(id)arg1;
+ (struct CGSize { double x1; double x2; })frameSizeForContentSize:(struct CGSize { double x1; double x2; })arg1 hasHorizontalScroller:(BOOL)arg2 hasVerticalScroller:(BOOL)arg3 borderType:(unsigned long long)arg4;
+ (struct CGSize { double x1; double x2; })frameSizeForContentSize:(struct CGSize { double x1; double x2; })arg1 horizontalScrollerClass:(Class)arg2 verticalScrollerClass:(Class)arg3 borderType:(unsigned long long)arg4 controlSize:(unsigned long long)arg5 scrollerStyle:(long long)arg6;
+ (void)initialize;
+ (BOOL)isCompatibleWithResponsiveScrolling;
+ (id)keyPathsForValuesAffectingDocumentView;

- (void)_addUnderTitlebarNotifications;
- (id)_allocContentAreaLayout;
- (BOOL)_allowsHorizontalStretching;
- (BOOL)_allowsVerticalStretching;
- (BOOL)_alwaysWantsContentInsetsLayout;
- (void)_applyContentAreaLayout:(id)arg1;
- (void)_beginMagnifyGesture;
- (void)_beginMagnifying;
- (void)_beginScrollGesture;
- (BOOL)_canAddUnderTitlebarView;
- (BOOL)_canOptInToConcurrentScrolling;
- (Class)_classToCheckForWantsUpdateLayer;
- (void)_clearUnderTitlebarView:(id)arg1;
- (void)_commonNewScroll:(id)arg1;
- (void)_conditionallyReflectScrolledClipView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_contentFrameMinusScrollers;
- (id)_contentView;
- (id)_copySubviewsInOrderOfDisplay;
- (BOOL)_corneViewIsSmallSize;
- (id)_cornerView;
- (id)_cornerViewForLayer;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_cornerViewFrame;
- (BOOL)_cornerViewHidesWithVerticalScroller;
- (BOOL)_desiredLayerSizeMeritsTiledBackingLayer:(struct CGSize { double x1; double x2; })arg1;
- (double)_destinationFloatValueForScroller:(id)arg1;
- (void)_didRemoveLayer;
- (void)_dirtyFocusRingOrMask;
- (void)_doScroller:(id)arg1;
- (void)_doScroller:(id)arg1 hitPart:(long long)arg2 multiplier:(double)arg3;
- (BOOL)_documentViewSubclassesLockFocus;
- (BOOL)_documentViewWantsHeaderView;
- (void)_drawCornerViewInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_drawOldSchoolFocusRingIfNecessaryInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 clip:(BOOL)arg2;
- (void)_dynamicColorsChanged:(id)arg1;
- (void)_endMagnifyGesture;
- (void)_endMagnifying;
- (void)_endScrollGesture;
- (void)_ensureOveralyScrollerFlashForWindowOrderIn:(id)arg1;
- (void)_finishedMakingConnections;
- (void)_fixGrowBox;
- (BOOL)_fixHeaderAndCornerViews;
- (void)_floatingSubviewCountChanged;
- (id)_floatingSubviewsContainerForAxis:(long long)arg1;
- (BOOL)_forcesContentInsetsLayout;
- (BOOL)_gestureRecognizer:(id)arg1 shouldAttemptToRecognizeWithEvent:(id)arg2;
- (BOOL)_gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)_gestureRecognizerFailed:(id)arg1;
- (BOOL)_hasNonLayeredOverlappingSiblingView;
- (BOOL)_hasRectangularFocusRingAroundFrame;
- (BOOL)_hasScrollOccurredOutsideOfGesture;
- (id)_headerClipView;
- (double)_horizontalScrollerHeight;
- (double)_horizontalScrollerHeightWithBorder;
- (void)_informDelegateDidEndLiveScroll;
- (void)_informDelegateOfNewScrollGesture;
- (void)_informDelegateUserDidLiveScroll;
- (void)_informDelegateWillStartLiveScroll;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_insetBounds;
- (void)_invalidateOverlayScrollerDebrisForScrollCopyOfClipView:(id)arg1 byDeltas:(struct CGPoint { double x1; double x2; })arg2;
- (BOOL)_isConcurrentScrollingCompatible;
- (BOOL)_isInScrollGesture;
- (void)_layoutLayerPiecesIfNeeded;
- (double)_magnification;
- (id)_magnificationInflectionPoints;
- (void)_magnifyToFitRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 animate:(BOOL)arg2;
- (id)_makeUnderTitlebarView;
- (void)_messageTraceFutureResponsiveScrollingOptInOut;
- (BOOL)_needsCornerViewDrawn;
- (void)_newScroll:(BOOL)arg1;
- (void)_overlayScroller:(id)arg1 didBecomeShown:(BOOL)arg2;
- (BOOL)_overlayScrollersShown;
- (BOOL)_ownsWindowGrowBox;
- (void)_panWithGestureRecognizer:(id)arg1;
- (BOOL)_pinnedInDirectionOfScroll:(id)arg1;
- (BOOL)_pinnedInDirectionX:(double)arg1 y:(double)arg2;
- (id)_pointInVisibleScroller:(struct CGPoint { double x1; double x2; })arg1;
- (void)_pulseOverlayScrollers;
- (struct CGSRegionObject { }*)_regionForOpaqueDescendants:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forMove:(BOOL)arg2;
- (void)_registerForWindowWillClose;
- (void)_removeCornerViewForLayer;
- (void)_removeUnderTitlebarNotifications;
- (double)_repeatMultiplier:(double)arg1;
- (void)_resetOveralyScrollerFlashForWindowOrderOut:(id)arg1;
- (id)_rulerline:(double)arg1 :(double)arg2 last:(BOOL)arg3;
- (void)_scrollPageInDirection:(int)arg1;
- (void)_scrollerDidBeginTracking:(id)arg1;
- (void)_scrollerDidEndTracking:(id)arg1;
- (void)_setContentViewFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setCornerViewForLayer:(id)arg1;
- (void)_setForcesContentInsetsLayout:(BOOL)arg1;
- (void)_setHasScrollOccurredOutsideOfGesture:(BOOL)arg1;
- (void)_setHorizontalScrollerHidden:(BOOL)arg1;
- (void)_setMagnification:(double)arg1;
- (void)_setMagnification:(double)arg1 centeredAroundPoint:(struct CGPoint { double x1; double x2; })arg2 animate:(BOOL)arg3;
- (void)_setScrollerNeedsDisplay:(id)arg1;
- (void)_setUnderTitlebarView:(id)arg1;
- (void)_setVerticalScrollerHidden:(BOOL)arg1;
- (void)_setWindow:(id)arg1;
- (BOOL)_shouldUseFocusRingMask;
- (BOOL)_shouldUseInclusiveLayersAutomatically;
- (void)_smartMagnifyToRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 centeredAt:(struct CGPoint { double x1; double x2; })arg2 animate:(BOOL)arg3;
- (void)_snapRubberBandDueToNotification:(id)arg1;
- (void)_sortSubviews;
- (struct CGSize { double x1; double x2; })_stretchAmount;
- (void)_tileIfNeeded;
- (void)_tileWithoutRecursing;
- (id)_underTitlebarView;
- (void)_unregisterForWindowWillClose;
- (void)_update;
- (void)_updateAutomaticContentInsets;
- (void)_updateContentInsetsIfAutomatic;
- (void)_updateCornerViewForLayer;
- (void)_updateForLiveResizeWithOldSize:(struct CGSize { double x1; double x2; })arg1;
- (BOOL)_updateGrowBoxForWindowFrameChange;
- (void)_updateMoreContentIndicatorVisibility;
- (void)_updateRulerlineForRuler:(id)arg1 oldPosition:(double)arg2 newPosition:(double)arg3 vertical:(BOOL)arg4;
- (void)_updateStateOfUnderTitlebarView;
- (void)_updateTrackingAreasWithInvalidCursorRects:(BOOL)arg1;
- (void)_updateWithDisplay;
- (BOOL)_usesOverlayScrollers;
- (double)_verticalScrollerWidth;
- (double)_verticalScrollerWidthWithBorder;
- (void)_viewDidChangeAppearance:(id)arg1;
- (void)_viewDidDrawInLayer:(id)arg1 inContext:(struct CGContext { }*)arg2;
- (BOOL)_willCoverBackingStore;
- (void)dealloc;

// NSScrollView (NSPrivate)

+ (Class)_horizontalScrollerClass;
+ (void)_setShowsResponsiveScrollingStatus:(BOOL)arg1;
+ (Class)_verticalScrollerClass;

- (BOOL)_accessoryViewMightInterfereWithOverlayScrollers:(id)arg1;
- (Class)_animatorClass;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_boundsInsetForBorder;
- (void)_hideOverlayScrollers;
- (BOOL)_isStuntedForIB;
- (id)_lineBorderColor;
- (void)_lockOverlayScrollerState:(unsigned long long)arg1;
- (BOOL)_overlayScrollerStateIsLocked;
- (id)_pageAlignmentsForAxis:(long long)arg1;
- (void)_registerNonInterferingAccessoryView:(id)arg1;
- (void)_resetScrollingBehavior;
- (unsigned long long)_scrollingModeForAxis:(long long)arg1;
- (void)_setIngoreSynchronizedSiblings:(BOOL)arg1;
- (void)_setLineBorderColor:(id)arg1;
- (void)_setPageAlignments:(id)arg1 forAxis:(long long)arg2;
- (void)_setScrollingMode:(unsigned long long)arg1 forAxis:(long long)arg2;
- (void)_setStuntedForIB:(BOOL)arg1;
- (void)_setSynchronizedSibling:(id)arg1 forAxis:(long long)arg2;
- (void)_setWantsPageAlignedHorizontalAxis:(BOOL)arg1;
- (void)_setWantsPageAlignedVerticalAxis:(BOOL)arg1;
- (id)_synchronizedSiblingForAxis:(long long)arg1;
- (id)_synchronizedSiblingsForAxis:(long long)arg1;
- (void)_unlockOverlayScrollerState;
- (void)_unregisterNonInterferingAccessoryView:(id)arg1;
- (BOOL)_wantsPageAlignedHorizontalAxis;
- (BOOL)_wantsPageAlignedVerticalAxis;

// NSScrollView (NSRulerSupport)

+ (Class)rulerViewClass;
+ (void)setRulerViewClass:(Class)arg1;

- (void)_handleBoundsChangeForSubview:(id)arg1;
- (void)_reflectDocumentViewBoundsChange;

// NSScrollView (NSScrollViewAccessibility)

- (id)_accessibilityAdditionalChildren;

// NSScrollView (NSScrollView_Performance_Analysis)

+ (id)_findScrollViewToAutoLiveScrollInWindow:(id)arg1;

- (void)_automateLiveScroll;
- (void)_automatedLiveScrollingDidEnd;
- (void)_automatedLiveScrollingWillBegin;

// Image: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Debugger/libViewDebuggerSupport.dylib

// NSScrollView (DebugHierarchyAdditions)

- (id)debugHierarchyPropertyDescriptions;

// Image: /Applications/Xcode.app/Contents/Developer/usr/lib/libMainThreadChecker.dylib

- (BOOL)acceptsFirstResponder;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeNames;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityContentsAttribute;
- (id)accessibilityHorizontalScrollBarAttribute;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (BOOL)accessibilityIsContentsAttributeSettable;
- (BOOL)accessibilityIsHorizontalScrollBarAttributeSettable;
- (BOOL)accessibilityIsIgnored;
- (BOOL)accessibilityIsVerticalScrollBarAttributeSettable;
- (id)accessibilityParameterizedAttributeNames;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityPositionAttribute;
- (id)accessibilityRoleAttribute;
- (id)accessibilityScrollToShowDescendantAttributeForParameter:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (id)accessibilitySizeAttribute;
- (id)accessibilityVerticalScrollBarAttribute;
- (void)addFloatingHeaderView:(id)arg1 forAxis:(long long)arg2;
- (void)addFloatingSubview:(id)arg1 forAxis:(long long)arg2;
- (void)addSubview:(id)arg1;
- (BOOL)allowsMagnification;
- (BOOL)autoforwardsScrollWheelEvents;
- (BOOL)autohidesScrollers;
- (BOOL)automaticallyAdjustsContentInsets;
- (BOOL)automaticallyAdjustsContentViewInsets;
- (id)backgroundColor;
- (BOOL)becomeFirstResponder;
- (void)beginGestureWithEvent:(id)arg1;
- (unsigned long long)borderType;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentAreaRectForScrollerImpPair:(id)arg1;
- (struct NSEdgeInsets { double x1; double x2; double x3; double x4; })contentInset;
- (struct NSEdgeInsets { double x1; double x2; double x3; double x4; })contentInsets;
- (struct CGSize { double x1; double x2; })contentSize;
- (id)contentView;
- (double)decelerationRate;
- (id)delegate;
- (id)documentCursor;
- (id)documentView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })documentVisibleRect;
- (void)drawFocusRingMask;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)drawsBackground;
- (BOOL)drawsContentShadow;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)endGestureWithEvent:(id)arg1;
- (long long)findBarPosition;
- (id)findBarView;
- (void)findBarViewDidChangeHeight;
- (void)flashScrollers;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })focusRingMaskBounds;
- (void)geometryInWindowDidChange;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (BOOL)hasHorizontalMoreContentIndicators;
- (BOOL)hasHorizontalRuler;
- (BOOL)hasHorizontalScroller;
- (BOOL)hasVerticalRuler;
- (BOOL)hasVerticalScroller;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1;
- (double)horizontalLineScroll;
- (double)horizontalPageScroll;
- (id)horizontalRulerView;
- (double)horizontalScrollDecelerationFactor;
- (long long)horizontalScrollElasticity;
- (id)horizontalScroller;
- (BOOL)inLiveResizeForScrollerImpPair:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)instantiateWithObjectInstantiator:(id)arg1;
- (BOOL)isFindBarVisible;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (void)layout;
- (double)lineScroll;
- (double)magnification;
- (void)magnifyToFitRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)magnifyWithEvent:(id)arg1;
- (double)maxMagnification;
- (double)minMagnification;
- (struct CGPoint { double x1; double x2; })mouseLocationInContentAreaForScrollerImpPair:(id)arg1;
- (BOOL)needsPanelToBecomeKey;
- (id)ns_widgetType;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)pageDown:(id)arg1;
- (double)pageScroll;
- (void)pageUp:(id)arg1;
- (BOOL)preservesContentDuringLiveResize;
- (void)reflectScrolledClipView:(id)arg1;
- (void)removeFloatingHeaderView:(id)arg1;
- (void)removeFromSuperview;
- (void)renewGState;
- (void)resizeSubviewsWithOldSize:(struct CGSize { double x1; double x2; })arg1;
- (void)restoreStateWithCoder:(id)arg1;
- (id)rulerStateDescription;
- (BOOL)rulersVisible;
- (void)scrollClipView:(id)arg1 toPoint:(struct CGPoint { double x1; double x2; })arg2;
- (BOOL)scrollRectToVisible:(const struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 fromView:(id)arg2;
- (void)scrollWheel:(id)arg1;
- (id)scrollerImpPair;
- (struct CGPoint { double x1; double x2; })scrollerImpPair:(id)arg1 convertContentPoint:(struct CGPoint { double x1; double x2; })arg2 toScrollerImp:(id)arg3;
- (BOOL)scrollerImpPair:(id)arg1 isContentPointVisible:(struct CGPoint { double x1; double x2; })arg2;
- (void)scrollerImpPair:(id)arg1 setContentAreaNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)scrollerImpPair:(id)arg1 updateScrollerStyleForNewRecommendedScrollerStyle:(long long)arg2;
- (struct NSEdgeInsets { double x1; double x2; double x3; double x4; })scrollerInsets;
- (long long)scrollerKnobStyle;
- (long long)scrollerStyle;
- (BOOL)scrollsDynamically;
- (void)setAllowsMagnification:(BOOL)arg1;
- (void)setAutoforwardsScrollWheelEvents:(BOOL)arg1;
- (void)setAutohidesScrollers:(BOOL)arg1;
- (void)setAutomaticallyAdjustsContentInsets:(BOOL)arg1;
- (void)setAutomaticallyAdjustsContentViewInsets:(BOOL)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setBorderType:(unsigned long long)arg1;
- (void)setContentInset:(struct NSEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setContentInsets:(struct NSEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setContentView:(id)arg1;
- (void)setCopiesOnScroll:(BOOL)arg1;
- (void)setDecelerationRate:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDocumentCursor:(id)arg1;
- (void)setDocumentView:(id)arg1;
- (void)setDrawsBackground:(BOOL)arg1;
- (void)setDrawsContentShadow:(BOOL)arg1;
- (void)setFindBarPosition:(long long)arg1;
- (void)setFindBarView:(id)arg1;
- (void)setFindBarVisible:(BOOL)arg1;
- (void)setFrameOrigin:(struct CGPoint { double x1; double x2; })arg1;
- (void)setFrameSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setHasHorizontalMoreContentIndicators:(BOOL)arg1;
- (void)setHasHorizontalRuler:(BOOL)arg1;
- (void)setHasHorizontalScroller:(BOOL)arg1;
- (void)setHasVerticalRuler:(BOOL)arg1;
- (void)setHasVerticalScroller:(BOOL)arg1;
- (void)setHorizontalLineScroll:(double)arg1;
- (void)setHorizontalPageScroll:(double)arg1;
- (void)setHorizontalRulerView:(id)arg1;
- (void)setHorizontalScrollDecelerationFactor:(double)arg1;
- (void)setHorizontalScrollElasticity:(long long)arg1;
- (void)setHorizontalScroller:(id)arg1;
- (void)setLayer:(id)arg1;
- (void)setLineScroll:(double)arg1;
- (void)setMagnification:(double)arg1;
- (void)setMagnification:(double)arg1 centeredAtPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)setMaxMagnification:(double)arg1;
- (void)setMinMagnification:(double)arg1;
- (void)setNeedsLayout:(BOOL)arg1;
- (void)setNextKeyView:(id)arg1;
- (void)setPageScroll:(double)arg1;
- (void)setRulersVisible:(BOOL)arg1;
- (void)setScrollerInsets:(struct NSEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setScrollerKnobStyle:(long long)arg1;
- (void)setScrollerStyle:(long long)arg1;
- (void)setScrollsDynamically:(BOOL)arg1;
- (void)setUsesPredominantAxisScrolling:(BOOL)arg1;
- (void)setVerticalLineScroll:(double)arg1;
- (void)setVerticalPageScroll:(double)arg1;
- (void)setVerticalRulerView:(id)arg1;
- (void)setVerticalScrollDecelerationFactor:(double)arg1;
- (void)setVerticalScrollElasticity:(long long)arg1;
- (void)setVerticalScroller:(id)arg1;
- (void)showActiveFirstResponderIndication;
- (void)smartMagnifyWithEvent:(id)arg1;
- (void)tile;
- (void)updateLayer;
- (void)updateTrackingAreas;
- (BOOL)usesPredominantAxisScrolling;
- (double)verticalLineScroll;
- (double)verticalPageScroll;
- (id)verticalRulerView;
- (double)verticalScrollDecelerationFactor;
- (long long)verticalScrollElasticity;
- (id)verticalScroller;
- (void)viewDidChangeBackingProperties;
- (void)viewDidEndLiveResize;
- (void)viewDidHide;
- (void)viewDidMoveToWindow;
- (void)viewDidUnhide;
- (void)viewWillDraw;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewWillStartLiveResize;
- (void)willRemoveSubview:(id)arg1;

// Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/PDFKit.framework/Versions/A/PDFKit

// NSScrollView (NSScrollViewExtensions)

- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })PDFKitDocumentVisibleRectIncludingContentInsets;

// Image: /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore

// NSScrollView (WebCoreView)

- (id)_webcore_effectiveFirstResponder;

@end
