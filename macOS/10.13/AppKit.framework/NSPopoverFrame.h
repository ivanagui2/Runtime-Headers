/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSPopoverFrame : NSVisualEffectView {
    struct { 
        unsigned int useDragWindowAppearance : 1; 
        unsigned int hasActiveShadow : 1; 
        unsigned int hasShadow : 1; 
        unsigned int invalidateShadow : 1; 
        unsigned int unused1 : 1; 
        unsigned int unused2 : 1; 
        unsigned int shouldInsetForAnchor : 1; 
        unsigned int doingSolidFillHack : 1; 
        unsigned int wantsDragWindowAppearance : 1; 
        unsigned int _reserved : 23; 
    }  _flags;
    id  _privatePopoverFrameData;
}

@property (setter=_setWantsDragWindowAppearance:, atomic, readwrite) BOOL _wantsDragWindowAppearance;
@property (atomic, readwrite) unsigned long long anchorEdge;
@property (atomic, readwrite) struct CGPoint { double x1; double x2; } anchorPoint;
@property (atomic, readwrite) struct CGSize { double x1; double x2; } anchorSize;
@property (atomic, readwrite) struct NSEdgeInsets { double x1; double x2; double x3; double x4; } contentInset;
@property (atomic, readwrite) long long popoverAppearance;
@property (nonatomic, readwrite, retain) NSFloatRange *rangeOfInterest1;
@property (nonatomic, readwrite, retain) NSFloatRange *rangeOfInterest2;
@property (atomic, readwrite) BOOL shouldBlurBackground;
@property (atomic, readwrite) BOOL shouldInsetForAnchor;

// Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit

+ (id)_cui_keyPathsAffectingValuesForCurrentState;
+ (BOOL)automaticallyNotifiesObserversOfAnchorPoint;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentRectForFrameRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 appearance:(id)arg2 anchorSize:(struct CGSize { double x1; double x2; })arg3 contentInset:(struct NSEdgeInsets { double x1; double x2; double x3; double x4; })arg4;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentRectForFrameRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 appearance:(id)arg2 anchorSize:(struct CGSize { double x1; double x2; })arg3 contentInset:(struct NSEdgeInsets { double x1; double x2; double x3; double x4; })arg4 hasTitlebar:(BOOL)arg5;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentRectForFrameRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 styleMask:(unsigned long long)arg2;
+ (id)defaultAnimationForKey:(id)arg1;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameRectForContentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 appearance:(id)arg2 anchorSize:(struct CGSize { double x1; double x2; })arg3 contentInset:(struct NSEdgeInsets { double x1; double x2; double x3; double x4; })arg4;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameRectForContentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 appearance:(id)arg2 anchorSize:(struct CGSize { double x1; double x2; })arg3 contentInset:(struct NSEdgeInsets { double x1; double x2; double x3; double x4; })arg4 hasTitlebar:(BOOL)arg5;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameRectForContentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 styleMask:(unsigned long long)arg2;
+ (struct CGSize { double x1; double x2; })minFrameSizeForMinContentSize:(struct CGSize { double x1; double x2; })arg1 styleMask:(unsigned long long)arg2;

- (void)_addTitlebarAnimated:(BOOL)arg1 completionHandler:(id)arg2;
- (struct CGPoint { double x1; double x2; })_adjustedForBoundsAnchorPoint:(struct CGPoint { double x1; double x2; })arg1 anchorEdge:(unsigned long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_arrowRect;
- (BOOL)_canHaveToolbar;
- (void)_clearDragMargins;
- (void)_clearFrameMask;
- (void)_closeButtonPressed:(id)arg1;
- (void)_commonPopoverInit;
- (id)_coreUIOptionsWithAnchorEdge:(unsigned long long)arg1 anchorPoint:(struct CGPoint { double x1; double x2; })arg2 anchorSize:(struct CGSize { double x1; double x2; })arg3 shouldInsetForAnchor:(BOOL)arg4 areasOfInterest:(id)arg5;
- (BOOL)_createWindowShapeMask:(struct CGImage {}**)arg1 centerRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 scale:(double*)arg3;
- (id)_cuiOptionsForCornerMaskForWindowType:(struct __CFString { }*)arg1;
- (id)_cui_optionsForCurrentState;
- (double)_distanceFromToolbarBaseToTitlebar;
- (id)_dragImage;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_draggableFrame;
- (void)_drawFrameMaskInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_drawFrameShadowAndFlushContext:(id)arg1;
- (void)_drawHUDPopoverAppearanceInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 anchorEdge:(unsigned long long)arg2 anchorPoint:(struct CGPoint { double x1; double x2; })arg3;
- (void)_drawMinimalPopoverAppearanceInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 anchorEdge:(unsigned long long)arg2 anchorPoint:(struct CGPoint { double x1; double x2; })arg3;
- (id)_frameMask;
- (BOOL)_hasActiveDragTypes;
- (BOOL)_hasDragWindowAppearance;
- (BOOL)_hasTitlebar;
- (void)_hideToolbarWithAnimation:(BOOL)arg1;
- (void)_invalidateShadow;
- (BOOL)_isBackdropCompatible;
- (BOOL)_isBorderView;
- (void)_loadTheme;
- (void)_markAnchorRectAsNeedingDisplay;
- (id)_metricsForPopoverFrame;
- (struct CGPath { }*)_newMinimalAppearancePathInBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 anchorEdge:(unsigned long long)arg2 anchorPoint:(struct CGPoint { double x1; double x2; })arg3 topCapOnly:(BOOL)arg4 arrowOffset:(double)arg5;
- (struct CGPath { }*)_newMinimalAppearancePathInBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 anchorEdge:(unsigned long long)arg2 arrowPosition:(double)arg3 topCapOnly:(BOOL)arg4 arrowOffset:(double)arg5;
- (id)_popoverIfAvailable;
- (void)_removeTitlebarAnimated:(BOOL)arg1 completionHandler:(id)arg2;
- (void)_resetDragMargins;
- (void)_setAnchorPoint:(struct CGPoint { double x1; double x2; })arg1 reshape:(BOOL)arg2;
- (void)_setDragImage:(id)arg1;
- (void)_setFrameNeedsDisplay:(BOOL)arg1;
- (void)_setHasDragWindowAppearance:(BOOL)arg1;
- (void)_setWantsDragWindowAppearance:(BOOL)arg1;
- (void)_showToolbarWithAnimation:(BOOL)arg1;
- (void)_tileAndRedisplay:(BOOL)arg1 updateContentView:(BOOL)arg2;
- (BOOL)_toolbarIsHidden;
- (BOOL)_toolbarIsInTransition;
- (BOOL)_toolbarIsManagedByExternalWindow;
- (BOOL)_toolbarIsShown;
- (void)_updatePopoverCornerMaskOnLayer:(id)arg1;
- (id)_verticalRangesForAreasOfInterest;
- (BOOL)_wantsDragWindowAppearance;
- (void)_windowChangedKeyState;
- (void)_windowWillOrderOnScreen;
- (void)dealloc;

// Image: /Applications/Xcode.app/Contents/Developer/usr/lib/libMainThreadChecker.dylib

- (unsigned long long)anchorEdge;
- (struct CGPoint { double x1; double x2; })anchorPoint;
- (struct CGSize { double x1; double x2; })anchorSize;
- (id)closeButton;
- (void)concludeDragOperation:(id)arg1;
- (struct NSEdgeInsets { double x1; double x2; double x3; double x4; })contentInset;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentRectForFrameRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 styleMask:(unsigned long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })dragRectForFrameRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)draggingEnded:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggingExited:(id)arg1;
- (void)drawBackgroundInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 ofView:(id)arg2 anchorEdge:(unsigned long long)arg3 anchorPoint:(struct CGPoint { double x1; double x2; })arg4;
- (void)drawOverlayRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (unsigned long long)effectiveAnchorEdge;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameRectForContentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 styleMask:(unsigned long long)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 styleMask:(unsigned long long)arg2 owner:(id)arg3;
- (BOOL)isOpaque;
- (id)minimizeButton;
- (id)opaqueAncestor;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })overlayBounds;
- (BOOL)performDragOperation:(id)arg1;
- (long long)popoverAppearance;
- (id)rangeOfInterest1;
- (id)rangeOfInterest2;
- (void)setAnchorEdge:(unsigned long long)arg1;
- (void)setAnchorPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)setAnchorSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setContentInset:(struct NSEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setFrameSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setPopoverAppearance:(long long)arg1;
- (void)setRangeOfInterest1:(id)arg1;
- (void)setRangeOfInterest2:(id)arg1;
- (void)setRangeOfInterest:(id*)arg1 sourceRange:(id)arg2;
- (void)setShouldBlurBackground:(BOOL)arg1;
- (void)setShouldInsetForAnchor:(BOOL)arg1;
- (void)setTitle:(id)arg1;
- (void)shapeWindow;
- (BOOL)shouldBlurBackground;
- (BOOL)shouldInsetForAnchor;
- (unsigned long long)styleMask;
- (void)tileAndSetWindowShape:(BOOL)arg1;
- (void)tileAndSetWindowShape:(BOOL)arg1 updateContentView:(BOOL)arg2;
- (id)title;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })titlebarRect;
- (void)viewDidChangeBackingProperties;
- (BOOL)wantsUpdateLayer;
- (id)zoomButton;

@end
