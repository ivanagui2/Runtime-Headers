/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSCGImageSnapshotRep : NSImageRep {
    struct CGImage { } * _cgImage;
    NSSnapshotContextSignature * _signature;
}

+ (BOOL)_deprecated_hasReversedFlippednessInFlippedImages;
+ (void)_lockFocusForCreatingSnapshot:(BOOL)arg1 withRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 context:(id)arg3 hints:(id)arg4 flipped:(BOOL)arg5;
+ (struct CGImage { }*)_unlockFocusAndPerformBlockUsingCGImageAndCapturingContext:(id)arg1;
+ (id)classFallbacksForKeyedArchiver;
+ (void)lockFocusForCreatingCGImageWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 context:(id)arg2 hints:(id)arg3 flipped:(BOOL)arg4;
+ (void)lockFocusForCreatingSnapshotWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 context:(id)arg2 hints:(id)arg3 flipped:(BOOL)arg4;
+ (BOOL)supportsSecureCoding;
+ (struct CGImage { }*)unlockFocusCreatingCGImageAndDrawingRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1;
+ (id)unlockFocusCreatingCGImageSnapshotRep;

- (struct CGImage { }*)CGImageForProposedRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 context:(id)arg2 hints:(id)arg3;
- (id)_imageRepsForEncodingWithCoder:(id)arg1;
- (BOOL)_isValid;
- (struct CGImage { }*)_snapshotRep_CGImageForProposedRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 context:(id)arg2 hints:(id)arg3;
- (BOOL)_snapshotRep_commonSetupWithWithCGImage:(struct CGImage { }*)arg1 snapshotContextSignature:(id)arg2;
- (long long)bitsPerSample;
- (Class)classForArchiver;
- (Class)classForKeyedArchiver;
- (id)colorSpace;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (BOOL)draw;
- (void)encodeWithCoder:(id)arg1;
- (id)fullDescription;
- (BOOL)hasAlpha;
- (id)init;
- (id)initWithCGImage:(struct CGImage { }*)arg1 drawingRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 applicableForRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 context:(id)arg4 hints:(id)arg5;
- (id)initWithCGImage:(struct CGImage { }*)arg1 snapshotContextSignature:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (BOOL)isApplicableForRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 context:(id)arg2 hints:(id)arg3;
- (long long)pixelsHigh;
- (long long)pixelsWide;

@end
