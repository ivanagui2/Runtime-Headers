/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSScrollerImpPair : NSObject {
    NSTrackingArea * contentViewTrackingArea;
    <NSScrollerImpPairDelegate> * delegate;
    struct { 
        unsigned int isFlipped : 1; 
        unsigned int wantsToFlashOverlayScrollers : 1; 
        unsigned int windowIsVisible : 1; 
        unsigned int inScrollGesture : 1; 
        unsigned int scrollerKnobStyle : 2; 
        unsigned int scrollerFlashPending : 1; 
        unsigned int overlayScrollerStateLocked : 1; 
        unsigned int inVertScroller : 1; 
        unsigned int inHorzScroller : 1; 
        unsigned int areScrollersCatchable : 1; 
        unsigned int shouldFadeCaughtScroller : 1; 
        unsigned int reserved : 20; 
    }  flags;
    struct { 
        unsigned int reserved : 32; 
    }  flags2;
    NSScrollerImp * horizontalScrollerImp;
    struct CGPoint { 
        double x; 
        double y; 
    }  lastMouseInContentPoint;
    NSTimer * overlayScrollerHideTimer;
    id  reserved2;
    id  reserved3;
    NSScrollView * scrollView;
    long long  scrollerStyle;
    NSScrollerImp * verticalScrollerImp;
}

@property (atomic, readwrite) <NSScrollerImpPairDelegate> *delegate;
@property (getter=isFlipped, atomic, readwrite) BOOL flipped;
@property (atomic, readwrite, retain) NSScrollerImp *horizontalScrollerImp;
@property (atomic, readonly) BOOL inScrollGesture;
@property (atomic, readonly) BOOL overlayScrollersShown;
@property (atomic, readwrite) NSScrollView *scrollView;
@property (atomic, readwrite) long long scrollerKnobStyle;
@property (atomic, readwrite) long long scrollerStyle;
@property (atomic, readwrite, retain) NSScrollerImp *verticalScrollerImp;

+ (void)_scrollerStyleRecommendationChanged:(id)arg1;
+ (void)_updateAllScrollerImpPairsForNewRecommendedScrollerStyle:(long long)arg1;
+ (void)initialize;
+ (long long)scrollerLayoutDirection;
+ (void)setSuppressScrollerFlash:(BOOL)arg1 forDecendantsOfView:(id)arg2;

- (void)_addRemoveTrackingAreasAsNeeded;
- (void)_beginHideOverlayScrollers;
- (void)_cancelOverlayScrollerHideTimer;
- (void)_doWork:(id)arg1;
- (void)_endScrollGestureWithCancel:(BOOL)arg1;
- (void)_overlayScrollerHideTimerFired:(id)arg1;
- (void)_rescheduleOverlayScrollerHideTimerWithDelay:(double)arg1;
- (void)_setOverlayScrollerState:(unsigned long long)arg1 forScrollerImp:(id)arg2 forceImmediately:(BOOL)arg3;
- (void)_updateOverlayScrollersStateWithReason:(id)arg1 forceAtLeastKnobsVisible:(BOOL)arg2;
- (void)_updateOverlayScrollersStateWithReason:(id)arg1 forcingVisibilityForHorizontalKnob:(long long)arg2 verticalKnob:(long long)arg3;
- (void)beginScrollGesture;
- (void)cancelScrollGesture;
- (void)contentAreaDidHide;
- (void)contentAreaDidResize;
- (void)contentAreaScrolled;
- (void)contentAreaScrolledInDirection:(struct CGPoint { double x1; double x2; })arg1;
- (void)contentAreaWillDraw;
- (void)dealloc;
- (id)delegate;
- (void)endLiveResize;
- (void)endScrollGesture;
- (void)endTrackingInScrollerImp:(id)arg1;
- (void)flashScrollers;
- (void)hideOverlayScrollers;
- (id)horizontalScrollerImp;
- (BOOL)inScrollGesture;
- (id)init;
- (BOOL)isFlipped;
- (void)lockOverlayScrollerState:(unsigned long long)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseEnteredContentArea;
- (void)mouseExited:(id)arg1;
- (void)mouseExitedContentArea;
- (void)mouseMoved:(id)arg1;
- (void)mouseMovedInContentArea;
- (void)movedToNewWindow;
- (BOOL)overlayScrollerStateIsLocked;
- (BOOL)overlayScrollersShown;
- (void)removedFromSuperview;
- (id)scrollView;
- (long long)scrollerKnobStyle;
- (long long)scrollerStyle;
- (void)setDelegate:(id)arg1;
- (void)setFlipped:(BOOL)arg1;
- (void)setHorizontalScrollerImp:(id)arg1;
- (void)setScrollView:(id)arg1;
- (void)setScrollerKnobStyle:(long long)arg1;
- (void)setScrollerStyle:(long long)arg1;
- (void)setVerticalScrollerImp:(id)arg1;
- (void)startLiveResize;
- (void)unlockOverlayScrollerState;
- (void)updateTrackingAreas;
- (id)verticalScrollerImp;
- (void)windowOrderedIn;
- (void)windowOrderedOut;

@end
