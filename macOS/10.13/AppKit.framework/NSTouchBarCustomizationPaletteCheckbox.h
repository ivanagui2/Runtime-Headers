/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSTouchBarCustomizationPaletteCheckbox : NSControl <NSAccessibilityCheckBox> {
    id  _autounbinder;
    _NSTouchBarCustomizationPaletteCheckboxBox * _box;
    BOOL  _isChecked;
    BOOL  _isHighlighted;
    double  _paletteScaleFactor;
    NSStackView * _stackView;
    NSString * _title;
    NSTextField * _titleField;
}

@property (atomic, readonly, copy) NSAttributedString *_labelFontAttributedString;
@property (atomic, readonly) double _labelFontSize;
@property (atomic, readonly) double _stackViewSpacing;
@property (getter=isChecked, atomic, readwrite) BOOL checked;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (getter=isHighlighted, atomic, readwrite) BOOL highlighted;
@property (atomic, readwrite) double paletteScaleFactor;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite, copy) NSString *title;

// Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit

+ (id)checkboxWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3;
+ (id)keyPathsForValuesAffecting_labelFontAttributedString;
+ (id)keyPathsForValuesAffecting_labelFontSize;
+ (id)keyPathsForValuesAffecting_stackViewSpacing;

- (void)_accessibilityDisplayOptionsDidChange:(id)arg1;
- (id)_labelFontAttributedString;
- (double)_labelFontSize;
- (id)_labelTextColor;
- (double)_stackViewSpacing;
- (void)dealloc;

// NSTouchBarCustomizationPaletteCheckbox (_NSAutounbinder)

- (id)_autounbinder;
- (oneway void)release;

// Image: /Applications/Xcode.app/Contents/Developer/usr/lib/libMainThreadChecker.dylib

- (id)accessibilityLabel;
- (BOOL)accessibilityPerformPress;
- (id)accessibilityRole;
- (id)accessibilityValue;
- (id)firstBaselineAnchor;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)isAccessibilityElement;
- (BOOL)isChecked;
- (BOOL)isHighlighted;
- (id)lastBaselineAnchor;
- (void)mouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (double)paletteScaleFactor;
- (void)setChecked:(BOOL)arg1;
- (void)setHighlighted:(BOOL)arg1;
- (void)setPaletteScaleFactor:(double)arg1;
- (void)setTitle:(id)arg1;
- (id)title;

@end
