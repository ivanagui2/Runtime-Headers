/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSSliderTouchBarItem : NSTouchBarItem <NSSliderAccessoryContainer> {
    SEL  _action;
    id  _autounbinder;
    NSString * _customizationLabel;
    id  _target;
    NSView * _view;
}

@property (atomic, readonly) BOOL _hasStepBehaviorContext;
@property (atomic, readonly) _NSSliderTouchBarItemView *_sliderItemView;
@property (atomic, readwrite) SEL action;
@property (atomic, readwrite, copy) NSString *customizationLabel;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite) double incrementValue;
@property (atomic, readwrite, copy) NSString *label;
@property (atomic, readwrite) double maximumValue;
@property (atomic, readonly) NSSliderAccessory *maximumValueAccessory;
@property (atomic, readwrite, retain) NSSliderAccessory *maximumValueAccessory;
@property (atomic, readwrite) double minimumValue;
@property (atomic, readonly) NSSliderAccessory *minimumValueAccessory;
@property (atomic, readwrite, retain) NSSliderAccessory *minimumValueAccessory;
@property (atomic, readwrite, retain) NSSlider *slider;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite) id target;
@property (atomic, readwrite) double value;
@property (atomic, readwrite) double valueAccessoryWidth;

- (void).cxx_destruct;
- (void)_itemViewDidCancelTracking;
- (void)_itemViewDidEndTracking;
- (void)_itemViewWillBeginTracking;
- (void)_loadViewIfNecessary;
- (void)_sliderDidChange:(id)arg1;
- (id)_sliderItemView;
- (SEL)action;
- (id)customizationLabel;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1;
- (id)label;
- (id)maximumValueAccessory;
- (id)minimumValueAccessory;
- (void)setAction:(SEL)arg1;
- (void)setCustomizationLabel:(id)arg1;
- (void)setLabel:(id)arg1;
- (void)setMaximumValueAccessory:(id)arg1;
- (void)setMinimumValueAccessory:(id)arg1;
- (void)setSlider:(id)arg1;
- (void)setTarget:(id)arg1;
- (void)setValueAccessoryWidth:(double)arg1;
- (id)slider;
- (id)target;
- (double)valueAccessoryWidth;
- (id)view;

// NSSliderTouchBarItem (NSSliderAccessoryContainer)

+ (id)keyPathsForValuesAffecting_hasStepBehaviorContext;

- (BOOL)_hasStepBehaviorContext;
- (void)_incrementValue:(BOOL)arg1;
- (double)incrementValue;
- (double)maximumValue;
- (double)minimumValue;
- (void)sendAction;
- (void)setIncrementValue:(double)arg1;
- (void)setMaximumValue:(double)arg1;
- (void)setMinimumValue:(double)arg1;
- (void)setValue:(double)arg1;
- (double)value;

// NSSliderTouchBarItem (NSTouchBarItem_TransposerExtension)

- (id)makePressAndHoldTransposerWithSourceFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 destinationContentView:(id)arg2 frame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (Class)preferredPopoverTransposerClass;
- (long long)preferredPopoverTransposerPriority;

// NSSliderTouchBarItem (_NSAutounbinder)

- (id)_autounbinder;
- (oneway void)release;

@end
