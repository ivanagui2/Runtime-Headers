/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSNavBrowserDelegate : NSNavFileListDelegate <NSBrowserDelegate> {
    NSMutableDictionary * _aliasNodesToTargetNodes;
    NSBrowser * _browser;
    NSNavNode * _lastSelectedNode;
    NSNavPreviewController * _previewController;
    unsigned int  _reloadingInvalidAlias;
    unsigned int  _reserved;
}

@property (nonatomic, readwrite, retain) NSBrowser *browser;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readonly) Class superclass;

- (void)_addAliasNode:(id)arg1 toTargetNode:(id)arg2;
- (BOOL)_browser:(id)arg1 keyEvent:(id)arg2 inColumn:(long long)arg3;
- (BOOL)_browser:(id)arg1 performKeyEquivalent:(id)arg2 inColumn:(long long)arg3;
- (void)_browserAction:(id)arg1;
- (void)_browserDoubleAction:(id)arg1;
- (id)_cachedChildrenForNode:(id)arg1 logonOK:(BOOL)arg2;
- (BOOL)_changeRootNodeBasedOnSelectedNodes:(id)arg1;
- (void)_clearAliasToTargetNodeMapTable;
- (void)_ejectButtonClicked:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameOfCellInBrowserAtColumn:(long long)arg1 row:(long long)arg2;
- (id)_indexPathForNode:(id)arg1;
- (BOOL)_lastSelectedNodeIsDirectory;
- (void)_reloadChildNode:(id)arg1 parent:(id)arg2;
- (void)_reloadChildNode:(id)arg1 parent:(id)arg2 includeChildColumn:(BOOL)arg3 updateTrackignAreas:(BOOL)arg4;
- (void)_removeAliasNode:(id)arg1;
- (id)_selectedNodesWithEntireSelection:(BOOL)arg1;
- (void)_setCurrentDirectoryNode:(id)arg1 pathToNode:(id)arg2;
- (BOOL)_setSelectedNodes:(id)arg1;
- (BOOL)_shouldShowPreviewForNode:(id)arg1;
- (BOOL)_userClickedInEjectButtonFrame;
- (id)browser;
- (id)browser:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (void)browser:(id)arg1 didChangeLastColumn:(long long)arg2 toColumn:(long long)arg3;
- (id)browser:(id)arg1 headerViewControllerForItem:(id)arg2;
- (BOOL)browser:(id)arg1 isLeafItem:(id)arg2;
- (long long)browser:(id)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 inColumn:(long long)arg4 forString:(id)arg5;
- (long long)browser:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)browser:(id)arg1 objectValueForItem:(id)arg2;
- (id)browser:(id)arg1 previewViewControllerForLeafItem:(id)arg2;
- (id)browser:(id)arg1 selectionIndexesForProposedSelection:(id)arg2 inColumn:(long long)arg3;
- (double)browser:(id)arg1 shouldSizeColumn:(long long)arg2 forUserResize:(BOOL)arg3 toWidth:(double)arg4;
- (BOOL)browser:(id)arg1 shouldTrackCell:(id)arg2 atRow:(long long)arg3 inColumn:(long long)arg4;
- (BOOL)browser:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (void)browser:(id)arg1 willDisplayCell:(id)arg2 atRow:(long long)arg3 column:(long long)arg4;
- (BOOL)browser:(id)arg1 writeRowsWithIndexes:(id)arg2 inColumn:(long long)arg3 toPasteboard:(id)arg4;
- (void)browserColumnConfigurationDidChange:(id)arg1;
- (BOOL)canGoIntoSelectedDirectory;
- (void)configureForActiveState;
- (void)configureForAllowsMultipleSelection:(BOOL)arg1;
- (void)configureForCanChooseDirectories:(BOOL)arg1;
- (void)configureForCanChooseFiles:(BOOL)arg1;
- (void)configureForInactiveState;
- (id)currentBrowsingNodePath;
- (id)currentDirectoryNode;
- (id)currentTypeSelectSearchString;
- (void)dealloc;
- (void)handleUserGoUpDirectory;
- (BOOL)lightweightHandleChildChanged:(id)arg1 parent:(id)arg2 property:(id)arg3;
- (void)loadAndRestoreCurrentBrowsingNodePath:(id)arg1 selectedNodes:(id)arg2;
- (void)navBrowser:(id)arg1 didClickOnDisabledRow:(long long)arg2 column:(long long)arg3;
- (BOOL)navBrowser:(id)arg1 isEnabledRow:(long long)arg2 column:(long long)arg3;
- (long long)navBrowser:(id)arg1 labelColorIndexForRow:(long long)arg2 column:(long long)arg3;
- (void)reloadChildrenForNode:(id)arg1;
- (void)reloadDisplayState;
- (id)rootItemForBrowser:(id)arg1;
- (id)selectedNodes;
- (id)selectedNodesIncludingDirectories;
- (void)setBrowser:(id)arg1;
- (void)setCurrentBrowsingNodePath:(id)arg1;
- (void)setCurrentDirectoryNode:(id)arg1;
- (id)showNode:(id)arg1 inDirectory:(id)arg2 selectIfEnabled:(BOOL)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })sourceFrameOnScreenForNavNode:(id)arg1;
- (id)view;
- (id)visualRootNode;
- (void)windowOrderedOut;
- (BOOL)worksWhenModal;

@end
