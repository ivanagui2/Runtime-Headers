/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSTableView : NSControl <DebugHierarchyObject, NSAccessibilityTable, NSDraggingSource, NSTextViewDelegate, NSUserInterfaceValidations> {
    NSColor * _backgroundColor;
    id  _columnDragInfoX;
    NSView * _cornerView;
    id  _dataSource;
    id  _delegate;
    SEL  _doubleAction;
    NSCell * _editingCell;
    long long  _editingColumn;
    long long  _editingRow;
    NSColor * _gridColor;
    NSTableHeaderView * _headerView;
    struct CGSize { 
        double width; 
        double height; 
    }  _intercellSpacing;
    long long  _lastCachedRectColumn;
    long long  _lastSelectedColumn;
    long long  _lastSelectedRow;
    NSIndexSet * _oldSelection;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _rectOfLastColumn;
    id  _reserved;
    id  _reserved3;
    id  _rowDataX;
    double  _rowHeight;
    NSMutableIndexSet * _selectedColumns;
    NSMutableIndexSet * _selectedRows;
    NSMutableArray * _tableColumns;
    struct __TvFlags { 
        unsigned int refusesFirstResponder : 1; 
        unsigned int movedPostingDisableCount : 6; 
        unsigned int selectionPostingDisableCount : 7; 
        unsigned int dataSourceSetObjectValue : 1; 
        unsigned int oldAutoresizesAllColumnsToFit : 1; 
        unsigned int delegateSelectionShouldChangeInTableView : 1; 
        unsigned int delegateShouldSelectTableColumn : 1; 
        unsigned int delegateShouldSelectRow : 1; 
        unsigned int delegateShouldEditTableColumn : 1; 
        unsigned int delegateWillDisplayCell : 1; 
        unsigned int compareWidthWithSuperview : 2; 
        unsigned int allowGapRow : 1; 
        unsigned int selectionType : 2; 
        unsigned int allowsColumnSelection : 1; 
        unsigned int allowsMultipleSelection : 1; 
        unsigned int allowsEmptySelection : 1; 
        unsigned int hasBlurBackgroundViews : 1; 
        unsigned int allowsColumnResizing : 1; 
        unsigned int allowsColumnReordering : 1; 
    }  _tvFlags;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _unused2;
    long long  _unused3;
}

@property (atomic, readwrite) BOOL allowsColumnReordering;
@property (atomic, readwrite) BOOL allowsColumnResizing;
@property (atomic, readwrite) BOOL allowsColumnSelection;
@property (atomic, readwrite) BOOL allowsEmptySelection;
@property (atomic, readwrite) BOOL allowsMultipleSelection;
@property (atomic, readwrite) BOOL allowsTypeSelect;
@property (atomic, readwrite, copy) NSString *autosaveName;
@property (atomic, readwrite) BOOL autosaveTableColumns;
@property (atomic, readwrite, copy) NSColor *backgroundColor;
@property (atomic, readonly) long long clickedColumn;
@property (atomic, readonly) long long clickedRow;
@property (atomic, readwrite) unsigned long long columnAutoresizingStyle;
@property (atomic, readwrite, retain) NSView *cornerView;
@property (atomic, readwrite) <NSTableViewDataSource> *dataSource;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readwrite) <NSTableViewDelegate> *delegate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite) SEL doubleAction;
@property (atomic, readwrite) long long draggingDestinationFeedbackStyle;
@property (atomic, readonly) long long editedColumn;
@property (atomic, readonly) long long editedRow;
@property (atomic, readonly) long long effectiveRowSizeStyle;
@property (atomic, readwrite) BOOL floatsGroupRows;
@property (atomic, readwrite, copy) NSColor *gridColor;
@property (atomic, readwrite) unsigned long long gridStyleMask;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite, retain) NSTableHeaderView *headerView;
@property (atomic, readonly, copy) NSIndexSet *hiddenRowIndexes;
@property (atomic, readwrite) NSTableColumn *highlightedTableColumn;
@property (atomic, readwrite) struct CGSize { double x1; double x2; } intercellSpacing;
@property (atomic, readonly) long long numberOfColumns;
@property (atomic, readonly) long long numberOfRows;
@property (atomic, readonly) long long numberOfSelectedColumns;
@property (atomic, readonly) long long numberOfSelectedRows;
@property (atomic, readonly, copy) NSDictionary *registeredNibsByIdentifier;
@property (atomic, readwrite) BOOL rowActionsVisible;
@property (atomic, readwrite) double rowHeight;
@property (atomic, readwrite) long long rowSizeStyle;
@property (atomic, readonly) long long selectedColumn;
@property (atomic, readonly, copy) NSIndexSet *selectedColumnIndexes;
@property (atomic, readonly) long long selectedRow;
@property (atomic, readonly, copy) NSIndexSet *selectedRowIndexes;
@property (atomic, readwrite) long long selectionHighlightStyle;
@property (atomic, readwrite, copy) NSArray *sortDescriptors;
@property (atomic, readonly) Class superclass;
@property (atomic, readonly, copy) NSArray *tableColumns;
@property (atomic, readwrite) long long userInterfaceLayoutDirection;
@property (atomic, readwrite) BOOL usesAlternatingRowBackgroundColors;
@property (atomic, readwrite) BOOL usesAutomaticRowHeights;
@property (atomic, readwrite) BOOL usesStaticContents;
@property (atomic, readwrite) BOOL verticalMotionCanBeginDrag;

// Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit

+ (id)_defaultTableHeaderReverseSortImage;
+ (id)_defaultTableHeaderSortImage;
+ (id)_dropHighlightBackgroundColor;
+ (id)_dropHighlightColor;
+ (id)_dropHighlightColorForEntireTableView;
+ (Class)_dynamicToolTipManagerClass;
+ (id)_groupRowTitleTextColor;
+ (id)_lightSecondarySelectionColor;
+ (id)_lightSelectionColor;
+ (BOOL)_logErrorForNonStringIdentifier;
+ (BOOL)_prefersCellUserInterfaceLayoutDirection;
+ (id)_sourceListBackgroundInnerEdgeColor;
+ (id)_sourceListGroupTitleTextColor;
+ (id)_sourceListInactiveGroupTitleTextColor;
+ (BOOL)isCompatibleWithResponsiveScrolling;

- (void).cxx_destruct;
- (void)__clearPreLiveColumnWidths;
- (void)__computePreLiveColumnResizeWidthsByColumn;
- (void)__doImageDragUsingRowsWithIndexes:(id)arg1 event:(id)arg2 pasteboard:(id)arg3 source:(id)arg4 slideBack:(BOOL)arg5 startRow:(long long)arg6;
- (long long)__dropCandidateRow;
- (id)__ivar_getTrackingCell;
- (void)__ivar_setClickedRow:(long long)arg1 clickedColumn:(long long)arg2;
- (void)__ivar_setTrackingCell:(id)arg1;
- (double)__preLiveResizeWidthOfColumn:(id)arg1;
- (void)__setDropCandidateRow:(long long)arg1;
- (void)_addExternalObjectsTable:(id)arg1 forNibIdentifier:(id)arg2;
- (BOOL)_addGroupRowAttributesToCell:(id)arg1 withData:(id)arg2 highlighted:(BOOL)arg3;
- (BOOL)_addSourceListCellAttributesToCell:(id)arg1 withData:(id)arg2 selected:(BOOL)arg3 emphasized:(BOOL)arg4;
- (void)_addTrackingAreasForRow:(long long)arg1 column:(long long)arg2;
- (void)_adjustDrawingTestFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (struct CGSize { double x1; double x2; })_adjustFrameSizeToFitSuperview:(struct CGSize { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_adjustRectForFocusRing:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 atRow:(long long)arg2;
- (double)_adjustRowHeight:(double)arg1 forIntergroupSpacingRow:(long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_adjustRowRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forIntergroupSpacingRow:(long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_adjustRowRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forSourceListGroupRow:(long long)arg2;
- (void)_adjustRowRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 forSourceListRow:(long long)arg2;
- (BOOL)_allowImplicitInclusiveLayeringForResponsiveScrolling;
- (BOOL)_allowSwipeToDeleteForEvent:(id)arg1;
- (BOOL)_allowTabbingIntoCells;
- (id)_alternatingRowBackgroundColors;
- (void)_alwaysSwitchToViewBasedIfNeeded;
- (void)_animatingCompleted;
- (BOOL)_attemptToEditFocusedColumn;
- (void)_attemptToEditWithEvent:(id)arg1;
- (BOOL)_attemptToPerformClickOnFocusedColumn;
- (BOOL)_automaticFocusRingDisabled;
- (long long)_automaticVerticalScrollElasticityForScrollView:(id)arg1;
- (void)_autoresizeToFit;
- (void)_autoresizeToFitForHidingATableColumn:(BOOL)arg1;
- (unsigned long long)_autoresizingStyleForColumnResize;
- (void)_autoscrollForDraggingInfo:(id)arg1 timeDelta:(double)arg2;
- (id)_backgroundColorForFontSmoothing;
- (id)_backgroundFillerView;
- (long long)_backgroundStyleForDropHighlightOnRow:(long long)arg1;
- (id)_backgroundView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_backgroundViewFillerFrame;
- (void)_becomeASourceList;
- (void)_beginDraggingColumn:(long long)arg1;
- (void)_beginGapFeedbackDragIfNeededForRows:(id)arg1 startRow:(long long)arg2;
- (void)_beginUpdate;
- (id)_bindingsObjectValueForRow:(long long)arg1;
- (id)_blurSelectionBackgroundViews;
- (void)_cacheTableColumnPositions;
- (void)_callDrawBackgroundInClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)_callDrawHighlight;
- (void)_callHighlightSelectionInClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)_canCopyOnScroll;
- (BOOL)_canDragRowForClickOnCell:(id)arg1 column:(long long)arg2 row:(long long)arg3 atPoint:(struct CGPoint { double x1; double x2; })arg4;
- (BOOL)_canFocusCellAtRow:(long long)arg1 column:(long long)arg2;
- (BOOL)_canInheritContainingBackdropView;
- (BOOL)_canPerformClickAtColumn:(long long)arg1 row:(long long)arg2 isCheckBox:(BOOL*)arg3;
- (BOOL)_canShowDropGap;
- (BOOL)_canShowExpansionTooltips;
- (BOOL)_canSwitchToViewBasedForAnimations;
- (BOOL)_canUseReorderResizeImageCacheForColumn:(long long)arg1;
- (void)_cancelDelayedStartEditing;
- (id)_candidateDragRowIndexForClickInRow:(long long)arg1;
- (void)_captureReorderResizeColumnImageCaches;
- (id)_cellAtPoint:(struct CGPoint { double x1; double x2; })arg1 row:(long long*)arg2 column:(long long*)arg3;
- (BOOL)_cellBasedAttemptToEditFocusedColumn;
- (void)_cellBasedEditColumn:(long long)arg1 row:(long long)arg2 withEvent:(id)arg3 select:(BOOL)arg4 inView:(id)arg5;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_cellBasedFieldEditorFocusRingFrame;
- (id)_cellBasedImageComponentsWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forDisplayObject:(id)arg2;
- (void)_cellBasedInvalidateSelection;
- (BOOL)_cellBasedIsTypeSelectMatchAtRow:(long long)arg1 forString:(id)arg2 compareRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (BOOL)_cellCanDragRowsWithIndexes:(id)arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2;
- (BOOL)_cellIsEditableAtColumn:(long long)arg1 row:(long long)arg2;
- (struct { double x1; double x2; })_cellPositionAtColumn:(long long)arg1 row:(long long)arg2;
- (void)_changeSortDescriptorsForClickOnColumn:(long long)arg1;
- (void)_checkDataSource;
- (void)_cleanupDropFeedback;
- (void)_cleanupDropFeedbackIfNeeded;
- (void)_clearLiveResizeColumnLayoutInfo;
- (id)_clipView;
- (long long)_colorIndexToStartAlternatingRowsAtFromRow:(long long)arg1;
- (long long)_columnAtLocation:(double)arg1;
- (id)_columnAutoSaveNameSupportsV2;
- (id)_columnAutoSaveNameV2;
- (long long)_columnClosestToColumn:(long long)arg1 whenMoved:(double)arg2;
- (BOOL)_columnPositionsTheSame;
- (id)_columnWidthAutoSaveNameWithPrefix;
- (id)_columnsForDragImage;
- (void)_commonCleanupAfterMenuClosed;
- (void)_commonTableViewInit;
- (int)_compareWidthWithSuperview;
- (BOOL)_containedInBlurBackgroundView;
- (id)_controlShadowColor;
- (double)_currentScrollbarSpacing;
- (BOOL)_currentlyEditing;
- (id)_dataCellForTableColumn:(id)arg1 row:(long long)arg2;
- (id)_dataSourceNamesOfPromisedFilesAtDestination:(id)arg1;
- (BOOL)_dataSourceRespondsToDragWriteMethods;
- (BOOL)_dataSourceRespondsToNamesOfPromisedFilesDroppedAtDestination;
- (BOOL)_dataSourceRespondsToPasteboardWriterForRow;
- (BOOL)_dataSourceRespondsToSortDescriptorsDidChange;
- (BOOL)_dataSourceRespondsToValidateDrop;
- (BOOL)_dataSourceRespondsToWriteDragData;
- (void)_dataSourceSetValue:(id)arg1 forColumn:(id)arg2 row:(long long)arg3;
- (id)_dataSourceValueForColumn:(id)arg1 row:(long long)arg2;
- (void)_defaultRowSizeStyleChanged:(id)arg1;
- (BOOL)_defaultValueForAllowsTypeSelect;
- (void)_delayStartEditing:(id)arg1;
- (void)_delayedSelectRow;
- (void)_delegateDidAddRowView:(id)arg1 forRow:(long long)arg2;
- (void)_delegateDidRemoveRowView:(id)arg1 forRow:(long long)arg2;
- (BOOL)_delegateRespondsToCanSelectRow;
- (BOOL)_delegateRespondsToGetToolTip;
- (BOOL)_delegateRespondsToShouldShowCellExpansion;
- (BOOL)_delegateRespondsToShouldTrackCell;
- (BOOL)_delegateRespondsTo_didAddRowView;
- (BOOL)_delegateRespondsTo_didRemoveRowView;
- (BOOL)_delegateRespondsTo_nextTypeSelectMatchFromRow;
- (BOOL)_delegateRespondsTo_shouldTypeSelectForEvent;
- (BOOL)_delegateRespondsTo_typeSelectStringForTableColumn;
- (BOOL)_delegateRespondsTo_wantsTrackingAreasForRowColumn;
- (BOOL)_delegateShouldReorderColumn:(long long)arg1 toColumn:(long long)arg2;
- (BOOL)_delegateSupportsRowActions;
- (id)_delegateTypeSelectStringForTableColumn:(id)arg1 row:(long long)arg2;
- (void)_delegateUpdateDraggingItemsForDrag:(id)arg1;
- (BOOL)_delegateWantsTrackingAreasForRow:(long long)arg1 column:(long long)arg2;
- (void)_delegateWillDisplayCell:(id)arg1 forColumn:(id)arg2 row:(long long)arg3;
- (id)_delegate_dataCellForTableColumn:(id)arg1 row:(long long)arg2;
- (BOOL)_delegate_isGroupRow:(long long)arg1;
- (long long)_delegate_nextTypeSelectMatchFromRow:(long long)arg1 toRow:(long long)arg2 forString:(id)arg3;
- (BOOL)_delegate_shouldTypeSelectForEvent:(id)arg1 withCurrentSearchString:(id)arg2;
- (double)_delegate_sizeToFitWidthOfColumn:(long long)arg1;
- (void)_deselectAll;
- (void)_deselectAllAndEndEditingIfNecessary:(BOOL)arg1;
- (void)_deselectColumn:(long long)arg1;
- (BOOL)_deselectsWhenMouseLeavesDuringDrag;
- (void)_determineDropCandidateForDragInfo:(id)arg1;
- (void)_didEndScrolling;
- (id)_didMoveNotificationName;
- (void)_didRemoveLayer;
- (void)_didSetFocusForCell:(id)arg1 withKeyboardFocusClipView:(id)arg2;
- (void)_dirtyVisibleCellsForKeyStateChange;
- (void)_disableMovedPosting;
- (void)_disableSelectionPosting;
- (void)_doImageDragUsingRows:(id)arg1 event:(id)arg2 pasteboard:(id)arg3 source:(id)arg4 slideBack:(BOOL)arg5;
- (void)_doImageDragUsingRowsWithIndexes:(id)arg1 event:(id)arg2 pasteboard:(id)arg3 source:(id)arg4 slideBack:(BOOL)arg5 startRow:(long long)arg6;
- (void)_doSelectIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2 indexType:(int)arg3 funnelThroughSingleIndexVersion:(BOOL)arg4;
- (void)_doSynchronizationOfEditedFieldForColumnWidthChange;
- (void)_doUpdatedWorkWithHandler:(id)arg1;
- (id)_dragImageForRowsWithIndexes:(id)arg1 tableColumns:(id)arg2 event:(id)arg3 offset:(struct CGPoint { double x1; double x2; }*)arg4;
- (unsigned long long)_dragOperation;
- (BOOL)_dragShouldBeginFromMouseDown:(id)arg1;
- (id)_dragSourceRowOverlayColorForRow:(long long)arg1;
- (double)_draggedColumnImageInset;
- (id)_draggingSource;
- (void)_drawAlternatingRowBackgroundColors:(id)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_drawAlternatingRowBackgroundColors:(id)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 useGetRectsBeingDrawn:(BOOL)arg3;
- (void)_drawBackgroundColor:(id)arg1 inClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_drawBackgroundForGroupRow:(long long)arg1 clipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 isButtedUpRow:(BOOL)arg3;
- (void)_drawCachedColumnsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_drawClearForSelectionArea;
- (void)_drawContentsAtRow:(long long)arg1 column:(long long)arg2 clipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (void)_drawContentsAtRow:(long long)arg1 column:(long long)arg2 withCellFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (void)_drawContextMenuHighlightForIndexes:(id)arg1 clipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_drawContextualMenuHighlightInClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_drawDragCell:(id)arg1 inFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_drawDragImageCellAtColumn:(long long)arg1 row:(long long)arg2 withCellFrameUnion:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (void)_drawDraggedColumn:(long long)arg1;
- (void)_drawDropHighlight;
- (void)_drawDropHighlightBackgroundForRow:(long long)arg1;
- (void)_drawDropHighlightBetweenUpperRow:(long long)arg1 andLowerRow:(long long)arg2 atOffset:(double)arg3;
- (void)_drawDropHighlightBetweenUpperRow:(long long)arg1 andLowerRow:(long long)arg2 onRow:(long long)arg3 atOffset:(double)arg4;
- (void)_drawDropHighlightOffScreenIndicatorPointingLeftAtOffset:(double)arg1;
- (void)_drawDropHighlightOffScreenIndicatorPointingUp:(BOOL)arg1 atOffset:(double)arg2;
- (void)_drawDropHighlightOnEntireTableView;
- (void)_drawDropHighlightOnRow:(long long)arg1;
- (void)_drawDropHighlightOutlineForRow:(long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_drawEditingRectWhileCurrentlyEditing:(BOOL)arg1;
- (void)_drawFocusRingAroundRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)_drawRectIfEmpty;
- (void)_drawRegularContextMenuHighlightForRow:(long long)arg1;
- (void)_drawRowBackgroundForRow:(long long)arg1 clipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_drawScrollViewFocusRing:(id)arg1 clipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 needsFullDisplay:(BOOL)arg3;
- (void)_drawSourceListBackgroundInClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_drawSourceListBackgroundInnerEdgeInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_drawSourceListContextMenuHighlightForRow:(long long)arg1;
- (void)_drawSourceListHighlightInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_drawSourceListHighlightInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 isButtedUpRow:(BOOL)arg2;
- (void)_drawStuff:(id)arg1 withClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_drawTableExteriorFocusRingIfNecessaryInClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_drawVerticalGridInClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_drawView:(id)arg1 withCellFrameUnion:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 inContext:(id)arg3;
- (BOOL)_drawsHorizontalGrid;
- (BOOL)_drawsVerticalGrid;
- (long long)_dropCandidateRow;
- (long long)_dropCandidateRowToHighlight;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_dropDestinationIndicatorFrameForDraggingDestinationStyle:(long long)arg1 rowIndexes:(id)arg2;
- (id)_dropHighlightBackgroundColor;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_dropHighlightBackgroundRectForRow:(long long)arg1;
- (id)_dropHighlightColor;
- (id)_dropHighlightColorForEntireTableView;
- (id)_dropHighlightColorForRow:(long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_dropHighlightOutlineRectForRow:(long long)arg1;
- (BOOL)_dropTrackingAreaData;
- (id)_dynamicToolTipManager;
- (id)_editActionsForRow:(long long)arg1 actionEdge:(long long)arg2;
- (BOOL)_editOnDeepClick;
- (BOOL)_editOnSingleClick;
- (BOOL)_editingIsPossibleForColumn:(long long)arg1 row:(long long)arg2 ignoringSelection:(BOOL)arg3;
- (double)_effectiveRowHeight;
- (void)_enableMovedPosting;
- (BOOL)_enableSelectionPostingAndPost;
- (void)_endDraggingColumn:(long long)arg1;
- (void)_endEditingIfNecessaryWhenDeselectingColumnRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_endEditingIfNecessaryWhenDeselectingRowRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_endEditingIfNecessaryWhenSelectingColumnRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_endEditingIfNecessaryWhenSelectingRowRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_endMyEditing;
- (void)_endMyEditingAndRemainFirstResponder;
- (double)_endOfLastNonHiddenColumn;
- (void)_endUpdate;
- (void)_endUpdateWithTile:(BOOL)arg1;
- (void)_ensureDragInfo;
- (double)_estimateHeightOfRow:(long long)arg1;
- (BOOL)_eventIsForFloatingHeaderView:(id)arg1;
- (id)_externalObjectEntriesForNibIdentifer:(id)arg1;
- (id)_externalObjectTables;
- (double)_fillerRectHeight;
- (BOOL)_fillsClipViewHeight;
- (BOOL)_fillsClipViewWidth;
- (struct CGSize { double x1; double x2; })_finalFrameSize;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_finalTableBounds;
- (void)_finishedMakingConnections;
- (void)_finishedTableViewInitWithCoder;
- (long long)_firstAutoresizingColumn;
- (long long)_firstNonHiddenColumn;
- (BOOL)_fitsInSuperview;
- (BOOL)_fitsWidthInAutohideScrollersScrollView:(id)arg1;
- (void)_fixupSortDescriptorPlaceholdersIfNecessary;
- (BOOL)_flashingDropFeedbackRow;
- (id)_floatingGroupRowView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_floatingHeaderViewFrame;
- (id)_focusRingBleedRegion;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_focusRingFrameForFocusedCell;
- (long long)_focusedColumnToBeginEditingInRow:(long long)arg1;
- (long long)_focusedColumnToPerformClickOnRow:(long long)arg1;
- (void)_forgetBeingASourceList;
- (BOOL)_funnelRowBackgroundDrawingThroughDrawRect;
- (long long)_gdbCompareWidthWithSuperview;
- (void)_getRow:(long long*)arg1 column:(long long*)arg2 forEvent:(id)arg3;
- (void)_getRow:(long long*)arg1 column:(long long*)arg2 forPoint:(struct CGPoint { double x1; double x2; })arg3;
- (void)_getSourceListColorFor:(int)arg1 startColor:(id*)arg2 endColor:(id*)arg3 bottomColor:(id*)arg4;
- (id)_groupCellAttributedStringForString:(id)arg1 withDefaultAttributes:(id)arg2 highlighted:(BOOL)arg3;
- (id)_groupCellAttributesWithDefaults:(id)arg1 highlighted:(BOOL)arg2;
- (void)_gutterSpacingChanged;
- (BOOL)_handleScrollWheelSwipeWithEvent:(id)arg1;
- (BOOL)_hasBlurBackgroundView;
- (BOOL)_hasCachedContainingBackdropView;
- (BOOL)_hasCurrentlyActiveViews;
- (BOOL)_hasDropCandidateRow;
- (BOOL)_hasDropTargetOperation;
- (BOOL)_hasGroupRows;
- (BOOL)_hasHorizontalScrollBar;
- (BOOL)_hasItergroupSpacing;
- (BOOL)_hasLegacyExternalFocusRingThatWasNormallyDrawnManually;
- (BOOL)_hasMovedFarEnoughHorizontallyFromEvent:(id)arg1;
- (BOOL)_hasSelectedColumn;
- (BOOL)_hasSelectedRow;
- (BOOL)_hasSourceListBackground;
- (BOOL)_hasSourceListBackgroundColor;
- (BOOL)_hasTextFieldFromView:(id)arg1 matchingBlock:(id)arg2;
- (id)_hiddenTableColumnsAutoSaveName;
- (void)_hideFloatingHeaderView;
- (BOOL)_highlightColorDependsOnWindowState;
- (id)_highlightColorForCell:(id)arg1;
- (void)_highlightColumn:(long long)arg1 clipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_highlightRectForRow:(long long)arg1;
- (void)_highlightRegularSelectionInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 clipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_highlightRow:(long long)arg1 clipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_highlightSourceListSelectionInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (int)_highlightTypeForRow:(long long)arg1;
- (long long)_hitRowForDropTargetRow:(long long)arg1 point:(struct CGPoint { double x1; double x2; })arg2;
- (unsigned long long)_hitTestForEvent:(id)arg1 atColumn:(long long)arg2 row:(long long)arg3;
- (BOOL)_hoverAreaIsSameAsLast:(id)arg1;
- (BOOL)_indentSourceLists;
- (void)_initializeDragItem:(id)arg1 atRow:(long long)arg2 event:(id)arg3;
- (double)_intercellSpacingHeightForSidebar;
- (double)_intergroupBottomSpacing;
- (double)_intergroupTopSpacing;
- (long long)_internalNextTypeSelectMatchFromRow:(long long)arg1 toRow:(long long)arg2 forString:(id)arg3;
- (BOOL)_internalShouldEditColumn:(long long)arg1 row:(long long)arg2 withEvent:(id)arg3;
- (id)_internalTypeSelectStringForColumn:(long long)arg1 row:(long long)arg2;
- (void)_invalidateCachedColumnForced:(BOOL)arg1;
- (void)_invalidateForKeyChange;
- (void)_invalidateGroupRowsIfNeeded;
- (void)_invalidateHeaderForTableColumn:(id)arg1;
- (void)_invalidateNumberOfRowsCache;
- (void)_invalidateVerticalGrid;
- (BOOL)_isDropFeedbackRow:(long long)arg1;
- (BOOL)_isDying;
- (BOOL)_isEnabledTableView;
- (BOOL)_isFullWidthCellAtRow:(long long)arg1;
- (BOOL)_isGapRow:(long long)arg1;
- (BOOL)_isGroupRow:(long long)arg1;
- (BOOL)_isOutlineView;
- (BOOL)_isPoint:(struct CGPoint { double x1; double x2; })arg1 inDragZoneOfRow:(long long)arg2;
- (BOOL)_isPropertyListTable;
- (BOOL)_isRubberBandAreaExposed;
- (BOOL)_isSourceListGroupRow:(long long)arg1;
- (BOOL)_isTrackingDataCellAtColumn:(long long)arg1 row:(long long)arg2;
- (BOOL)_isUpdating;
- (BOOL)_keyboardFocusNeedsDisplayForColumn:(long long)arg1 row:(long long)arg2;
- (long long)_lastAutoresizingColumn;
- (long long)_lastNonHiddenColumn;
- (BOOL)_layoutIsSameAsCachedLayoutWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_legacyReadPersistentData;
- (void)_legacyWritePersistentData;
- (double)_locationOfColumn:(long long)arg1;
- (double)_locationOfRow:(long long)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_ltrColumnsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_makeBlurBackgroundViewWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_makeRubberBandViewWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inView:(id)arg2;
- (id)_makeSelectionBlurBackdropViewWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_makeSortDescriptorWhileReadingForColumn:(id)arg1 ascending:(BOOL)arg2;
- (void)_manualDrawBackgroundForGroupRow:(long long)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (BOOL)_manuallyDrawSourceListHighlight;
- (void)_manuallyDrawSourceListHighlightInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 isButtedUpRow:(BOOL)arg2;
- (void)_markColumnWidthsNotYetCompared;
- (void)_markLiveResizeColumnLayoutInfo;
- (void)_markSelectionIsChanging;
- (void)_menuDidEndTracking:(id)arg1;
- (double)_minTableWidth;
- (struct CGSize { double x1; double x2; })_minimumFrameSize;
- (BOOL)_mouseDownShouldMakeFirstResponder;
- (void)_moveAndResizeEditedCellWithOldFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_myScrollView;
- (BOOL)_needsBackgroundFillerView;
- (BOOL)_needsBlurSelectionViews;
- (BOOL)_needsRedisplayOnFrameChange;
- (BOOL)_needsRedrawOnKeyChange;
- (BOOL)_needsRubberBandViews;
- (BOOL)_needsSourceListBackgroundView;
- (BOOL)_needsTableViewBlurBackgroundView;
- (BOOL)_needsUnderlyingBlurView;
- (BOOL)_needsVerticalGridOverlayDraw;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_newRectOfColumn:(long long)arg1;
- (long long)_nextNonHiddenColumnFromColumn:(long long)arg1;
- (long long)_nextTypeSelectMatchFromRow:(long long)arg1 toRow:(long long)arg2 forString:(id)arg3;
- (id)_nonKeyEditingFrameColor;
- (id)_nonSelectedSourceListCellAttributesWithDefaults2:(id)arg1;
- (BOOL)_numberOfRowsIsValid;
- (BOOL)_okToStartTextEndEditing;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_oldRectOfColumn:(long long)arg1;
- (BOOL)_oldUserCanSelectColumn:(long long)arg1;
- (BOOL)_oldUserCanSelectRow:(long long)arg1;
- (void)_old_encodeWithCoder_NSTableView:(id)arg1;
- (void)_old_initWithCoder_NSTableView:(id)arg1;
- (BOOL)_onlyAcceptRowDropOnContent;
- (BOOL)_onlyDragOnContent;
- (id)_pasteboardWriterForRow:(long long)arg1;
- (BOOL)_performClassicDragOfIndexes:(id)arg1 hitRow:(long long)arg2 event:(id)arg3;
- (BOOL)_performDragFromMouseDown:(id)arg1;
- (BOOL)_performFlockedDragOfIndexes:(id)arg1 hitRow:(long long)arg2 event:(id)arg3;
- (BOOL)_performKeyEquivalent:(id)arg1 conditionally:(BOOL)arg2;
- (BOOL)_performTypeSelect:(id)arg1;
- (void)_postColumnDidMoveNotificationFromColumn:(long long)arg1 toColumn:(long long)arg2;
- (void)_postSelectionDidChangeNotification;
- (void)_postSelectionIsChangingAndMark:(BOOL)arg1;
- (id)_preferredAppearance;
- (long long)_preferredDragColumnForEvent:(id)arg1;
- (void)_prepareSynchronizationOfEditedFieldForColumnWidthChange;
- (void)_primitiveSetDefaultNextKeyView:(id)arg1;
- (void)_printDatasourceWarning;
- (BOOL)_priorRowIsSelectedFromRow:(long long)arg1 inSelection:(id)arg2;
- (void)_readPersistentTableColumns;
- (BOOL)_reallyCanDrawConcurrently;
- (BOOL)_reallySwitchToNonViewBasedIfNeeded;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_rectOfColumn:(long long)arg1 ignoringTile:(BOOL)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_rectOfColumnRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_rectOfDraggedColumn;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_rectOfRowAssumingRowExists:(long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_rectOfRowRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)_recursiveSetDefaultKeyViewLoop;
- (void)_releaseDragInfo;
- (void)_releaseDragInfoIfNotLocal;
- (void)_removeAllBlurBackgroundViews;
- (void)_removeBackgroundFillerView;
- (void)_removeBackgroundView;
- (void)_removeFloatingHeaderView;
- (void)_removeLegacyPersistentTableColumnData;
- (void)_removeOldAutosaveDefaults;
- (void)_removeRubberBandAreas;
- (void)_removeSelectedIndexesFromIndexSet:(id)arg1 goingDown:(BOOL)arg2 fromRow:(long long)arg3;
- (void)_removeSortDescriptorForTableColumn:(id)arg1;
- (void)_removeVerticalSeparators;
- (void)_resetClickedRowAndColumn;
- (void)_resetThePreparedContentRectToTheVisibleRect;
- (void)_resizeTableViewBasedOnSuperview;
- (void)_restrictColumnResizingToWidth;
- (void)_revertToOldRowSelection:(id)arg1 fromRow:(long long)arg2 toRow:(long long)arg3;
- (long long)_rightmostAutoresizingColumn;
- (BOOL)_rowViewContentsCanHostAutolayoutEngine;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_rowsInRectAssumingRowsCoverVisible:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_rtlColumnsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_rubberBandViews;
- (double)_safeSendDelegateHeightOfRow:(long long)arg1;
- (void)_scrollViewDidChangeBounds:(id)arg1;
- (double)_scrollbarSpacing;
- (void)_secureReadPersistentData;
- (void)_secureReadSortDescriptorData;
- (void)_secureReadTableColumnPersistentData;
- (void)_secureWritePersistentData;
- (void)_secureWritePersistentSortDescriptors;
- (void)_secureWritePersistentTableColumns;
- (BOOL)_selectNextFocusedCellGoingForward:(BOOL)arg1 andEdit:(BOOL)arg2;
- (void)_selectRowsFromArrowKey:(unsigned short)arg1 withEvent:(id)arg2;
- (id)_selectableColumnIndexes:(id)arg1;
- (id)_selectedRowsToDraw;
- (id)_selectedSourceListCellAttributesWithDefaults2:(id)arg1;
- (id)_selectionDidChangeNotificationName;
- (id)_selectionIsChangingNotificationName;
- (BOOL)_sendAction:(SEL)arg1 to:(id)arg2 row:(long long)arg3 column:(long long)arg4;
- (void)_sendBindingAdapterWillDisplayCell:(id)arg1 forColumn:(id)arg2 row:(long long)arg3;
- (void)_sendDataSourceSortDescriptorsDidChange:(id)arg1;
- (BOOL)_sendDataSourceWriteDragDataWithIndexes:(id)arg1 toPasteboard:(id)arg2;
- (BOOL)_sendDelegateCanSelectColumn:(long long)arg1;
- (BOOL)_sendDelegateCanSelectRow:(long long)arg1;
- (void)_sendDelegateDidClickColumn:(long long)arg1;
- (void)_sendDelegateDidDragColumn:(long long)arg1;
- (void)_sendDelegateDidMouseDownInHeader:(long long)arg1;
- (double)_sendDelegateHeightOfRow:(long long)arg1;
- (id)_sendDelegateSelectionIndexesForProposedSelection:(id)arg1;
- (BOOL)_sendDelegateShouldShowCellExpansionForColumn:(long long)arg1 row:(long long)arg2;
- (id)_sendDelegateToolTipForCell:(id)arg1 tableColumn:(id)arg2 rect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg3 row:(long long)arg4 mouseLocation:(struct CGPoint { double x1; double x2; })arg5;
- (void)_sendDelegateWillDisplayCell:(id)arg1 forColumn:(id)arg2 row:(long long)arg3;
- (void)_sendDraggingSession:(id)arg1 endedAtPoint:(struct CGPoint { double x1; double x2; })arg2 operation:(unsigned long long)arg3;
- (BOOL)_sendSelectionChangedNotificationForRows:(BOOL)arg1 columns:(BOOL)arg2;
- (BOOL)_sendShouldTrackCell:(id)arg1 forTableColumn:(id)arg2 row:(long long)arg3;
- (void)_sendWillBeginDraggingSession:(id)arg1 willBeginAtPoint:(struct CGPoint { double x1; double x2; })arg2 forDraggedRowIndexes:(id)arg3;
- (BOOL)_sendingTableViewRowAction;
- (void)_setBackgroundFillerView:(id)arg1;
- (void)_setBackgroundView:(id)arg1;
- (void)_setBlurBackgroundViews:(id)arg1;
- (void)_setContainingBackdropView:(id)arg1;
- (void)_setContextMenuHighlightColorForRow:(long long)arg1;
- (void)_setDeselectsWhenMouseLeavesDuringDrag:(BOOL)arg1;
- (void)_setDrawingEverything:(BOOL)arg1;
- (void)_setDying:(BOOL)arg1;
- (void)_setEditOnSingleClick:(BOOL)arg1;
- (void)_setEditingRow:(long long)arg1;
- (void)_setEnabledAttributesOnCell:(id)arg1;
- (void)_setFlashingDropFeedbackRow:(BOOL)arg1;
- (void)_setFocusRingNeedsDisplayIfNecessary;
- (void)_setFontSmoothingBackgroundColorForCapturingImage;
- (void)_setKeyboardFocusRingNeedsDisplayForCellInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setMinColumnLayoutMinRequiredVisibleWidth:(double)arg1;
- (void)_setNeedsDisplayForColumn:(long long)arg1 draggedDelta:(double)arg2;
- (void)_setNeedsDisplayForDropCandidateRow:(long long)arg1 operation:(unsigned long long)arg2 mask:(unsigned long long)arg3;
- (void)_setNeedsDisplayForFirstResponderChange;
- (void)_setNeedsDisplayForSortingChangeInColumn:(long long)arg1;
- (void)_setNeedsDisplayInColumn:(long long)arg1 includeHeader:(BOOL)arg2;
- (void)_setNeedsDisplayInColumn:(long long)arg1 row:(long long)arg2;
- (void)_setNeedsDisplayInPrimarySortColumns;
- (void)_setNeedsDisplayInPrimarySortColumnsIfNecessary;
- (void)_setNeedsDisplayInRow:(long long)arg1;
- (void)_setNewObjectValueFromCell:(id)arg1 ifNotEqualTo:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)_setRubberBandViews:(id)arg1;
- (BOOL)_setSelectedFontReferenceColorForRow:(long long)arg1;
- (void)_setSortDescriptorsWhileReading:(id)arg1;
- (void)_setStaticTableRows:(id)arg1;
- (void)_setSuperview:(id)arg1;
- (void)_setTileNeeded;
- (void)_setUseUncachedRectOfRow:(BOOL)arg1;
- (void)_setVerticalSeparators:(id)arg1;
- (void)_setupBottomFillerView:(id)arg1 forRow:(long long)arg2;
- (void)_setupContextMenuHighlightingForRow:(long long)arg1 column:(long long)arg2;
- (BOOL)_shouldAbortMouseDownAfterDragAttempt:(id)arg1;
- (BOOL)_shouldAdjustPatternPhase;
- (BOOL)_shouldAllowClickThroughForEvent:(id)arg1;
- (BOOL)_shouldBlurSelectionWhenCellBased;
- (BOOL)_shouldCacheGroupRows;
- (BOOL)_shouldDelegateTargetActionForSelector:(SEL)arg1;
- (BOOL)_shouldDoSelectionStyleDropHighlight;
- (BOOL)_shouldDrawFocus;
- (BOOL)_shouldDrawFocusAroundACell;
- (BOOL)_shouldDrawFocusAroundEditedCell;
- (BOOL)_shouldDrawSourceListDraggingDestinationStyle;
- (BOOL)_shouldEditColumn:(long long)arg1 row:(long long)arg2 withEvent:(id)arg3;
- (BOOL)_shouldEditColumn:(long long)arg1 row:(long long)arg2 withEvent:(id)arg3 ignoringSelection:(BOOL)arg4;
- (BOOL)_shouldEncodeUILayoutDirection;
- (BOOL)_shouldFlipTableColumnsForRTL;
- (BOOL)_shouldFloatTableHeaderView;
- (BOOL)_shouldHighlightRows;
- (BOOL)_shouldLeavingScrollbarSpacing;
- (BOOL)_shouldShowDropGapForDragInfo:(id)arg1;
- (BOOL)_shouldSlideBackAfterDragFailed;
- (BOOL)_shouldSwitchToNonViewBased;
- (BOOL)_shouldTypeSelectForEvent:(id)arg1;
- (BOOL)_shouldUseFocusRingMask;
- (BOOL)_shouldUseLayout;
- (BOOL)_shouldUseSecondaryColorForRow:(long long)arg1 highlightColor:(id)arg2;
- (BOOL)_shouldUseSecondaryHighlightColor;
- (BOOL)_shouldUseSecureCoding;
- (BOOL)_shouldUseSyrahSourceListAttributes;
- (void)_showFloatingHeaderView;
- (BOOL)_showingFocusRingAroundEnclosingScrollView:(id)arg1;
- (void)_sizeModeChangeForRowView:(id)arg1 row:(long long)arg2;
- (void)_sizeTableColumnsToFitForAutoresizingWithStyle:(unsigned long long)arg1;
- (void)_sizeTableColumnsToFitForColumnResizeWithStyle:(unsigned long long)arg1;
- (void)_sizeTableColumnsToFitWithStyle:(unsigned long long)arg1;
- (void)_sizeTableColumnsToFitWithStyle:(unsigned long long)arg1 forceExactFitIfPossible:(BOOL)arg2 originalWidths:(id)arg3;
- (void)_sizeToFitForUserColumnResizeWithOriginalWidths:(id)arg1;
- (double)_sizeToFitWidthOfColumn:(long long)arg1;
- (double)_sizeToFitWidthOfColumn:(long long)arg1 row:(long long)arg2;
- (id)_sortOrderAutoSaveNameWithPrefix;
- (id)_sortOrderAutoSaveNameWithPrefixV2;
- (id)_sourceListCellAttributesWithDefaultsForBlur:(id)arg1 selected:(BOOL)arg2 emphasized:(BOOL)arg3;
- (void)_sourceListFrameOfCellAtColumn:(long long)arg1 row:(long long)arg2 frame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg3;
- (id)_sourceListGroupCellAttributedStringForString:(id)arg1 withDefaultAttributes:(id)arg2 highlighted:(BOOL)arg3;
- (id)_sourceListWithBlurGroupCellAttributedStringForString:(id)arg1 withDefaultAttributes:(id)arg2 highlighted:(BOOL)arg3;
- (void)_startEditingColumn:(long long)arg1 row:(long long)arg2 event:(id)arg3;
- (void)_startObservingContentInsetsOfViewIfClipView:(id)arg1;
- (void)_startObservingFirstResponder;
- (void)_startObservingViewDidScroll;
- (double)_startOfLastNonHiddenColumn;
- (void)_startWatchingWindowWillOrderOnScreen;
- (id)_staticTableRows;
- (void)_staticTableViewDecodeRowsWithCoder:(id)arg1;
- (void)_staticTableViewDecodeStateWithCoder:(id)arg1;
- (void)_staticTableViewEncodeRowsWithCoder:(id)arg1;
- (void)_staticTableViewEncodeStateWithCoder:(id)arg1;
- (void)_stopObservingContentInsetsOfViewIfClipView:(id)arg1;
- (void)_stopObservingFirstResponder;
- (void)_stopObservingViewDidScroll;
- (void)_stopWatchingWindowWillOrderOnScreen;
- (BOOL)_subclassOverridesDrawBackgroundInRect;
- (BOOL)_subclassOverridesDrawGridInClipRect;
- (BOOL)_supportsRTL;
- (BOOL)_supportsTrackingAreasForCells;
- (BOOL)_supportsVariableHeightRows;
- (void)_switchToNonViewBasedIfNeeded;
- (void)_switchToViewBasedIfNeeded;
- (void)_systemSelectionColorChanged:(id)arg1;
- (void)_tableColumn:(id)arg1 changedWidthFrom:(double)arg2 toWidth:(double)arg3;
- (void)_tableColumn:(id)arg1 willChangeWidthTo:(double)arg2;
- (BOOL)_tableHeaderViewWantsTranslucency;
- (id)_tableViewColumnDidResizeNotificationName;
- (unsigned long long)_tableViewDropOperation;
- (void)_tableViewWindowWillOrderOnScreen:(id)arg1;
- (id)_textBackgroundColor;
- (void)_tileAndRedisplayAll;
- (void)_tileAnimated:(BOOL)arg1;
- (void)_tileAnimatedIfAnimating;
- (void)_tileIfNeeded;
- (double)_totalHeightOfTableView;
- (double)_trailingXForColumn:(long long)arg1;
- (BOOL)_tryCellBasedMouseDown:(id)arg1 atRow:(long long)arg2 column:(long long)arg3 withView:(id)arg4;
- (void)_tryDrop:(id)arg1 dropRow:(long long)arg2 dropOperation:(unsigned long long)arg3;
- (BOOL)_tryViewBasedMouseDown:(id)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (void)_typeSelectEndCurrentSearch;
- (void)_typeSelectEndCurrentSearchWithRedisplay:(BOOL)arg1;
- (BOOL)_typeSelectInterpretKeyEvent:(id)arg1;
- (id)_typeSelectStringForColumn:(long long)arg1 row:(long long)arg2;
- (BOOL)_typeSelectUndoLastSearch;
- (BOOL)_unarchiving;
- (long long)_uncachedNumberOfRows;
- (double)_uncachedRectHeightOfRow:(long long)arg1;
- (void)_updateAlternatingRowColorsForBottomFillerView:(id)arg1 forRow:(long long)arg2;
- (void)_updateBackgroundViews;
- (void)_updateBlurBackgroundViewKeyState;
- (void)_updateBlurSelectionViewsIfNeeded;
- (void)_updateCellImage:(id)arg1;
- (void)_updateColumnWidthsComparedToSuperview;
- (void)_updateDropFeedbackFromPriorRow:(long long)arg1 operation:(unsigned long long)arg2 mask:(unsigned long long)arg3;
- (void)_updateFirstResponderView;
- (void)_updateFloatingHeaderViewOption;
- (void)_updateFocusRingsForOldLastSelectedRow:(long long)arg1;
- (void)_updateForSizeModeChange;
- (void)_updateHeaderViewTrackingArea;
- (void)_updateHeaderViewTranslucency;
- (void)_updateLastEditingAndFocusRingFrame;
- (void)_updateRowData;
- (void)_updateRubberBandAreas;
- (void)_updateRubberBandViewsIfNeeded;
- (void)_updateSelectionBlendingMode;
- (void)_updateSeparatorPositions;
- (void)_updateSourceListBackgroundForKeyChange;
- (void)_updateSourceListBackgroundView;
- (void)_updateSourceListImageForCell:(id)arg1 isSourceListDropFeedbackRow:(BOOL)arg2;
- (void)_updateTableColumnPositionsIfNeeded;
- (void)_updateTrackingAreasWithInvalidCursorRects:(BOOL)arg1;
- (void)_updateVerticalSeparator;
- (BOOL)_userCanChangeSelection;
- (BOOL)_userCanEditTableColumn:(id)arg1 row:(long long)arg2;
- (BOOL)_userCanMoveColumn:(long long)arg1 toColumn:(long long)arg2;
- (BOOL)_userCanSelectAndEditColumn:(long long)arg1 row:(long long)arg2;
- (BOOL)_userCanSelectAndEditTableColumn:(id)arg1 row:(long long)arg2;
- (BOOL)_userCanSelectRow:(long long)arg1 withNewSelectedIndexes:(id)arg2;
- (BOOL)_userCanSelectSingleRow:(long long)arg1;
- (void)_userDeselectColumn:(long long)arg1;
- (void)_userDeselectRow:(long long)arg1;
- (void)_userDeselectToRow:(long long)arg1;
- (void)_userExtendSelectionWithRow:(long long)arg1;
- (BOOL)_userInterfaceDirectionIsLTR;
- (void)_userSelectColumnIndexes:(id)arg1 withNewAnchorColumn:(long long)arg2;
- (void)_userSelectRowIndexes:(id)arg1 withNewSelectedRow:(long long)arg2;
- (void)_userSelectSingleColumn:(long long)arg1;
- (void)_userSelectSingleRow:(long long)arg1;
- (BOOL)_userSelectTextOfNextCell;
- (BOOL)_userSelectTextOfNextCellInSameColumn;
- (BOOL)_userSelectTextOfPreviousCell;
- (id)_userSelectableRowIndexesForProposedSelection:(id)arg1;
- (id)_userSelectableRowIndexesForProposedSelection:(id)arg1 userCanAlreadyChangeSelection:(BOOL)arg2;
- (BOOL)_usesSourceListColors;
- (BOOL)_usingAlternateHighlightColorForCell:(id)arg1 withFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (BOOL)_validIndexes:(id)arg1 indexType:(int)arg2;
- (void)_verifySelectionIsOK;
- (id)_verticalSeparators;
- (BOOL)_viewBasedAttemptToEditFocusedColumn;
- (BOOL)_viewBasedAttemptToPerformClickOnFocusedColumn;
- (BOOL)_viewBasedAttemptToPerformClickOnViewOfClass:(Class)arg1;
- (void)_viewBasedDrawAlternatingBackgroundInClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_viewBasedDrawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_viewBasedEditColumn:(long long)arg1 row:(long long)arg2 withEvent:(id)arg3 select:(BOOL)arg4;
- (id)_viewBasedImageComponentsWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forDisplayObject:(id)arg2;
- (BOOL)_viewBasedIsTypeSelectMatchAtRow:(long long)arg1 forString:(id)arg2 compareRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (BOOL)_viewBasedSelectNextFocusedCellGoingForward:(BOOL)arg1 andEdit:(BOOL)arg2;
- (BOOL)_viewCanDragRowsWithIndexes:(id)arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_visibleOrPreparedRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_visibleRectPastLastRow;
- (id)_visibleTableColumnIndexes;
- (BOOL)_wantsClipViewToDoOverhangViews;
- (BOOL)_wantsHeaderView;
- (BOOL)_wantsUnderTitlebarView;
- (double)_widthBasedOnClipView;
- (double)_widthOfColumn:(long long)arg1;
- (BOOL)_willDrawFocusRingAroundEnclosingScrollView;
- (void)_windowChangedKeyState;
- (void)_writePersistentTableColumns;
- (void)dealloc;

// NSTableView (NSDeprecatedInternal)

- (BOOL)_deprecatedCanFocusCell:(id)arg1 atTableColumn:(id)arg2 row:(long long)arg3;
- (void)_selectColumn:(long long)arg1 byExtendingSelection:(BOOL)arg2;
- (void)_selectRow:(long long)arg1 byExtendingSelection:(BOOL)arg2;

// NSTableView (NSTableViewAccessibility)

+ (BOOL)accessibilityIsSingleCelled;

- (Class)_accessibilityCellElementClass;
- (id)_accessibilityChildUIElementForSpecifierComponent:(long long)arg1;
- (id)_accessibilityChildrenInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (BOOL)_accessibilityIsList;
- (Class)_accessibilityListCellElementClass;
- (id)_accessibilityListChildrenInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)_accessibilityListTableColumn;
- (unsigned long long)_accessibilityNumberOfChildren;
- (id)_accessibilityRowIndexResolverCreateIfNeeded:(BOOL)arg1;
- (id)_accessibilityRowsInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_accessibilitySelectRowsFromAccessibilityRows:(id)arg1;
- (void)_accessibilityShiftAtIndex:(long long)arg1 count:(long long)arg2 isDeleteForMove:(BOOL)arg3;
- (long long)_accessibilitySpecifierComponentForChildUIElement:(id)arg1 registerIfNeeded:(BOOL)arg2;
- (id)_accessibilityTableRow:(long long)arg1;
- (BOOL)_accessibilityTracksRowAndCellIndexes;
- (id)_accessibilityUnhiddenTableColumns;
- (void)_accessibilityUnregisterAllRowsAndCells;
- (void)_accessibilityUnregisterCellsOfRowIndexes:(id)arg1 columnIndexes:(id)arg2;
- (void)_accessibilityUnregisterCellsOfTableColumn:(id)arg1;
- (void)_accessibilityUnregisterCellsOfTableColumns:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_accessibilityVisibleRowsRangeIncludeFullyVisibleOnly:(BOOL)arg1;
- (BOOL)_accessibilityWantsToBeList;
- (BOOL)_isAccessibilityContentNavigatorSectionCandidate;
- (BOOL)_isAccessibilityContentSectionCandidate;
- (BOOL)_isAccessibilityTopLevelNavigatorSectionCandidate;

// NSTableView (NSTableViewNonARC)

- (id)_containingBackdropView;
- (BOOL)_delegateAndDatasourceCanBeWeak;
- (BOOL)_delegateAndDatasourceIvarCanBeOpaque;
- (id)_getDataSourceIvar;
- (id)_getDelegateIvar;
- (void)_setDataSourceIvar:(id)arg1;
- (void)_setDelegateIvar:(id)arg1;

// NSTableView (NSTableViewRowHeaderSupport)

- (void)_beginDrawView:(id)arg1;
- (BOOL)_cachingView;
- (void)_clipViewBoundsChanged:(id)arg1;
- (void)_drawRowHeaderBackgroundInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)_drawRowHeaderSeparatorAsSurface;
- (void)_drawRowHeaderSeparatorInClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)_drawView:(id)arg1;
- (void)_endDrawView:(id)arg1;
- (void)_getRowHeaderFixedContentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 rowHeaderScrollableContentVisibleRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2;
- (BOOL)_hasRowHeaderColumn;
- (BOOL)_isDrawingMultiClippedContentColumn:(long long)arg1;
- (BOOL)_isRowHeaderColumn:(long long)arg1;
- (id)_rectsForMultiClippedContentDrawing;
- (void)_registerForClipBoundsDidChangeNotificationIfNecessaryForSuperview:(id)arg1;
- (long long)_rowHeaderColumn;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_rowHeaderFixedContentRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_rowHeaderScrollableContentVisibleRect;
- (id)_rowHeaderSeparatorLineColor;
- (id)_rowHeaderShadowSurface;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_rowHeaderShadowSurfaceBounds;
- (BOOL)_rowHeaderShadowSurfaceIsShowing;
- (id)_rowHeaderTableColumn;
- (void)_setRowHeaderTableColumn:(id)arg1;
- (void)_setRowHeaderTableColumn:(id)arg1 repositionTableColumnIfNecessary:(BOOL)arg2;
- (BOOL)_shouldHeaderShowSeparatorForColumn:(long long)arg1;
- (void)_sizeRowHeaderToFitIfNecessary;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_surfaceBounds;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_unobstructedVisibleRectOfColumn:(long long)arg1;
- (void)_unregisterForClipBoundsDidChangeNotificationIfNecessaryForSuperview:(id)arg1 force:(BOOL)arg2;
- (void)_viewDidEndLiveResize_handleRowHeaderSurfaces;
- (void)_viewWillStartLiveResize_handleRowHeaderSurfaces;

// NSTableView (NSTableViewViewBased)

- (void)_addDraggingDestinationViewForRowIndexes:(id)arg1 draggingStyle:(long long)arg2;
- (void)_adjustFieldEditorAnimated:(BOOL)arg1;
- (BOOL)_allowDynamicContentSizeChangesWhileScrolling;
- (Class)_animatorClass;
- (id)_backgroundImageForRow:(long long)arg1 withFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (id)_backgroundImageWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)_backgroundOffsetForGroupRow:(long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_cellOffsetConstraintConstantsForColumn:(long long)arg1 row:(long long)arg2;
- (void)_clearReusueQueue;
- (void)_clipViewWillDisplayOverHang;
- (id)_copiedCellForColumn:(long long)arg1 row:(long long)arg2;
- (id)_copiedCellForTableColumn:(id)arg1 row:(long long)arg2;
- (BOOL)_delegateRepondsTo_viewForTableColumnRow;
- (BOOL)_delegateRespondsTo_rowViewForRow;
- (id)_delegateRowViewForRow:(long long)arg1;
- (id)_delegate_viewForTableColumn:(id)arg1 row:(long long)arg2;
- (void)_forceViewsIn;
- (id)_groupViewSeparatorColor;
- (BOOL)_hasActiveFieldEditor;
- (BOOL)_hasDelegateSupportOrArchivedViews;
- (double)_headerViewDraggedDistance;
- (id)_imageForColumn:(long long)arg1 row:(long long)arg2 frame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (BOOL)_isInDesignMode;
- (long long)_lastGroupRowChildFromRow:(long long)arg1;
- (id)_makeCachedCellWrapperForTableColumnn:(id)arg1 row:(long long)arg2;
- (id)_makeRowWrapperForRow:(long long)arg1;
- (id)_makeViewWrapperForTableColumn:(id)arg1 row:(long long)arg2;
- (double)_minWidthForTableColumn:(id)arg1 column:(long long)arg2;
- (id)_mutableSelectedRows;
- (BOOL)_needsBackgroundImageForAnimation;
- (BOOL)_needsBackgroundToAnimate;
- (BOOL)_needsCachedTableRowView;
- (BOOL)_needsDisplayOnClipPathChange;
- (BOOL)_needsHighlightSelectionForBackgroundAnimations;
- (long long)_nextFloatableRowFromRow:(long long)arg1 inVisibleRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (long long)_nextGroupRowGreaterThanOrEqualToRow:(long long)arg1;
- (void)_nsnib_setInDesignMode:(BOOL)arg1;
- (long long)_rowForView:(id)arg1;
- (BOOL)_rowViewDrawsHorizontalGrid;
- (void)_setAllNonDropTargetRowsToEmphasized:(BOOL)arg1;
- (void)_setRow:(long long)arg1 targetForDropOperation:(BOOL)arg2;
- (void)_setRowView:(id)arg1 row:(long long)arg2 targetForDropOperation:(BOOL)arg3 resetOtherRows:(BOOL)arg4;
- (void)_setTrackingAreasDirty:(int)arg1;
- (BOOL)_shouldFloatRow:(long long)arg1 inVisibleRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (BOOL)_shouldReuseViews;
- (BOOL)_shouldSetObjectValueOnCellsForAnimations;
- (BOOL)_showGradientBackgroundBehindGroups;
- (id)_staticRowViewForRow:(long long)arg1;
- (void)_updateCellInView:(id)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (void)_updateDisclosureButtonForRowView:(id)arg1 forRow:(long long)arg2 removeIfNotAvailable:(BOOL)arg3 updatePosition:(BOOL)arg4;
- (id)_validateHitTest:(id)arg1;

// Image: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Debugger/libViewDebuggerSupport.dylib

// NSTableView (DebugHierarchyAdditions)

- (id)debugHierarchyPropertyDescriptions;

// Image: /Applications/Xcode.app/Contents/Developer/usr/lib/libMainThreadChecker.dylib

- (BOOL)abortEditing;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (unsigned long long)accessibilityArrayAttributeCount:(id)arg1;
- (id)accessibilityArrayAttributeValues:(id)arg1 index:(unsigned long long)arg2 maxCount:(unsigned long long)arg3;
- (id)accessibilityAttributeNames;
- (id)accessibilityAuditPotentialChildren;
- (id)accessibilityCellForColumnAndRowAttributeForParameter:(id)arg1;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityColumnsAttribute;
- (id)accessibilityCurrentEditorForCell:(id)arg1;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHeaderAttribute;
- (id)accessibilityHitTest:(struct CGPoint { double x1; double x2; })arg1;
- (unsigned long long)accessibilityIndexOfChild:(id)arg1;
- (BOOL)accessibilityIsColumnsAttributeSettable;
- (BOOL)accessibilityIsHeaderAttributeSettable;
- (BOOL)accessibilityIsOrientationAttributeSettable;
- (BOOL)accessibilityIsRowsAttributeSettable;
- (BOOL)accessibilityIsSelectedCellsAttributeSettable;
- (BOOL)accessibilityIsSelectedChildrenAttributeSettable;
- (BOOL)accessibilityIsSelectedColumnsAttributeSettable;
- (BOOL)accessibilityIsSelectedRowsAttributeSettable;
- (BOOL)accessibilityIsVisibleChildrenAttributeSettable;
- (BOOL)accessibilityIsVisibleColumnsAttributeSettable;
- (BOOL)accessibilityIsVisibleRowsAttributeSettable;
- (id)accessibilityLabel;
- (id)accessibilityOrientationAttribute;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilityPositionOfChild:(id)arg1;
- (void)accessibilityPostNotification:(id)arg1;
- (id)accessibilityRoleAttribute;
- (id)accessibilityRows;
- (id)accessibilityRowsAttribute;
- (id)accessibilitySelectedCellsAttribute;
- (id)accessibilitySelectedChildrenAttribute;
- (id)accessibilitySelectedColumnsAttribute;
- (id)accessibilitySelectedRowsAttribute;
- (void)accessibilitySetSelectedChildrenAttribute:(id)arg1;
- (void)accessibilitySetSelectedColumnsAttribute:(id)arg1;
- (void)accessibilitySetSelectedRowsAttribute:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
- (id)accessibilityVisibleChildrenAttribute;
- (id)accessibilityVisibleColumnsAttribute;
- (id)accessibilityVisibleRowsAttribute;
- (struct CGPoint { double x1; double x2; })accessibilityWindowPointForShowMenu;
- (void)addDropBetweenFeedbackViewsForRow:(long long)arg1;
- (void)addDropFeedbackViews;
- (void)addDropOnFeedbackViewsForRow:(long long)arg1;
- (void)addTableColumn:(id)arg1;
- (BOOL)allowsColumnReordering;
- (BOOL)allowsColumnResizing;
- (BOOL)allowsColumnSelection;
- (BOOL)allowsEmptySelection;
- (BOOL)allowsMultipleSelection;
- (BOOL)allowsTypeSelect;
- (BOOL)allowsVibrancy;
- (id)animationCompletionHandler;
- (void)applyPermutationsFromArray:(id)arg1 toArray:(id)arg2 insertAnimation:(unsigned long long)arg3 removeAnimation:(unsigned long long)arg4;
- (void)applyPermutationsFromArray:(id)arg1 toArray:(id)arg2 insertionAnimation:(unsigned long long)arg3 removalAnimation:(unsigned long long)arg4;
- (id)archivedReusableViews;
- (void)associateView:(id)arg1 withColumn:(long long)arg2;
- (BOOL)autoresizesAllColumnsToFit;
- (id)autosaveName;
- (BOOL)autosaveTableColumns;
- (id)backgroundColor;
- (BOOL)becomeFirstResponder;
- (void)becomeKeyWindow;
- (void)beginUpdates;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (void)cacheReusableView:(id)arg1;
- (BOOL)canDragRowsWithIndexes:(id)arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2;
- (BOOL)canFocusCell:(id)arg1 atTableColumn:(id)arg2 row:(long long)arg3;
- (void)cancelOperation:(id)arg1;
- (long long)clickedColumn;
- (long long)clickedRow;
- (long long)columnAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (unsigned long long)columnAutoresizingStyle;
- (long long)columnForView:(id)arg1;
- (id)columnIndexesInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (long long)columnWithIdentifier:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })columnsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)concludeDragOperation:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (id)cornerView;
- (id)currentTypeSelectSearchString;
- (id)dataSource;
- (id)defaultOwner;
- (BOOL)delayStartEditingCalled;
- (id)delegate;
- (void)deselectAll:(id)arg1;
- (void)deselectColumn:(long long)arg1;
- (void)deselectRow:(long long)arg1;
- (id)designatedFocusRingView;
- (void)didAddRowView:(id)arg1 forRow:(long long)arg2;
- (void)didBecomeActiveFirstResponder;
- (void)didCloseMenu:(id)arg1 withEvent:(id)arg2;
- (void)didRemoveRowView:(id)arg1 forRow:(long long)arg2;
- (SEL)doubleAction;
- (id)dragImageForRows:(id)arg1 event:(id)arg2 dragImageOffset:(struct CGPoint { double x1; double x2; }*)arg3;
- (id)dragImageForRowsWithIndexes:(id)arg1 tableColumns:(id)arg2 event:(id)arg3 offset:(struct CGPoint { double x1; double x2; }*)arg4;
- (id)draggedColumnView;
- (void)draggedImage:(id)arg1 beganAt:(struct CGPoint { double x1; double x2; })arg2;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint { double x1; double x2; })arg2 operation:(unsigned long long)arg3;
- (void)draggedImage:(id)arg1 movedTo:(struct CGPoint { double x1; double x2; })arg2;
- (long long)draggingDestinationFeedbackStyle;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggingExited:(id)arg1;
- (id)draggingImageComponentsWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forDisplayObject:(id)arg2;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint { double x1; double x2; })arg2 operation:(unsigned long long)arg3;
- (id)draggingSession:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)draggingSession:(id)arg1 willBeginAtPoint:(struct CGPoint { double x1; double x2; })arg2;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)drawBackgroundInClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawBackgroundOverhangInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawContextMenuHighlightForRow:(long long)arg1;
- (void)drawFocusRingMask;
- (void)drawGridInClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawLabelForRow:(long long)arg1 withLabelColorIndex:(long long)arg2 clipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 enabled:(BOOL)arg4;
- (void)drawOverlayRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawRow:(long long)arg1 clipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)drawRowIndexes:(id)arg1 clipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)drawRowsInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 clipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (BOOL)drawsBackground;
- (BOOL)drawsGrid;
- (void)editColumn:(long long)arg1 row:(long long)arg2 withEvent:(id)arg3 select:(BOOL)arg4;
- (long long)editedColumn;
- (long long)editedRow;
- (long long)effectiveRowSizeStyle;
- (void)encodeWithCoder:(id)arg1;
- (void)endUpdates;
- (void)enumerateAvailableRowViewsUsingBlock:(id)arg1;
- (BOOL)floatsGroupRows;
- (BOOL)floatsHeaderView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })focusRingMaskBounds;
- (unsigned long long)focusRingType;
- (long long)focusedColumn;
- (id)fontSmoothingBackgroundColor;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;
- (id)gridColor;
- (unsigned long long)gridStyleMask;
- (long long)groupRowStyle;
- (id)headerView;
- (id)hiddenRowIndexes;
- (void)hideRowsAtIndexes:(id)arg1 withAnimation:(unsigned long long)arg2;
- (void)highlightSelectionInClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)highlightedTableColumn;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)ignoreModifierKeysForDraggingSession:(id)arg1;
- (BOOL)ignoreModifierKeysWhileDragging;
- (id)indicatorImageInTableColumn:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)insertRowsAtIndexes:(id)arg1 withAnimation:(unsigned long long)arg2;
- (void)instantiateWithObjectInstantiator:(id)arg1;
- (struct CGSize { double x1; double x2; })intercellSpacing;
- (long long)interiorBackgroundStyle;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (BOOL)isColumnSelected:(long long)arg1;
- (BOOL)isDropTargetRow:(long long)arg1;
- (BOOL)isEditing;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (BOOL)isRowSelected:(long long)arg1;
- (BOOL)isViewBased;
- (void)keyDown:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })labelRectOfRow:(long long)arg1;
- (long long)lastSelectedRow;
- (void)layout;
- (id)makeRowViewForRow:(long long)arg1;
- (id)makeViewForTableColumn:(id)arg1 row:(long long)arg2;
- (id)makeViewWithIdentifier:(id)arg1 owner:(id)arg2;
- (id)menuForEvent:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)moveColumn:(long long)arg1 toColumn:(long long)arg2;
- (void)moveRowAtIndex:(long long)arg1 toIndex:(long long)arg2;
- (void)moveRowsInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toIndex:(long long)arg2;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })navBrowserLabelRectForRow:(long long)arg1;
- (BOOL)navNeedsPanelToBecomeKey;
- (BOOL)needsPanelToBecomeKey;
- (void)noteHeightOfRowsWithIndexesChanged:(id)arg1;
- (void)noteNumberOfRowsChanged;
- (long long)numberOfColumns;
- (long long)numberOfRows;
- (long long)numberOfSelectedColumns;
- (long long)numberOfSelectedRows;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })overlayBounds;
- (void)performClickOnCellAtColumn:(long long)arg1 row:(long long)arg2;
- (BOOL)performDragOperation:(id)arg1;
- (void)prepareContentInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)prepareDraggingDestinationView:(id)arg1 forRowIndexes:(id)arg2 draggingStyle:(long long)arg3;
- (id)preparedCellAtColumn:(long long)arg1 row:(long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectOfColumn:(long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectOfRow:(long long)arg1;
- (BOOL)refusesFirstResponder;
- (void)registerNib:(id)arg1 forIdentifier:(id)arg2;
- (id)registeredNibsByIdentifier;
- (void)reloadData;
- (void)reloadDataForRowIndexes:(id)arg1 columnIndexes:(id)arg2;
- (void)removeDropFeedbackViewsFromOldRow:(long long)arg1;
- (void)removeReuseableViewNibNameForIdentifier:(id)arg1;
- (void)removeRowsAtIndexes:(id)arg1 withAnimation:(unsigned long long)arg2;
- (void)removeTableColumn:(id)arg1;
- (void)renameReuseableViewIdentifierFrom:(id)arg1 to:(id)arg2;
- (void)renewGState;
- (BOOL)resignFirstResponder;
- (void)resignKeyWindow;
- (void)resizeWithOldSuperviewSize:(struct CGSize { double x1; double x2; })arg1;
- (id)reuseableViewIdentifiers;
- (id)reuseableViewNibNameForIdentifier:(id)arg1;
- (BOOL)rowActionsVisible;
- (long long)rowAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)rowData;
- (long long)rowForView:(id)arg1;
- (double)rowHeight;
- (id)rowHeightStorage;
- (long long)rowSizeStyle;
- (id)rowViewAtRow:(long long)arg1 makeIfNecessary:(BOOL)arg2;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rowsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)scrollColumnToVisible:(long long)arg1;
- (void)scrollRowToVisible:(long long)arg1;
- (void)scrollToBeginningOfDocument:(id)arg1;
- (void)scrollToEndOfDocument:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)selectColumn:(long long)arg1 byExtendingSelection:(BOOL)arg2;
- (void)selectColumnIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (void)selectRow:(long long)arg1 byExtendingSelection:(BOOL)arg2;
- (void)selectRowIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (id)selectedCell;
- (long long)selectedColumn;
- (id)selectedColumnEnumerator;
- (id)selectedColumnIndexes;
- (long long)selectedRow;
- (id)selectedRowEnumerator;
- (id)selectedRowIndexes;
- (long long)selectionBlendingMode;
- (long long)selectionHighlightStyle;
- (BOOL)selectionShouldUsePrimaryColor;
- (void)sendMouseUpActionForDisabledCell:(id)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (void)setAllowsColumnReordering:(BOOL)arg1;
- (void)setAllowsColumnResizing:(BOOL)arg1;
- (void)setAllowsColumnSelection:(BOOL)arg1;
- (void)setAllowsEmptySelection:(BOOL)arg1;
- (void)setAllowsMultipleSelection:(BOOL)arg1;
- (void)setAllowsTypeSelect:(BOOL)arg1;
- (void)setAnimationCompletionHandler:(id)arg1;
- (void)setAutoresizesAllColumnsToFit:(BOOL)arg1;
- (void)setAutosaveName:(id)arg1;
- (void)setAutosaveTableColumns:(BOOL)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setColumnAutoresizingStyle:(unsigned long long)arg1;
- (void)setCornerView:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDoubleAction:(SEL)arg1;
- (void)setDraggedColumnView:(id)arg1;
- (void)setDraggingDestinationFeedbackStyle:(long long)arg1;
- (void)setDraggingSourceOperationMask:(unsigned long long)arg1 forLocal:(BOOL)arg2;
- (void)setDrawsGrid:(BOOL)arg1;
- (void)setDropRow:(long long)arg1 dropOperation:(unsigned long long)arg2;
- (void)setEditing:(BOOL)arg1;
- (void)setEnabled:(BOOL)arg1;
- (void)setFauxHighlightedCell:(id)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (void)setFloatsGroupRows:(BOOL)arg1;
- (void)setFloatsHeaderView:(BOOL)arg1;
- (void)setFocusedColumn:(long long)arg1;
- (void)setFrameSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setGridColor:(id)arg1;
- (void)setGridStyleMask:(unsigned long long)arg1;
- (void)setGroupRowStyle:(long long)arg1;
- (void)setHeaderView:(id)arg1;
- (void)setHighlightedTableColumn:(id)arg1;
- (void)setIndicatorImage:(id)arg1 inTableColumn:(id)arg2;
- (void)setIntercellSpacing:(struct CGSize { double x1; double x2; })arg1;
- (void)setLastSelectedRow:(long long)arg1;
- (void)setLayer:(id)arg1;
- (void)setRefusesFirstResponder:(BOOL)arg1;
- (void)setReuseableViewNib:(id)arg1 forIdentifier:(id)arg2;
- (void)setReuseableViewNibName:(id)arg1 forIdentifier:(id)arg2;
- (void)setRowActionsVisible:(BOOL)arg1;
- (void)setRowHeight:(double)arg1;
- (void)setRowSizeStyle:(long long)arg1;
- (void)setSelectionBlendingMode:(long long)arg1;
- (void)setSelectionHighlightStyle:(long long)arg1;
- (void)setSortDescriptors:(id)arg1;
- (void)setToolTip:(id)arg1;
- (void)setUserInterfaceLayoutDirection:(long long)arg1;
- (void)setUsesAlternatingRowBackgroundColors:(BOOL)arg1;
- (void)setUsesAutomaticRowHeights:(BOOL)arg1;
- (void)setUsesStaticContents:(BOOL)arg1;
- (void)setVerticalMotionCanBeginDrag:(BOOL)arg1;
- (void)setWantsFirstResponderOnMouseEvents:(BOOL)arg1;
- (BOOL)shouldBeTreatedAsInkEvent:(id)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)shouldFocusCell:(id)arg1 atColumn:(long long)arg2 row:(long long)arg3;
- (BOOL)shouldSetFontSmoothingBackgroundColor;
- (BOOL)shouldUseViews;
- (void)sizeLastColumnToFit;
- (void)sizeToFit;
- (id)sortDescriptors;
- (void)superviewFrameChanged:(id)arg1;
- (id)tableColumnWithIdentifier:(id)arg1;
- (id)tableColumns;
- (void)textDidBeginEditing:(id)arg1;
- (void)textDidChange:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (BOOL)textShouldBeginEditing:(id)arg1;
- (BOOL)textShouldEndEditing:(id)arg1;
- (id)textView:(id)arg1 completions:(id)arg2 forPartialWordRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 indexOfSelectedItem:(long long*)arg4;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 replacementString:(id)arg3;
- (void)tile;
- (BOOL)tryNavMouseDown:(id)arg1;
- (void)unassociateView:(id)arg1 withColumn:(long long)arg2;
- (void)unhideRowsAtIndexes:(id)arg1 withAnimation:(unsigned long long)arg2;
- (void)updateCell:(id)arg1;
- (void)updateCellInside:(id)arg1;
- (void)updateDraggingItemsForDrag:(id)arg1;
- (void)updateLayer;
- (void)updateTrackingAreas;
- (long long)userInterfaceLayoutDirection;
- (BOOL)usesAlternatingRowBackgroundColors;
- (BOOL)usesAutomaticRowHeights;
- (BOOL)usesStaticContents;
- (BOOL)validateProposedFirstResponder:(id)arg1 forEvent:(id)arg2;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)verticalMotionCanBeginDrag;
- (id)viewAtColumn:(long long)arg1 row:(long long)arg2 makeIfNecessary:(BOOL)arg3;
- (void)viewDidEndLiveResize;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (void)viewWillDraw;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewWillStartLiveResize;
- (BOOL)wantsFirstResponderOnMouseEvents;
- (BOOL)wantsScrollEventsForSwipeTrackingOnAxis:(long long)arg1;
- (BOOL)wantsUpdateLayer;
- (void)willOpenMenu:(id)arg1 withEvent:(id)arg2;
- (void)willRemoveSubview:(id)arg1;

// Image: /System/Library/Frameworks/AddressBook.framework/Versions/A/AddressBook

// NSTableView (ABTableViewAdditions)

- (void)ab_scrollSelectedRowsToVisible;
- (void)ab_scrollToRow:(long long)arg1;

// Image: /System/Library/Frameworks/MapKit.framework/Versions/A/MapKit

// NSTableView (CrossPlatformDefinitions)

- (id)_mapkit_dequeueReusableCellWithIdentifier:(id)arg1;

// Image: /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit

// NSTableView (QTHUDCellUpdating)

- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })QTHUD_frameForCell:(id)arg1;

@end
