/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSScrubberLayout : NSObject <NSCoding> {
    unsigned int  _dirty;
    id  _private;
    unsigned int  _reservedFlags;
}

@property (atomic, readonly) BOOL automaticallyMirrorsInRightToLeftLayout;
@property (atomic, readonly) NSScrubber *scrubber;
@property (atomic, readonly) struct CGSize { double x1; double x2; } scrubberContentSize;
@property (atomic, readonly) BOOL shouldInvalidateLayoutForHighlightChange;
@property (atomic, readonly) BOOL shouldInvalidateLayoutForSelectionChange;
@property (atomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } visibleRect;

+ (Class)layoutAttributesClass;

- (void).cxx_destruct;
- (id)_layoutAttributesForItemAtIndex:(long long)arg1 withState:(struct { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; long long x2; long long x3; double x4; long long x5; long long x6; struct CGPoint { double x_7_1_1; double x_7_1_2; } x7; BOOL x8; })arg2;
- (id)_layoutAttributesForItemsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withState:(struct { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; long long x2; long long x3; double x4; long long x5; long long x6; struct CGPoint { double x_7_1_1; double x_7_1_2; } x7; BOOL x8; })arg2;
- (void)_prepareLayoutIfNeeded;
- (void)_setScrubber:(id)arg1;
- (BOOL)_shouldMirrorForRTL;
- (BOOL)automaticallyMirrorsInRightToLeftLayout;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)invalidateLayout;
- (id)layoutAttributesForItemAtIndex:(long long)arg1;
- (id)layoutAttributesForItemsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (long long)numberOfItems;
- (void)prepareLayout;
- (id)scrubber;
- (struct CGSize { double x1; double x2; })scrubberContentSize;
- (long long)selectedItem;
- (BOOL)shouldInvalidateLayoutForChangeFromVisibleRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 toVisibleRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (BOOL)shouldInvalidateLayoutForHighlightChange;
- (BOOL)shouldInvalidateLayoutForSelectionChange;
- (struct CGSize { double x1; double x2; })visibleContentSize;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })visibleRect;

@end
