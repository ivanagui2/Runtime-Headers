/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface _NSCollectionViewDropReceiver : NSObject <NSDraggingDestination> {
    BOOL  _acceptedDrop;
    unsigned long long  _currentDragOperation;
    long long  _currentDropOperation;
    NSView * _dropTargetGapIndicatorView;
    NSView * _dropTargetSectionFrameView;
    BOOL  _exitedDrag;
    struct CGPoint { 
        double x; 
        double y; 
    }  _lastDraggingLocation;
    BOOL  _sourceIsThisCollectionView;
    NSCollectionView * collectionView;
    long long  sessionNumber;
}

@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readonly) Class superclass;

+ (id)dropReceiverWithCollectionView:(id)arg1;

- (id)_dropIndexPathForDraggingInfo:(id)arg1 dropTargetRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 proposedDropOperation:(long long*)arg3 allowDropOnOnly:(BOOL)arg4;
- (BOOL)_hoverAreaIsSameAsLast:(id)arg1;
- (void)_setDropTargetGapRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setWholeSectionDropTargetRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_updateDragAndDropStateWithDraggingInfo:(id)arg1 newDragOperation:(unsigned long long)arg2 newDropTargetIndexPath:(id)arg3 newDropTargetRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4 newDropOperation:(long long)arg5;
- (unsigned long long)_validateDragWithInfo:(id)arg1 dropTargetIndexPath:(id*)arg2 dropTargetRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg3 dropOperation:(long long*)arg4 allowDropOnOnly:(BOOL)arg5;
- (void)concludeDragOperation:(id)arg1;
- (void)dealloc;
- (void)draggingEnded:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (id)initWithCollectionView:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (id)setHighlightState:(long long)arg1 forItemsAtIndexPaths:(id)arg2;
- (void)updateDraggingItemsForDrag:(id)arg1;

@end
