/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSTextView : NSText <DebugHierarchyObject, NSAccessibilityNavigableStaticText, NSDraggingSource, NSTextInput, NSTextInputClient, NSTextLayoutOrientationProvider, NSUserInterfaceValidations>

@property (atomic, readonly, copy) NSArray *acceptableDragTypes;
@property (atomic, readwrite) BOOL acceptsGlyphInfo;
@property (atomic, readwrite, copy) NSArray *allowedInputSourceLocales;
@property (atomic, readwrite) BOOL allowsDocumentBackgroundColorChange;
@property (atomic, readwrite) BOOL allowsImageEditing;
@property (atomic, readwrite) BOOL allowsUndo;
@property (atomic, readwrite, copy) NSAttributedString *attributedText;
@property (atomic, readwrite, copy) NSColor *backgroundColor;
@property (getter=isCoalescingUndo, atomic, readonly) BOOL coalescingUndo;
@property (getter=isContinuousSpellCheckingEnabled, atomic, readwrite) BOOL continuousSpellCheckingEnabled;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readwrite, copy) NSParagraphStyle *defaultParagraphStyle;
@property (atomic, readwrite) <NSTextViewDelegate> *delegate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite) BOOL displaysLinkToolTips;
@property (atomic, readwrite) BOOL drawsBackground;
@property (getter=isEditable, atomic, readwrite) BOOL editable;
@property (getter=isFieldEditor, atomic, readwrite) BOOL fieldEditor;
@property (getter=isGrammarCheckingEnabled, atomic, readwrite) BOOL grammarCheckingEnabled;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite) BOOL importsGraphics;
@property (atomic, readwrite, copy) NSColor *insertionPointColor;
@property (atomic, readonly) NSLayoutManager *layoutManager;
@property (atomic, readonly) long long layoutOrientation;
@property (atomic, readwrite, copy) NSDictionary *linkTextAttributes;
@property (atomic, readwrite, copy) NSDictionary *markedTextAttributes;
@property (atomic, readonly) struct _NSRange { unsigned long long x1; unsigned long long x2; } rangeForUserCharacterAttributeChange;
@property (atomic, readonly) struct _NSRange { unsigned long long x1; unsigned long long x2; } rangeForUserParagraphAttributeChange;
@property (atomic, readonly) struct _NSRange { unsigned long long x1; unsigned long long x2; } rangeForUserTextChange;
@property (atomic, readonly, copy) NSArray *rangesForUserCharacterAttributeChange;
@property (atomic, readonly, copy) NSArray *rangesForUserParagraphAttributeChange;
@property (atomic, readonly, copy) NSArray *rangesForUserTextChange;
@property (atomic, readonly, copy) NSArray *readablePasteboardTypes;
@property (getter=isRichText, atomic, readwrite) BOOL richText;
@property (getter=isRulerVisible, atomic, readwrite) BOOL rulerVisible;
@property (getter=isSelectable, atomic, readwrite) BOOL selectable;
@property (atomic, readwrite, copy) NSArray *selectedRanges;
@property (atomic, readwrite, copy) NSDictionary *selectedTextAttributes;
@property (atomic, readonly) unsigned long long selectionAffinity;
@property (atomic, readwrite) unsigned long long selectionGranularity;
@property (atomic, readonly) BOOL shouldDrawInsertionPoint;
@property (atomic, readonly) long long spellCheckerDocumentTag;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite, copy) NSString *text;
@property (atomic, readwrite) NSTextContainer *textContainer;
@property (atomic, readwrite) struct CGSize { double x1; double x2; } textContainerInset;
@property (atomic, readonly) struct CGPoint { double x1; double x2; } textContainerOrigin;
@property (atomic, readonly) NSTextStorage *textStorage;
@property (atomic, readwrite, copy) NSDictionary *typingAttributes;
@property (atomic, readwrite) BOOL usesFontPanel;
@property (atomic, readwrite) BOOL usesInspectorBar;
@property (atomic, readwrite) BOOL usesRolloverButtonForSelection;
@property (atomic, readwrite) BOOL usesRuler;
@property (atomic, readonly, copy) NSArray *writablePasteboardTypes;

// Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit

+ (BOOL)alwaysReferencesTextStorageStrongly;
+ (id)defaultMenu;
+ (void)initialize;
+ (BOOL)stronglyReferencesTextStorage;

- (void)_addGrammarAttributesForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 detailRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 detail:(id)arg3;
- (void)_addGrammarAttributesForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 details:(id)arg2;
- (void)_addSpellingAttributeForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (BOOL)_allowDynamicContentSizeChangesWhileScrolling;
- (BOOL)_allowRoundingToChangeSize;
- (BOOL)_attachmentAtGlyphIndex:(unsigned long long)arg1 containsWindowPoint:(struct CGPoint { double x1; double x2; })arg2;
- (BOOL)_canUnlearnSpellingForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_cancelFindIndicator;
- (id)_cellForPoint:(struct CGPoint { double x1; double x2; })arg1 characterIndex:(unsigned long long)arg2 level:(unsigned long long*)arg3 row:(long long*)arg4 column:(long long*)arg5 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg6;
- (void)_changeAlternativesFromMenu:(id)arg1;
- (void)_changeSpellingFromMenu:(id)arg1;
- (void)_changeSpellingToWord:(id)arg1;
- (void)_changeToBidiControlCharacters:(id)arg1;
- (void)_changeToWritingDirectionAttribute:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_characterRangeBetweenIndexes:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_characterRangeByTrimmingWhitespaceFromRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_checkGrammarStartingAt:(unsigned long long)arg1 detailRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2 detail:(id*)arg3;
- (void)_checkLinksAfterChange;
- (void)_checkLinksForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 excludingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)_checkRotatedOrScaledFromBase;
- (void)_checkSpelling:(BOOL)arg1;
- (void)_checkSpellingForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 excludingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)_clearSpellingForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_conditionallyRemoveDataDetectionIndicator:(id)arg1;
- (void)_considerDeferredTextChecking;
- (void)_considerTextCheckingForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_consumeMouseEventsUntilMouseUpStartingWithEvent:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_contentRectForTextBlock:(id)arg1 glyphRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)_copyFromDataDetectionIndicator:(id)arg1;
- (void)_createTrackingArea;
- (id)_currentEditingColor;
- (id)_dataDetectionResultForCharacterIndex:(unsigned long long)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)_deferConsiderationOfTextCheckingForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)_definitionAnimationControllerForAttributedString:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 options:(id)arg3 baselineOriginProvider:(id)arg4;
- (double)_distForGlyphLocation:(unsigned long long)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_doubleClickAtIndex:(unsigned long long)arg1 limitedRangeOK:(BOOL)arg2;
- (void)_drawInsertionPointInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 color:(id)arg2;
- (void)_drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 clip:(BOOL)arg2;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_extendedGlyphRangeForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 maxGlyphIndex:(unsigned long long)arg2 drawingToScreen:(BOOL)arg3;
- (void)_forgetSpellingFromMenu:(id)arg1;
- (id)_getUndoManager:(BOOL)arg1;
- (void)_handleTextCheckingResults:(id)arg1 sequenceNumber:(long long)arg2 forRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 types:(unsigned long long)arg4 options:(id)arg5 orthography:(id)arg6 wordCount:(long long)arg7 applyNow:(BOOL)arg8 checkSynchronously:(BOOL)arg9;
- (void)_ignoreGrammarFromMenu:(id)arg1;
- (void)_ignoreSpellingFromMenu:(id)arg1;
- (void)_informTextFinderStringWillChange;
- (id)_invalidateGStatesForTree;
- (BOOL)_isDeallocating;
- (void)_learnSpellingFromMenu:(id)arg1;
- (void)_lookUpClose:(id)arg1;
- (void)_lookUpDefiniteRangeInDictionaryFromMenu:(id)arg1;
- (void)_lookUpIndefiniteRangeInDictionaryFromMenu:(id)arg1;
- (void)_makeLinkFromMenu:(id)arg1;
- (void)_markAllForTextChecking;
- (void)_markForTextCheckingAfterChange;
- (void)_markTextEditedForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (BOOL)_mightHaveSpellingAttributes;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_modifiedGrammarRangeForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 details:(id)arg2;
- (void)_mouseExitedDataDetectionIndicator;
- (void)_mouseInside:(id)arg1;
- (void)_noteUndoOfCorrections:(id)arg1;
- (void)_openLinkFromMenu:(id)arg1;
- (void)_performScheduledTextChecking:(BOOL)arg1;
- (void)_propagateDownNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_rangeByTrimmingWhitespaceFromRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)_rectangularCharacterRangesForGlyphRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 from:(double)arg2 to:(double)arg3 granularity:(unsigned long long)arg4;
- (void)_removeAutiliaryUserInterfaceItems;
- (void)_removeDataDetectionIndicator;
- (void)_removeGrammarAttributeForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_removeGrammarAttributeForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 includeAccessibility:(BOOL)arg2;
- (void)_removeLinkFromMenu:(id)arg1;
- (void)_removeSelectionRolloverTimer;
- (void)_removeSpellingAttributeForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_removeSpellingAttributeForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 includeAccessibility:(BOOL)arg2;
- (void)_removeToolTipAndTimer;
- (void)_replaceTextFromMenu:(id)arg1;
- (void)_requestUpdateOfDragTypeRegistration;
- (void)_resizeTable:(id)arg1 level:(unsigned long long)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 column:(long long)arg4 widthDelta:(double)arg5;
- (void)_resizeTable:(id)arg1 level:(unsigned long long)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 row:(long long)arg4 heightDelta:(double)arg5;
- (void)_restoreReplacedString:(id)arg1;
- (void)_scheduleTextCheckingForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_searchWithGoogleFromMenu:(id)arg1;
- (id)_selectedRangesAsIndexSet;
- (id)_selectedRangesByTogglingRanges:(id)arg1 withRanges:(id)arg2 initialCharacterIndex:(unsigned long long)arg3 granularity:(unsigned long long)arg4;
- (void)_setRotatedFromBase:(BOOL)arg1;
- (void)_setRotatedOrScaledFromBase:(BOOL)arg1;
- (BOOL)_shouldDoLayerPerformanceUpdates;
- (BOOL)_shouldHavePeriodicEventsForPoint:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)_shouldPrintByCallingDrawRect;
- (void)_showAllInsertionPointsForGlyphRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)_showDataDetectionIndicatorForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 dataResult:(id)arg2 windowPoint:(struct CGPoint { double x1; double x2; })arg3;
- (void)_showDefinitionForAttributedString:(id)arg1 characterIndex:(unsigned long long)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 options:(id)arg4 baselineOriginProvider:(id)arg5;
- (void)_showParagraphDirectionalityForGlyphRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)_showToolTip:(id)arg1;
- (id)_spellingGuessesForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)_spellingGuessesForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 canCorrect:(BOOL*)arg2;
- (id)_spellingGuessesForWord:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_spellingSelectionRangeForProposedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)_textViewFinder;
- (void)_toolTipOwnerResignKey:(id)arg1;
- (void)_toolTipTimer;
- (BOOL)_tryRetain;
- (void)_turnOnSpellingCorrectionFromMenu:(id)arg1;
- (void)_turnOnTextReplacementFromMenu:(id)arg1;
- (void)_unlearnSpellingFromMenu:(id)arg1;
- (void)_unmarkTextEditedForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_updateTextFinder;
- (BOOL)_useTextChecking;
- (void)_verifyQuotesAndParenthesesForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (BOOL)_wantsKeyDownForEvent:(id)arg1;
- (id)_writingDirectionAttributeForInsertText:(id)arg1 replacementRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (id)_writingDirectionAttributeForPeriodBeforeInsertText:(id)arg1 replacementRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)dealloc;
- (id)description;
- (oneway void)release;

// NSTextView (NSDragging)

- (void)_draggingSession:(id)arg1 endedAtPoint:(struct CGPoint { double x1; double x2; })arg2 operation:(unsigned long long)arg3;
- (void)_fixDragAndDropCharRangesForChangeInRanges:(id)arg1 replacementStrings:(id)arg2;
- (void)_forceRedrawDragInsertionIndicator;
- (unsigned long long)_insertionCharacterIndexForDrag:(id)arg1;
- (unsigned long long)_insertionGlyphIndexForDrag:(id)arg1;
- (struct CGPoint { double x1; double x2; })_pointForTopOfBeginningOfCharRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_setDragAndDropCharRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_setDragAndDropCharRanges:(id)arg1;
- (void)_updateDragInsertionIndicatorWith:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;

// NSTextView (NSKeyBindingCommands)

+ (BOOL)_allowKillRing;

- (unsigned long long)_characterIndexForMoveBackwardFromCharacterIndex:(unsigned long long)arg1;
- (unsigned long long)_characterIndexForMoveBackwardFromSelectedRanges:(id)arg1;
- (unsigned long long)_characterIndexForMoveForwardFromCharacterIndex:(unsigned long long)arg1;
- (unsigned long long)_characterIndexForMoveForwardFromSelectedRanges:(id)arg1;
- (unsigned long long)_characterIndexForMoveLeftFromCharacterIndex:(unsigned long long)arg1;
- (unsigned long long)_characterIndexForMoveLeftFromSelectedRanges:(id)arg1;
- (unsigned long long)_characterIndexForMoveRightFromCharacterIndex:(unsigned long long)arg1;
- (unsigned long long)_characterIndexForMoveRightFromSelectedRanges:(id)arg1;
- (unsigned long long)_characterIndexForMoveWordLeftFromCharacterIndex:(unsigned long long)arg1;
- (unsigned long long)_characterIndexForMoveWordRightFromCharacterIndex:(unsigned long long)arg1;
- (id)_characterRangesBetweenIndex:(unsigned long long)arg1 andIndex:(unsigned long long)arg2;
- (void)_checkInList:(BOOL*)arg1 listStart:(BOOL*)arg2 markerRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg3 emptyItem:(BOOL*)arg4 atEnd:(BOOL*)arg5 inBlock:(BOOL*)arg6 blockStart:(BOOL*)arg7;
- (void)_checkInList:(BOOL*)arg1 listStart:(BOOL*)arg2 markerRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg3 emptyItem:(BOOL*)arg4 atEnd:(BOOL*)arg5 inBlock:(BOOL*)arg6 blockStart:(BOOL*)arg7 forCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg8;
- (id)_completionsFromDocumentForPartialWordRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)_completionsFromDocumentForPartialWordRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 language:(id)arg2;
- (void)_moveDown:(double)arg1;
- (void)_moveDownAndModifySelection:(double)arg1;
- (void)_moveToNextBlock;
- (void)_moveToPreviousBlock;
- (void)_moveUp:(double)arg1;
- (void)_moveUpAndModifySelection:(double)arg1;
- (void)_nestListAtIndex:(unsigned long long)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_rangeForMoveDownFromRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 verticalDistance:(double)arg2 desiredDistanceIntoContainer:(double*)arg3 selectionAffinity:(unsigned long long*)arg4;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_rangeForMoveUpFromRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 verticalDistance:(double)arg2 desiredDistanceIntoContainer:(double*)arg3 selectionAffinity:(unsigned long long*)arg4;
- (void)_reformListAtIndex:(unsigned long long)arg1;
- (void)_scrollDown:(double)arg1;
- (void)_scrollUp:(double)arg1;
- (void)_unnestListAtIndex:(unsigned long long)arg1 markerRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (double)_verticalDistanceForLineScroll;
- (double)_verticalDistanceForPageScroll;

// NSTextView (NSPasteboard)

+ (id)_readablePasteboardTypesForRichText:(BOOL)arg1 importsGraphics:(BOOL)arg2 usesFontPanel:(BOOL)arg3 usesRuler:(BOOL)arg4 allowsFiltering:(BOOL)arg5;
+ (void)registerForServices;

- (id)_attachmentCellForSelection;
- (id)_attributedSubstringForCopyingFromRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (BOOL)_old_writeStringInRanges:(id)arg1 toPasteboard:(id)arg2;
- (id)_rangesForMultipleTextSelectionPasteAtIndex:(unsigned long long)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readAttributedStringIntoRanges:(id)arg1 fromPasteboard:(id)arg2 stripAttachments:(BOOL)arg3;
- (BOOL)_readColorIntoRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 fromPasteboard:(id)arg2;
- (BOOL)_readColorIntoRanges:(id)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readFilenameStringsIntoRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 fromPasteboard:(id)arg2;
- (BOOL)_readFilenamesIntoRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 fromPasteboard:(id)arg2;
- (BOOL)_readFontIntoRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 fromPasteboard:(id)arg2;
- (BOOL)_readFontIntoRanges:(id)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readImageIntoRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 fromPasteboard:(id)arg2;
- (BOOL)_readMovieIntoRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 fromPasteboard:(id)arg2;
- (id)_readMultipleTextSelectionRangesForString:(id)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readRulerIntoRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 fromPasteboard:(id)arg2;
- (BOOL)_readRulerIntoRanges:(id)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readSelectionFromPasteboard:(id)arg1 types:(id)arg2;
- (BOOL)_readStringIntoRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 fromPasteboard:(id)arg2;
- (BOOL)_readStringIntoRanges:(id)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readStringWithLinksIntoRanges:(id)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readURLIntoRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 fromPasteboard:(id)arg2;
- (BOOL)_readURLStringIntoRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 fromPasteboard:(id)arg2;
- (BOOL)_readURLStringsWithNamesIntoRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 fromPasteboard:(id)arg2;
- (BOOL)_replaceCharactersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withPastedAttributedString:(id)arg2;
- (BOOL)_wantsPastedFile:(id)arg1;
- (BOOL)_wantsPastedFiles:(id)arg1;
- (BOOL)_wantsPastedURL:(id)arg1 allowFileURLs:(BOOL)arg2;
- (BOOL)_writeAttributedStringInRanges:(id)arg1 toPasteboard:(id)arg2;
- (BOOL)_writeFontInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toPasteboard:(id)arg2;
- (BOOL)_writeLinkStringInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toPasteboard:(id)arg2;
- (BOOL)_writeMultipleTextSelectionRanges:(id)arg1 toPasteboard:(id)arg2;
- (BOOL)_writeRTFDInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toPasteboard:(id)arg2;
- (BOOL)_writeRTFDInRanges:(id)arg1 toPasteboard:(id)arg2;
- (BOOL)_writeRTFInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toPasteboard:(id)arg2;
- (BOOL)_writeRTFInRanges:(id)arg1 toPasteboard:(id)arg2;
- (BOOL)_writeRulerInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toPasteboard:(id)arg2;
- (BOOL)_writeStringInRanges:(id)arg1 toPasteboard:(id)arg2;
- (BOOL)_writeURLInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toPasteboard:(id)arg2;
- (BOOL)_writeURLNameInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toPasteboard:(id)arg2;
- (BOOL)_writeURLStringInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toPasteboard:(id)arg2;
- (BOOL)_writeURLStringsWithNamesInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toPasteboard:(id)arg2;

// NSTextView (NSPrivate)

+ (id)_URLForString:(id)arg1;
+ (id)_URLStringForString:(id)arg1;
+ (BOOL)_insertionPointDisabled;
+ (void)_setInsertionPointDisabled:(BOOL)arg1;

- (void)_addMultipleToTypingAttributes:(id)arg1;
- (void)_addToTypingAttributes:(id)arg1 value:(id)arg2;
- (void)_adjustedCenteredScrollRectToVisible:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forceCenter:(BOOL)arg2;
- (void)_applyMarkerSettingsFromParagraphStyle:(id)arg1;
- (id)_attributedSubstringForRanges:(id)arg1;
- (id)_attributedSubstringForRanges:(id)arg1 substringProvider:(id)arg2;
- (void)_blinkCaret:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_blockRowRectForCharRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 rect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_calculatePageRectsWithOperation:(id)arg1 pageSize:(struct CGSize { double x1; double x2; })arg2 layoutAssuredComplete:(BOOL)arg3;
- (void)_calculateTotalScaleForPrintingWithOperation:(id)arg1;
- (BOOL)_canAcceptRichText;
- (BOOL)_canChangeRulerMarkers;
- (BOOL)_canImportGraphics;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_caretScreenRectForSelectionChangeFromRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)_centeredScrollRectToVisible:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forceCenter:(BOOL)arg2;
- (void)_changeBaseWritingDirection:(long long)arg1;
- (void)_changeTextWritingDirection:(long long)arg1;
- (BOOL)_charRangeIsHighlightOptimizable:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 fromOldCharRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)_clearMarkedRange;
- (void)_clearUndoRegistrations;
- (unsigned long long)_clickedCharIndex;
- (void)_commonInitIvarBlock;
- (void)_commonInitState;
- (BOOL)_couldHaveBlinkTimer;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)_createRectArrayForFindIndicatorForGlyphRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 rectCount:(unsigned long long*)arg2;
- (id)_cuiSourceListBackgroundOptions;
- (BOOL)_deletesForGenericDragging;
- (void)_didEndScrolling;
- (double)_distanceForVerticalArrowKeyMovement;
- (void)_drawViewBackgroundInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_ensureLayoutCompleteForPreparingContentInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)_ensureLayoutCompleteForRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withExtensionFactor:(double)arg2 minimumExtensionDistance:(double)arg3 repetitions:(unsigned long long)arg4 preparedContentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg5;
- (BOOL)_ensureLayoutCompleteForVisibleRectWithExtension:(BOOL)arg1;
- (BOOL)_ensureLayoutCompleteForVisibleRectWithExtensionFactor:(double)arg1 minimumExtensionDistance:(double)arg2 repetitions:(unsigned long long)arg3;
- (void)_ensureLayoutCompleteToEndOfCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_ensureMinAndMaxSizesConsistentWithBounds;
- (void)_fastHighlightGlyphRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withinSelectedGlyphRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (id)_fieldEditorUndoManager;
- (void)_finishedAnimatingScroll;
- (void)_finishedImmediateScroll;
- (void)_fixSharedData;
- (id)_getGlyphIndex:(unsigned long long*)arg1 characterIndex:(unsigned long long*)arg2 forWindowPoint:(struct CGPoint { double x1; double x2; })arg3 pinnedPoint:(struct CGPoint { double x1; double x2; })arg4 anchorPoint:(struct CGPoint { double x1; double x2; })arg5 useAnchorPoint:(BOOL)arg6 preferredTextView:(id)arg7 partialFraction:(double*)arg8;
- (id)_getGlyphIndex:(unsigned long long*)arg1 characterIndex:(unsigned long long*)arg2 forWindowPoint:(struct CGPoint { double x1; double x2; })arg3 pinnedPoint:(struct CGPoint { double x1; double x2; })arg4 preferredTextView:(id)arg5 partialFraction:(double*)arg6;
- (id)_getGlyphIndex:(unsigned long long*)arg1 forWindowPoint:(struct CGPoint { double x1; double x2; })arg2 pinnedPoint:(struct CGPoint { double x1; double x2; })arg3 anchorPoint:(struct CGPoint { double x1; double x2; })arg4 useAnchorPoint:(BOOL)arg5 preferredTextView:(id)arg6 partialFraction:(double*)arg7;
- (id)_getGlyphIndex:(unsigned long long*)arg1 forWindowPoint:(struct CGPoint { double x1; double x2; })arg2 pinnedPoint:(struct CGPoint { double x1; double x2; })arg3 preferredTextView:(id)arg4 partialFraction:(double*)arg5;
- (void)_giveUpFirstResponder:(long long)arg1;
- (BOOL)_hasScaledBacking;
- (BOOL)_hasVisisbleGlyphsInCharRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)_immediateActionMenuItemForTextCheckingResult:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 location:(struct CGPoint { double x1; double x2; })arg3;
- (void)_installRulerAccViewForParagraphStyle:(id)arg1 ruler:(id)arg2 enabled:(BOOL)arg3;
- (void)_invalidateBlinkTimer:(id)arg1;
- (BOOL)_isDiagonallyRotatedOrScaledFromBase;
- (BOOL)_isInsertingText;
- (BOOL)_isScrollingToEnd;
- (BOOL)_isUnmarking;
- (id)_ivars;
- (id)_menuItemsForTextCheckingResult:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 contextual:(BOOL)arg3 immediate:(BOOL)arg4 location:(struct CGPoint { double x1; double x2; })arg5;
- (void)_optimizeHighlightForCharRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 charRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 fullSelectionCharRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 oldSelectionFullCharRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4;
- (BOOL)_outlineIsOn;
- (void)_performUndoCoalescingAction:(id)arg1;
- (double)_provideTotalScaleFactorForPrintOperation:(id)arg1;
- (BOOL)_range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 containsPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)_remove:(id*)arg1 andAddMultipleToTypingAttributes:(id)arg2;
- (void)_scrollRangeToVisible:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 forceCenter:(BOOL)arg2;
- (void)_scrollToEnd:(id)arg1;
- (void)_sendZoomFocusChangedNotificationForSelectionChange;
- (void)_setAttributes:(id*)arg1 newValues:(id)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (void)_setDeletesForGenericDragging:(BOOL)arg1;
- (void)_setDistanceForVerticalArrowKeyMovement:(double)arg1;
- (id)_setFieldEditorUndoManager:(id)arg1;
- (void)_setFrameSize:(struct CGSize { double x1; double x2; })arg1 forceScroll:(BOOL)arg2;
- (void)_setScrollingToEnd:(BOOL)arg1;
- (id)_setSuperview:(id)arg1;
- (void)_setUndoRedoInProgress:(BOOL)arg1;
- (void)_setWatchingSuperviewClipView:(BOOL)arg1;
- (id)_setWindow:(id)arg1;
- (id)_sharedData;
- (BOOL)_shouldHaveBlinkTimer;
- (void)_showFindIndicatorWithCharRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_showFindIndicatorWithCharRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 fade:(BOOL)arg2;
- (void)_sizeDownIfPossible;
- (id)_stripAttachmentCharactersAndParagraphStylesFromAttributedString:(id)arg1;
- (id)_stripAttachmentCharactersFromAttributedString:(id)arg1;
- (id)_stripAttachmentCharactersFromString:(id)arg1;
- (void)_superviewClipViewFrameChanged:(id)arg1;
- (BOOL)_textViewOwnsTextStorage;
- (BOOL)_trackAttachmentClick:(id)arg1 characterIndex:(unsigned long long)arg2 glyphIndex:(unsigned long long)arg3 attachmentCell:(id)arg4;
- (BOOL)_underlineIsOn;
- (BOOL)_undoRedoInProgress;
- (void)_userDeleteRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_userReplaceRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withString:(id)arg2;
- (void)_viewDidDrawInLayer:(id)arg1 inContext:(struct CGContext { }*)arg2;
- (void)_willBeginScrolling;

// NSTextView (NSQuickLookPreview)

- (unsigned long long)_characterIndexForPreviewItem:(id)arg1;
- (BOOL)_closeQuickLookPreviewPanelWithSpace;
- (BOOL)_quickLookPreviewItemsInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)_rangesForPreview;
- (BOOL)_shouldIncludePreviewActionInContextMenu;
- (void)_validateMenuItemForPreviewAction:(id)arg1;

// NSTextView (NSSharing)

- (BOOL)_allowsMultipleTextSelectionByMouse;
- (void)_alternativesTimer;
- (id)_blockSafeRangesForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (BOOL)_continuousCheckingAllowed;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_fixedSelectionRangeForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 affinity:(unsigned long long)arg2;
- (id)_fixedSelectionRangesForRanges:(id)arg1 affinity:(unsigned long long)arg2;
- (void)_guessesTimer;
- (void)_invalidateDisplayForChangeOfSelectionFromRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)_invalidateDisplayForMarkedOrSelectedRange;
- (void)_performPendingTextChecking;
- (void)_preflightSpellChecker:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_rangeForUserBaseWritingDirectionChange;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_rangeForUserTextWritingDirectionChange;
- (id)_rangesForUserBaseWritingDirectionChange;
- (id)_rangesForUserTextWritingDirectionChange;
- (void)_restartBlinkTimer;
- (void)_reversionTimer;
- (id)_selectedRanges;
- (BOOL)_usesSplitCursor;
- (BOOL)_validateAndCommitTokens;

// NSTextView (NSSharingServiceAdditions)

- (id)_sharingServiceItemsInRanges:(id)arg1;

// NSTextView (NSTextViewAccessibility)

- (id)_accessibilityAttachmentCellForChild:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_accessibilityBoundsOfChild:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_accessibilityCharacterRangeOfChild:(id)arg1;
- (BOOL)_isAccessibilityContentSectionCandidate;

// NSTextView (NSTextViewAccessibilityPrivate)

- (id)_accessibilityTextViewCompletionWindow;

// NSTextView (NSTextView_ForcedEvents)

- (id)_immediateActionAnimationControllerForCharacterAtIndex:(unsigned long long)arg1 withRecognizer:(id)arg2;
- (void)_markUpAction:(id)arg1;
- (void)_selectionDragTimerFire:(id)arg1;

// NSTextView (NSTextView_LayerBacking)

- (BOOL)_isDrawingLayer;
- (void)_setIsDrawingLayer:(BOOL)arg1;

// NSTextView (NSTextView_SharingService)

- (id)_configureSharingServicesMenuItemInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_invokeSharingService:(id)arg1;
- (id)_menuItemsForDataResult:(id)arg1;
- (id)_sharingItemForAttachment:(id)arg1 atIndex:(unsigned long long)arg2;

// NSTextView (NSTextView_TouchBar_API)

+ (id)keyPathsForValuesAffectingTouchBar;

- (void)_configureTouchBar:(id)arg1 withIdentifiers:(id)arg2;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_rangeForUserCompletion;
- (void)_restoreSelectedRangeAfterUndoOfCandidateSelection;
- (void)_setupCandidateListTouchBarItem;
- (id)_touchBarItemController;
- (id)_touchBarItemIdentifiers;
- (void)_updateAllowsCollapsingWithTouchBar:(id)arg1;

// Image: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Debugger/libViewDebuggerSupport.dylib

// NSTextView (DebugHierarchyAdditions)

- (id)debugHierarchyPropertyDescriptions;

// NSTextView (DebugHierarchyHelpers)

- (id)__dbg_allowedInputSourceLocales;

// Image: /Applications/Xcode.app/Contents/Developer/usr/lib/libMainThreadChecker.dylib

- (id)RTFDFromRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)RTFFromRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)acceptableDragTypes;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)acceptsGlyphInfo;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributedStringForRangeAttributeForParameter:(id)arg1;
- (id)accessibilityBoundsForRangeAttributeForParameter:(id)arg1;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityElementForAttachment:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })accessibilityFocusRingBoundsForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })accessibilityFrameForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)accessibilityHelpStringForChild:(id)arg1;
- (id)accessibilityHitTest:(struct CGPoint { double x1; double x2; })arg1;
- (id)accessibilityInsertionPointLineNumberAttribute;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (BOOL)accessibilityIsInsertionPointLineNumberAttributeSettable;
- (BOOL)accessibilityIsNumberOfCharactersAttributeSettable;
- (BOOL)accessibilityIsSelectedTextAttributeSettable;
- (BOOL)accessibilityIsSelectedTextRangeAttributeSettable;
- (BOOL)accessibilityIsSelectedTextRangesAttributeSettable;
- (BOOL)accessibilityIsSharedCharacterRangeAttributeSettable;
- (BOOL)accessibilityIsSharedTextUIElementsAttributeSettable;
- (BOOL)accessibilityIsTextInputMarkedRangeAttributeSettable;
- (BOOL)accessibilityIsValueAttributeSettable;
- (BOOL)accessibilityIsVisibleCharacterRangeAttributeSettable;
- (long long)accessibilityLineForIndex:(long long)arg1;
- (id)accessibilityLineForIndexAttributeForParameter:(id)arg1;
- (id)accessibilityNumberOfCharactersAttribute;
- (id)accessibilityParameterizedAttributeNames;
- (BOOL)accessibilityPerformShowMenuOfChild:(id)arg1;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilityRTFForRangeAttributeForParameter:(id)arg1;
- (id)accessibilityRangeForIndexAttributeForParameter:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilityRangeForLine:(long long)arg1;
- (id)accessibilityRangeForLineAttributeForParameter:(id)arg1;
- (id)accessibilityRangeForPositionAttributeForParameter:(id)arg1;
- (id)accessibilityRoleAttribute;
- (id)accessibilitySelectedTextAttribute;
- (id)accessibilitySelectedTextRangeAttribute;
- (id)accessibilitySelectedTextRangesAttribute;
- (void)accessibilitySetFocus:(id)arg1 forChild:(id)arg2;
- (void)accessibilitySetSelectedTextAttribute:(id)arg1;
- (void)accessibilitySetSelectedTextRangeAttribute:(id)arg1;
- (void)accessibilitySetSelectedTextRangesAttribute:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (void)accessibilitySetValueAttribute:(id)arg1;
- (void)accessibilitySetVisibleCharacterRangeAttribute:(id)arg1;
- (id)accessibilitySharedCharacterRangeAttribute;
- (id)accessibilitySharedTextElementForIndexAttributeForParameter:(id)arg1;
- (id)accessibilitySharedTextUIElementsAttribute;
- (id)accessibilitySizeOfChild:(id)arg1;
- (id)accessibilityStringForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)accessibilityStringForRangeAttributeForParameter:(id)arg1;
- (id)accessibilityStyleRangeForIndexAttributeForParameter:(id)arg1;
- (id)accessibilityTextInputMarkedRangeAttribute;
- (id)accessibilityValue;
- (id)accessibilityValueAttribute;
- (id)accessibilityVisibleCharacterRangeAttribute;
- (struct CGPoint { double x1; double x2; })accessibilityWindowPointForShowMenu;
- (void)acquireKeyFocus;
- (void)addLinksInSelection:(id)arg1;
- (void)adjustPageHeightNew:(double*)arg1 top:(double)arg2 bottom:(double)arg3 limit:(double)arg4;
- (void)alignCenter:(id)arg1;
- (void)alignJustified:(id)arg1;
- (void)alignLeft:(id)arg1;
- (void)alignRight:(id)arg1;
- (unsigned long long)alignment;
- (id)allowedInputSourceLocales;
- (BOOL)allowsCharacterPickerTouchBarItem;
- (BOOL)allowsDocumentBackgroundColorChange;
- (BOOL)allowsImageEditing;
- (BOOL)allowsMultipleSelection;
- (BOOL)allowsUndo;
- (void)applyActionForRanges:(id)arg1 block:(id)arg2;
- (id)attributedString;
- (id)attributedSubstringForMarkedRange;
- (id)attributedSubstringForProposedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 actualRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (id)attributedSubstringFromRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)backgroundColor;
- (long long)baseWritingDirection;
- (double)baselineDeltaForCharacterAtIndex:(unsigned long long)arg1;
- (BOOL)becomeFirstResponder;
- (void)becomeKeyWindow;
- (void)becomeMainWindow;
- (void)beginPreviewPanelControl:(id)arg1;
- (void)breakUndoCoalescing;
- (BOOL)canSmoothFontsInLayer;
- (id)candidateListTouchBarItem;
- (void)candidateListTouchBarItem:(id)arg1 changedCandidateListVisibility:(BOOL)arg2;
- (void)candidateListTouchBarItem:(id)arg1 endSelectingCandidateAtIndex:(unsigned long long)arg2;
- (void)capitalizeWord:(id)arg1;
- (void)centerSelectionInVisibleArea:(id)arg1;
- (BOOL)centersOnScroll;
- (void)changeAttributes:(id)arg1;
- (void)changeAttributesWithModifier:(id)arg1;
- (void)changeBaseWritingDirection:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)changeDocumentBackgroundColor:(id)arg1;
- (void)changeFont:(id)arg1;
- (void)changeLayoutOrientation:(id)arg1;
- (void)changeSpelling:(id)arg1;
- (unsigned long long)characterIndexForInsertionAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (unsigned long long)characterIndexForPoint:(struct CGPoint { double x1; double x2; })arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })characterRangeForRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)checkSpelling:(id)arg1;
- (void)checkTextInDocument:(id)arg1;
- (void)checkTextInDocumentUsingTypes:(unsigned long long)arg1 options:(id)arg2 restrictToSelection:(BOOL)arg3;
- (void)checkTextInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 types:(unsigned long long)arg2 options:(id)arg3;
- (void)checkTextInSelection:(id)arg1;
- (void)cleanUpAfterDragOperation;
- (void)clickedOnLink:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)complete:(id)arg1;
- (id)completionsForPartialWordRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 indexOfSelectedItem:(long long*)arg2;
- (void)concludeDragOperation:(id)arg1;
- (id)contentViewAtIndex:(unsigned long long)arg1 effectiveCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (long long)conversationIdentifier;
- (void)copy:(id)arg1;
- (void)copyFont:(id)arg1;
- (void)copyLink:(id)arg1;
- (void)copyRuler:(id)arg1;
- (void)cursorUpdate:(id)arg1;
- (void)cut:(id)arg1;
- (id)defaultParagraphStyle;
- (id)delegate;
- (void)delete:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)deleteBackwardByDecomposingPreviousCharacter:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteToBeginningOfLine:(id)arg1;
- (void)deleteToBeginningOfParagraph:(id)arg1;
- (void)deleteToEndOfLine:(id)arg1;
- (void)deleteToEndOfParagraph:(id)arg1;
- (void)deleteToMark:(id)arg1;
- (void)deleteWordBackward:(id)arg1;
- (void)deleteWordForward:(id)arg1;
- (id)designatedFocusRingView;
- (void)didChangeText;
- (void)didCloseMenu:(id)arg1 withEvent:(id)arg2;
- (void)didReplaceCharacters;
- (void)displayTextLayer:(id)arg1 withContext:(id)arg2;
- (BOOL)displaysLinkToolTips;
- (void)doCommandBySelector:(SEL)arg1;
- (id)dragImageForSelectionWithEvent:(id)arg1 origin:(struct CGPoint { double x1; double x2; }*)arg2;
- (unsigned long long)dragOperationForDraggingInfo:(id)arg1 type:(id)arg2;
- (BOOL)dragSelectionWithEvent:(id)arg1 offset:(struct CGSize { double x1; double x2; })arg2 slideBack:(BOOL)arg3;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint { double x1; double x2; })arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggingExited:(id)arg1;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint { double x1; double x2; })arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)drawBackgroundOverhangInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawCharactersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 forContentView:(id)arg2;
- (void)drawDragInsertionIndicatorWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawInsertionPointInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 color:(id)arg2 turnedOn:(BOOL)arg3;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext { }*)arg2;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawViewBackgroundInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)drawsBackground;
- (BOOL)drawsVerticallyForCharacterAtIndex:(unsigned long long)arg1;
- (unsigned long long)enabledTextCheckingTypes;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)endPreviewPanelControl:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })firstRectForCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })firstRectForCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 actualRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })firstSelectedRange;
- (void)flagsChanged:(id)arg1;
- (id)font;
- (double)fractionOfDistanceThroughGlyphForPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)functionBar:(id)arg1 makeItemForIdentifier:(id)arg2;
- (void)getMarkedText:(id*)arg1 selectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (void)handleCandidates:(id)arg1 sequenceNumber:(long long)arg2;
- (void)handleTextCheckingResults:(id)arg1 forRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 types:(unsigned long long)arg3 options:(id)arg4 orthography:(id)arg5 wordCount:(long long)arg6;
- (BOOL)hasMarkedText;
- (void)hideHighlight;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })highlightBoundingRectForCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 highlightStyle:(unsigned long long)arg2;
- (id)highlightRectsForCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 highlightStyle:(unsigned long long)arg2;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1;
- (void)ignoreSpelling:(id)arg1;
- (void)immediateActionRecognizerDidCancelAnimation:(id)arg1;
- (void)immediateActionRecognizerDidCompleteAnimation:(id)arg1;
- (void)immediateActionRecognizerDidUpdateAnimation:(id)arg1;
- (void)immediateActionRecognizerWillBeginAnimation:(id)arg1;
- (void)immediateActionRecognizerWillPrepare:(id)arg1;
- (BOOL)importsGraphics;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 textContainer:(id)arg2;
- (id)inputContext;
- (void)insertBacktab:(id)arg1;
- (void)insertCandidateString:(id)arg1 replacementRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 fromTextCheckingResult:(BOOL)arg3;
- (void)insertCandidateTextCheckingResult:(id)arg1;
- (void)insertCompletion:(id)arg1 forPartialWordRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 movement:(long long)arg3 isFinal:(BOOL)arg4;
- (void)insertContainerBreak:(id)arg1;
- (void)insertDoubleQuoteIgnoringSubstitution:(id)arg1;
- (void)insertLineBreak:(id)arg1;
- (void)insertLineSeparator:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)insertPageBreak:(id)arg1;
- (void)insertParagraphSeparator:(id)arg1;
- (void)insertRightToLeftSlash:(id)arg1;
- (void)insertSingleQuoteIgnoringSubstitution:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)insertTabIgnoringFieldEditor:(id)arg1;
- (void)insertTable:(id)arg1;
- (void)insertText:(id)arg1;
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (id)insertionPointColor;
- (id)inspectorBarItemIdentifiers;
- (void)invalidateTextContainerOrigin;
- (void)invokeExtensionService:(id)arg1;
- (void)invokeImmediateActionMenuItem:(id)arg1;
- (BOOL)isAutomaticDashSubstitutionEnabled;
- (BOOL)isAutomaticDataDetectionEnabled;
- (BOOL)isAutomaticLanguageIdentificationEnabled;
- (BOOL)isAutomaticLinkDetectionEnabled;
- (BOOL)isAutomaticQuoteSubstitutionEnabled;
- (BOOL)isAutomaticSpellingCorrectionEnabled;
- (BOOL)isAutomaticTextCompletionEnabled;
- (BOOL)isAutomaticTextReplacementEnabled;
- (BOOL)isCoalescingUndo;
- (BOOL)isContinuousSpellCheckingEnabled;
- (BOOL)isEditable;
- (BOOL)isFieldEditor;
- (BOOL)isFlipped;
- (BOOL)isGrammarCheckingEnabled;
- (BOOL)isHorizontallyResizable;
- (BOOL)isIncrementalSearchingEnabled;
- (BOOL)isOpaque;
- (BOOL)isRichText;
- (BOOL)isRulerVisible;
- (BOOL)isSelectable;
- (BOOL)isVerticallyResizable;
- (id)itemsForSharingServiceInRanges:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)keyUp:(id)arg1;
- (BOOL)knowsPageRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg1;
- (BOOL)knowsPagesFirst:(long long*)arg1 last:(long long*)arg2;
- (id)layoutManager;
- (id)layoutManager:(id)arg1 effectiveCUICatalogForTextEffect:(id)arg2;
- (long long)layoutOrientation;
- (id)linkTextAttributes;
- (struct CGPoint { double x1; double x2; })locationOfPrintRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)lockDocument;
- (void)loosenKerning:(id)arg1;
- (void)lowerBaseline:(id)arg1;
- (void)lowercaseWord:(id)arg1;
- (id)makeBackingLayer;
- (void)makeBaseWritingDirectionLeftToRight:(id)arg1;
- (void)makeBaseWritingDirectionNatural:(id)arg1;
- (void)makeBaseWritingDirectionRightToLeft:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionNatural:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (id)makeTouchBar;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })markedRange;
- (id)markedTextAttributes;
- (struct CGSize { double x1; double x2; })maxSize;
- (id)menuForEvent:(id)arg1;
- (id)menuItemsForTextCheckingResult:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 contextual:(BOOL)arg3 event:(id)arg4;
- (struct CGSize { double x1; double x2; })minSize;
- (void)mouseCancelled:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)moveBackward:(id)arg1;
- (void)moveBackwardAndModifySelection:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveForward:(id)arg1;
- (void)moveForwardAndModifySelection:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveParagraphBackwardAndModifySelection:(id)arg1;
- (void)moveParagraphForwardAndModifySelection:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveToBeginningOfDocument:(id)arg1;
- (void)moveToBeginningOfDocumentAndModifySelection:(id)arg1;
- (void)moveToBeginningOfLine:(id)arg1;
- (void)moveToBeginningOfLineAndModifySelection:(id)arg1;
- (void)moveToBeginningOfParagraph:(id)arg1;
- (void)moveToBeginningOfParagraphAndModifySelection:(id)arg1;
- (void)moveToEndOfDocument:(id)arg1;
- (void)moveToEndOfDocumentAndModifySelection:(id)arg1;
- (void)moveToEndOfLine:(id)arg1;
- (void)moveToEndOfLineAndModifySelection:(id)arg1;
- (void)moveToEndOfParagraph:(id)arg1;
- (void)moveToEndOfParagraphAndModifySelection:(id)arg1;
- (void)moveToLeftEndOfLine:(id)arg1;
- (void)moveToLeftEndOfLineAndModifySelection:(id)arg1;
- (void)moveToRightEndOfLine:(id)arg1;
- (void)moveToRightEndOfLineAndModifySelection:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)moveWordBackward:(id)arg1;
- (void)moveWordBackwardAndModifySelection:(id)arg1;
- (void)moveWordForward:(id)arg1;
- (void)moveWordForwardAndModifySelection:(id)arg1;
- (void)moveWordLeft:(id)arg1;
- (void)moveWordLeftAndModifySelection:(id)arg1;
- (void)moveWordRight:(id)arg1;
- (void)moveWordRightAndModifySelection:(id)arg1;
- (unsigned long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (void)orderFrontLinkPanel:(id)arg1;
- (void)orderFrontListPanel:(id)arg1;
- (void)orderFrontSharingServicePicker:(id)arg1;
- (void)orderFrontSpacingPanel:(id)arg1;
- (void)orderFrontSubstitutionsPanel:(id)arg1;
- (void)orderFrontTablePanel:(id)arg1;
- (void)outline:(id)arg1;
- (void)pageDown:(id)arg1;
- (void)pageDownAndModifySelection:(id)arg1;
- (void)pageUp:(id)arg1;
- (void)pageUpAndModifySelection:(id)arg1;
- (void)paste:(id)arg1;
- (void)pasteAsPlainText:(id)arg1;
- (void)pasteAsRichText:(id)arg1;
- (void)pasteFont:(id)arg1;
- (void)pasteRuler:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)performFindPanelAction:(id)arg1;
- (void)performPendingTextChecking;
- (void)performTextFinderAction:(id)arg1;
- (id)placeholderAttributedString;
- (id)placeholderString;
- (id)preferredPasteboardTypeFromArray:(id)arg1 restrictedToTypesFromArray:(id)arg2;
- (long long)preferredTextFinderStyle;
- (void)prepareContentInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(unsigned long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (id)previewPanel:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg3;
- (void)quickLookPreviewItems:(id)arg1;
- (id)quickLookPreviewableItemsInRanges:(id)arg1;
- (void)quickLookWithEvent:(id)arg1;
- (void)raiseBaseline:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeForUserCharacterAttributeChange;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeForUserCompletion;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeForUserParagraphAttributeChange;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeForUserTextChange;
- (id)rangesForUserCharacterAttributeChange;
- (id)rangesForUserParagraphAttributeChange;
- (id)rangesForUserTextChange;
- (BOOL)readRTFDFromFile:(id)arg1;
- (BOOL)readSelectionFromPasteboard:(id)arg1;
- (BOOL)readSelectionFromPasteboard:(id)arg1 type:(id)arg2;
- (id)readablePasteboardTypes;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectForPage:(long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectForSmartMagnificationAtPoint:(struct CGPoint { double x1; double x2; })arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (id)rectsForCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)removeAccents:(id)arg1;
- (void)removeFromSuperview;
- (void)replaceCharactersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withRTF:(id)arg2;
- (void)replaceCharactersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withRTFD:(id)arg2;
- (void)replaceCharactersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withString:(id)arg2;
- (void)replaceDashesInSelection:(id)arg1;
- (void)replaceQuotesInSelection:(id)arg1;
- (void)replaceTextContainer:(id)arg1;
- (void)replaceTextInSelection:(id)arg1;
- (id)replacementObjectForArchiver:(id)arg1;
- (id)replacementObjectForKeyedArchiver:(id)arg1;
- (void)resetCursorRects;
- (BOOL)resignFirstResponder;
- (void)resignKeyFocus;
- (void)resignKeyWindow;
- (void)restoreStateWithCoder:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)rulerView:(id)arg1 didAddMarker:(id)arg2;
- (void)rulerView:(id)arg1 didMoveMarker:(id)arg2;
- (void)rulerView:(id)arg1 didRemoveMarker:(id)arg2;
- (void)rulerView:(id)arg1 handleMouseDown:(id)arg2;
- (BOOL)rulerView:(id)arg1 handleMouseDown:(id)arg2 forMarker:(id)arg3;
- (double)rulerView:(id)arg1 locationForPoint:(struct CGPoint { double x1; double x2; })arg2;
- (struct CGPoint { double x1; double x2; })rulerView:(id)arg1 pointForLocation:(double)arg2;
- (BOOL)rulerView:(id)arg1 shouldAddMarker:(id)arg2;
- (BOOL)rulerView:(id)arg1 shouldMoveMarker:(id)arg2;
- (BOOL)rulerView:(id)arg1 shouldRemoveMarker:(id)arg2;
- (double)rulerView:(id)arg1 willAddMarker:(id)arg2 atLocation:(double)arg3;
- (double)rulerView:(id)arg1 willMoveMarker:(id)arg2 toLocation:(double)arg3;
- (void)rulerView:(id)arg1 willSetClientView:(id)arg2;
- (void)scaleUnitSquareToSize:(struct CGSize { double x1; double x2; })arg1;
- (void)scrollLineDown:(id)arg1;
- (void)scrollLineUp:(id)arg1;
- (void)scrollPageDown:(id)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)scrollRangeToVisible:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)scrollToBeginningOfDocument:(id)arg1;
- (void)scrollToEndOfDocument:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)selectLine:(id)arg1;
- (void)selectParagraph:(id)arg1;
- (void)selectToMark:(id)arg1;
- (void)selectWord:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })selectedRange;
- (id)selectedRanges;
- (id)selectedTextAttributes;
- (unsigned long long)selectionAffinity;
- (unsigned long long)selectionGranularity;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })selectionRangeForProposedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 granularity:(unsigned long long)arg2;
- (void)setAcceptsGlyphInfo:(BOOL)arg1;
- (void)setAlignment:(unsigned long long)arg1;
- (void)setAlignment:(unsigned long long)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)setAllowedInputSourceLocales:(id)arg1;
- (void)setAllowsCharacterPickerTouchBarItem:(BOOL)arg1;
- (void)setAllowsDocumentBackgroundColorChange:(BOOL)arg1;
- (void)setAllowsImageEditing:(BOOL)arg1;
- (void)setAllowsUndo:(BOOL)arg1;
- (void)setAutomaticDashSubstitutionEnabled:(BOOL)arg1;
- (void)setAutomaticDataDetectionEnabled:(BOOL)arg1;
- (void)setAutomaticLanguageIdentificationEnabled:(BOOL)arg1;
- (void)setAutomaticLinkDetectionEnabled:(BOOL)arg1;
- (void)setAutomaticQuoteSubstitutionEnabled:(BOOL)arg1;
- (void)setAutomaticSpellingCorrectionEnabled:(BOOL)arg1;
- (void)setAutomaticTextCompletionEnabled:(BOOL)arg1;
- (void)setAutomaticTextReplacementEnabled:(BOOL)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setBaseWritingDirection:(long long)arg1;
- (void)setBaseWritingDirection:(long long)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)setBoundsSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setCentersOnScroll:(BOOL)arg1;
- (void)setConstrainedFrameSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setContinuousSpellCheckingEnabled:(BOOL)arg1;
- (void)setDefaultParagraphStyle:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisplaysLinkToolTips:(BOOL)arg1;
- (void)setDrawsBackground:(BOOL)arg1;
- (void)setEditable:(BOOL)arg1;
- (void)setEnabledTextCheckingTypes:(unsigned long long)arg1;
- (void)setFieldEditor:(BOOL)arg1;
- (void)setFont:(id)arg1;
- (void)setFont:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)setFrameSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setGrammarCheckingEnabled:(BOOL)arg1;
- (void)setHorizontallyResizable:(BOOL)arg1;
- (void)setImportsGraphics:(BOOL)arg1;
- (void)setIncrementalSearchingEnabled:(BOOL)arg1;
- (void)setInsertionPointColor:(id)arg1;
- (void)setLayer:(id)arg1;
- (void)setLayoutOrientation:(long long)arg1;
- (void)setLinkTextAttributes:(id)arg1;
- (void)setMark:(id)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 replacementRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (void)setMarkedTextAttributes:(id)arg1;
- (void)setMaxSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setMinSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 avoidAdditionalLayout:(BOOL)arg2;
- (void)setPlaceholderAttributedString:(id)arg1;
- (void)setPlaceholderString:(id)arg1;
- (void)setPreferredTextFinderStyle:(long long)arg1;
- (void)setRichText:(BOOL)arg1;
- (void)setRulerVisible:(BOOL)arg1;
- (void)setSelectable:(BOOL)arg1;
- (void)setSelectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setSelectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 affinity:(unsigned long long)arg2 stillSelecting:(BOOL)arg3;
- (void)setSelectedRanges:(id)arg1;
- (void)setSelectedRanges:(id)arg1 affinity:(unsigned long long)arg2 stillSelecting:(BOOL)arg3;
- (void)setSelectedTextAttributes:(id)arg1;
- (void)setSelectionGranularity:(unsigned long long)arg1;
- (void)setSmartInsertDeleteEnabled:(BOOL)arg1;
- (void)setSpellingState:(long long)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)setString:(id)arg1;
- (void)setTextColor:(id)arg1;
- (void)setTextColor:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)setTextContainer:(id)arg1;
- (void)setTextContainerInset:(struct CGSize { double x1; double x2; })arg1;
- (void)setTouchBar:(id)arg1;
- (void)setTypingAttributes:(id)arg1;
- (void)setUndoActionName:(id)arg1;
- (void)setUsesFindBar:(BOOL)arg1;
- (void)setUsesFindPanel:(BOOL)arg1;
- (void)setUsesFontPanel:(BOOL)arg1;
- (void)setUsesInspectorBar:(BOOL)arg1;
- (void)setUsesRolloverButtonForSelection:(BOOL)arg1;
- (void)setUsesRuler:(BOOL)arg1;
- (void)setVerticallyResizable:(BOOL)arg1;
- (void)setWantsNotificationForMarkedText:(BOOL)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })sharingService:(id)arg1 containerFrameOnScreenForShareItem:(id)arg2;
- (void)sharingService:(id)arg1 didShareItems:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })sharingService:(id)arg1 sourceFrameOnScreenForShareItem:(id)arg2;
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long*)arg3;
- (id)sharingService:(id)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg3;
- (id)sharingServicePicker:(id)arg1 delegateForSharingService:(id)arg2;
- (id)sharingServicePicker:(id)arg1 sharingServicesForItems:(id)arg2 mask:(unsigned long long)arg3 proposedSharingServices:(id)arg4;
- (BOOL)shouldBeTreatedAsInkEvent:(id)arg1;
- (BOOL)shouldChangeTextInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 replacementString:(id)arg2;
- (BOOL)shouldChangeTextInRanges:(id)arg1 replacementStrings:(id)arg2;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)shouldDrawInsertionPoint;
- (BOOL)shouldReplaceCharactersInRanges:(id)arg1 withStrings:(id)arg2;
- (void)showDefinitionForAttributedString:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 options:(id)arg3 baselineOriginProvider:(id)arg4;
- (void)showDefinitionFromMenu:(id)arg1;
- (void)showFindIndicatorForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)showFindIndicatorForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 fade:(BOOL)arg2;
- (void)showGuessPanel:(id)arg1;
- (void)showHighlightWithCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 highlightStyle:(unsigned long long)arg2;
- (void)sizeToFit;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })smartDeleteRangeForProposedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)smartInsertAfterStringForString:(id)arg1 replacingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (id)smartInsertBeforeStringForString:(id)arg1 replacingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (BOOL)smartInsertDeleteEnabled;
- (void)smartInsertForString:(id)arg1 replacingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 beforeString:(id*)arg3 afterString:(id*)arg4;
- (void)spellCheckerDidChangeCorrection:(id)arg1;
- (void)spellCheckerDidChangeDashSubstitution:(id)arg1;
- (void)spellCheckerDidChangeLanguage:(id)arg1;
- (void)spellCheckerDidChangeQuoteSubstitution:(id)arg1;
- (void)spellCheckerDidChangeReplacement:(id)arg1;
- (void)spellCheckerDidLearnWord:(id)arg1;
- (void)spellCheckerDidUnlearnWord:(id)arg1;
- (long long)spellCheckerDocumentTag;
- (void)spotlight:(id)arg1;
- (void)startSpeaking:(id)arg1;
- (void)stopSpeaking:(id)arg1;
- (id)string;
- (void)subscript:(id)arg1;
- (void)substituteQuotesForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)superscript:(id)arg1;
- (void)swapWithMark:(id)arg1;
- (id)textColor;
- (id)textContainer;
- (struct CGSize { double x1; double x2; })textContainerInset;
- (struct CGPoint { double x1; double x2; })textContainerOrigin;
- (id)textStorage;
- (void)tightenKerning:(id)arg1;
- (void)toggleAutomaticDashSubstitution:(id)arg1;
- (void)toggleAutomaticDataDetection:(id)arg1;
- (void)toggleAutomaticLanguageIdentification:(id)arg1;
- (void)toggleAutomaticLinkDetection:(id)arg1;
- (void)toggleAutomaticQuoteSubstitution:(id)arg1;
- (void)toggleAutomaticSpellingCorrection:(id)arg1;
- (void)toggleAutomaticTextCompletion:(id)arg1;
- (void)toggleAutomaticTextReplacement:(id)arg1;
- (void)toggleBaseWritingDirection:(id)arg1;
- (void)toggleContinuousSpellChecking:(id)arg1;
- (void)toggleGrammarChecking:(id)arg1;
- (void)toggleQuickLookPreviewPanel:(id)arg1;
- (void)toggleRuler:(id)arg1;
- (void)toggleSmartInsertDelete:(id)arg1;
- (void)toggleTraditionalCharacterShape:(id)arg1;
- (id)tokenizingCharacterSet;
- (id)touchBar:(id)arg1 makeItemForIdentifier:(id)arg2;
- (id)touchBarItemController;
- (void)transliterateToLatin:(id)arg1;
- (void)transpose:(id)arg1;
- (void)turnOffKerning:(id)arg1;
- (void)turnOffLigatures:(id)arg1;
- (id)typingAttributes;
- (void)underline:(id)arg1;
- (id)undoManager;
- (void)unlockDocument;
- (void)unmarkText;
- (void)unscript:(id)arg1;
- (void)updateCandidates;
- (void)updateDragTypeRegistration;
- (void)updateDraggingItemsForDrag:(id)arg1;
- (void)updateFontPanel;
- (void)updateInsertionPointStateAndRestartTimer:(BOOL)arg1;
- (void)updateInspectorBar;
- (void)updateQuickLookPreviewPanel;
- (void)updateRuler;
- (void)updateSpellingPanel;
- (void)updateTextTouchBarItems;
- (void)updateTouchBarItemIdentifiers;
- (void)updateTrackingAreas;
- (void)uppercaseWord:(id)arg1;
- (void)useAllLigatures:(id)arg1;
- (void)useStandardKerning:(id)arg1;
- (void)useStandardLigatures:(id)arg1;
- (BOOL)usesFindBar;
- (BOOL)usesFindPanel;
- (BOOL)usesFontPanel;
- (BOOL)usesInspectorBar;
- (BOOL)usesRolloverButtonForSelection;
- (BOOL)usesRuler;
- (id)validAttributesForMarkedText;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)viewDidEndLiveResize;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewWillStartLiveResize;
- (id)visibleCharacterRanges;
- (BOOL)wantsNotificationForMarkedText;
- (void)willOpenMenu:(id)arg1 withEvent:(id)arg2;
- (long long)windowLevel;
- (id)writablePasteboardTypes;
- (BOOL)writeRTFDToFile:(id)arg1 atomically:(BOOL)arg2;
- (BOOL)writeSelectionToPasteboard:(id)arg1 type:(id)arg2;
- (BOOL)writeSelectionToPasteboard:(id)arg1 types:(id)arg2;
- (void)yank:(id)arg1;
- (void)yankAndSelect:(id)arg1;

// Image: /System/Library/Frameworks/MapKit.framework/Versions/A/MapKit

// NSTextView (MKCrossPlatformOperations)

- (id)attributedText;
- (void)setAttributedText:(id)arg1;
- (void)setText:(id)arg1;
- (id)text;

// Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer

// NSTextView (GFLogMessage)

- (void)_GFLogMessage:(id)arg1;

@end
