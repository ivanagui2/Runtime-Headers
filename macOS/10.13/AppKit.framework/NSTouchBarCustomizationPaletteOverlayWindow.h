/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSTouchBarCustomizationPaletteOverlayWindow : NSWindow {
    _NSOverlayBackgroundView * _backgroundView;
    BOOL  _debugMode;
    NSTouchBarCustomizationPalettePushButton * _doneButton;
    NSLayoutConstraint * _doneButtonWidthConstraint;
    NSString * _dragLabel;
    struct CGPoint { 
        double x; 
        double y; 
    }  _dragLocation;
    struct CGSize { 
        double width; 
        double height; 
    }  _dragSize;
    NSTextField * _headerLabel;
    NSLayoutConstraint * _headerLabelInsetConstraint;
    NSBox * _headerSeparator;
    NSStackView * _horizontalHeaderStack;
    NSTouchBarCustomizationPaletteLabelPopoverView * _labelView;
    NSLayoutConstraint * _leadingPaletteViewConstraint;
    NSViewController * _paletteContentViewController;
    double  _paletteScaleFactor;
    NSTouchBarCustomizationPaletteCheckbox * _quicktypeCheckbox;
    _NSFunctionRowCustomizationDragTarget * _screenBottomDragTarget;
    _NSCustomizationSheetBackgroundView * _sheetBackground;
    NSView * _sheetContainer;
    BOOL  _showQuickType;
    NSLayoutConstraint * _trailingPaletteViewConstraint;
    NSStackView * _verticalStack;
}

@property (atomic, readwrite) BOOL debugMode;
@property (atomic, readwrite, copy) NSString *dragLabel;
@property (atomic, readwrite) struct CGPoint { double x1; double x2; } dragLocation;
@property (atomic, readwrite) struct CGSize { double x1; double x2; } dragSize;
@property (atomic, readwrite, retain) NSViewController *paletteContentViewController;
@property (atomic, readwrite) double paletteScaleFactor;
@property (atomic, readonly, retain) _NSFunctionRowCustomizationDragTarget *screenBottomDragTarget;
@property (atomic, readwrite) BOOL showQuickType;

- (void)_appDidDeactivate:(id)arg1;
- (BOOL)_blocksActionWhenModal:(SEL)arg1;
- (BOOL)_blocksKeyAndMainWindowTouchBarsWhenModal;
- (void)_dismissModalForTerminate;
- (double)_doneButtonWidth;
- (void)_handleIntrusion;
- (id)_headerLabelAttributedString;
- (id)_headerLabelFont;
- (double)_headerLabelInset;
- (double)_horizontalHeaderStackSpacing;
- (BOOL)_isNonactivatingPanel;
- (double)_paletteHorizontalInsets;
- (double)_postHeaderSpacing;
- (void)_quickTypeDidChange:(id)arg1;
- (void)_setModalWindowLevel;
- (BOOL)_shouldDoLayerPerformanceUpdates;
- (struct NSEdgeInsets { double x1; double x2; double x3; double x4; })_verticalStackInsets;
- (double)_verticalStackSpacing;
- (BOOL)_wantsSnapshotProxyWindowForOrderOutAnimation;
- (void)_windowDidBecomeKey:(id)arg1;
- (void)animateIn;
- (void)animateOut;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (void)dealloc;
- (BOOL)debugMode;
- (void)done:(id)arg1;
- (id)dragLabel;
- (struct CGPoint { double x1; double x2; })dragLocation;
- (struct CGSize { double x1; double x2; })dragSize;
- (id)initWithScreen:(id)arg1 displayID:(int)arg2 paletteContent:(id)arg3;
- (void)orderOut:(id)arg1;
- (id)paletteContentViewController;
- (double)paletteScaleFactor;
- (BOOL)performKeyEquivalent:(id)arg1;
- (id)screenBottomDragTarget;
- (void)setDebugMode:(BOOL)arg1;
- (void)setDragLabel:(id)arg1;
- (void)setDragLocation:(struct CGPoint { double x1; double x2; })arg1;
- (void)setDragSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setPaletteContentViewController:(id)arg1;
- (void)setPaletteScaleFactor:(double)arg1;
- (void)setShowQuickType:(BOOL)arg1;
- (BOOL)showQuickType;
- (void)toggleQuicktype:(id)arg1;

@end
