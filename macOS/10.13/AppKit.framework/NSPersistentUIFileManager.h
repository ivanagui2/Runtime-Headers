/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSPersistentUIFileManager : NSObject {
    NSObject<OS_dispatch_queue> * _IOQueue;
    unsigned long long  _currentFileSize;
    BOOL  _elideAllFileWrites;
    unsigned long long  _fileSizeAfterLastRewrite;
    NSURL * _persistentStateDirectoryURL;
    unsigned int  _publicPlistChecksum;
    int  _publicPlistFD;
    BOOL  _rawHadValidStateDirectoryAtLaunch;
    NSPersistentUIPreservedStateDirectory * _rawStateDirectoryAtLaunch;
    BOOL  _stateDirectoryHasBeenRefreshed;
    int  _stateFileFD;
    BOOL  _stateFileHasBeenCreated;
}

@property (setter=_setRawHadValidStateDirectoryAtLaunch:, atomic, readwrite) BOOL _rawHadValidStateDirectoryAtLaunch;
@property (setter=_setRawStateDirectoryAtLaunch:, atomic, readwrite, retain) NSPersistentUIPreservedStateDirectory *_rawStateDirectoryAtLaunch;
@property (atomic, readonly, copy) NSURL *persistentStateDirectoryURL;

+ (id)persistentStateDirectoryURLForBundleID:(id)arg1;

- (void)_elideAllFileWrites;
- (id)_persistentStateFileURL;
- (BOOL)_rawHadValidStateDirectoryAtLaunch;
- (id)_rawStateDirectoryAtLaunch;
- (BOOL)_refreshStateDirectoryIfNecessary;
- (void)_setRawHadValidStateDirectoryAtLaunch:(BOOL)arg1;
- (void)_setRawStateDirectoryAtLaunch:(id)arg1;
- (BOOL)_trySystemCallDescribedBy:(const char *)arg1 executor:(id)arg2;
- (void)_writePublicPlistData:(id)arg1;
- (void)_writeRecords:(id)arg1 withWindowInfos:(id)arg2 flushingStaleData:(BOOL)arg3;
- (void)dealloc;
- (void)discardPersistentState;
- (void)finishPendingChangesImmediatelyWithCompletionHandler:(id)arg1;
- (BOOL)hasPersistentStateToRestore;
- (id)init;
- (id)initWithPersistentStateDirectoryURL:(id)arg1;
- (void)invalidateStateDirectoryAtLaunch;
- (int)openPersistentStateFile;
- (id)persistentStateDirectoryURL;
- (void)preserveStateDirectoryAtLaunch;
- (void)refreshStateDirectoryIfNecessary;
- (void)reopenPersistentState;
- (void)rewriteFile:(int)arg1 withWindowInfos:(id)arg2 withImpendingRecords:(id)arg3;
- (id)stateDirectoryAtLaunch;
- (void)tryCreatingPersistentStateDirectoryForURL:(id)arg1;
- (void)writePublicPlistData:(id)arg1;
- (unsigned long long)writeRecords:(id)arg1 toFile:(int)arg2;
- (void)writeRecords:(id)arg1 withWindowInfos:(id)arg2 flushingStaleData:(BOOL)arg3;

@end
