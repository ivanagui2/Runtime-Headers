/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSRuleEditor : NSControl <DebugHierarchyObject> {
    double  _alignmentGridWidth;
    NSString * _boundArrayKeyPath;
    id  _boundArrayOwner;
    NSViewAnimation * _currentAnimation;
    NSIndexSet * _draggingRows;
    id  _dropLineView;
    id  _headerLocalizer;
    NSString * _itemsKeyPath;
    long long  _lastRow;
    long long  _nestingMode;
    NSPredicate * _predicate;
    NSMutableArray * _rowCache;
    Class  _rowClass;
    id  _ruleDataSource;
    id  _ruleDelegate;
    struct { 
        unsigned int elideUpdating : 1; 
        unsigned int lastAlternateKeyValue : 1; 
        unsigned int extendedDelegateCalls : 1; 
        unsigned int editable : 1; 
        unsigned int settingSize : 1; 
        unsigned int suppressKeyDown : 1; 
        unsigned int dropWasSuccessful : 1; 
        unsigned int delegateWantsValidation : 1; 
        unsigned int disallowEmpty : 1; 
        unsigned int lastDrewWithFRAppearance : 1; 
        unsigned int allowsEmptyCompoundRows : 1; 
        unsigned int dropChangedRowCount : 1; 
        unsigned int reserved : 20; 
    }  _ruleEditorFlags;
    id  _ruleReserved1;
    id  _ruleReserved2;
    double  _sliceHeight;
    NSMutableArray * _slices;
    NSView * _slicesHolder;
    id  _standardLocalizer;
    NSString * _stringsFileName;
    NSString * _subrowsArrayKeyPath;
    long long  _subviewIndexOfDropLine;
    NSString * _typeKeyPath;
    id  _unused1;
    NSString * _valuesKeyPath;
}

@property (atomic, readwrite) BOOL canRemoveAllRows;
@property (atomic, readwrite, copy) NSString *criteriaKeyPath;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readwrite) <NSRuleEditorDelegate> *delegate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite, copy) NSString *displayValuesKeyPath;
@property (getter=isEditable, atomic, readwrite) BOOL editable;
@property (atomic, readwrite, copy) NSDictionary *formattingDictionary;
@property (atomic, readwrite, copy) NSString *formattingStringsFilename;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readwrite) unsigned long long nestingMode;
@property (atomic, readonly) long long numberOfRows;
@property (atomic, readonly) NSPredicate *predicate;
@property (atomic, readwrite) Class rowClass;
@property (atomic, readwrite) double rowHeight;
@property (atomic, readwrite, copy) NSString *rowTypeKeyPath;
@property (atomic, readonly, copy) NSIndexSet *selectedRowIndexes;
@property (atomic, readwrite, copy) NSString *subrowsKeyPath;
@property (atomic, readonly) Class superclass;

// Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit

- (void).cxx_destruct;
- (void)_addOptionFromSlice:(id)arg1 ofRowType:(unsigned long long)arg2;
- (double)_alignmentGridWidth;
- (BOOL)_allowsEmptyCompoundRows;
- (unsigned long long)_applicableNestingMode;
- (id)_backgroundColors;
- (void)_changedItem:(id)arg1 toItem:(id)arg2 inRow:(long long)arg3;
- (void)_changedRowArray:(id)arg1 withOldRowArray:(id)arg2 forParent:(id)arg3;
- (id)_childlessParentsIfSlicesWereDeletedAtIndexes:(id)arg1;
- (long long)_countOfRowsStartingAtObject:(id)arg1;
- (id)_createNewSliceWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 ruleEditorView:(id)arg2;
- (id)_createSliceDropSeparator;
- (void)_deleteSlice:(id)arg1;
- (void)_deselectAll;
- (id)_dragHandleColors;
- (id)_dragImageForIndices:(id)arg1;
- (unsigned long long)_dragOperationFromInfo:(id)arg1;
- (BOOL)_dragShouldBeginFromMouseDown:(id)arg1;
- (id)_draggingTypes;
- (void)_drawSliceBackgroundsWithClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_extendItem:(id)arg1 withRow:(long long)arg2;
- (BOOL)_findRowObject:(id)arg1 startingAtObject:(id)arg2 withIndex:(long long*)arg3;
- (void)_fullCacheUpdate;
- (void)_fullCacheUpdateRecursive:(id)arg1 intoRow:(long long*)arg2 withIndentation:(long long)arg3;
- (id)_generateFormattingDictionaryStringsFile;
- (void)_getAllAvailableItems:(id*)arg1 values:(id*)arg2 asChildrenOfItem:(id)arg3 inRow:(long long)arg4;
- (id)_getItemsAndValuesToAddForRow:(long long)arg1 ofType:(unsigned long long)arg2;
- (id)_globalIndexesForSubrowIndexes:(id)arg1 ofParentObject:(id)arg2;
- (id)_includeSubslicesForSlicesAtIndexes:(id)arg1;
- (void)_initRuleEditorShared;
- (id)_insertNewRowAtIndex:(long long)arg1 ofType:(unsigned long long)arg2 withParentRow:(long long)arg3;
- (BOOL)_isInDesignMode;
- (long long)_lastRow;
- (long long)_lastSelectedSliceIndex;
- (long long)_layoutOrderForItem:(id)arg1 inRow:(long long)arg2;
- (id)_layoutOrdersForChoiceRootedAtItem:(id)arg1 inRow:(long long)arg2;
- (void)_loadInitialRows;
- (id)_localizerForSlice:(id)arg1;
- (double)_minimumFrameHeight;
- (void)_mouseDownOnSlice:(id)arg1 withEvent:(id)arg2;
- (id)_newSlice;
- (BOOL)_nextUnusedItems:(id*)arg1 andValues:(id*)arg2 forRow:(long long)arg3 forRowType:(unsigned long long)arg4;
- (void)_performClickOnSlice:(id)arg1 withEvent:(id)arg2;
- (BOOL)_performDragForSlice:(id)arg1 withEvent:(id)arg2;
- (BOOL)_plusMinusButtonsAcceptFirstMouse;
- (void)_postRowCountChangedNotificationOfType:(long long)arg1 indexes:(id)arg2;
- (void)_postRuleOptionChangedNotification;
- (BOOL)_privateDelegateMethodsEnabled;
- (BOOL)_queryCanSelectItem:(id)arg1 displayValue:(id)arg2 inRow:(long long)arg3;
- (id)_queryChild:(long long)arg1 ofItem:(id)arg2 withRowType:(long long)arg3;
- (long long)_queryNumberOfChildrenOfItem:(id)arg1 withRowType:(unsigned long long)arg2;
- (id)_queryOrderLocalizedDictionaries:(id)arg1 withParent:(id)arg2;
- (id)_queryValueForItem:(id)arg1 inRow:(long long)arg2;
- (void)_reconfigureSubviewsAnimate:(BOOL)arg1;
- (void)_recursiveGenerateFormattingDictionaryPlistForItem:(id)arg1 rowType:(unsigned long long)arg2 intoArray:(id)arg3 withPriorValues:(id)arg4 hasSiblings:(BOOL)arg5;
- (void)_removeSubrowsForRow:(long long)arg1 fromSet:(id)arg2;
- (void)_rightMouseDownOnSlice:(id)arg1 withEvent:(id)arg2;
- (id)_rootRowsArray;
- (id)_rowCacheForIndex:(long long)arg1;
- (long long)_rowIndexForRowObject:(id)arg1;
- (BOOL)_ruleViewHasFirstResponder;
- (id)_searchCacheForRowObject:(id)arg1;
- (id)_selectedActiveRowColor;
- (id)_selectedInactiveRowColor;
- (id)_selectedSliceIndices;
- (id)_selectedSlices;
- (void)_sendRuleAction;
- (void)_setAlignmentGridWidth:(double)arg1;
- (void)_setAllowsEmptyCompoundRows:(BOOL)arg1;
- (void)_setBoundDataSource:(id)arg1 withKeyPath:(id)arg2 options:(id)arg3;
- (void)_setHeaderLocalizer:(id)arg1;
- (void)_setPredicate:(id)arg1;
- (void)_setPrivateDelegateMethodsEnabled:(BOOL)arg1;
- (void)_setStandardLocalizer:(id)arg1;
- (void)_setSuppressKeyDownHandling:(BOOL)arg1;
- (void)_setWindow:(id)arg1;
- (BOOL)_shouldHideAddButtonForSlice:(id)arg1;
- (BOOL)_shouldHideSubtractButtonForSlice:(id)arg1;
- (id)_sliceBottomBorderColor;
- (id)_sliceLastBottomBorderColor;
- (id)_sliceTopBorderColor;
- (id)_slices;
- (void)_startObservingRowObjectsRecursively:(id)arg1;
- (void)_stopAnimationWithoutChangingFrames;
- (void)_stopObservingRowObjectsRecursively:(id)arg1;
- (id)_subrowObjectsOfObject:(id)arg1;
- (BOOL)_suppressKeyDownHandling;
- (id)_toolTipForAddCompoundRowButton;
- (id)_toolTipForAddSimpleRowButton;
- (id)_toolTipForDeleteRowButton;
- (id)_uniqueizeIndexSet:(id)arg1;
- (unsigned long long)_updateDragging:(id)arg1;
- (void)_updatePredicate;
- (void)_updateRowTypesToAdd;
- (void)_updateSliceIndentationAtIndex:(long long)arg1 toIndentation:(long long)arg2 withIndexSet:(id)arg3;
- (void)_updateSliceIndentations;
- (void)_updateSliceRows;
- (BOOL)_validateItem:(id)arg1 value:(id)arg2 inRow:(long long)arg3;
- (BOOL)_wantsMinimalArchival;
- (BOOL)_wantsRowAnimations;
- (void)_windowChangedKeyState;
- (void)_windowUpdate:(id)arg1;
- (void)dealloc;

// NSRuleEditor (NSRuleEditorAccessibility)

+ (BOOL)accessibilityIsSingleCelled;

// Image: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Debugger/libViewDebuggerSupport.dylib

// NSRuleEditor (DebugHierarchyAdditions)

- (id)debugHierarchyPropertyDescriptions;

// Image: /Applications/Xcode.app/Contents/Developer/usr/lib/libMainThreadChecker.dylib

- (id)accessibilityRoleAttribute;
- (void)addRow:(id)arg1;
- (void)bind:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (BOOL)canRemoveAllRows;
- (id)criteriaForRow:(long long)arg1;
- (id)criteriaKeyPath;
- (id)delegate;
- (id)displayValuesForRow:(long long)arg1;
- (id)displayValuesKeyPath;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint { double x1; double x2; })arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)formattingDictionary;
- (id)formattingStringsFilename;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)insertRowAtIndex:(long long)arg1 withType:(unsigned long long)arg2 asSubrowOfRow:(long long)arg3 animate:(BOOL)arg4;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (BOOL)isEditable;
- (BOOL)isFlipped;
- (unsigned long long)nestingMode;
- (long long)numberOfRows;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (long long)parentRowForRow:(long long)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (id)predicate;
- (id)predicateForRow:(long long)arg1;
- (void)reloadCriteria;
- (void)reloadPredicate;
- (void)removeRowAtIndex:(long long)arg1;
- (void)removeRowsAtIndexes:(id)arg1 includeSubrows:(BOOL)arg2;
- (Class)rowClass;
- (long long)rowForDisplayValue:(id)arg1;
- (double)rowHeight;
- (unsigned long long)rowTypeForRow:(long long)arg1;
- (id)rowTypeKeyPath;
- (void)selectAll:(id)arg1;
- (void)selectRowIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (id)selectedRowIndexes;
- (void)setCanRemoveAllRows:(BOOL)arg1;
- (void)setCriteria:(id)arg1 andDisplayValues:(id)arg2 forRowAtIndex:(long long)arg3;
- (void)setCriteriaKeyPath:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisplayValuesKeyPath:(id)arg1;
- (void)setEditable:(BOOL)arg1;
- (void)setFormattingDictionary:(id)arg1;
- (void)setFormattingStringsFilename:(id)arg1;
- (void)setFrameSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setNestingMode:(unsigned long long)arg1;
- (void)setRowClass:(Class)arg1;
- (void)setRowHeight:(double)arg1;
- (void)setRowTypeKeyPath:(id)arg1;
- (void)setSubrowsKeyPath:(id)arg1;
- (void)sizeToFit;
- (id)subrowIndexesForRow:(long long)arg1;
- (id)subrowsKeyPath;
- (void)unbind:(id)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;

@end
