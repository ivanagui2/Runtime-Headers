/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSMenu : NSObject <DebugHierarchyObject, NSAccessibility, NSAccessibilityElement, NSCoding, NSCopying, NSUserInterfaceItemIdentification> {
    id  _extra;
    id  _itemArray;
    struct __mFlags { 
        unsigned int noAutoenable : 1; 
        unsigned int inMain : 1; 
        unsigned int internalPerformAction : 1; 
        unsigned int condenseSeparators : 1; 
        unsigned int disabled : 1; 
        unsigned int ownedByPopUp : 1; 
        unsigned int delegateNeedsUpdate : 1; 
        unsigned int delegateUpdateItem : 1; 
        unsigned int delegateHasKeyEquiv : 1; 
        unsigned int delegateHasAltKeyEquiv : 1; 
        unsigned int excludeMarkColumn : 1; 
        unsigned int isContextualMenu : 1; 
        unsigned int cmPluginMode : 2; 
        unsigned int invertedCMPluginTypes : 2; 
        unsigned int allowsDifferentSelection : 1; 
        unsigned int noTopPadding : 1; 
        unsigned int noBottomPadding : 1; 
        unsigned int hasNCStyle : 1; 
        unsigned int delegateIsUnsafeUnretained : 1; 
        unsigned int avoidUsingCache : 1; 
        unsigned int RESERVED : 10; 
    }  _mFlags;
    NSMenu * _supermenu;
    NSString * _title;
    NSString * _uiid;
}

@property (atomic, readwrite) struct CGPoint { double x1; double x2; } accessibilityActivationPoint;
@property (atomic, readwrite, copy) NSArray *accessibilityAllowedValues;
@property (getter=isAccessibilityAlternateUIVisible, atomic, readwrite) BOOL accessibilityAlternateUIVisible;
@property (atomic, readwrite, retain) id accessibilityApplicationFocusedUIElement;
@property (atomic, readwrite, retain) id accessibilityCancelButton;
@property (atomic, readwrite, copy) NSArray *accessibilityChildren;
@property (atomic, readwrite, copy) NSArray *accessibilityChildrenInNavigationOrder;
@property (atomic, readwrite, retain) id accessibilityClearButton;
@property (atomic, readwrite, retain) id accessibilityCloseButton;
@property (atomic, readwrite) long long accessibilityColumnCount;
@property (atomic, readwrite, copy) NSArray *accessibilityColumnHeaderUIElements;
@property (atomic, readwrite) struct _NSRange { unsigned long long x1; unsigned long long x2; } accessibilityColumnIndexRange;
@property (atomic, readwrite, copy) NSArray *accessibilityColumnTitles;
@property (atomic, readwrite, copy) NSArray *accessibilityColumns;
@property (atomic, readwrite, copy) NSArray *accessibilityContents;
@property (atomic, readwrite, retain) id accessibilityCriticalValue;
@property (atomic, readwrite, copy) NSArray *accessibilityCustomActions;
@property (atomic, readwrite, copy) NSArray *accessibilityCustomRotors;
@property (atomic, readwrite, retain) id accessibilityDecrementButton;
@property (atomic, readwrite, retain) id accessibilityDefaultButton;
@property (getter=isAccessibilityDisclosed, atomic, readwrite) BOOL accessibilityDisclosed;
@property (atomic, readwrite) id accessibilityDisclosedByRow;
@property (atomic, readwrite, retain) id accessibilityDisclosedRows;
@property (atomic, readwrite) long long accessibilityDisclosureLevel;
@property (atomic, readwrite, copy) NSString *accessibilityDocument;
@property (getter=isAccessibilityEdited, atomic, readwrite) BOOL accessibilityEdited;
@property (getter=isAccessibilityElement, atomic, readwrite) BOOL accessibilityElement;
@property (getter=isAccessibilityEnabled, atomic, readwrite) BOOL accessibilityEnabled;
@property (getter=isAccessibilityExpanded, atomic, readwrite) BOOL accessibilityExpanded;
@property (atomic, readwrite) id accessibilityExtrasMenuBar;
@property (atomic, readwrite, copy) NSString *accessibilityFilename;
@property (getter=isAccessibilityFocused, atomic, readwrite) BOOL accessibilityFocused;
@property (atomic, readwrite, retain) id accessibilityFocusedWindow;
@property (atomic, readwrite) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } accessibilityFrame;
@property (getter=isAccessibilityFrontmost, atomic, readwrite) BOOL accessibilityFrontmost;
@property (atomic, readwrite, retain) id accessibilityFullScreenButton;
@property (atomic, readwrite, retain) id accessibilityGrowArea;
@property (atomic, readwrite, copy) NSArray *accessibilityHandles;
@property (atomic, readwrite, retain) id accessibilityHeader;
@property (atomic, readwrite, copy) NSString *accessibilityHelp;
@property (getter=isAccessibilityHidden, atomic, readwrite) BOOL accessibilityHidden;
@property (atomic, readwrite, retain) id accessibilityHorizontalScrollBar;
@property (atomic, readwrite, copy) NSString *accessibilityHorizontalUnitDescription;
@property (atomic, readwrite) long long accessibilityHorizontalUnits;
@property (atomic, readwrite, copy) NSString *accessibilityIdentifier;
@property (atomic, readwrite, retain) id accessibilityIncrementButton;
@property (atomic, readwrite) long long accessibilityIndex;
@property (atomic, readwrite) long long accessibilityInsertionPointLineNumber;
@property (atomic, readwrite, copy) NSString *accessibilityLabel;
@property (atomic, readwrite, copy) NSArray *accessibilityLabelUIElements;
@property (atomic, readwrite) float accessibilityLabelValue;
@property (atomic, readwrite, copy) NSArray *accessibilityLinkedUIElements;
@property (getter=isAccessibilityMain, atomic, readwrite) BOOL accessibilityMain;
@property (atomic, readwrite, retain) id accessibilityMainWindow;
@property (atomic, readwrite, retain) id accessibilityMarkerGroupUIElement;
@property (atomic, readwrite, copy) NSString *accessibilityMarkerTypeDescription;
@property (atomic, readwrite, copy) NSArray *accessibilityMarkerUIElements;
@property (atomic, readwrite, retain) id accessibilityMarkerValues;
@property (atomic, readwrite, retain) id accessibilityMaxValue;
@property (atomic, readwrite) id accessibilityMenuBar;
@property (atomic, readwrite, retain) id accessibilityMinValue;
@property (atomic, readwrite, retain) id accessibilityMinimizeButton;
@property (getter=isAccessibilityMinimized, atomic, readwrite) BOOL accessibilityMinimized;
@property (getter=isAccessibilityModal, atomic, readwrite) BOOL accessibilityModal;
@property (atomic, readwrite, copy) NSArray *accessibilityNextContents;
@property (atomic, readwrite) long long accessibilityNumberOfCharacters;
@property (getter=isAccessibilityOrderedByRow, atomic, readwrite) BOOL accessibilityOrderedByRow;
@property (atomic, readwrite) long long accessibilityOrientation;
@property (atomic, readwrite, retain) id accessibilityOverflowButton;
@property (atomic, readwrite) id accessibilityParent;
@property (atomic, readwrite, copy) NSString *accessibilityPlaceholderValue;
@property (atomic, readwrite, copy) NSArray *accessibilityPreviousContents;
@property (getter=isAccessibilityProtectedContent, atomic, readwrite) BOOL accessibilityProtectedContent;
@property (atomic, readwrite, retain) id accessibilityProxy;
@property (getter=isAccessibilityRequired, atomic, readwrite) BOOL accessibilityRequired;
@property (atomic, readwrite, copy) NSString *accessibilityRole;
@property (atomic, readwrite, copy) NSString *accessibilityRoleDescription;
@property (atomic, readwrite) long long accessibilityRowCount;
@property (atomic, readwrite, copy) NSArray *accessibilityRowHeaderUIElements;
@property (atomic, readwrite) struct _NSRange { unsigned long long x1; unsigned long long x2; } accessibilityRowIndexRange;
@property (atomic, readwrite, copy) NSArray *accessibilityRows;
@property (atomic, readwrite) long long accessibilityRulerMarkerType;
@property (atomic, readwrite, retain) id accessibilitySearchButton;
@property (atomic, readwrite, retain) id accessibilitySearchMenu;
@property (getter=isAccessibilitySelected, atomic, readwrite) BOOL accessibilitySelected;
@property (atomic, readwrite, copy) NSArray *accessibilitySelectedCells;
@property (atomic, readwrite, copy) NSArray *accessibilitySelectedChildren;
@property (atomic, readwrite, copy) NSArray *accessibilitySelectedColumns;
@property (atomic, readwrite, copy) NSArray *accessibilitySelectedRows;
@property (atomic, readwrite, copy) NSString *accessibilitySelectedText;
@property (atomic, readwrite) struct _NSRange { unsigned long long x1; unsigned long long x2; } accessibilitySelectedTextRange;
@property (atomic, readwrite, copy) NSArray *accessibilitySelectedTextRanges;
@property (atomic, readwrite, copy) NSArray *accessibilityServesAsTitleForUIElements;
@property (atomic, readwrite) struct _NSRange { unsigned long long x1; unsigned long long x2; } accessibilitySharedCharacterRange;
@property (atomic, readwrite, copy) NSArray *accessibilitySharedFocusElements;
@property (atomic, readwrite, copy) NSArray *accessibilitySharedTextUIElements;
@property (atomic, readwrite, retain) id accessibilityShownMenu;
@property (atomic, readwrite) long long accessibilitySortDirection;
@property (atomic, readwrite, copy) NSArray *accessibilitySplitters;
@property (atomic, readwrite, copy) NSString *accessibilitySubrole;
@property (atomic, readwrite, copy) NSArray *accessibilityTabs;
@property (atomic, readwrite, copy) NSString *accessibilityTitle;
@property (atomic, readwrite) id accessibilityTitleUIElement;
@property (atomic, readwrite, retain) id accessibilityToolbarButton;
@property (atomic, readwrite) id accessibilityTopLevelUIElement;
@property (atomic, readwrite, copy) NSURL *accessibilityURL;
@property (atomic, readwrite, copy) NSString *accessibilityUnitDescription;
@property (atomic, readwrite) long long accessibilityUnits;
@property (atomic, readwrite, retain) id accessibilityValue;
@property (atomic, readwrite, copy) NSString *accessibilityValueDescription;
@property (atomic, readwrite, retain) id accessibilityVerticalScrollBar;
@property (atomic, readwrite, copy) NSString *accessibilityVerticalUnitDescription;
@property (atomic, readwrite) long long accessibilityVerticalUnits;
@property (atomic, readwrite, copy) NSArray *accessibilityVisibleCells;
@property (atomic, readwrite) struct _NSRange { unsigned long long x1; unsigned long long x2; } accessibilityVisibleCharacterRange;
@property (atomic, readwrite, copy) NSArray *accessibilityVisibleChildren;
@property (atomic, readwrite, copy) NSArray *accessibilityVisibleColumns;
@property (atomic, readwrite, copy) NSArray *accessibilityVisibleRows;
@property (atomic, readwrite, retain) id accessibilityWarningValue;
@property (atomic, readwrite) id accessibilityWindow;
@property (atomic, readwrite, copy) NSArray *accessibilityWindows;
@property (atomic, readwrite, retain) id accessibilityZoomButton;
@property (atomic, readwrite) BOOL allowsContextMenuPlugIns;
@property (atomic, readwrite) BOOL autoenablesItems;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readwrite) <NSMenuDelegate> *delegate;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite, retain) NSFont *font;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readonly) NSMenuItem *highlightedItem;
@property (atomic, readwrite, copy) NSString *identifier;
@property (atomic, readonly, copy) NSArray *itemArray;
@property (atomic, readonly) double menuBarHeight;
@property (atomic, readwrite) double minimumWidth;
@property (atomic, readonly) long long numberOfItems;
@property (atomic, readwrite) BOOL showsStateColumn;
@property (atomic, readonly) struct CGSize { double x1; double x2; } size;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite) NSMenu *supermenu;
@property (atomic, readwrite, copy) NSString *title;
@property (atomic, readwrite) long long userInterfaceLayoutDirection;

// Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit

+ (id)_contextMenuEvent;
+ (id)_contextMenuTarget;
+ (id)_currentTrackingInfo;
+ (void)_drawHelpResultsSeparatorInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 flags:(unsigned long long)arg3;
+ (void)_drawOverlayForMenuHelpResultsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withClipRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 flags:(unsigned long long)arg3;
+ (id)_helpMenu;
+ (BOOL)_menuBarIsDark;
+ (id)_menusWithName:(id)arg1;
+ (void)_restoreTornOffMenus;
+ (void)_saveTornOffMenus;
+ (void)_setAppleMenuEnabled:(BOOL)arg1;
+ (void)_setContextMenuEvent:(id)arg1;
+ (void)_setContextMenuTarget:(id)arg1;
+ (void)_setHelpMenu:(id)arg1;
+ (void)initialize;
+ (BOOL)isMenuBarVisible;
+ (double)menuBarHeight;
+ (BOOL)menuBarVisible;
+ (long long)menuTypeForEvent:(id)arg1;
+ (struct _NSZone { }*)menuZone;
+ (void)popUpContextMenu:(id)arg1 withEvent:(id)arg2 forView:(id)arg3;
+ (void)popUpContextMenu:(id)arg1 withEvent:(id)arg2 forView:(id)arg3 withFont:(id)arg4;
+ (void)setMenuBarVisible:(BOOL)arg1;
+ (void)setMenuZone:(struct _NSZone { }*)arg1;

- (id)_accessibilityLabel;
- (void)_addSidebandMenuUpdaterForRoles:(long long)arg1 token:(id)arg2 priority:(long long)arg3 handler:(id)arg4;
- (BOOL)_allowsDifferentInitialPopupSelection;
- (void)_associateStatusItem:(id)arg1;
- (long long)_backgroundStyle;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_boundsIfOpen;
- (void)_cancelTrackingWithFade:(BOOL)arg1;
- (BOOL)_condensesSeparators;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_confinementRectForScreen:(id)arg1;
- (id)_contextMenuImpl;
- (const struct AEDesc { unsigned int x1; struct OpaqueAEDataStorageType {} **x2; }*)_contextMenuPluginAEDesc;
- (void)_createExtraIvars;
- (id)_createMenuImpl;
- (unsigned long long)_currentMenuUpdateFlags;
- (BOOL)_delegateWantsCloseCall;
- (BOOL)_delegateWantsConfinementRectCall;
- (BOOL)_delegateWantsDidFailToOpenCall;
- (BOOL)_delegateWantsHighlightedCall;
- (BOOL)_delegateWantsOpenCall;
- (BOOL)_delegateWantsPopulateCall;
- (BOOL)_delegateWantsPrepareCall;
- (void)_enableItem:(id)arg1;
- (void)_enableItems;
- (void)_endHandlingCarbonEvents:(id)arg1;
- (void)_finishedMakingConnections;
- (id)_fontOrNilIfDefault;
- (id)_handleCarbonEvents:(const struct EventTypeSpec { unsigned int x1; unsigned int x2; }*)arg1 count:(unsigned long long)arg2 handler:(id)arg3;
- (BOOL)_hasNCStyle;
- (BOOL)_hasPaddingOnEdge:(unsigned long long)arg1;
- (BOOL)_hasPendingCancellationEvent;
- (void)_image:(id*)arg1 frame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 forPopUpMenuPositioningItem:(id)arg3 atLocation:(struct CGPoint { double x1; double x2; })arg4 inView:(id)arg5 appearance:(id)arg6;
- (unsigned long long)_indentationWidth;
- (long long)_indexOfItemWithPartialTitle:(id)arg1;
- (void)_informDelegateOfHighlightedItem:(id)arg1;
- (id)_insertItemInSortedOrderWithTitle:(id)arg1 action:(SEL)arg2 keyEquivalent:(id)arg3;
- (void)_internalPerformActionForItemAtIndex:(long long)arg1;
- (BOOL)_isContextualMenu;
- (BOOL)_isEnabled;
- (BOOL)_isInMainMenu;
- (id)_itemArray;
- (long long)_layoutDirectionIfExists;
- (void)_limitedViewWantsRedisplayForItem:(id)arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_lockMenuPosition;
- (void)_menuChanged;
- (void)_menuDidChangeAccessibilityOverriddenAttribute:(id)arg1 from:(id)arg2 to:(id)arg3;
- (id)_menuImpl;
- (id)_menuImplIfExists;
- (void)_menuItem:(id)arg1 didChangeAccessibilityOverriddenAttribute:(id)arg2 from:(id)arg3 to:(id)arg4;
- (void)_menuItem:(id)arg1 didChangeActionFrom:(SEL)arg2 to:(SEL)arg3;
- (void)_menuItem:(id)arg1 didChangeAlternateFrom:(BOOL)arg2 to:(BOOL)arg3;
- (void)_menuItem:(id)arg1 didChangeAttributedTitleFrom:(id)arg2 to:(id)arg3;
- (void)_menuItem:(id)arg1 didChangeCustomViewFrom:(id)arg2 to:(id)arg3;
- (void)_menuItem:(id)arg1 didChangeCustomViewHandlesEventsFrom:(BOOL)arg2 to:(BOOL)arg3;
- (void)_menuItem:(id)arg1 didChangeDestructiveFrom:(BOOL)arg2 to:(BOOL)arg3;
- (void)_menuItem:(id)arg1 didChangeEnabledStateFrom:(BOOL)arg2 to:(BOOL)arg3;
- (void)_menuItem:(id)arg1 didChangeFontFrom:(id)arg2 to:(id)arg3;
- (void)_menuItem:(id)arg1 didChangeHiddenFrom:(BOOL)arg2 to:(BOOL)arg3;
- (void)_menuItem:(id)arg1 didChangeImageFrom:(id)arg2 to:(id)arg3;
- (void)_menuItem:(id)arg1 didChangeImageSizeFrom:(struct CGSize { double x1; double x2; })arg2 to:(struct CGSize { double x1; double x2; })arg3;
- (void)_menuItem:(id)arg1 didChangeIndentFrom:(long long)arg2 to:(long long)arg3;
- (void)_menuItem:(id)arg1 didChangeKeyEquivalentFrom:(id)arg2 to:(id)arg3;
- (void)_menuItem:(id)arg1 didChangeKeyEquivalentModifierMaskFrom:(unsigned long long)arg2 to:(unsigned long long)arg3;
- (void)_menuItem:(id)arg1 didChangeKeyEquivalentVirtualKeyCodeFrom:(unsigned short)arg2 to:(unsigned short)arg3;
- (void)_menuItem:(id)arg1 didChangeNewItemsCountFrom:(unsigned long long)arg2 to:(unsigned long long)arg3;
- (void)_menuItem:(id)arg1 didChangeNextItemIsAlternateFrom:(BOOL)arg2 to:(BOOL)arg3;
- (void)_menuItem:(id)arg1 didChangeRequiresModifiersToBeVisibleFrom:(BOOL)arg2 to:(BOOL)arg3;
- (void)_menuItem:(id)arg1 didChangeRespectsKeyEquivalentWhileHiddenFrom:(BOOL)arg2 to:(BOOL)arg3;
- (void)_menuItem:(id)arg1 didChangeSeparatorStatusFrom:(BOOL)arg2 to:(BOOL)arg3;
- (void)_menuItem:(id)arg1 didChangeStateImageFrom:(id)arg2 to:(id)arg3;
- (void)_menuItem:(id)arg1 didChangeSubmenuContentsWithSubmenu:(id)arg2;
- (void)_menuItem:(id)arg1 didChangeSubmenuFrom:(id)arg2 to:(id)arg3;
- (void)_menuItem:(id)arg1 didChangeTitleFrom:(id)arg2 to:(id)arg3;
- (void)_menuItem:(id)arg1 didChangeTooltipFrom:(id)arg2 to:(id)arg3;
- (id)_menuName;
- (id)_menuOwner;
- (BOOL)_menuOwnerCanUseMenuWhenModal;
- (long long)_menuPluginInsertionMode;
- (unsigned long long)_menuPluginTypes;
- (id)_menuServicesStartingRequestor;
- (void)_notifySupermenuOfSubmenuChange;
- (BOOL)_ownedByPopUp;
- (id)_owningPopUp;
- (void)_performActionWithHighlightingForItemAtIndex:(long long)arg1;
- (void)_performActionWithHighlightingForItemAtIndex:(long long)arg1 sendAccessibilityNotification:(BOOL)arg2;
- (BOOL)_performKeyEquivalentWithDelegate:(id)arg1;
- (void)_performSidebandUpdatersForRole:(long long)arg1 withEventRef:(void*)arg2;
- (void)_popUpContextMenu:(id)arg1 withEvent:(id)arg2 forView:(id)arg3;
- (void)_popUpContextMenu:(id)arg1 withEvent:(id)arg2 forView:(id)arg3 withFont:(id)arg4;
- (void)_popUpMenuWithEvent:(id)arg1 forView:(id)arg2;
- (void)_populate:(BOOL)arg1;
- (BOOL)_populateFromDelegateWithEventRef:(void*)arg1;
- (void)_populateFromSidebandUpdatersOfSign:(int)arg1 withEventRef:(void*)arg2;
- (BOOL)_populateWithEventRef:(void*)arg1;
- (void)_postItemChangedNotificationButIgnoringItOurselves:(id)arg1;
- (void)_recursivelyChangeLayoutDirectionFrom:(long long)arg1 to:(long long)arg2;
- (void)_recursivelyNoteChangedIsInMainMenu:(BOOL)arg1;
- (void)_removeSidebandMenuUpdaterForToken:(id)arg1;
- (void)_sendMenuClosedNotification:(BOOL)arg1;
- (void)_sendMenuOpeningNotification:(BOOL)arg1;
- (BOOL)_servicesMenuItemsAreForContextMenu;
- (void)_setAllowsDifferentInitialPopupSelection:(BOOL)arg1;
- (void)_setAvoidUsingCache:(BOOL)arg1;
- (void)_setCondensesSeparators:(BOOL)arg1;
- (void)_setContextMenuPluginAEDesc:(const struct AEDesc { unsigned int x1; struct OpaqueAEDataStorageType {} **x2; }*)arg1;
- (void)_setEnabled:(BOOL)arg1;
- (void)_setHasNCStyle:(BOOL)arg1;
- (void)_setHasPadding:(BOOL)arg1 onEdge:(unsigned long long)arg2;
- (void)_setIndentationWidth:(unsigned long long)arg1;
- (void)_setIsContextualMenu:(BOOL)arg1;
- (void)_setMenuName:(id)arg1;
- (void)_setMenuOwner:(id)arg1;
- (void)_setMenuPluginInsertionMode:(long long)arg1;
- (void)_setMenuPluginTypes:(unsigned long long)arg1;
- (void)_setMenuServicesStartingRequestor:(id)arg1;
- (void)_setOwnedByPopUp:(id)arg1;
- (void)_setSuppressAutoenabling:(BOOL)arg1;
- (long long)_sidebandUpdaterRoles;
- (id)_trackingInfo;
- (void)_unlockMenuPosition;
- (void)_updateEnabled;
- (void)_updateForTracking;
- (struct CGPoint { double x1; double x2; })accessibilityActivationPoint;
- (id)accessibilityAllowedValues;
- (id)accessibilityApplicationFocusedUIElement;
- (id)accessibilityAttributedStringForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)accessibilityAuditIssues;
- (id)accessibilityCancelButton;
- (id)accessibilityCellForColumn:(long long)arg1 row:(long long)arg2;
- (id)accessibilityChildren;
- (id)accessibilityChildrenInNavigationOrder;
- (id)accessibilityClearButton;
- (id)accessibilityCloseButton;
- (long long)accessibilityColumnCount;
- (id)accessibilityColumnHeaderUIElements;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilityColumnIndexRange;
- (id)accessibilityColumnTitles;
- (id)accessibilityColumns;
- (id)accessibilityContentSiblingAbove;
- (id)accessibilityContentSiblingBelow;
- (id)accessibilityContents;
- (id)accessibilityCriticalValue;
- (id)accessibilityCustomActions;
- (id)accessibilityCustomChoosers;
- (id)accessibilityCustomRotors;
- (id)accessibilityDecrementButton;
- (id)accessibilityDefaultButton;
- (id)accessibilityDisclosedByRow;
- (id)accessibilityDisclosedRows;
- (long long)accessibilityDisclosureLevel;
- (id)accessibilityDocument;
- (id)accessibilityExtrasMenuBar;
- (id)accessibilityFilename;
- (id)accessibilityFocusedWindow;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })accessibilityFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })accessibilityFrameForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })accessibilityFrameInParentSpace;
- (id)accessibilityFullScreenButton;
- (id)accessibilityFunctionRowTopLevelElements;
- (id)accessibilityGrowArea;
- (id)accessibilityHandles;
- (id)accessibilityHeader;
- (id)accessibilityHeaderGroup;
- (id)accessibilityHelp;
- (id)accessibilityHorizontalScrollBar;
- (id)accessibilityHorizontalUnitDescription;
- (long long)accessibilityHorizontalUnits;
- (id)accessibilityIdentifier;
- (id)accessibilityIncrementButton;
- (long long)accessibilityIndex;
- (long long)accessibilityInsertionPointLineNumber;
- (id)accessibilityLabel;
- (id)accessibilityLabelUIElements;
- (float)accessibilityLabelValue;
- (struct CGPoint { double x1; double x2; })accessibilityLayoutPointForScreenPoint:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })accessibilityLayoutSizeForScreenSize:(struct CGSize { double x1; double x2; })arg1;
- (long long)accessibilityLineForIndex:(long long)arg1;
- (id)accessibilityLinkedUIElements;
- (id)accessibilityMainWindow;
- (id)accessibilityMarkerGroupUIElement;
- (id)accessibilityMarkerTypeDescription;
- (id)accessibilityMarkerUIElements;
- (id)accessibilityMarkerValues;
- (id)accessibilityMaxValue;
- (id)accessibilityMenuBar;
- (id)accessibilityMinValue;
- (id)accessibilityMinimizeButton;
- (id)accessibilityNextContentSibling;
- (id)accessibilityNextContents;
- (long long)accessibilityNumberOfCharacters;
- (long long)accessibilityOrientation;
- (id)accessibilityOverflowButton;
- (id)accessibilityParent;
- (BOOL)accessibilityPerformCancel;
- (BOOL)accessibilityPerformConfirm;
- (BOOL)accessibilityPerformDecrement;
- (BOOL)accessibilityPerformDelete;
- (BOOL)accessibilityPerformIncrement;
- (BOOL)accessibilityPerformPick;
- (BOOL)accessibilityPerformPress;
- (BOOL)accessibilityPerformRaise;
- (BOOL)accessibilityPerformShowAlternateUI;
- (BOOL)accessibilityPerformShowDefaultUI;
- (BOOL)accessibilityPerformShowMenu;
- (id)accessibilityPlaceholderValue;
- (id)accessibilityPreviousContentSibling;
- (id)accessibilityPreviousContents;
- (id)accessibilityProxy;
- (id)accessibilityRTFForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilityRangeForIndex:(long long)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilityRangeForLine:(long long)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilityRangeForPosition:(struct CGPoint { double x1; double x2; })arg1;
- (id)accessibilityResultsForSearchPredicate:(id)arg1;
- (id)accessibilityRole;
- (id)accessibilityRoleDescription;
- (long long)accessibilityRowCount;
- (id)accessibilityRowHeaderUIElements;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilityRowIndexRange;
- (id)accessibilityRows;
- (long long)accessibilityRulerMarkerType;
- (struct CGPoint { double x1; double x2; })accessibilityScreenPointForLayoutPoint:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })accessibilityScreenSizeForLayoutSize:(struct CGSize { double x1; double x2; })arg1;
- (id)accessibilitySearchButton;
- (id)accessibilitySearchMenu;
- (id)accessibilitySections;
- (id)accessibilitySelectedCells;
- (id)accessibilitySelectedChildren;
- (id)accessibilitySelectedColumns;
- (id)accessibilitySelectedRows;
- (id)accessibilitySelectedText;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilitySelectedTextRange;
- (id)accessibilitySelectedTextRanges;
- (id)accessibilityServesAsTitleForUIElements;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilitySharedCharacterRange;
- (id)accessibilitySharedFocusElements;
- (id)accessibilitySharedTextUIElements;
- (id)accessibilityShownMenu;
- (long long)accessibilitySortDirection;
- (id)accessibilitySplitters;
- (id)accessibilityStringForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilityStyleRangeForIndex:(long long)arg1;
- (id)accessibilitySubrole;
- (id)accessibilityTabs;
- (id)accessibilityTitle;
- (id)accessibilityTitleUIElement;
- (id)accessibilityToolbarButton;
- (id)accessibilityTopLevelUIElement;
- (id)accessibilityURL;
- (id)accessibilityUnitDescription;
- (long long)accessibilityUnits;
- (id)accessibilityValue;
- (id)accessibilityValueDescription;
- (id)accessibilityVerticalScrollBar;
- (id)accessibilityVerticalUnitDescription;
- (long long)accessibilityVerticalUnits;
- (id)accessibilityVisibleCells;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })accessibilityVisibleCharacterRange;
- (id)accessibilityVisibleChildren;
- (id)accessibilityVisibleColumns;
- (id)accessibilityVisibleRows;
- (id)accessibilityWarningValue;
- (id)accessibilityWindow;
- (id)accessibilityWindows;
- (id)accessibilityZoomButton;
- (void)addItem:(id)arg1;
- (id)addItemWithTitle:(id)arg1 action:(SEL)arg2 keyEquivalent:(id)arg3;
- (BOOL)allowsContextMenuPlugIns;
- (id)attachedMenu;
- (BOOL)autoenablesItems;
- (void)cancelTracking;
- (void)cancelTrackingWithoutAnimation;
- (id)contextMenuRepresentation;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)font;
- (void)helpRequested:(id)arg1;
- (void)highlightItem:(id)arg1;
- (id)highlightedItem;
- (id)identifier;
- (long long)indexOfItem:(id)arg1;
- (long long)indexOfItemWithRepresentedObject:(id)arg1;
- (long long)indexOfItemWithSubmenu:(id)arg1;
- (long long)indexOfItemWithTag:(long long)arg1;
- (long long)indexOfItemWithTarget:(id)arg1 andAction:(SEL)arg2;
- (long long)indexOfItemWithTitle:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithTitle:(id)arg1;
- (void)insertItem:(id)arg1 atIndex:(long long)arg2;
- (id)insertItemWithTitle:(id)arg1 action:(SEL)arg2 keyEquivalent:(id)arg3 atIndex:(long long)arg4;
- (BOOL)isAccessibilityAlternateUIVisible;
- (BOOL)isAccessibilityDisclosed;
- (BOOL)isAccessibilityEdited;
- (BOOL)isAccessibilityElement;
- (BOOL)isAccessibilityEnabled;
- (BOOL)isAccessibilityEnhancedUserInterface;
- (BOOL)isAccessibilityExpanded;
- (BOOL)isAccessibilityFocused;
- (BOOL)isAccessibilityFrontmost;
- (BOOL)isAccessibilityHidden;
- (BOOL)isAccessibilityMain;
- (BOOL)isAccessibilityMimicNativeView;
- (BOOL)isAccessibilityMinimized;
- (BOOL)isAccessibilityModal;
- (BOOL)isAccessibilityOrderedByRow;
- (BOOL)isAccessibilityProtectedContent;
- (BOOL)isAccessibilityRequired;
- (BOOL)isAccessibilitySelected;
- (BOOL)isAccessibilitySelectorAllowed:(SEL)arg1;
- (BOOL)isAttached;
- (BOOL)isTornOff;
- (id)itemArray;
- (id)itemAtIndex:(long long)arg1;
- (void)itemChanged:(id)arg1;
- (id)itemWithTag:(long long)arg1;
- (id)itemWithTitle:(id)arg1;
- (struct CGPoint { double x1; double x2; })locationForSubmenu:(id)arg1;
- (double)menuBarHeight;
- (BOOL)menuChangedMessagesEnabled;
- (id)menuRepresentation;
- (double)minimumWidth;
- (long long)numberOfItems;
- (void)performActionForItemAtIndex:(long long)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (BOOL)popUpMenuPositioningItem:(id)arg1 atLocation:(struct CGPoint { double x1; double x2; })arg2 inView:(id)arg3;
- (BOOL)popUpMenuPositioningItem:(id)arg1 atLocation:(struct CGPoint { double x1; double x2; })arg2 inView:(id)arg3 appearance:(id)arg4;
- (unsigned long long)propertiesToUpdate;
- (void)removeAllItems;
- (void)removeItem:(id)arg1;
- (void)removeItemAtIndex:(long long)arg1;
- (void)setAccessibilityActivationPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)setAccessibilityAllowedValues:(id)arg1;
- (void)setAccessibilityAlternateUIVisible:(BOOL)arg1;
- (void)setAccessibilityApplicationFocusedUIElement:(id)arg1;
- (void)setAccessibilityAuditIssues:(id)arg1;
- (void)setAccessibilityCancelButton:(id)arg1;
- (void)setAccessibilityChildren:(id)arg1;
- (void)setAccessibilityChildrenInNavigationOrder:(id)arg1;
- (void)setAccessibilityClearButton:(id)arg1;
- (void)setAccessibilityCloseButton:(id)arg1;
- (void)setAccessibilityColumnCount:(long long)arg1;
- (void)setAccessibilityColumnHeaderUIElements:(id)arg1;
- (void)setAccessibilityColumnIndexRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setAccessibilityColumnTitles:(id)arg1;
- (void)setAccessibilityColumns:(id)arg1;
- (void)setAccessibilityContentSiblingAbove:(id)arg1;
- (void)setAccessibilityContentSiblingBelow:(id)arg1;
- (void)setAccessibilityContents:(id)arg1;
- (void)setAccessibilityCriticalValue:(id)arg1;
- (void)setAccessibilityCustomActions:(id)arg1;
- (void)setAccessibilityCustomChoosers:(id)arg1;
- (void)setAccessibilityCustomRotors:(id)arg1;
- (void)setAccessibilityDecrementButton:(id)arg1;
- (void)setAccessibilityDefaultButton:(id)arg1;
- (void)setAccessibilityDisclosed:(BOOL)arg1;
- (void)setAccessibilityDisclosedByRow:(id)arg1;
- (void)setAccessibilityDisclosedRows:(id)arg1;
- (void)setAccessibilityDisclosureLevel:(long long)arg1;
- (void)setAccessibilityDocument:(id)arg1;
- (void)setAccessibilityEdited:(BOOL)arg1;
- (void)setAccessibilityElement:(BOOL)arg1;
- (void)setAccessibilityEnabled:(BOOL)arg1;
- (void)setAccessibilityEnhancedUserInterface:(BOOL)arg1;
- (void)setAccessibilityExpanded:(BOOL)arg1;
- (void)setAccessibilityExtrasMenuBar:(id)arg1;
- (void)setAccessibilityFilename:(id)arg1;
- (void)setAccessibilityFocused:(BOOL)arg1;
- (void)setAccessibilityFocusedWindow:(id)arg1;
- (void)setAccessibilityFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setAccessibilityFrameInParentSpace:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setAccessibilityFrontmost:(BOOL)arg1;
- (void)setAccessibilityFullScreenButton:(id)arg1;
- (void)setAccessibilityFunctionRowTopLevelElements:(id)arg1;
- (void)setAccessibilityGrowArea:(id)arg1;
- (void)setAccessibilityHandles:(id)arg1;
- (void)setAccessibilityHeader:(id)arg1;
- (void)setAccessibilityHeaderGroup:(id)arg1;
- (void)setAccessibilityHelp:(id)arg1;
- (void)setAccessibilityHidden:(BOOL)arg1;
- (void)setAccessibilityHorizontalScrollBar:(id)arg1;
- (void)setAccessibilityHorizontalUnitDescription:(id)arg1;
- (void)setAccessibilityHorizontalUnits:(long long)arg1;
- (void)setAccessibilityIdentifier:(id)arg1;
- (void)setAccessibilityIncrementButton:(id)arg1;
- (void)setAccessibilityIndex:(long long)arg1;
- (void)setAccessibilityInsertionPointLineNumber:(long long)arg1;
- (void)setAccessibilityLabel:(id)arg1;
- (void)setAccessibilityLabelUIElements:(id)arg1;
- (void)setAccessibilityLabelValue:(float)arg1;
- (void)setAccessibilityLinkedUIElements:(id)arg1;
- (void)setAccessibilityMain:(BOOL)arg1;
- (void)setAccessibilityMainWindow:(id)arg1;
- (void)setAccessibilityMarkerGroupUIElement:(id)arg1;
- (void)setAccessibilityMarkerTypeDescription:(id)arg1;
- (void)setAccessibilityMarkerUIElements:(id)arg1;
- (void)setAccessibilityMarkerValues:(id)arg1;
- (void)setAccessibilityMaxValue:(id)arg1;
- (void)setAccessibilityMenuBar:(id)arg1;
- (void)setAccessibilityMimicNativeView:(BOOL)arg1;
- (void)setAccessibilityMinValue:(id)arg1;
- (void)setAccessibilityMinimizeButton:(id)arg1;
- (void)setAccessibilityMinimized:(BOOL)arg1;
- (void)setAccessibilityModal:(BOOL)arg1;
- (void)setAccessibilityNextContents:(id)arg1;
- (void)setAccessibilityNumberOfCharacters:(long long)arg1;
- (void)setAccessibilityOrderedByRow:(BOOL)arg1;
- (void)setAccessibilityOrientation:(long long)arg1;
- (void)setAccessibilityOverflowButton:(id)arg1;
- (void)setAccessibilityParent:(id)arg1;
- (void)setAccessibilityPlaceholderValue:(id)arg1;
- (void)setAccessibilityPreviousContents:(id)arg1;
- (void)setAccessibilityProtectedContent:(BOOL)arg1;
- (void)setAccessibilityProxy:(id)arg1;
- (void)setAccessibilityRequired:(BOOL)arg1;
- (void)setAccessibilityRole:(id)arg1;
- (void)setAccessibilityRoleDescription:(id)arg1;
- (void)setAccessibilityRowCount:(long long)arg1;
- (void)setAccessibilityRowHeaderUIElements:(id)arg1;
- (void)setAccessibilityRowIndexRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setAccessibilityRows:(id)arg1;
- (void)setAccessibilityRulerMarkerType:(long long)arg1;
- (void)setAccessibilitySearchButton:(id)arg1;
- (void)setAccessibilitySearchMenu:(id)arg1;
- (void)setAccessibilitySections:(id)arg1;
- (void)setAccessibilitySelected:(BOOL)arg1;
- (void)setAccessibilitySelectedCells:(id)arg1;
- (void)setAccessibilitySelectedChildren:(id)arg1;
- (void)setAccessibilitySelectedColumns:(id)arg1;
- (void)setAccessibilitySelectedRows:(id)arg1;
- (void)setAccessibilitySelectedText:(id)arg1;
- (void)setAccessibilitySelectedTextRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setAccessibilitySelectedTextRanges:(id)arg1;
- (void)setAccessibilityServesAsTitleForUIElements:(id)arg1;
- (void)setAccessibilitySharedCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setAccessibilitySharedFocusElements:(id)arg1;
- (void)setAccessibilitySharedTextUIElements:(id)arg1;
- (void)setAccessibilityShownMenu:(id)arg1;
- (void)setAccessibilitySortDirection:(long long)arg1;
- (void)setAccessibilitySplitters:(id)arg1;
- (void)setAccessibilitySubrole:(id)arg1;
- (void)setAccessibilityTabs:(id)arg1;
- (void)setAccessibilityTitle:(id)arg1;
- (void)setAccessibilityTitleUIElement:(id)arg1;
- (void)setAccessibilityToolbarButton:(id)arg1;
- (void)setAccessibilityTopLevelUIElement:(id)arg1;
- (void)setAccessibilityURL:(id)arg1;
- (void)setAccessibilityUnitDescription:(id)arg1;
- (void)setAccessibilityUnits:(long long)arg1;
- (void)setAccessibilityValue:(id)arg1;
- (void)setAccessibilityValueDescription:(id)arg1;
- (void)setAccessibilityVerticalScrollBar:(id)arg1;
- (void)setAccessibilityVerticalUnitDescription:(id)arg1;
- (void)setAccessibilityVerticalUnits:(long long)arg1;
- (void)setAccessibilityVisibleCells:(id)arg1;
- (void)setAccessibilityVisibleCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setAccessibilityVisibleChildren:(id)arg1;
- (void)setAccessibilityVisibleColumns:(id)arg1;
- (void)setAccessibilityVisibleRows:(id)arg1;
- (void)setAccessibilityWarningValue:(id)arg1;
- (void)setAccessibilityWindow:(id)arg1;
- (void)setAccessibilityWindows:(id)arg1;
- (void)setAccessibilityZoomButton:(id)arg1;
- (void)setAllowsContextMenuPlugIns:(BOOL)arg1;
- (void)setAutoenablesItems:(BOOL)arg1;
- (void)setContextMenuRepresentation:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFont:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setMenuChangedMessagesEnabled:(BOOL)arg1;
- (void)setMenuRepresentation:(id)arg1;
- (void)setMinimumWidth:(double)arg1;
- (void)setNextContentSibling:(id)arg1;
- (void)setPreviousContentSibling:(id)arg1;
- (void)setShowsStateColumn:(BOOL)arg1;
- (void)setSubmenu:(id)arg1 forItem:(id)arg2;
- (void)setSupermenu:(id)arg1;
- (void)setTearOffMenuRepresentation:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setUserInterfaceItemIdentifier:(id)arg1;
- (void)setUserInterfaceLayoutDirection:(long long)arg1;
- (BOOL)showsStateColumn;
- (struct CGSize { double x1; double x2; })size;
- (void)sizeToFit;
- (id)supermenu;
- (id)tearOffMenuRepresentation;
- (id)title;
- (void)update;
- (id)userInterfaceItemIdentifier;
- (long long)userInterfaceLayoutDirection;

// NSMenu (NSKeyEquivalents)

+ (BOOL)_canUseKeyEquivalentForMenuItem:(id)arg1;
+ (id)_captureKeyEquivalentsFromEvent:(id)arg1 withOptions:(unsigned long long)arg2;
+ (id)_captureKeyEquivalentsWithOptions:(unsigned long long)arg1 inMode:(id)arg2 finalEvent:(id*)arg3 status:(long long*)arg4 additionalEventProcessing:(id)arg5;
+ (void)_recursivelyRegisterMenuForKeyEquivalentUniquing:(id)arg1;
+ (void)_recursivelyRegisterMenuItem:(id)arg1 forKeyEquivalentUniquingInMenu:(id)arg2;
+ (void)_recursivelyUnregisterMenuForKeyEquivalentUniquing:(id)arg1;
+ (void)_recursivelyUnregisterMenuItem:(id)arg1 forKeyEquivalentUniquingInMenu:(id)arg2;
+ (void)_registerMenuForKeyEquivalentUniquing:(id)arg1;
+ (void)_registerMenuItemForKeyEquivalentUniquing:(id)arg1;
+ (void)_registerOneMenuForKeyEquivalentUniquing:(id)arg1;
+ (void)_unregisterMenuForKeyEquivalentUniquing:(id)arg1;
+ (void)_unregisterMenuItemForKeyEquivalentUniquing:(id)arg1;
+ (void)_unregisterOneMenuForKeyEquivalentUniquing:(id)arg1;
+ (BOOL)_validateCaptureKeyEquivalentsFromEvent:(id)arg1 withOptions:(unsigned long long)arg2;

- (id)_getKeyEquivalentUniquerCreatingIfNecessary:(BOOL)arg1;
- (void)_recursivelyUpdateKeyEquivalents;

// NSMenu (NSMenuOverriddenAttributesAccessibility)

- (BOOL)accessibilityIsIgnored;
- (BOOL)accessibilitySetOverrideValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilitySupportsOverriddenAttributes;

// NSMenu (RecursiveItemSearch)

- (id)_recursiveItemWithTarget:(id)arg1 action:(SEL)arg2 allowNilTarget:(BOOL)arg3;

// NSMenu (StoryboardStuff)

- (void)_setStoryboard:(id)arg1;
- (void)presentControllerAsModalWindow:(id)arg1;
- (id)storyboard;

// NSMenu (_NSBlockAction)

- (void)_addMenuItemWithTitle:(id)arg1 handler:(id)arg2;

// Image: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Debugger/libViewDebuggerSupport.dylib

// NSMenu (DebugHierarchyAdditions)

- (id)debugHierarchyPropertyDescriptions;

// Image: /System/Library/Frameworks/AVKit.framework/Versions/A/AVKit

// NSMenu (AVAdditions)

- (void)popUpMenuPositioningItem:(id)arg1 button:(id)arg2;

// Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit

// NSMenu (FileFormat)

- (void)addFileFormatWithTitle:(id)arg1 tag:(long long)arg2 representedObject:(id)arg3 target:(id)arg4;

@end
