/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSTouchBarColorPickerSlider : NSControl <NSGestureRecognizerDelegate> {
    unsigned int  _active;
    NSArray * _allowedColorSpaces;
    NSTouchBarColorPickerSliderArtworkProvider * _artworkProvider;
    id  _autounbinder;
    NSColor * _displayedColor;
    double  _doubleValue;
    unsigned int  _highlighted;
    NSTextField * _label;
    unsigned int  _labelIsOnLeadingSideOfKnob;
    unsigned int  _labelIsVisible;
    long long  _labelTextEffect;
    <NSTouchBarColorPickerSliderMinimizationDelegate> * _minimizationDelegate;
    unsigned int  _minimized;
    NSPanGestureRecognizer * _panRecognizer;
    unsigned int  _relativeTracking;
    _NSTouchBarColorPickerSliderKnob * _sliderKnob;
    _NSTouchBarColorPickerSliderTrack * _sliderTrack;
    unsigned int  _valueIsFlipped;
}

@property (getter=isActive, atomic, readwrite) BOOL active;
@property (atomic, readwrite, copy) NSArray *allowedColorSpaces;
@property (atomic, readwrite, copy) NSTouchBarColorPickerSliderArtworkProvider *artworkProvider;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readwrite, copy) NSColor *displayedColor;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readonly) BOOL knobIsPressed;
@property (atomic, readonly) double labelAlphaValue;
@property (atomic, readwrite) BOOL labelIsOnLeadingSideOfKnob;
@property (atomic, readwrite) long long labelTextEffect;
@property (atomic, readwrite) <NSTouchBarColorPickerSliderMinimizationDelegate> *minimizationDelegate;
@property (getter=isMinimized, atomic, readwrite) BOOL minimized;
@property (atomic, readwrite) BOOL relativeTracking;
@property (atomic, readonly) Class superclass;
@property (atomic, readwrite) BOOL valueIsFlipped;
@property (atomic, readonly, copy) NSAttributedString *valueLabel;

// Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit

+ (id)keyPathsForValuesAffectingKnobIsPressed;
+ (id)keyPathsForValuesAffectingLabelAlphaValue;
+ (id)keyPathsForValuesAffectingValueLabel;
+ (id)keyPathsForValuesInvalidatingConstraints;
+ (BOOL)requiresConstraintBasedLayout;

- (double)_valueAtLocation:(double)arg1;
- (void)dealloc;

// NSTouchBarColorPickerSlider (NSAccessibility)

+ (BOOL)accessibilityIsSingleCelled;

// NSTouchBarColorPickerSlider (NSTouchBarColorPickerSliderGestures)

- (void)_beginUnminimizeGesture;
- (void)_endUnminimizeGesture;
- (void)_handlePan:(id)arg1;
- (void)_handlePress:(id)arg1;

// NSTouchBarColorPickerSlider (_NSAutounbinder)

- (id)_autounbinder;
- (oneway void)release;

// Image: /Applications/Xcode.app/Contents/Developer/usr/lib/libMainThreadChecker.dylib

- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityActivationPointAttribute;
- (id)accessibilityAttributeNames;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityExpandedAttribute;
- (id)accessibilityHelpStringForChild:(id)arg1;
- (BOOL)accessibilityIsActivationPointAttributeSettable;
- (BOOL)accessibilityIsAllowedValuesAttributeSettable;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (BOOL)accessibilityIsMaxValueAttributeSettable;
- (BOOL)accessibilityIsMinValueAttributeSettable;
- (BOOL)accessibilityIsOrientationAttributeSettable;
- (BOOL)accessibilityIsValueAttributeSettable;
- (BOOL)accessibilityIsValueIndicatorAttributeSettable;
- (id)accessibilityMaxValueAttribute;
- (id)accessibilityMinValueAttribute;
- (id)accessibilityOrientationAttribute;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityRoleAttribute;
- (void)accessibilitySetFocus:(id)arg1 forChild:(id)arg2;
- (void)accessibilitySetValueAttribute:(id)arg1;
- (id)accessibilitySubroleAttribute;
- (id)accessibilityValueAttribute;
- (id)accessibilityValueIndicatorAttribute;
- (id)allowedColorSpaces;
- (id)artworkProvider;
- (id)declaredLayoutConstraints;
- (id)displayedColor;
- (double)doubleValue;
- (void)flashLabel;
- (float)floatValue;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)hideLabel;
- (void)hideLabelAnimated;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (int)intValue;
- (long long)integerValue;
- (BOOL)isActive;
- (BOOL)isHighlighted;
- (BOOL)isMinimized;
- (BOOL)knobIsPressed;
- (double)labelAlphaValue;
- (BOOL)labelIsOnLeadingSideOfKnob;
- (long long)labelTextEffect;
- (void)layout;
- (id)minimizationDelegate;
- (id)objectValue;
- (BOOL)relativeTracking;
- (void)setActive:(BOOL)arg1;
- (void)setAllowedColorSpaces:(id)arg1;
- (void)setArtworkProvider:(id)arg1;
- (void)setDisplayedColor:(id)arg1;
- (void)setDoubleValue:(double)arg1;
- (void)setFloatValue:(float)arg1;
- (void)setHideLabelTimer;
- (void)setHighlighted:(BOOL)arg1;
- (void)setIntValue:(int)arg1;
- (void)setIntegerValue:(long long)arg1;
- (void)setLabelIsOnLeadingSideOfKnob:(BOOL)arg1;
- (void)setLabelTextEffect:(long long)arg1;
- (void)setMinimizationDelegate:(id)arg1;
- (void)setMinimized:(BOOL)arg1;
- (void)setObjectValue:(id)arg1;
- (void)setRelativeTracking:(BOOL)arg1;
- (void)setValueIsFlipped:(BOOL)arg1;
- (void)showLabel;
- (BOOL)valueIsFlipped;
- (id)valueLabel;
- (void)viewDidMoveToWindow;

@end
