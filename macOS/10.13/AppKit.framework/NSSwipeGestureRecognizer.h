/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface NSSwipeGestureRecognizer : NSGestureRecognizer <NSCoding> {
    unsigned long long  _activeTouchOrButtonCount;
    double  _allowedPrimaryMovementSlop;
    unsigned long long  _buttonCount;
    unsigned long long  _buttonMask;
    unsigned long long  _direction;
    long long  _flags;
    NSTimer * _invalidationTimer;
    double  _maximumDuration;
    double  _maximumPrimaryMovement;
    double  _maximumSecondaryMovement;
    double  _minimumPrimaryMovement;
    double  _minimumSecondaryMovement;
    unsigned long long  _numberOfTouchesRequired;
    double  _rateOfMaximumMovementDecay;
    double  _rateOfMinimumMovementDecay;
    id  _reserved1;
    struct CGPoint { 
        double x; 
        double y; 
    }  _startLocation;
    NSMutableDictionary * _startLocations;
    double  _startTime;
    NSMutableArray * _touches;
}

@property (atomic, readwrite) double allowedPrimaryMovementSlop;
@property (atomic, readwrite) unsigned long long buttonMask;
@property (atomic, readwrite) unsigned long long direction;
@property (atomic, readwrite) double maximumDuration;
@property (atomic, readwrite) double maximumPrimaryMovement;
@property (atomic, readwrite) double maximumSecondaryMovement;
@property (atomic, readwrite) double minimumPrimaryMovement;
@property (atomic, readwrite) double minimumSecondaryMovement;
@property (atomic, readwrite) unsigned long long numberOfTouchesRequired;
@property (atomic, readwrite) double rateOfMaximumMovementDecay;
@property (atomic, readwrite) double rateOfMinimumMovementDecay;
@property (atomic, readonly) struct CGPoint { double x1; double x2; } startPoint;

+ (id)touchBarMiniSwipeRecognizerWithTarget:(id)arg1 action:(SEL)arg2;

- (void)_appendSubclassDescription:(id)arg1;
- (BOOL)_checkForSwipeWithDelta:(struct CGPoint { double x1; double x2; })arg1 time:(double)arg2;
- (void)_resetGestureRecognizer;
- (double)allowedPrimaryMovementSlop;
- (unsigned long long)buttonMask;
- (void)dealloc;
- (unsigned long long)direction;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;
- (struct CGPoint { double x1; double x2; })locationInView:(id)arg1;
- (double)maximumDuration;
- (double)maximumPrimaryMovement;
- (double)maximumSecondaryMovement;
- (double)minimumPrimaryMovement;
- (double)minimumSecondaryMovement;
- (void)mouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (unsigned long long)numberOfTouchesRequired;
- (void)otherMouseDown:(id)arg1;
- (void)otherMouseDragged:(id)arg1;
- (void)otherMouseUp:(id)arg1;
- (double)rateOfMaximumMovementDecay;
- (double)rateOfMinimumMovementDecay;
- (BOOL)recognizesAfterEndPhase;
- (void)rightMouseDown:(id)arg1;
- (void)rightMouseDragged:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)setAllowedPrimaryMovementSlop:(double)arg1;
- (void)setButtonMask:(unsigned long long)arg1;
- (void)setDirection:(unsigned long long)arg1;
- (void)setMaximumDuration:(double)arg1;
- (void)setMaximumPrimaryMovement:(double)arg1;
- (void)setMaximumSecondaryMovement:(double)arg1;
- (void)setMinimumPrimaryMovement:(double)arg1;
- (void)setMinimumSecondaryMovement:(double)arg1;
- (void)setNumberOfTouchesRequired:(unsigned long long)arg1;
- (void)setRateOfMaximumMovementDecay:(double)arg1;
- (void)setRateOfMinimumMovementDecay:(double)arg1;
- (void)setRecognizesAfterEndPhase:(BOOL)arg1;
- (struct CGPoint { double x1; double x2; })startPoint;
- (void)touchesBeganWithEvent:(id)arg1;
- (void)touchesCancelledWithEvent:(id)arg1;
- (void)touchesEndedWithEvent:(id)arg1;
- (void)touchesMovedWithEvent:(id)arg1;

@end
