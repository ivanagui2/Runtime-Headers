/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface _NSCandidateBarFunctionRowSegment : NSObject {
    <_NSCandidateBarFunctionRowSegment_AccessibilityDelegate> * _accessibilityDelegate;
    id  _accessibilityParent;
    NSString * _accessibilityTitle;
    NSCandidateBarCompositeCandidate * _candidate;
    BOOL  _correction;
    BOOL  _drawsRightToLeft;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _hitTestRect;
    BOOL  _pressed;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _rect;
    BOOL  _roundLeft;
    BOOL  _roundRight;
    long long  _segmentType;
}

@property (nonatomic, readwrite) <_NSCandidateBarFunctionRowSegment_AccessibilityDelegate> *accessibilityDelegate;
@property (nonatomic, readwrite) id accessibilityParent;
@property (nonatomic, readwrite, copy) NSString *accessibilityTitle;
@property (atomic, readwrite, copy) NSCandidateBarCompositeCandidate *candidate;
@property (getter=isCorrection, atomic, readwrite) BOOL correction;
@property (atomic, readwrite) BOOL drawsRightToLeft;
@property (atomic, readwrite) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } hitTestRect;
@property (getter=isPressed, atomic, readwrite) BOOL pressed;
@property (atomic, readwrite) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } rect;
@property (atomic, readwrite) BOOL roundLeft;
@property (atomic, readwrite) BOOL roundRight;
@property (atomic, readwrite) long long segmentType;

+ (id)segmentWithType:(long long)arg1 candidate:(id)arg2 rect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;

- (id)accessibilityDelegate;
- (id)accessibilityParent;
- (id)accessibilityTitle;
- (id)candidate;
- (void)dealloc;
- (id)description;
- (void)drawWithForegroundOpacity:(double)arg1;
- (BOOL)drawsRightToLeft;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })hitTestRect;
- (id)initWithType:(long long)arg1 candidate:(id)arg2 rect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (BOOL)isCorrection;
- (BOOL)isPressed;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rect;
- (BOOL)roundLeft;
- (BOOL)roundRight;
- (long long)segmentType;
- (void)setAccessibilityDelegate:(id)arg1;
- (void)setAccessibilityParent:(id)arg1;
- (void)setAccessibilityTitle:(id)arg1;
- (void)setCandidate:(id)arg1;
- (void)setCorrection:(BOOL)arg1;
- (void)setDrawsRightToLeft:(BOOL)arg1;
- (void)setHitTestRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setPressed:(BOOL)arg1;
- (void)setRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setRoundLeft:(BOOL)arg1;
- (void)setRoundRight:(BOOL)arg1;
- (void)setSegmentType:(long long)arg1;

// _NSCandidateBarFunctionRowSegment (NSAccessibility)

- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityParentAttribute;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityPositionAttribute;
- (id)accessibilityRoleAttribute;
- (id)accessibilityRoleDescriptionAttribute;
- (id)accessibilitySizeAttribute;
- (id)accessibilityTitleAttribute;
- (id)accessibilityValueAttribute;

@end
