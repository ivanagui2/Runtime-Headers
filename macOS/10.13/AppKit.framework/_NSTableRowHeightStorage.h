/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 */

@interface _NSTableRowHeightStorage : NSObject <NSCopying> {
    long long  _gapRow;
    double  _gapRowHeight;
    long long  _heightsSize;
    long long  _numberOfRows;
    unsigned int  _numberOfRowsIsValid;
    double * _rowHeights;
    unsigned int  _rowHeightsAreValid;
    unsigned int  _supportsVariableRowHeights;
    NSTableView * _tableView;
    unsigned int  _updatingRowHeights;
}

@property (atomic, readwrite) long long gapRow;
@property (atomic, readwrite) double gapRowHeight;
@property (atomic, readonly) long long numberOfRows;
@property (getter=isValid, atomic, readonly) BOOL valid;

- (long long)_adjustRowForGapRow:(long long)arg1;
- (void)_cacheRowHeights;
- (void)_createRowHeightsArray;
- (id)_debugRowHeights;
- (void)_ensureRowHeights;
- (void)_ensureRowHeightsIsAtLeastThisSize:(long long)arg1;
- (double)_internalChangeForDeleteRows:(long long)arg1 atIndex:(long long)arg2 withPriorChange:(double)arg3;
- (double)_internalChangeForInsertRows:(long long)arg1 atIndex:(long long)arg2;
- (void)_internalDeleteRows:(long long)arg1 atIndex:(long long)arg2;
- (void)_internalInsertRows:(long long)arg1 atIndex:(long long)arg2;
- (void)_normalAddInsertionHolesAtIndexes:(id)arg1;
- (void)_normalApplyRowDeletions:(id)arg1 insertions:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_normalComputeRectOfRow:(long long)arg1 assumingExists:(BOOL)arg2;
- (long long)_normalComputeRowAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_normalDeleteRowsWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (double)_standardFullRowHeight;
- (double)_uncachedRectHeightOfRow:(long long)arg1;
- (void)_variableAddInsertionHolesAtIndexes:(id)arg1;
- (void)_variableApplyRowDeletions:(id)arg1 insertions:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_variableComputeRectOfRow:(long long)arg1;
- (long long)_variableComputeRowAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_variableDeleteRowsWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)addInsertionHolesAtIndexes:(id)arg1;
- (void)applyRowDeletions:(id)arg1 insertions:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })backgroundFillerRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })computeRectOfRow:(long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })computeRectOfRow:(long long)arg1 assumingExists:(BOOL)arg2;
- (long long)computeRowAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (double)computeTableHeightForNumberOfRows:(long long)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (void)deleteRowCount:(long long)arg1 atIndex:(long long)arg2;
- (void)deleteRowsInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (long long)gapRow;
- (double)gapRowHeight;
- (id)initWithTableView:(id)arg1;
- (void)insertRowCount:(long long)arg1 atIndex:(long long)arg2;
- (void)invalidateCacheAndStorage;
- (void)invalidateNumberOfRowsCache;
- (BOOL)isValid;
- (BOOL)noteHeightOfRowsWithIndexesChanged:(id)arg1;
- (BOOL)noteHeightOfRowsWithIndexesChanged:(id)arg1 heightProvider:(id)arg2;
- (long long)numberOfRows;
- (void)setGapRow:(long long)arg1;
- (void)setGapRowHeight:(double)arg1;

@end
