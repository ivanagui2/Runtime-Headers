/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
 */

@interface NSValue : NSObject <NSCopying, NSSecureCoding>

@property (atomic, readonly) struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; } CATransform3DValue;
@property (atomic, readonly) struct { double x1; double x2; } MKCoordinateSpanValue;
@property (atomic, readonly) struct CLLocationCoordinate2D { double x1; double x2; } MKCoordinateValue;
@property (atomic, readonly) const char *objCType;
@property (atomic, readonly) struct _MSVSignedRange { long long x1; long long x2; } signedRangeValue;

// Image: /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation

+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (void)initialize;
+ (BOOL)supportsSecureCoding;
+ (id)value:(const void*)arg1 withObjCType:(const char *)arg2;
+ (id)valueWithBytes:(const void*)arg1 objCType:(const char *)arg2;
+ (id)valueWithEdgeInsets:(struct NSEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
+ (id)valueWithNonretainedObject:(id)arg1;
+ (id)valueWithPoint:(struct CGPoint { double x1; double x2; })arg1;
+ (id)valueWithPointer:(const void*)arg1;
+ (id)valueWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
+ (id)valueWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
+ (id)valueWithSize:(struct CGSize { double x1; double x2; })arg1;
+ (id)valueWithWeakObject:(id)arg1;

- (BOOL)_matchType:(const char *)arg1 size:(unsigned long long)arg2;
- (Class)classForCoder;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (struct NSEdgeInsets { double x1; double x2; double x3; double x4; })edgeInsetsValue;
- (void)encodeWithCoder:(id)arg1;
- (void)getValue:(void*)arg1;
- (void)getValue:(void*)arg1 size:(unsigned long long)arg2;
- (unsigned long long)hash;
- (id)init;
- (id)initWithBytes:(const void*)arg1 objCType:(const char *)arg2;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToValue:(id)arg1;
- (id)nonretainedObjectValue;
- (const char *)objCType;
- (struct CGPoint { double x1; double x2; })pointValue;
- (void*)pointerValue;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeValue;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectValue;
- (struct CGSize { double x1; double x2; })sizeValue;
- (id)weakObjectValue;

// NSValue (NSKindOfAdditions)

- (BOOL)isNSValue__;

// NSValue (NSValuePortCoding)

- (id)replacementObjectForPortCoder:(id)arg1;

// Image: /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation

// NSValue (NSValueCMTimeExtensions)

+ (id)valueWithCMTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
+ (id)valueWithCMTimeMapping:(struct { struct { struct { long long x_1_2_1; int x_1_2_2; unsigned int x_1_2_3; long long x_1_2_4; } x_1_1_1; struct { long long x_2_2_1; int x_2_2_2; unsigned int x_2_2_3; long long x_2_2_4; } x_1_1_2; } x1; struct { struct { long long x_1_2_1; int x_1_2_2; unsigned int x_1_2_3; long long x_1_2_4; } x_2_1_1; struct { long long x_2_2_1; int x_2_2_2; unsigned int x_2_2_3; long long x_2_2_4; } x_2_1_2; } x2; })arg1;
+ (id)valueWithCMTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;

- (struct { struct { struct { long long x_1_2_1; int x_1_2_2; unsigned int x_1_2_3; long long x_1_2_4; } x_1_1_1; struct { long long x_2_2_1; int x_2_2_2; unsigned int x_2_2_3; long long x_2_2_4; } x_1_1_2; } x1; struct { struct { long long x_1_2_1; int x_1_2_2; unsigned int x_1_2_3; long long x_1_2_4; } x_2_1_1; struct { long long x_2_2_1; int x_2_2_2; unsigned int x_2_2_3; long long x_2_2_4; } x_2_1_2; } x2; })CMTimeMappingValue;
- (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })CMTimeRangeValue;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })CMTimeValue;

// Image: /System/Library/Frameworks/AVKit.framework/Versions/A/AVKit

// NSValue (NSValue_AVMargin)

+ (id)valueWithMargin:(struct { double x1; double x2; double x3; double x4; })arg1;

- (struct { double x1; double x2; double x3; double x4; })marginValue;

// Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit

// NSValue (NSValueUIGeometryExtensions)

+ (id)_valueWithCGPoint:(struct CGPoint { double x1; double x2; })arg1;

// NSValue (UIKitStubs)

+ (id)_valueWithCGRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;

// Image: /System/Library/Frameworks/MapKit.framework/Versions/A/MapKit

// NSValue (MKAdditions)

- (struct CGPoint { double x1; double x2; })CADoublePointValue;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })CADoubleRectValue;
- (struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })MKMapRectValue;
- (id)_mapkit_initWithCADoublePoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)_mapkit_initWithCADoubleRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_mapkit_initWithCGPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)_mapkit_initWithCGRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_mapkit_initWithMKMapRect:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_mapkit_initWithZoomRegion:(struct { double x1; struct CLLocationCoordinate2D { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct { double x1; struct CLLocationCoordinate2D { double x_2_1_1; double x_2_1_2; } x2; })_mapkit_zoomRegionValue;

// NSValue (MKCAExtrasAdditions)

+ (id)_mapkit_valueWithCGAffineTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
+ (id)_mapkit_valueWithCGPoint:(struct CGPoint { double x1; double x2; })arg1;

- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_mapkit_CGAffineTransformValue;
- (struct CGPoint { double x1; double x2; })_mapkit_CGPointValue;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_mapkit_CGRectValue;

// NSValue (NSValueMapKitGeometryExtensions)

+ (id)valueWithMKCoordinate:(struct CLLocationCoordinate2D { double x1; double x2; })arg1;
+ (id)valueWithMKCoordinateSpan:(struct { double x1; double x2; })arg1;

- (struct { double x1; double x2; })MKCoordinateSpanValue;
- (struct CLLocationCoordinate2D { double x1; double x2; })MKCoordinateValue;

// Image: /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit

// NSValue (NSValueQTSMPTETimeExtensions)

+ (id)valueWithSMPTETime:(struct SMPTETime { short x1; short x2; unsigned int x3; unsigned int x4; unsigned int x5; short x6; short x7; short x8; short x9; })arg1;

- (struct SMPTETime { short x1; short x2; unsigned int x3; unsigned int x4; unsigned int x5; short x6; short x7; short x8; short x9; })SMPTETimeValue;

// NSValue (NSValueQTTimeExtensions)

+ (id)valueWithQTTime:(struct { long long x1; long long x2; long long x3; })arg1;

- (struct { long long x1; long long x2; long long x3; })QTTimeValue;

// NSValue (NSValueQTTimeRangeExtensions)

+ (id)valueWithQTTimeRange:(struct { struct { long long x_1_1_1; long long x_1_1_2; long long x_1_1_3; } x1; struct { long long x_2_1_1; long long x_2_1_2; long long x_2_1_3; } x2; })arg1;

- (struct { struct { long long x_1_1_1; long long x_1_1_2; long long x_1_1_3; } x1; struct { long long x_2_1_1; long long x_2_1_2; long long x_2_1_3; } x2; })QTTimeRangeValue;

// Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/PDFKit.framework/Versions/A/PDFKit

// NSValue (PDFExtensions)

+ (id)PDFKitValueWithPDFPoint:(struct CGPoint { double x1; double x2; })arg1;
+ (id)PDFKitValueWithPDFRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;

- (struct CGPoint { double x1; double x2; })PDFKitPDFPointValue;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })PDFKitPDFRectValue;

// Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer

// NSValue (Core3DKitAdditions)

+ (id)valueWithC3DMatrix4x4:(struct C3DMatrix4x4 { union { double x_1_1_1[16]; double x_1_1_2[4][4]; } x1; })arg1;
+ (id)valueWithC3DVector2:(struct C3DVector2 { union { double x_1_1_1[2]; struct { double x_2_2_1; double x_2_2_2; } x_1_1_2; struct { double x_3_2_1; double x_3_2_2; } x_1_1_3; struct { double x_4_2_1; double x_4_2_2; } x_1_1_4; } x1; })arg1;
+ (id)valueWithC3DVector3:(struct _SCNVector3 { double x1; double x2; double x3; })arg1;
+ (id)valueWithC3DVector4:(struct _SCNVector4 { double x1; double x2; double x3; double x4; })arg1;

- (struct C3DMatrix4x4 { union { double x_1_1_1[16]; double x_1_1_2[4][4]; } x1; })C3DMatrix4x4Value;
- (struct C3DVector2 { union { double x_1_1_1[2]; struct { double x_2_2_1; double x_2_2_2; } x_1_1_2; struct { double x_3_2_1; double x_3_2_2; } x_1_1_3; struct { double x_4_2_1; double x_4_2_2; } x_1_1_4; } x1; })C3DVector2Value;
- (struct _SCNVector3 { double x1; double x2; double x3; })C3DVector3Value;
- (struct _SCNVector4 { double x1; double x2; double x3; double x4; })C3DVector4Value;

// Image: /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore

// NSValue (CAAnimatableValue)

- (id)CA_addValue:(id)arg1 multipliedBy:(int)arg2;
- (double)CA_distanceToValue:(id)arg1;
- (id)CA_interpolateValue:(id)arg1 byFraction:(float)arg2;
- (id)CA_interpolateValues:(id)arg1 :(id)arg2 :(id)arg3 interpolator:(const struct ValueInterpolator { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; bool x10; }*)arg4;
- (id)CA_roundToIntegerFromValue:(id)arg1;

// NSValue (CAColorMatrixAdditions)

+ (id)valueWithCAColorMatrix:(struct CAColorMatrix { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; float x19; float x20; })arg1;

- (struct CAColorMatrix { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; float x19; float x20; })CAColorMatrixValue;

// NSValue (CAMLWriter)

- (id)CAMLType;
- (void)encodeWithCAMLWriter:(id)arg1;

// NSValue (CAPoint3DAdditions)

+ (id)valueWithCAPoint3D:(struct CAPoint3D { double x1; double x2; double x3; })arg1;

- (struct CAPoint3D { double x1; double x2; double x3; })CAPoint3DValue;

// NSValue (CARenderValue)

- (unsigned long long)CA_copyNumericValue:(double)arg1;
- (struct Object { int (**x1)(); struct Atomic { struct { int x_1_2_1; } x_2_1_1; } x2; }*)CA_copyRenderValue;

// NSValue (CATransform3DAdditions)

+ (id)valueWithCATransform3D:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg1;

- (struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })CATransform3DValue;

// Image: /System/Library/Frameworks/SceneKit.framework/Versions/A/SceneKit

// NSValue (Core3DKitAdditions)

+ (id)SCN_valueWithCGPoint:(struct CGPoint { double x1; double x2; })arg1;
+ (id)SCN_valueWithSimdMatrix4:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1;
+ (id)valueWithSCNMatrix4:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg1;
+ (id)valueWithSCNVector3:(struct SCNVector3 { double x1; double x2; double x3; })arg1;
+ (id)valueWithSCNVector4:(struct SCNVector4 { double x1; double x2; double x3; double x4; })arg1;

- (struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })SCNMatrix4Value;
- (struct SCNVector3 { double x1; double x2; double x3; })SCNVector3Value;
- (struct SCNVector4 { double x1; double x2; double x3; double x4; })SCNVector4Value;
- (struct CGPoint { double x1; double x2; })SCN_CGPointValue;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })SCN_simdMatrix4Value;

// Image: /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices

// NSValue (GEOLocationCoordinate2D)

+ (id)valueWithCoordinate:(struct { double x1; double x2; })arg1;

- (struct { double x1; double x2; })coordinateValue;

// NSValue (GEOPlaceDataComponentKey)

+ (id)_geo_valueWithGEOPlaceDataComponentKey:(union _GEOPlaceDataComponentKey { struct { unsigned long long x_1_1_1; unsigned short x_1_1_2; unsigned short x_1_1_3; unsigned int x_1_1_4; } x1; struct { unsigned int x_2_1_1; unsigned int x_2_1_2; unsigned int x_2_1_3; unsigned int x_2_1_4; } x2; })arg1;

- (union _GEOPlaceDataComponentKey { struct { unsigned long long x_1_1_1; unsigned short x_1_1_2; unsigned short x_1_1_3; unsigned int x_1_1_4; } x1; struct { unsigned int x_2_1_1; unsigned int x_2_1_2; unsigned int x_2_1_3; unsigned int x_2_1_4; } x2; })_geo_GEOPlaceDataComponentKeyValue;

// Image: /System/Library/PrivateFrameworks/MediaServices.framework/Versions/A/MediaServices

// NSValue (MSVRange)

+ (id)valueWithMSVSignedRange:(struct _MSVSignedRange { long long x1; long long x2; })arg1;

- (struct _MSVSignedRange { long long x1; long long x2; })signedRangeValue;

@end
