/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
 */

@interface NSString : NSObject <ABCompare, CNKeyDescriptor_Private, NSCopying, NSItemProviderReading, NSItemProviderWriting, NSMutableCopying, NSPasteboardReading, NSPasteboardWriting, NSSecureCoding>

@property (atomic, readonly) BOOL _cn_requiresPhoneNumberSanitizing;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (atomic, readonly) unsigned long long length;
@property (atomic, readonly, copy) NSString *stringByRemovingPercentEncoding;
@property (atomic, readonly) Class superclass;
@property (atomic, readonly, copy) NSArray *writableTypeIdentifiersForItemProvider;

// Image: /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation

+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (void)initialize;
+ (id)localizedStringWithFormat:(id)arg1;
+ (id)localizedStringWithValidatedFormat:(id)arg1 validFormatSpecifiers:(id)arg2 error:(id*)arg3;
+ (id)string;
+ (id)stringWithBytes:(const void*)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3;
+ (id)stringWithCString:(const char *)arg1;
+ (id)stringWithCString:(const char *)arg1 encoding:(unsigned long long)arg2;
+ (id)stringWithCString:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)stringWithCharacters:(const unsigned short*)arg1 length:(unsigned long long)arg2;
+ (id)stringWithContentsOfFile:(id)arg1;
+ (id)stringWithContentsOfFile:(id)arg1 encoding:(unsigned long long)arg2 error:(id*)arg3;
+ (id)stringWithContentsOfFile:(id)arg1 usedEncoding:(unsigned long long*)arg2 error:(id*)arg3;
+ (id)stringWithContentsOfURL:(id)arg1;
+ (id)stringWithContentsOfURL:(id)arg1 encoding:(unsigned long long)arg2 error:(id*)arg3;
+ (id)stringWithContentsOfURL:(id)arg1 usedEncoding:(unsigned long long*)arg2 error:(id*)arg3;
+ (id)stringWithFormat:(id)arg1;
+ (id)stringWithFormat:(id)arg1 locale:(id)arg2;
+ (id)stringWithString:(id)arg1;
+ (id)stringWithUTF8String:(const char *)arg1;
+ (id)stringWithValidatedFormat:(id)arg1 validFormatSpecifiers:(id)arg2 error:(id*)arg3;
+ (BOOL)supportsSecureCoding;

- (BOOL)_allowsDirectEncoding;
- (const char *)_fastCStringContents:(BOOL)arg1;
- (const unsigned short*)_fastCharacterContents;
- (void)_getBlockStart:(unsigned long long*)arg1 end:(unsigned long long*)arg2 contentsEnd:(unsigned long long*)arg3 forRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4 stopAtLineSeparators:(BOOL)arg5;
- (id)_initWithBytesOfUnknownEncoding:(char *)arg1 length:(unsigned long long)arg2 copy:(BOOL)arg3 usedEncoding:(unsigned long long*)arg4;
- (id)_initWithDataOfUnknownEncoding:(id)arg1;
- (BOOL)_isCString;
- (id)_newSubstringWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 zone:(struct _NSZone { }*)arg2;
- (id)_stringRepresentation;
- (BOOL)boolValue;
- (id)capitalizedString;
- (id)capitalizedStringWithLocale:(id)arg1;
- (long long)caseInsensitiveCompare:(id)arg1;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (Class)classForCoder;
- (id)commonPrefixWithString:(id)arg1 options:(unsigned long long)arg2;
- (long long)compare:(id)arg1;
- (long long)compare:(id)arg1 options:(unsigned long long)arg2;
- (long long)compare:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (long long)compare:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 locale:(id)arg4;
- (id)componentsSeparatedByCharactersInSet:(id)arg1;
- (id)componentsSeparatedByString:(id)arg1;
- (BOOL)containsString:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)decomposedStringWithCanonicalMapping;
- (id)decomposedStringWithCompatibilityMapping;
- (id)description;
- (id)displayableString;
- (double)doubleValue;
- (void)encodeWithCoder:(id)arg1;
- (void)enumerateLinesUsingBlock:(id)arg1;
- (void)enumerateSubstringsInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 options:(unsigned long long)arg2 usingBlock:(id)arg3;
- (float)floatValue;
- (void)getCharacters:(unsigned short*)arg1;
- (void)getCharacters:(unsigned short*)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (BOOL)getExternalRepresentation:(id*)arg1 extendedAttributes:(id*)arg2 forWritingToURLOrPath:(id)arg3 usingEncoding:(unsigned long long)arg4 error:(id*)arg5;
- (void)getLineStart:(unsigned long long*)arg1 end:(unsigned long long*)arg2 contentsEnd:(unsigned long long*)arg3 forRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4;
- (void)getParagraphStart:(unsigned long long*)arg1 end:(unsigned long long*)arg2 contentsEnd:(unsigned long long*)arg3 forRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4;
- (BOOL)hasPrefix:(id)arg1;
- (BOOL)hasSuffix:(id)arg1;
- (unsigned long long)hash;
- (id)init;
- (id)initWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3 freeWhenDone:(BOOL)arg4;
- (id)initWithCString:(const char *)arg1;
- (id)initWithCString:(const char *)arg1 encoding:(unsigned long long)arg2;
- (id)initWithCString:(const char *)arg1 length:(unsigned long long)arg2;
- (id)initWithCStringNoCopy:(char *)arg1 length:(unsigned long long)arg2 freeWhenDone:(BOOL)arg3;
- (id)initWithCharacters:(const unsigned short*)arg1 length:(unsigned long long)arg2;
- (id)initWithCharactersNoCopy:(unsigned short*)arg1 length:(unsigned long long)arg2 freeWhenDone:(BOOL)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1 encoding:(unsigned long long)arg2 error:(id*)arg3;
- (id)initWithContentsOfFile:(id)arg1 usedEncoding:(unsigned long long*)arg2 error:(id*)arg3;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1 encoding:(unsigned long long)arg2 error:(id*)arg3;
- (id)initWithContentsOfURL:(id)arg1 usedEncoding:(unsigned long long*)arg2 error:(id*)arg3;
- (id)initWithData:(id)arg1 encoding:(unsigned long long)arg2;
- (id)initWithData:(id)arg1 usedEncoding:(unsigned long long*)arg2;
- (id)initWithFormat:(id)arg1;
- (id)initWithFormat:(id)arg1 arguments:(struct __va_list_tag { unsigned int x1; unsigned int x2; void *x3; void *x4; })arg2;
- (id)initWithFormat:(id)arg1 locale:(id)arg2;
- (id)initWithFormat:(id)arg1 locale:(id)arg2 arguments:(struct __va_list_tag { unsigned int x1; unsigned int x2; void *x3; void *x4; })arg3;
- (id)initWithString:(id)arg1;
- (id)initWithUTF8String:(const char *)arg1;
- (id)initWithValidatedFormat:(id)arg1 validFormatSpecifiers:(id)arg2 locale:(id)arg3 arguments:(struct __va_list_tag { unsigned int x1; unsigned int x2; void *x3; void *x4; })arg4 error:(id*)arg5;
- (int)intValue;
- (long long)integerValue;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToString:(id)arg1;
- (unsigned long long)length;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })lineRangeForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)localizedCapitalizedString;
- (long long)localizedCaseInsensitiveCompare:(id)arg1;
- (BOOL)localizedCaseInsensitiveContainsString:(id)arg1;
- (long long)localizedCompare:(id)arg1;
- (BOOL)localizedHasPrefix:(id)arg1;
- (BOOL)localizedHasSuffix:(id)arg1;
- (id)localizedLowercaseString;
- (long long)localizedStandardCompare:(id)arg1;
- (BOOL)localizedStandardContainsString:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })localizedStandardRangeOfString:(id)arg1;
- (id)localizedUppercaseString;
- (long long)longLongValue;
- (id)lowercaseString;
- (id)lowercaseStringWithLocale:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })paragraphRangeForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)precomposedStringWithCanonicalMapping;
- (id)precomposedStringWithCompatibilityMapping;
- (id)quotedStringRepresentation;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfCharacterFromSet:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfCharacterFromSet:(id)arg1 options:(unsigned long long)arg2;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfCharacterFromSet:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfComposedCharacterSequenceAtIndex:(unsigned long long)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfComposedCharacterSequencesForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfString:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfString:(id)arg1 options:(unsigned long long)arg2;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 locale:(id)arg4;
- (id)stringByAppendingFormat:(id)arg1;
- (id)stringByAppendingString:(id)arg1;
- (id)stringByApplyingTransform:(id)arg1 reverse:(BOOL)arg2;
- (id)stringByFoldingWithOptions:(unsigned long long)arg1 locale:(id)arg2;
- (id)stringByPaddingToLength:(unsigned long long)arg1 withString:(id)arg2 startingAtIndex:(unsigned long long)arg3;
- (id)stringByReplacingCharactersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withString:(id)arg2;
- (id)stringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2;
- (id)stringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2 options:(unsigned long long)arg3 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4;
- (id)stringByTrimmingCharactersInSet:(id)arg1;
- (id)substringFromIndex:(unsigned long long)arg1;
- (id)substringToIndex:(unsigned long long)arg1;
- (id)substringWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)uppercaseString;
- (id)uppercaseStringWithLocale:(id)arg1;
- (BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2;
- (BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2 encoding:(unsigned long long)arg3 error:(id*)arg4;
- (BOOL)writeToURL:(id)arg1 atomically:(BOOL)arg2;
- (BOOL)writeToURL:(id)arg1 atomically:(BOOL)arg2 encoding:(unsigned long long)arg3 error:(id*)arg4;

// NSString (NSBundleExtensionMethods)

- (id)variantFittingPresentationWidth:(long long)arg1;

// NSString (NSCFAdditions)

- (unsigned long long)_cfTypeID;
- (id)_createSubstringWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (unsigned char)_encodingCantBeStoredInEightBitCFString;
- (unsigned int)_fastestEncodingInCFStringEncoding;
- (BOOL)_getCString:(char *)arg1 maxLength:(unsigned long long)arg2 encoding:(unsigned int)arg3;
- (unsigned int)_smallestEncodingInCFStringEncoding;

// NSString (NSComparisonMethods)

- (id)_getBracketedStringFromBuffer:(struct _NSStringBuffer { unsigned long long x1; unsigned long long x2; id x3; unsigned long long x4; unsigned short x5[32]; unsigned short x6; unsigned short x7; }*)arg1 string:(id)arg2;
- (BOOL)_matchesCharacter:(unsigned short)arg1;
- (BOOL)isCaseInsensitiveLike:(id)arg1;
- (BOOL)isLike:(id)arg1;
- (BOOL)matchesPattern:(id)arg1;
- (BOOL)matchesPattern:(id)arg1 caseInsensitive:(BOOL)arg2;

// NSString (NSDecimalExtension)

- (struct { unsigned int x1 : 8; unsigned int x2 : 4; unsigned int x3 : 1; unsigned int x4 : 1; unsigned int x5 : 18; unsigned short x6[8]; })decimalValue;

// NSString (NSDistantString)

- (BOOL)_getBytesAsData:(id*)arg1 maxLength:(unsigned long long)arg2 usedLength:(unsigned long long*)arg3 encoding:(unsigned long long)arg4 options:(unsigned long long)arg5 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg6 remainingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg7;
- (id)_getCharactersAsStringInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;

// NSString (NSExtendedStringPropertyListParsing)

- (id)propertyList;
- (id)propertyListFromStringsFileFormat;

// NSString (NSItemProvider)

+ (id)objectWithItemProviderData:(id)arg1 typeIdentifier:(id)arg2 error:(id*)arg3;
+ (id)readableTypeIdentifiersForItemProvider;
+ (id)writableTypeIdentifiersForItemProvider;

- (id)loadDataWithTypeIdentifier:(id)arg1 forItemProviderCompletionHandler:(id)arg2;
- (id)writableTypeIdentifiersForItemProvider;

// NSString (NSKindOfAdditions)

- (BOOL)isNSString__;

// NSString (NSLinguisticAnalysis)

- (void)enumerateLinguisticTagsInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 scheme:(id)arg2 options:(unsigned long long)arg3 orthography:(id)arg4 usingBlock:(id)arg5;
- (id)linguisticTagsInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 scheme:(id)arg2 options:(unsigned long long)arg3 orthography:(id)arg4 tokenRanges:(id*)arg5;

// NSString (NSPathUtilities)

+ (id)pathWithComponents:(id)arg1;

- (id)_stringByResolvingSymlinksInPathUsingCache:(BOOL)arg1;
- (id)_stringByStandardizingPathUsingCache:(BOOL)arg1;
- (unsigned long long)completePathIntoString:(id*)arg1 caseSensitive:(BOOL)arg2 matchesIntoArray:(id*)arg3 filterTypes:(id)arg4;
- (const char *)fileSystemRepresentation;
- (BOOL)getFileSystemRepresentation:(char *)arg1 maxLength:(unsigned long long)arg2;
- (BOOL)isAbsolutePath;
- (id)lastPathComponent;
- (id)pathComponents;
- (id)pathExtension;
- (id)stringByAbbreviatingWithTildeInPath;
- (id)stringByAppendingPathComponent:(id)arg1;
- (id)stringByAppendingPathExtension:(id)arg1;
- (id)stringByConvertingPathToURL;
- (id)stringByConvertingURLToPath;
- (id)stringByDeletingLastPathComponent;
- (id)stringByDeletingPathExtension;
- (id)stringByExpandingTildeInPath;
- (id)stringByResolvingSymlinksInPath;
- (id)stringByStandardizingPath;
- (id)stringsByAppendingPaths:(id)arg1;

// NSString (NSPersonNameComponentsFormatter)

- (unsigned long long)__graphemeCount;

// NSString (NSRegularExpressionSupport)

- (void)_flushRegularExpressionCaches;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_rangeOfRegularExpressionPattern:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 locale:(id)arg4;
- (id)_stringByReplacingOccurrencesOfRegularExpressionPattern:(id)arg1 withTemplate:(id)arg2 options:(unsigned long long)arg3 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4;

// NSString (NSScriptAppleEventConversion)

+ (id)_scriptingTextWithDescriptor:(id)arg1;

- (int)_scriptingAlternativeValueRankWithDescriptor:(id)arg1;
- (id)_scriptingTextDescriptor;

// NSString (NSScriptSuiteDebugging)

+ (id)_scriptStringWithPropertyAccess:(unsigned long long)arg1;
+ (id)_scriptStringWithTabCount:(unsigned long long)arg1;

// NSString (NSScriptingComparisonMethods)

- (BOOL)scriptingBeginsWith:(id)arg1;
- (BOOL)scriptingContains:(id)arg1;
- (BOOL)scriptingEndsWith:(id)arg1;
- (BOOL)scriptingIsEqualTo:(id)arg1;
- (BOOL)scriptingIsGreaterThan:(id)arg1;
- (BOOL)scriptingIsGreaterThanOrEqualTo:(id)arg1;
- (BOOL)scriptingIsLessThan:(id)arg1;
- (BOOL)scriptingIsLessThanOrEqualTo:(id)arg1;

// NSString (NSSearchMethods)

- (id)__oldnf_componentsSeparatedBySet:(id)arg1;
- (BOOL)__oldnf_containsChar:(BOOL)arg1;
- (BOOL)__oldnf_containsCharFromSet:(id)arg1;
- (BOOL)__oldnf_containsString:(id)arg1;
- (void)__oldnf_copyToUnicharBuffer:(unsigned short**)arg1 saveLength:(long long*)arg2;
- (id)__oldnf_stringWithSeparator:(unsigned short)arg1 atFrequency:(long long)arg2;

// NSString (NSStringEncodingDetection)

+ (unsigned long long)stringEncodingForData:(id)arg1 encodingOptions:(id)arg2 convertedString:(id*)arg3 usedLossyConversion:(BOOL*)arg4;

// NSString (NSStringOtherEncodings)

+ (const unsigned long long*)availableStringEncodings;
+ (unsigned long long)defaultCStringEncoding;
+ (id)localizedNameOfStringEncoding:(unsigned long long)arg1;

- (const char *)UTF8String;
- (const char *)cString;
- (unsigned long long)cStringLength;
- (const char *)cStringUsingEncoding:(unsigned long long)arg1;
- (BOOL)canBeConvertedToEncoding:(unsigned long long)arg1;
- (id)dataUsingEncoding:(unsigned long long)arg1;
- (id)dataUsingEncoding:(unsigned long long)arg1 allowLossyConversion:(BOOL)arg2;
- (unsigned long long)fastestEncoding;
- (BOOL)getBytes:(char *)arg1 maxLength:(unsigned long long)arg2 filledLength:(unsigned long long*)arg3 encoding:(unsigned long long)arg4 allowLossyConversion:(BOOL)arg5 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg6 remainingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg7;
- (BOOL)getBytes:(void*)arg1 maxLength:(unsigned long long)arg2 usedLength:(unsigned long long*)arg3 encoding:(unsigned long long)arg4 options:(unsigned long long)arg5 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg6 remainingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg7;
- (void)getCString:(char *)arg1;
- (void)getCString:(char *)arg1 maxLength:(unsigned long long)arg2;
- (BOOL)getCString:(char *)arg1 maxLength:(unsigned long long)arg2 encoding:(unsigned long long)arg3;
- (void)getCString:(char *)arg1 maxLength:(unsigned long long)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 remainingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg4;
- (unsigned long long)lengthOfBytesUsingEncoding:(unsigned long long)arg1;
- (const char *)lossyCString;
- (unsigned long long)maximumLengthOfBytesUsingEncoding:(unsigned long long)arg1;
- (unsigned long long)smallestEncoding;

// NSString (NSStringPortCoding)

- (id)replacementObjectForPortCoder:(id)arg1;

// NSString (NSURLExtras)

+ (id)_web_stringRepresentationForBytes:(long long)arg1;

- (id)_web_URLFragment;
- (long long)_web_countOfString:(id)arg1;
- (id)_web_domainFromHost;
- (BOOL)_web_domainMatches:(id)arg1;
- (unsigned int)_web_extractFourCharCode;
- (id)_web_filenameByFixingIllegalCharacters;
- (id)_web_fixedCarbonPOSIXPath;
- (BOOL)_web_hasCaseInsensitivePrefix:(id)arg1;
- (BOOL)_web_hasCountryCodeTLD;
- (BOOL)_web_isCaseInsensitiveEqualToString:(id)arg1;
- (BOOL)_web_isFileURL;
- (BOOL)_web_looksLikeAbsoluteURL;
- (BOOL)_web_looksLikeIPAddress;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_web_rangeOfURLHost;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_web_rangeOfURLUserPasswordHostPort;
- (id)_web_stringByCollapsingNonPrintingCharacters;
- (id)_web_stringByExpandingTildeInPath;
- (id)_web_stringByTrimmingWhitespace;

// NSString (NSURLExtrasInternal)

- (id)_web_characterSetFromContentTypeHeader_nowarn;
- (id)_web_fileNameFromContentDispositionHeader_nowarn;
- (BOOL)_web_isJavaScriptURL;
- (id)_web_mimeTypeFromContentTypeHeader_nowarn;
- (id)_web_parseAsKeyValuePairHandleQuotes_nowarn:(BOOL)arg1;
- (id)_web_parseAsKeyValuePair_nowarn;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_web_rangeOfURLResourceSpecifier_nowarn;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_web_rangeOfURLScheme_nowarn;
- (id)_web_splitAtNonDateCommas_nowarn;
- (id)_web_stringByReplacingValidPercentEscapes_nowarn;

// NSString (NSURLPathUtilities)

- (id)standardizedURLPath;
- (id)stringByAddingPercentEscapes;
- (id)stringByRemovingPercentEscapes;

// NSString (NSURLUtilities)

- (id)stringByAddingPercentEncodingWithAllowedCharacters:(id)arg1;
- (id)stringByAddingPercentEscapesUsingEncoding:(unsigned long long)arg1;
- (id)stringByRemovingPercentEncoding;
- (id)stringByReplacingPercentEscapesUsingEncoding:(unsigned long long)arg1;

// NSString (NSUniquePart)

- (struct _NSRange { unsigned long long x1; unsigned long long x2; })significantText;

// NSString (NSUnpublishedEOF)

- (id)stringMarkingUpcaseTransitionsWithDelimiter2:(id)arg1;

// NSString (NSUserDefaults_NSURLExtras)

- (id)_web_HTTPStyleLanguageCode;
- (id)_web_HTTPStyleLanguageCodeWithoutRegion;

// NSString (NSZString)

+ (id)_newZStringWithCharacters:(const unsigned short*)arg1 length:(unsigned long long)arg2;
+ (id)_newZStringWithString:(id)arg1;
+ (id)_newZStringWithUTF8String:(const char *)arg1;

// NSString (_NSMetadataQueryExtensions)

- (id)__escapeString5991;

// NSString (__NSLocalizedStringAddition)

- (id)_copyFormatStringWithConfiguration:(id)arg1;
- (id)formatConfiguration;

// Image: /Applications/Xcode.app/Contents/SharedFrameworks/DebugHierarchyFoundation.framework/Versions/A/DebugHierarchyFoundation

// NSString (DBGNumberDecoding)

- (BOOL)dbgBoolValue;
- (double)dbgCGFloatValue;
- (id)dbgDataValue;
- (double)dbgDoubleValue;
- (float)dbgFloatValue;
- (int)dbgIntValue;
- (long long)dbgIntegerValue;
- (long long)dbgLongValue;
- (id)dbgStringValue;
- (unsigned int)dbgUnsignedIntValue;
- (unsigned long long)dbgUnsignedIntegerValue;
- (unsigned long long)dbgUnsignedLongValue;

// Image: /System/Library/Frameworks/AddressBook.framework/Versions/A/AddressBook

// NSString (ABStringAdditions)

+ (BOOL)abIsBlank:(id)arg1;
+ (id)abUniqueString;

- (id)_abTrimmedString;
- (BOOL)_ab_containsDiacritics;
- (BOOL)_ab_containsSubstring:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_ab_entireRange;
- (id)_ab_rangesOfStrings:(id)arg1;
- (id)_ab_stringByReplacingStrings:(id)arg1;
- (id)abCaseNormalizedCopy;
- (unsigned long long)abEndOfParagraphStartingAtIndex:(unsigned long long)arg1;
- (void)abEnumerateCharactersWithOptions:(unsigned long long)arg1 usingBlock:(id)arg2;
- (BOOL)abIsBlank;
- (id)abNameComponentTokens;
- (id)abNameComponentTokensUsingLocale:(id)arg1 inferredNameOrder:(long long*)arg2;
- (id)abNormalizedUID;
- (id)abSha1HashString;
- (id)abStandardizedPhoneNumber;
- (id)abStringByRemovingPunctuation;
- (id)abTokens;
- (id)abUIDWithTableName:(id)arg1;
- (id)abVCardDataRepresentation;
- (id)abWords;

// NSString (ABStringEllipsizing)

- (id)abEllipsizeWithFont:(id)arg1 withWidth:(double)arg2;
- (id)abEllipsizeWithFont:(id)arg1 withWidth:(double)arg2 reverseForRightToLeft:(BOOL)arg3;

// NSString (ABValueTransformation)

- (id)localizedPropertyOrLabel;
- (id)localizedPropertyOrLabelWithCapitals;

// NSString (NSString_ABQueryPieces)

- (id)ab_queryPieces;
- (id)ab_queryPiecesNoLowerCase;

// NSString (NSString_Compare)

- (long long)_abCompare:(id)arg1 ascending:(BOOL)arg2 options:(unsigned long long)arg3;
- (BOOL)_abCompareContainsSubString:(id)arg1 options:(unsigned long long)arg2;
- (BOOL)_abCompareNotWithinIntervalAroundToday:(id)arg1;
- (BOOL)_abCompareNotWithinIntervalAroundTodayYearless:(id)arg1;
- (BOOL)_abCompareNotWithinIntervalFromToday:(id)arg1;
- (BOOL)_abCompareNotWithinIntervalFromTodayYearless:(id)arg1;
- (BOOL)_abComparePrefixMatch:(id)arg1 options:(unsigned long long)arg2;
- (BOOL)_abCompareSuffixMatch:(id)arg1 options:(unsigned long long)arg2;
- (BOOL)_abCompareWithinIntervalAroundToday:(id)arg1;
- (BOOL)_abCompareWithinIntervalAroundTodayYearless:(id)arg1;
- (BOOL)_abCompareWithinIntervalFromToday:(id)arg1;
- (BOOL)_abCompareWithinIntervalFromTodayYearless:(id)arg1;

// Image: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit

// NSString (NSNavFilePropertyComparisonAdditions)

- (long long)_NSNavDisplayNameCompare:(id)arg1 caseSensitive:(BOOL)arg2;
- (long long)_NSNavFilePropertyCompare:(id)arg1;
- (long long)_NSNavFilePropertyCompareCaseInsenstive:(id)arg1;
- (long long)_NSNavShortVersionCompare:(id)arg1;

// NSString (NSPasteboardSupport)

+ (id)readableTypesForPasteboard:(id)arg1;

- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(id)arg2;
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;

// NSString (NSSafariPrefixThingy)

- (BOOL)_hasLocalizedCaseInsensitivePrefix:(id)arg1;

// NSString (NSStringKitExtensions)

- (id)stringWithoutAmpersand;

// NSString (NSStringTextExtras)

- (unsigned long long)_endOfParagraphAtIndex:(unsigned long long)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfGraphicalSegmentAtIndex:(unsigned long long)arg1;

// NSString (NSTextFinderAdditions)

- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_textfinder_firstMatchForRegularExpression:(id)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;

// Image: /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink

// NSString (LoggingAdditions)

+ (id)stringWithButtonDown:(BOOL)arg1;
+ (id)stringWithCarbonEventClass:(unsigned int)arg1;
+ (id)stringWithCarbonEventKind:(unsigned int)arg1;
+ (id)stringWithDispatchCommand:(unsigned int)arg1;
+ (id)stringWithDispatchCommandUnCached:(unsigned int)arg1;
+ (id)stringWithEventSubType:(int)arg1;
+ (id)stringWithEventType:(unsigned long long)arg1;
+ (id)stringWithInkCDFlag:(unsigned int)arg1;
+ (id)stringWithInkEventDisposition:(unsigned int)arg1;
+ (id)stringWithInkEventQueueOptions:(unsigned int)arg1;
+ (id)stringWithInkFlags:(unsigned int)arg1;
+ (id)stringWithInkModifiers:(unsigned int)arg1;
+ (id)stringWithInkTermType:(unsigned char)arg1;

// Image: /System/Library/Frameworks/Contacts.framework/Versions/A/Contacts

// NSString (CNKeyDescriptor_Private)

- (void)_cn_executeGetterForRepresentedKeys:(id)arg1;
- (id)_cn_optionalKeys;
- (id)_cn_requiredKeys;

// Image: /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData

// NSString (_CoreData_Extensions)

- (long long)_caseInsensitiveNumericCompare:(id)arg1;

// Image: /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation

- (id)cl_json_serializeKey;
- (void)cl_json_serializeValue:(struct value_ostream { bool x1; struct ostream {} *x2; }*)arg1;

// Image: /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices

// NSString (LSDebuggingAdditions)

+ (id)NSStringFromLSInstallPhase:(unsigned long long)arg1;
+ (id)NSStringFromLSInstallState:(unsigned long long)arg1;
+ (id)NSStringFromLSInstallType:(unsigned long long)arg1;

// NSString (LSNormalizePluginDictionary)

- (BOOL)ls_isRecursiveKey;
- (id)ls_updatedKey;

// NSString (LSPluginQueryAdditions)

- (id)clean;
- (BOOL)matches:(id)arg1;
- (BOOL)matchesString:(id)arg1;

// Image: /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore

// NSString (ImageCaptureCoreAdditions)

+ (id)stringFromOSType:(unsigned int)arg1;

// Image: /System/Library/Frameworks/MapKit.framework/Versions/A/MapKit

// NSString (CGFloat)

- (double)_mapkit_cgFloatValue;

// NSString (MKAdditions)

+ (id)_mapkit_commaListDelimiter;
+ (id)_mapkit_formattedStringForCoordinate:(struct CLLocationCoordinate2D { double x1; double x2; })arg1;
+ (id)_mapkit_formattedStringForFloat:(double)arg1;
+ (id)_mapkit_formattedStringForFloatingPointNumber:(id)arg1;
+ (id)_mapkit_localizedDistanceStringWithMeters:(unsigned int)arg1 abbreviated:(BOOL)arg2;
+ (id)_mapkit_voiceOverLocalizedDistanceStringWithMeters:(unsigned int)arg1;

- (id)_mapkit_componentsSeparatedFromCommaDelimitedList;
- (struct CGSize { double x1; double x2; })_mapkit_sizeWithFont:(id)arg1;

// NSString (MKServerFormattedString_Convenience)

- (id)mkServerFormattedString;

// Image: /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit

// NSString (QTKit_Extensions)

- (BOOL)isIPAddress;

// Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit

// NSString (Delegate)

+ (id)delegate;

- (id)delegate;

// NSString (IKCocoaFixes)

+ (id)IKStringFromSize:(long long)arg1;

// NSString (IKScanConstraints)

- (id)firstViewName;
- (id)firstViewNameWithPriority;
- (id)lastViewName;
- (id)lastViewNameWithPriority;
- (id)viewArray;
- (id)viewAtIndex:(long long)arg1;
- (long long)viewCount;
- (id)viewWithPriorityArray;
- (id)viewWithPriorityAtIndex:(long long)arg1;

// NSString (LeftPadding)

- (id)stringByLeftPaddingToLength:(unsigned long long)arg1 withString:(id)arg2 startingAtIndex:(unsigned long long)arg3;

// Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer

// NSString (QCTextRenderer)

- (void)drawInContext:(struct CGContext { }*)arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2 withFontName:(id)arg3 size:(double)arg4 alignement:(int)arg5;

// Image: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI

// NSString (QLPreviewEscaping)

- (id)_qlStringByAddingPercentEscapes;

// Image: /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore

// NSString (CAMLWriter)

- (id)CAMLType;
- (void)encodeWithCAMLWriter:(id)arg1;

// Image: /System/Library/Frameworks/SceneKit.framework/Versions/A/SceneKit

// NSString (SCNExtensions)

- (unsigned long long)SCN_safeHash;
- (id)scn_stringByReplacingCharactersInRanges:(id)arg1 withStrings:(id)arg2;

// Image: /System/Library/Frameworks/SecurityInterface.framework/Versions/A/SecurityInterface

// NSString (CertificateFilenameUtils)

- (unsigned int)encodedByteLength;
- (id)uniqueFilenameWithExtension:(id)arg1 suffix:(id)arg2;

// Image: /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebKitLegacy.framework/Versions/A/WebKitLegacy

// NSString (WebKitExtras)

+ (id)_webkit_localCacheDirectoryWithBundleIdentifier:(id)arg1;
+ (id)_webkit_localStorageDirectoryWithBundleIdentifier:(id)arg1;

- (void)_web_drawAtPoint:(struct CGPoint { double x1; double x2; })arg1 font:(id)arg2 textColor:(id)arg3;
- (void)_web_drawAtPoint:(struct CGPoint { double x1; double x2; })arg1 font:(id)arg2 textColor:(id)arg3 allowingFontSmoothing:(BOOL)arg4;
- (void)_web_drawDoubledAtPoint:(struct CGPoint { double x1; double x2; })arg1 withTopColor:(id)arg2 bottomColor:(id)arg3 font:(id)arg4;
- (id)_web_stringByAbbreviatingWithTildeInPath;
- (id)_web_stringByStrippingReturnCharacters;
- (float)_web_widthWithFont:(id)arg1;
- (id)_webkit_filenameByFixingIllegalCharacters;
- (id)_webkit_fixedCarbonPOSIXPath;
- (BOOL)_webkit_hasCaseInsensitivePrefix:(id)arg1;
- (BOOL)_webkit_hasCaseInsensitiveSubstring:(id)arg1;
- (BOOL)_webkit_hasCaseInsensitiveSuffix:(id)arg1;
- (BOOL)_webkit_isCaseInsensitiveEqualToString:(id)arg1;
- (id)_webkit_stringByCollapsingNonPrintingCharacters;
- (id)_webkit_stringByCollapsingWhitespaceCharacters;
- (id)_webkit_stringByTrimmingWhitespace;

// NSString (WebNSDataExtrasInternal)

- (id)_web_capitalizeRFC822HeaderFieldName;

// NSString (WebNSURLExtras)

- (id)_web_decodeHostName;
- (id)_web_encodeHostName;
- (BOOL)_web_isUserVisibleURL;
- (id)_webkit_decodeHostName;
- (id)_webkit_encodeHostName;
- (BOOL)_webkit_isFileURL;
- (BOOL)_webkit_isJavaScriptURL;
- (BOOL)_webkit_looksLikeAbsoluteURL;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_webkit_rangeOfURLScheme;
- (id)_webkit_scriptIfJavaScriptURL;
- (id)_webkit_stringByReplacingValidPercentEscapes;

// Image: /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService

// NSString (APSAdditions)

+ (id)apsStringGUID;

// Image: /System/Library/PrivateFrameworks/CommonUtilities.framework/Versions/A/CommonUtilities

+ (id)cutStringGUID;

- (id)cutStringByResolvingAndStandardizingPath;

// Image: /System/Library/PrivateFrameworks/ContactsFoundation.framework/Versions/A/ContactsFoundation

// NSString (CNOrderedDictionary)

- (id)_cn_stringByReplacingStrings:(id)arg1;

// NSString (ContactsFoundation)

+ (id)_cn_LTRControlCharacters;
+ (BOOL)_cn_isBlank:(id)arg1;

- (id)_cn_SHA256HashStringWithSalt:(id)arg1;
- (BOOL)_cn_caseInsensitiveIsEqual:(id)arg1;
- (BOOL)_cn_containsCharacterInSet:(id)arg1;
- (BOOL)_cn_containsSubstring:(id)arg1;
- (BOOL)_cn_containsSubstring:(id)arg1 options:(unsigned long long)arg2;
- (void)_cn_eachCharacter:(id)arg1;
- (BOOL)_cn_hasCaseAndDiacriticInsensitivePrefix:(id)arg1;
- (BOOL)_cn_hasPrefix:(id)arg1;
- (BOOL)_cn_hasPrefix:(id)arg1 options:(unsigned long long)arg2;
- (BOOL)_cn_hasSuffix:(id)arg1;
- (BOOL)_cn_hasSuffix:(id)arg1 options:(unsigned long long)arg2;
- (BOOL)_cn_isBlank;
- (id)_cn_nameComponentTokens;
- (id)_cn_nameComponentTokensUsingLocale:(id)arg1 inferredNameOrder:(long long*)arg2;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_cn_rangeFromIndex:(unsigned long long)arg1;
- (id)_cn_resultWithAllCharacters:(id)arg1;
- (id)_cn_stringByAddingPercentEscapesIfNecessary;
- (id)_cn_stringByAddingPercentEscapesToEntireURL;
- (id)_cn_stringByDeletingCharactersInSet:(id)arg1;
- (id)_cn_stringByDeletingNumberOfPathComponents:(unsigned long long)arg1;
- (id)_cn_stringByNormalizingCase;
- (id)_cn_tokens;
- (id)_cn_trimmedString;

// NSString (ContactsFoundationPhoneNumbers)

- (BOOL)_cn_requiresPhoneNumberSanitizing;
- (id)_cn_stringBySanitizingPhoneNumber;

// Image: /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi

// NSString (NSString_ConfigParser)

- (id)convertParamStringToArray:(id*)arg1;
- (id)convertParamStringToArray:(id)arg1 error:(id*)arg2;
- (id)convertParamStringToNumberArray:(id*)arg1;
- (id)convertToBool:(id*)arg1;
- (id)convertToDataFromHex:(id*)arg1;
- (id)convertToInteger:(id*)arg1;
- (id)convertToMacAddress:(id*)arg1;

// NSString (NSString_FancyFormatting)

+ (id)formattedData:(id)arg1 includeHex:(BOOL)arg2;
+ (id)formattedHexData:(id)arg1;
+ (id)formattedMAC:(id)arg1;
+ (id)formattedOUI:(id)arg1;
+ (id)formattedUUID:(id)arg1;
+ (id)stringValueForDwdsRole:(unsigned char)arg1;
+ (id)stringValueForWiFiAssociationStatusCode:(unsigned short)arg1;
+ (id)stringValueForWiFiAuthenticationReasonCode:(unsigned short)arg1;
+ (id)stringValueForWiFiJoinState:(unsigned short)arg1;
+ (id)stringValueForWiFiPowersave:(unsigned short)arg1;

// Image: /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage

// NSString (GSAdditions)

- (void)chmod:(unsigned short)arg1;

// NSString (GSExtensions)

+ (id)gs_stringWithFileSystemRepresentation:(const char *)arg1;

- (id)gs_issueExtension:(const char *)arg1 error:(id*)arg2;
- (id)gs_issueReadExtensionIfNeededForPid:(int)arg1;
- (id)gs_stringByUpdatingPathExtensionWithPathOrURL:(id)arg1;
- (BOOL)validateGSName:(out id*)arg1;
- (BOOL)validateGSNameAllowingDot:(BOOL)arg1 error:(id*)arg2;

// Image: /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices

// NSString (CPlusPlusProtobuf)

+ (id)stringWithStdString:(const struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned long long x_1_4_1; unsigned long long x_1_4_2; char *x_1_4_3; } x_1_3_1; struct __short { union { unsigned char x_1_5_1; BOOL x_1_5_2; } x_2_4_1; BOOL x_2_4_2[23]; } x_1_3_2; struct __raw { unsigned long long x_3_4_1[3]; } x_1_3_3; } x_1_2_1; } x_1_1_1; } x1; }*)arg1 copy:(BOOL)arg2;

- (id)initWithStdString:(const struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned long long x_1_4_1; unsigned long long x_1_4_2; char *x_1_4_3; } x_1_3_1; struct __short { union { unsigned char x_1_5_1; BOOL x_1_5_2; } x_2_4_1; BOOL x_2_4_2[23]; } x_1_3_2; struct __raw { unsigned long long x_3_4_1[3]; } x_1_3_3; } x_1_2_1; } x_1_1_1; } x1; }*)arg1 copy:(BOOL)arg2;
- (struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned long long x_1_4_1; unsigned long long x_1_4_2; char *x_1_4_3; } x_1_3_1; struct __short { union { unsigned char x_1_5_1; BOOL x_1_5_2; } x_2_4_1; BOOL x_2_4_2[23]; } x_1_3_2; struct __raw { unsigned long long x_3_4_1[3]; } x_1_3_3; } x_1_2_1; } x_1_1_1; } x1; })stdString;

// NSString (GEOTransitExtras)

- (id)serverFormattedString;

// Image: /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices

// NSString (FileNameConventionAdditions)

- (id)imageMetadataFromFileName;
- (id)scaleableResourceMetadataFromFileName;

// Image: /System/Library/PrivateFrameworks/Navigation.framework/Versions/A/Navigation

// NSString (FormatExtras)

+ (BOOL)_componentsWillUseShortFormat:(id)arg1;
+ (id)_frequencyStringForComponents:(id)arg1 forRange:(BOOL)arg2 forceShort:(BOOL)arg3;
+ (long long)_navigation_abbreviatedFromatterUnitsStyleForLocale:(id)arg1;
+ (id)_navigation_addPrefixToInstructions:(id)arg1 isServer:(BOOL)arg2 isSpoken:(BOOL)arg3;
+ (BOOL)_navigation_compareServerInstructions:(id)arg1 withClientInstructions:(id)arg2;
+ (id)_navigation_descriptionForFrequencyMinuteValue:(long long)arg1;
+ (id)_navigation_descriptionForFrequencyRangeWithMinFrequency:(long long)arg1 maxFrequency:(long long)arg2;
+ (id)_navigation_formatFloatForPrintedDistance:(double)arg1;
+ (id)_navigation_formattedDescriptionForFrequency:(id)arg1;
+ (id)_navigation_formattedStringForFloat:(double)arg1;
+ (id)_navigation_formattedStringForFloat:(double)arg1 useIncreasedPrecision:(BOOL)arg2;
+ (id)_navigation_formattedStringForHourRanges:(id)arg1 timeZone:(id)arg2;
+ (id)_navigation_formattedStringForInteger:(long long)arg1;
+ (id)_navigation_formattedStringForPriceValue:(double)arg1 currencyCode:(id)arg2;
+ (id)_navigation_formattedStringForPriceValueWithAmount:(id)arg1 currencyCode:(id)arg2;
+ (id)_navigation_formattedStringForPriceValueWithAmount:(id)arg1 currencyCode:(id)arg2 showsCurrencySymbol:(BOOL)arg3;
+ (id)_navigation_languageDirectionStringWithFormat:(id)arg1;
+ (id)_navigation_localizedStringForDistance:(double)arg1 context:(long long)arg2 extraDetail:(BOOL)arg3;
+ (id)_navigation_localizedStringForDistance:(double)arg1 detail:(long long)arg2 unitFormat:(long long)arg3 locale:(id)arg4 useMetric:(unsigned long long)arg5 useYards:(unsigned long long)arg6;
+ (BOOL)_navigation_logIfContainsVariables:(id)arg1;
+ (void)_navigation_logMismatchBetweenServerInstruction:(id)arg1 clientInstruction:(id)arg2;
+ (id)_navigation_overridenTokenForToken:(id)arg1 overrideVariables:(id)arg2;
+ (id)_navigation_replacementForFormatToken:(id)arg1 abbreviatedUnits:(BOOL)arg2 detail:(long long)arg3 spoken:(BOOL)arg4 overrideVariables:(id)arg5;
+ (id)_navigation_selectInstructionWithServerString:(id)arg1 isSpoken:(BOOL)arg2 clientBlock:(id)arg3;
+ (id)_navigation_selectInstructionWithServerStringArray:(id)arg1 isSpoken:(BOOL)arg2 clientBlock:(id)arg3;
+ (id)_navigation_stringForDistance:(double)arg1 formatter:(id)arg2 locale:(id)arg3;
+ (id)_navigation_stringForExpectedTravelTime:(double)arg1 dateUnitStyle:(long long)arg2;
+ (id)_navigation_stringForServerFormattedString:(id)arg1;
+ (id)_navigation_stringForServerFormattedString:(id)arg1 abbreviatedUnits:(BOOL)arg2 detail:(long long)arg3 spoken:(BOOL)arg4 overrideVariables:(id)arg5;
+ (id)_navigation_stringWithMinutes:(unsigned long long)arg1 andAbbreviationType:(unsigned long long)arg2;
+ (id)_navigation_stringWithSeconds:(unsigned long long)arg1 abbreviated:(BOOL)arg2;
+ (id)_navigation_stringWithSeconds:(unsigned long long)arg1 andAbbreviationType:(unsigned long long)arg2;
+ (id)_navigation_stringWithTimeStampValues:(id)arg1;

- (BOOL)_navigation_containsVariables;
- (unsigned long long)_navigation_distanceLevenshtein:(id)arg1;
- (BOOL)_navigation_isCJK;
- (BOOL)_navigation_isEqualToString:(id)arg1;
- (id)_navigation_stringByMakingPhonetic;
- (id)_navigation_stringByMarkingAsAddress;
- (id)_navigation_stringByMarkingAsNavigationText;
- (id)_navigation_stringByMarkingAsNormalText;
- (id)_navigation_stripDebugPrefix;
- (id)_navigation_stripTagsFromSpokenString;
- (id)_navigation_stripVariablesFromString;

// NSString (HTMLEncoding)

- (id)_navigation_sanitizedStringForDisplayInHTML;
- (id)_navigation_stringByEscapingHTML;
- (id)_navigation_stringByReplacingNewLinesWithString:(id)arg1;

// NSString (NavigationDebug)

+ (id)_navigation_pointerDescription:(id)arg1;
+ (id)_navigation_stringWithAltitude:(double)arg1 accuracy:(double)arg2;
+ (id)_navigation_stringWithAltitudeUnits;
+ (id)_navigation_stringWithDirection:(double)arg1 abbreviated:(BOOL)arg2;
+ (id)_navigation_stringWithSpeed:(double)arg1;
+ (id)_navigation_stringWithSpeedUnits;
+ (id)_navigation_stringWithTime:(id)arg1;

// Image: /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer

// NSString (VariableSupport)

- (id)_pb_fixCase:(BOOL)arg1;
- (id)camelCase;
- (id)intern;
- (BOOL)isObjcReservedWord;
- (id)pascalCase;
- (id)plural;
- (id)stripQuotes;

// Image: /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation

// NSString (NSExtendedStringDrawing)

- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundingRectWithSize:(struct CGSize { double x1; double x2; })arg1 options:(long long)arg2 attributes:(id)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundingRectWithSize:(struct CGSize { double x1; double x2; })arg1 options:(long long)arg2 attributes:(id)arg3 context:(id)arg4;
- (void)drawWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 options:(long long)arg2 attributes:(id)arg3;
- (void)drawWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 options:(long long)arg2 attributes:(id)arg3 context:(id)arg4;
- (BOOL)hasColorGlyphsInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 attributes:(id)arg2;

// NSString (NSStringDrawing)

+ (unsigned long long)defaultAttachmentScaling;
+ (double)defaultBaselineOffsetForFont:(id)arg1;
+ (double)defaultLineHeightForFont:(id)arg1;
+ (float)hyphenationFactor;
+ (void)setDefaultAttachmentScaling:(unsigned long long)arg1;
+ (void)setHyphenationFactor:(float)arg1;
+ (void)setShowsControlCharacters:(BOOL)arg1;
+ (void)setShowsInvisibleCharacters:(BOOL)arg1;
+ (void)setTypesetterBehavior:(long long)arg1;
+ (void)setUsesFontLeading:(BOOL)arg1;
+ (void)setUsesScreenFonts:(BOOL)arg1;
+ (BOOL)showsControlCharacters;
+ (BOOL)showsInvisibleCharacters;
+ (long long)typesetterBehavior;
+ (BOOL)usesFontLeading;
+ (BOOL)usesScreenFonts;

- (void)drawAtPoint:(struct CGPoint { double x1; double x2; })arg1 withAttributes:(id)arg2;
- (void)drawInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withAttributes:(id)arg2;
- (struct CGSize { double x1; double x2; })sizeWithAttributes:(id)arg1;

// NSString (NSStringDrawingExtension)

- (struct CGSize { double x1; double x2; })_sizeWithSize:(struct CGSize { double x1; double x2; })arg1 attributes:(id)arg2;

// Image: /System/Library/PrivateFrameworks/VectorKit.framework/Versions/A/VectorKit

// NSString (VKFoundationInterning)

- (id)_vk_internedString;

// Image: /usr/lib/libmecabra.dylib

- (id)componentsByLanguage:(int)arg1;
- (id)firstCharacter;
- (id)pinyinStringFromPinyinWithToneNumber;
- (long long)simplifiedChineseCompare:(id)arg1;
- (id)stringByApplyingPinyinToneMarkToFirstSyllableWithToneNumber:(unsigned long long)arg1;
- (id)stringByStrippingDiacritics;
- (id)strokeStringFromNumberString;
- (id)toneFromPinyinSyllableWithNumber;
- (long long)traditionalChinesePinyinCompare:(id)arg1;
- (long long)traditionalChineseZhuyinCompare:(id)arg1;
- (id)zhuyinSyllableFromPinyinSyllable;

@end
