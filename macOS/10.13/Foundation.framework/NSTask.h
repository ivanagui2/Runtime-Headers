/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
 */

@interface NSTask : NSObject

@property (atomic, readwrite, copy) NSArray *arguments;
@property (atomic, readwrite, copy) NSURL *currentDirectoryURL;
@property (atomic, readwrite, copy) NSDictionary *environment;
@property (atomic, readwrite, copy) NSURL *executableURL;
@property (atomic, readonly) int processIdentifier;
@property (atomic, readwrite) long long qualityOfService;
@property (getter=isRunning, atomic, readonly) BOOL running;
@property (atomic, readwrite, retain) id standardError;
@property (atomic, readwrite, retain) id standardInput;
@property (atomic, readwrite, retain) id standardOutput;
@property (atomic, readwrite, copy) id terminationHandler;
@property (atomic, readonly) long long terminationReason;
@property (atomic, readonly) int terminationStatus;

+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (id)currentTaskDictionary;
+ (id)launchedTaskWithDictionary:(id)arg1;
+ (id)launchedTaskWithExecutableURL:(id)arg1 arguments:(id)arg2 error:(out id*)arg3 terminationHandler:(id)arg4;
+ (id)launchedTaskWithLaunchPath:(id)arg1 arguments:(id)arg2;

- (id)arguments;
- (id)currentDirectoryPath;
- (id)currentDirectoryURL;
- (id)environment;
- (id)executableURL;
- (id)init;
- (void)interrupt;
- (BOOL)isRunning;
- (void)launch;
- (BOOL)launchAndReturnError:(id*)arg1;
- (id)launchPath;
- (int)processIdentifier;
- (long long)qualityOfService;
- (BOOL)resume;
- (void)setArguments:(id)arg1;
- (void)setCurrentDirectoryPath:(id)arg1;
- (void)setCurrentDirectoryURL:(id)arg1;
- (void)setEnvironment:(id)arg1;
- (void)setExecutableURL:(id)arg1;
- (void)setLaunchPath:(id)arg1;
- (void)setQualityOfService:(long long)arg1;
- (void)setStandardError:(id)arg1;
- (void)setStandardInput:(id)arg1;
- (void)setStandardOutput:(id)arg1;
- (void)setTerminationHandler:(id)arg1;
- (id)standardError;
- (id)standardInput;
- (id)standardOutput;
- (BOOL)suspend;
- (long long)suspendCount;
- (void)terminate;
- (id)terminationHandler;
- (long long)terminationReason;
- (int)terminationStatus;

@end
