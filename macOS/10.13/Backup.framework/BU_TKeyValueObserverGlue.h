/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup
 */

@interface BU_TKeyValueObserverGlue : NSObject {
    struct function<void ()>="__buf_"{type="__lx"[32C] {}  _functor;
    struct function<void (NSDictionary<NSString *,NSObject *> *)>="__buf_"{type="__lx"[32C] {}  _functorWithChange;
    struct TString { 
        struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef> > { 
            struct __CFString {} *fRef; 
        } fString; 
    }  _observedKeyPath;
    struct unordered_set<NSObject *, std::__1::hash<NSObject *>, std::__1::equal_to<NSObject *>, std::__1::allocator<NSObject *> > { 
        struct __hash_table<NSObject *, std::__1::hash<NSObject *>, std::__1::equal_to<NSObject *>, std::__1::allocator<NSObject *> > { 
            struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *> > > { 
                    struct __hash_node_base<std::__1::__hash_node<NSObject *, void *> *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *> > { 
                            unsigned long long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *>, std::__1::allocator<std::__1::__hash_node<NSObject *, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<NSObject *, void *> *> { 
                    struct __hash_node_base<std::__1::__hash_node<NSObject *, void *> *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::hash<NSObject *> > { 
                unsigned long long __first_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::equal_to<NSObject *> > { 
                float __first_; 
            } __p3_; 
        } __table_; 
    }  _observedObjects;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)initCommon:(const struct unordered_set<NSObject *, std::__1::hash<NSObject *>, std::__1::equal_to<NSObject *>, std::__1::allocator<NSObject *> > { struct __hash_table<NSObject *, std::__1::hash<NSObject *>, std::__1::equal_to<NSObject *>, std::__1::allocator<NSObject *> > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<NSObject *, void *> *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *> > { unsigned long long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *>, std::__1::allocator<std::__1::__hash_node<NSObject *, void *> > > { struct __hash_node_base<std::__1::__hash_node<NSObject *, void *> *> { struct __hash_node_base<std::__1::__hash_node<NSObject *, void *> *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; } x1; }*)arg1 observedKeyPath:(const struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef> > { struct __CFString {} *x_1_1_1; } x1; }*)arg2;
- (id)initWithFunctor:(const struct function<void ()>={type=[32C] {}*)arg1 observedObjects:(const struct unordered_set<NSObject *, std::__1::hash<NSObject *>, std::__1::equal_to<NSObject *>, std::__1::allocator<NSObject *> > { struct __hash_table<NSObject *, std::__1::hash<NSObject *>, std::__1::equal_to<NSObject *>, std::__1::allocator<NSObject *> > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<NSObject *, void *> *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *> > { unsigned long long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *>, std::__1::allocator<std::__1::__hash_node<NSObject *, void *> > > { struct __hash_node_base<std::__1::__hash_node<NSObject *, void *> *> { struct __hash_node_base<std::__1::__hash_node<NSObject *, void *> *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; } x1; }*)arg2 observedKeyPath:(const struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef> > { struct __CFString {} *x_1_1_1; } x1; }*)arg3;
- (id)initWithFunctorWithChange:(const struct function<void (NSDictionary<NSString *,NSObject *> *)>={type=[32C] {}*)arg1 observedObjects:(const struct unordered_set<NSObject *, std::__1::hash<NSObject *>, std::__1::equal_to<NSObject *>, std::__1::allocator<NSObject *> > { struct __hash_table<NSObject *, std::__1::hash<NSObject *>, std::__1::equal_to<NSObject *>, std::__1::allocator<NSObject *> > { struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *> > > { struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *> > > { struct __hash_node_base<std::__1::__hash_node<NSObject *, void *> *> {} **x_1_3_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *> *> > { unsigned long long x_1_5_1; } x_2_4_1; } x_1_3_2; } x_1_2_1; } x_1_1_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *> *>, std::__1::allocator<std::__1::__hash_node<NSObject *, void *> > > { struct __hash_node_base<std::__1::__hash_node<NSObject *, void *> *> { struct __hash_node_base<std::__1::__hash_node<NSObject *, void *> *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; } x1; }*)arg2 observedKeyPath:(const struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef> > { struct __CFString {} *x_1_1_1; } x1; }*)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;

@end
