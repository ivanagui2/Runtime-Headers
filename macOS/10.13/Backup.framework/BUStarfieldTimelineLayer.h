/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup
 */

@interface BUStarfieldTimelineLayer : CALayer {
    void * _reserved;
}

@property (nonatomic, readwrite, retain) <BUStarfieldTimelineItem> *selectedItem;
@property (nonatomic, readwrite) <BUStarfieldTimelineDataSource> *timelineDataSource;
@property (nonatomic, readwrite) <BUStarfieldTimelineDelegate> *timelineDelegate;

- (void)aboutToTearDown;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint { double x1; double x2; })arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (void)accessibilityPerformAction:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (void)dealloc;
- (void)handleReloadData;
- (id)init;
- (BOOL)mouseDown:(id)arg1 atLocation:(struct CGPoint { double x1; double x2; })arg2;
- (BOOL)mouseDragged:(id)arg1 toLocation:(struct CGPoint { double x1; double x2; })arg2;
- (void)mouseMoved:(id)arg1 toLocation:(struct CGPoint { double x1; double x2; })arg2;
- (BOOL)mouseUp:(id)arg1 atLocation:(struct CGPoint { double x1; double x2; })arg2;
- (void)notifyItemWasSelected:(id)arg1;
- (struct BUTimelinePrivate { struct TNSRef<id<BUStarfieldTimelineDataSource>, void> { id x_1_1_1; /* Warning: unhandled struct encoding: '{TNSRef<id<BUStarfieldTimelineDelegate>, void>=@}{TNSRef<BU_TMTimeline *, void>=@}@@}' */ struct TNSRef<id<BUStarfieldTimelineDelegate>, void> { id x_2_2_1; struct TNSRef<BU_TMTimeline *, void> { id x_2_3_1; id x_2_3_2; } x_2_2_2; } x_1_1_2; } x1; }*)privateData;
- (void)reloadData;
- (void)scrollWheel:(id)arg1 atLocation:(struct CGPoint { double x1; double x2; })arg2 byDelta:(struct CGSize { double x1; double x2; })arg3;
- (id)selectedItem;
- (void)setAnchorPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setPosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)setSelectedItem:(id)arg1;
- (void)setTimelineDataSource:(id)arg1;
- (void)setTimelineDelegate:(id)arg1;
- (void)tearDownPrivateData;
- (struct TTimelineControl { int (**x1)(); bool x2; bool x3; id x4; double x5; double x6; double x7; double x8; double x9; struct TEase { double x_10_1_1; double x_10_1_2; } x10; double x11; struct TTimeMachineTargetList { struct TRef<TTimeMachineTarget *, TRetainReleasePolicy<TTimeMachineTarget *> > {} *x_12_1_1; struct TRef<TTimeMachineTarget *, TRetainReleasePolicy<TTimeMachineTarget *> > {} *x_12_1_2; struct __compressed_pair<TRef<TTimeMachineTarget *, TRetainReleasePolicy<TTimeMachineTarget *> > *, std::__1::allocator<TRef<TTimeMachineTarget *, TRetainReleasePolicy<TTimeMachineTarget *> > > > { struct TRef<TTimeMachineTarget *, TRetainReleasePolicy<TTimeMachineTarget *> > {} *x_3_2_1; } x_12_1_3; } x12; struct TRef<__CFDictionary *, TRetainReleasePolicy<CFMutableDictionaryRef> > { struct __CFDictionary {} *x_13_1_1; } x13; int x14; int x15; struct TTimelineItem {} *x16; struct TTimelineItem {} *x17; struct vector<TTimelineItem *, std::__1::allocator<TTimelineItem *> > { struct TTimelineItem {} **x_18_1_1; struct TTimelineItem {} **x_18_1_2; struct __compressed_pair<TTimelineItem **, std::__1::allocator<TTimelineItem *> > { struct TTimelineItem {} **x_3_2_1; } x_18_1_3; } x18; }*)timelineControl;
- (id)timelineDataSource;
- (id)timelineDelegate;

@end
