/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices
 */

@interface GEOPDPlaceResponse : PBCodable <NSCopying> {
    GEOClientMetrics * _clientMetrics;
    GEOPDDatasetABStatus * _datasetAbStatus;
    NSString * _debugApiKey;
    unsigned long long  _debugLatencyMs;
    NSMutableArray * _displayLanguages;
    NSString * _displayRegion;
    GEOPDPlaceGlobalResult * _globalResult;
    struct { 
        unsigned int debugLatencyMs : 1; 
        unsigned int requestType : 1; 
        unsigned int status : 1; 
    }  _has;
    NSMutableArray * _placeResults;
    int  _requestType;
    NSMutableArray * _spokenLanguages;
    int  _status;
    PBUnknownFields * _unknownFields;
}

@property (nonatomic, readwrite, retain) GEOClientMetrics *clientMetrics;
@property (nonatomic, readwrite, retain) GEOPDDatasetABStatus *datasetAbStatus;
@property (nonatomic, readwrite, retain) NSString *debugApiKey;
@property (nonatomic, readwrite) unsigned long long debugLatencyMs;
@property (nonatomic, readwrite, retain) NSMutableArray *displayLanguages;
@property (nonatomic, readwrite, retain) NSString *displayRegion;
@property (nonatomic, readwrite, retain) GEOPDPlaceGlobalResult *globalResult;
@property (nonatomic, readonly) BOOL hasClientMetrics;
@property (nonatomic, readonly) BOOL hasDatasetAbStatus;
@property (nonatomic, readonly) BOOL hasDebugApiKey;
@property (nonatomic, readwrite) BOOL hasDebugLatencyMs;
@property (nonatomic, readonly) BOOL hasDisplayRegion;
@property (nonatomic, readonly) BOOL hasGlobalResult;
@property (nonatomic, readwrite) BOOL hasRequestType;
@property (nonatomic, readwrite) BOOL hasStatus;
@property (nonatomic, readwrite, retain) NSMutableArray *placeResults;
@property (nonatomic, readwrite) int requestType;
@property (nonatomic, readwrite, retain) NSMutableArray *spokenLanguages;
@property (nonatomic, readwrite) int status;
@property (nonatomic, readonly) PBUnknownFields *unknownFields;

+ (Class)displayLanguageType;
+ (Class)placeResultType;
+ (Class)spokenLanguageType;

- (void).cxx_destruct;
- (int)StringAsRequestType:(id)arg1;
- (int)StringAsStatus:(id)arg1;
- (void)addDisplayLanguage:(id)arg1;
- (void)addPlaceResult:(id)arg1;
- (void)addSpokenLanguage:(id)arg1;
- (void)clearDisplayLanguages;
- (void)clearPlaceResults;
- (void)clearSpokenLanguages;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)datasetAbStatus;
- (id)debugApiKey;
- (id)description;
- (id)dictionaryRepresentation;
- (id)displayLanguageAtIndex:(unsigned long long)arg1;
- (id)displayLanguages;
- (unsigned long long)displayLanguagesCount;
- (id)displayRegion;
- (id)globalResult;
- (BOOL)hasDatasetAbStatus;
- (BOOL)hasDebugApiKey;
- (BOOL)hasDisplayRegion;
- (BOOL)hasGlobalResult;
- (BOOL)hasRequestType;
- (BOOL)hasStatus;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (id)placeResultAtIndex:(unsigned long long)arg1;
- (id)placeResults;
- (unsigned long long)placeResultsCount;
- (BOOL)readFrom:(id)arg1;
- (int)requestType;
- (id)requestTypeAsString:(int)arg1;
- (void)setDatasetAbStatus:(id)arg1;
- (void)setDebugApiKey:(id)arg1;
- (void)setDisplayLanguages:(id)arg1;
- (void)setDisplayRegion:(id)arg1;
- (void)setGlobalResult:(id)arg1;
- (void)setHasRequestType:(BOOL)arg1;
- (void)setHasStatus:(BOOL)arg1;
- (void)setPlaceResults:(id)arg1;
- (void)setRequestType:(int)arg1;
- (void)setSpokenLanguages:(id)arg1;
- (void)setStatus:(int)arg1;
- (id)spokenLanguageAtIndex:(unsigned long long)arg1;
- (id)spokenLanguages;
- (unsigned long long)spokenLanguagesCount;
- (int)status;
- (id)statusAsString:(int)arg1;
- (id)unknownFields;
- (void)writeTo:(id)arg1;

// GEOPDPlaceResponse (Extras)

- (id)initWithPlace:(id)arg1 forRequestType:(int)arg2;

// GEOPDPlaceResponse (GEOClientGeo3Extension)

- (id)clientMetrics;
- (BOOL)hasClientMetrics;
- (void)setClientMetrics:(id)arg1;

// GEOPDPlaceResponse (GEOMapService)

- (id)_disambiguationLabels;

// GEOPDPlaceResponse (GEOPlaceDataRequestClientExtendedExtension)

- (unsigned long long)debugLatencyMs;
- (BOOL)hasDebugLatencyMs;
- (void)setDebugLatencyMs:(unsigned long long)arg1;
- (void)setHasDebugLatencyMs:(BOOL)arg1;

@end
