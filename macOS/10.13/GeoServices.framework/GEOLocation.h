/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices
 */

@interface GEOLocation : PBCodable <NSCopying> {
    int  _altitude;
    double  _course;
    double  _courseAccuracy;
    int  _formOfWay;
    struct { 
        unsigned int course : 1; 
        unsigned int courseAccuracy : 1; 
        unsigned int heading : 1; 
        unsigned int horizontalAccuracy : 1; 
        unsigned int rawCourse : 1; 
        unsigned int speed : 1; 
        unsigned int speedAccuracy : 1; 
        unsigned int timestamp : 1; 
        unsigned int transitID : 1; 
        unsigned int verticalAccuracy : 1; 
        unsigned int altitude : 1; 
        unsigned int formOfWay : 1; 
        unsigned int levelOrdinal : 1; 
        unsigned int matchQuality : 1; 
        unsigned int referenceFrame : 1; 
        unsigned int roadClass : 1; 
        unsigned int transportType : 1; 
        unsigned int type : 1; 
        unsigned int isMatchedLocation : 1; 
        unsigned int isShifted : 1; 
    }  _has;
    double  _heading;
    double  _horizontalAccuracy;
    BOOL  _isMatchedLocation;
    BOOL  _isShifted;
    GEOLatLng * _latLng;
    int  _levelOrdinal;
    int  _matchQuality;
    GEOLatLng * _rawCoordinate;
    double  _rawCourse;
    int  _referenceFrame;
    int  _roadClass;
    double  _speed;
    double  _speedAccuracy;
    double  _timestamp;
    unsigned long long  _transitID;
    int  _transportType;
    int  _type;
    PBUnknownFields * _unknownFields;
    double  _verticalAccuracy;
}

@property (nonatomic, readwrite) int altitude;
@property (nonatomic, readonly) struct { double x1; double x2; } coordinate;
@property (nonatomic, readwrite) double course;
@property (nonatomic, readwrite) double courseAccuracy;
@property (nonatomic, readwrite) int formOfWay;
@property (nonatomic, readonly) BOOL hasAccurateCourse;
@property (nonatomic, readwrite) BOOL hasAltitude;
@property (nonatomic, readwrite) BOOL hasCourse;
@property (nonatomic, readwrite) BOOL hasCourseAccuracy;
@property (nonatomic, readwrite) BOOL hasFormOfWay;
@property (nonatomic, readwrite) BOOL hasHeading;
@property (nonatomic, readwrite) BOOL hasHorizontalAccuracy;
@property (nonatomic, readwrite) BOOL hasIsMatchedLocation;
@property (nonatomic, readwrite) BOOL hasIsShifted;
@property (nonatomic, readwrite) BOOL hasLevelOrdinal;
@property (nonatomic, readwrite) BOOL hasMatchQuality;
@property (nonatomic, readonly) BOOL hasRawCoordinate;
@property (nonatomic, readwrite) BOOL hasRawCourse;
@property (nonatomic, readwrite) BOOL hasReferenceFrame;
@property (nonatomic, readwrite) BOOL hasRoadClass;
@property (nonatomic, readwrite) BOOL hasSpeed;
@property (nonatomic, readwrite) BOOL hasSpeedAccuracy;
@property (nonatomic, readwrite) BOOL hasTimestamp;
@property (nonatomic, readwrite) BOOL hasTransitID;
@property (nonatomic, readwrite) BOOL hasTransportType;
@property (nonatomic, readwrite) BOOL hasType;
@property (nonatomic, readwrite) BOOL hasVerticalAccuracy;
@property (nonatomic, readwrite) double heading;
@property (nonatomic, readwrite) double horizontalAccuracy;
@property (nonatomic, readwrite) BOOL isMatchedLocation;
@property (nonatomic, readwrite) BOOL isShifted;
@property (nonatomic, readwrite, retain) GEOLatLng *latLng;
@property (nonatomic, readwrite) int levelOrdinal;
@property (nonatomic, readwrite) int matchQuality;
@property (nonatomic, readwrite, retain) GEOLatLng *rawCoordinate;
@property (nonatomic, readwrite) double rawCourse;
@property (nonatomic, readwrite) int referenceFrame;
@property (nonatomic, readwrite) int roadClass;
@property (nonatomic, readwrite) double speed;
@property (nonatomic, readwrite) double speedAccuracy;
@property (nonatomic, readwrite) double timestamp;
@property (nonatomic, readwrite) unsigned long long transitID;
@property (nonatomic, readwrite) int transportType;
@property (nonatomic, readwrite) int type;
@property (nonatomic, readonly) PBUnknownFields *unknownFields;
@property (nonatomic, readwrite) double verticalAccuracy;

// Image: /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices

- (void).cxx_destruct;
- (int)StringAsType:(id)arg1;
- (int)altitude;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (double)course;
- (id)description;
- (id)dictionaryRepresentation;
- (BOOL)hasAltitude;
- (BOOL)hasCourse;
- (BOOL)hasHeading;
- (BOOL)hasHorizontalAccuracy;
- (BOOL)hasLevelOrdinal;
- (BOOL)hasSpeed;
- (BOOL)hasTimestamp;
- (BOOL)hasType;
- (BOOL)hasVerticalAccuracy;
- (unsigned long long)hash;
- (double)heading;
- (double)horizontalAccuracy;
- (BOOL)isEqual:(id)arg1;
- (id)latLng;
- (int)levelOrdinal;
- (void)mergeFrom:(id)arg1;
- (BOOL)readFrom:(id)arg1;
- (void)setAltitude:(int)arg1;
- (void)setCourse:(double)arg1;
- (void)setHasAltitude:(BOOL)arg1;
- (void)setHasCourse:(BOOL)arg1;
- (void)setHasHeading:(BOOL)arg1;
- (void)setHasHorizontalAccuracy:(BOOL)arg1;
- (void)setHasLevelOrdinal:(BOOL)arg1;
- (void)setHasSpeed:(BOOL)arg1;
- (void)setHasTimestamp:(BOOL)arg1;
- (void)setHasType:(BOOL)arg1;
- (void)setHasVerticalAccuracy:(BOOL)arg1;
- (void)setHeading:(double)arg1;
- (void)setHorizontalAccuracy:(double)arg1;
- (void)setLatLng:(id)arg1;
- (void)setLevelOrdinal:(int)arg1;
- (void)setSpeed:(double)arg1;
- (void)setTimestamp:(double)arg1;
- (void)setType:(int)arg1;
- (void)setVerticalAccuracy:(double)arg1;
- (double)speed;
- (double)timestamp;
- (int)type;
- (id)typeAsString:(int)arg1;
- (id)unknownFields;
- (double)verticalAccuracy;
- (void)writeTo:(id)arg1;

// GEOLocation (GEOClientGeo3Extension)

- (int)StringAsFormOfWay:(id)arg1;
- (int)StringAsMatchQuality:(id)arg1;
- (int)StringAsReferenceFrame:(id)arg1;
- (int)StringAsRoadClass:(id)arg1;
- (int)StringAsTransportType:(id)arg1;
- (double)courseAccuracy;
- (int)formOfWay;
- (id)formOfWayAsString:(int)arg1;
- (BOOL)hasCourseAccuracy;
- (BOOL)hasFormOfWay;
- (BOOL)hasIsMatchedLocation;
- (BOOL)hasIsShifted;
- (BOOL)hasMatchQuality;
- (BOOL)hasRawCoordinate;
- (BOOL)hasRawCourse;
- (BOOL)hasReferenceFrame;
- (BOOL)hasRoadClass;
- (BOOL)hasSpeedAccuracy;
- (BOOL)hasTransitID;
- (BOOL)hasTransportType;
- (BOOL)isMatchedLocation;
- (BOOL)isShifted;
- (int)matchQuality;
- (id)matchQualityAsString:(int)arg1;
- (id)rawCoordinate;
- (double)rawCourse;
- (int)referenceFrame;
- (id)referenceFrameAsString:(int)arg1;
- (int)roadClass;
- (id)roadClassAsString:(int)arg1;
- (void)setCourseAccuracy:(double)arg1;
- (void)setFormOfWay:(int)arg1;
- (void)setHasCourseAccuracy:(BOOL)arg1;
- (void)setHasFormOfWay:(BOOL)arg1;
- (void)setHasIsMatchedLocation:(BOOL)arg1;
- (void)setHasIsShifted:(BOOL)arg1;
- (void)setHasMatchQuality:(BOOL)arg1;
- (void)setHasRawCourse:(BOOL)arg1;
- (void)setHasReferenceFrame:(BOOL)arg1;
- (void)setHasRoadClass:(BOOL)arg1;
- (void)setHasSpeedAccuracy:(BOOL)arg1;
- (void)setHasTransitID:(BOOL)arg1;
- (void)setHasTransportType:(BOOL)arg1;
- (void)setIsMatchedLocation:(BOOL)arg1;
- (void)setIsShifted:(BOOL)arg1;
- (void)setMatchQuality:(int)arg1;
- (void)setRawCoordinate:(id)arg1;
- (void)setRawCourse:(double)arg1;
- (void)setReferenceFrame:(int)arg1;
- (void)setRoadClass:(int)arg1;
- (void)setSpeedAccuracy:(double)arg1;
- (void)setTransitID:(unsigned long long)arg1;
- (void)setTransportType:(int)arg1;
- (double)speedAccuracy;
- (unsigned long long)transitID;
- (int)transportType;
- (id)transportTypeAsString:(int)arg1;

// GEOLocation (GEOProtoExtras)

- (struct { double x1; double x2; })coordinate;
- (BOOL)hasAccurateCourse;
- (id)initWithGEOCoordinate:(struct { double x1; double x2; })arg1;
- (id)initWithGEOCoordinate:(struct { double x1; double x2; })arg1 floorOrdinal:(int)arg2;
- (id)initWithGEOCoordinate:(struct { double x1; double x2; })arg1 isUserLocation:(BOOL)arg2;
- (id)initWithGEOCoordinate:(struct { double x1; double x2; })arg1 isUserLocation:(BOOL)arg2 floorOrdinal:(int)arg3;
- (id)initWithLatitude:(double)arg1 longitude:(double)arg2;
- (id)initWithLatitude:(double)arg1 longitude:(double)arg2 floorOrdinal:(int)arg3;
- (id)initWithLatitude:(double)arg1 longitude:(double)arg2 isUserLocation:(BOOL)arg3 floorOrdinal:(int)arg4;
- (id)initWithLocation:(id)arg1;
- (id)initWithLocation:(id)arg1 floorOrdinal:(int)arg2;
- (id)initWithLocation:(id)arg1 isUserLocation:(BOOL)arg2 floorOrdinal:(int)arg3;

// Image: /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation

- (id)_initWithCLClientLocation:(const struct { int x1; struct { double x_2_1_1; double x_2_1_2; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; int x11; double x12; int x13; struct { double x_14_1_1; double x_14_1_2; } x14; double x15; int x16; unsigned int x17; int x18; int x19; }*)arg1;

// Image: /System/Library/PrivateFrameworks/Navigation.framework/Versions/A/Navigation

// GEOLocation (MNExtras)

+ (id)locationWithCLLocation:(id)arg1 course:(double)arg2;

- (struct { int x1; struct { double x_2_1_1; double x_2_1_2; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; int x11; double x12; int x13; struct { double x_14_1_1; double x_14_1_2; } x14; double x15; int x16; unsigned int x17; int x18; int x19; })clientLocation;
- (id)initWithCLLocation:(id)arg1;
- (id)initWithCLLocation:(id)arg1 course:(double)arg2;
- (id)initWithCLLocation:(id)arg1 useMatchInfo:(BOOL)arg2;

@end
