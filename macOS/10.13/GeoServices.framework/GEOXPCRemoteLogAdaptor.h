/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices
 */

@interface GEOXPCRemoteLogAdaptor : GEOBaseLogAdaptor <GEOProtobufSessionTaskDelegate> {
    NSString * _adaptorIdentifier;
    unsigned long long  _backOffRetryInterval;
    long long  _cacheCountFlushThreshold;
    unsigned long long  _cacheEncryptionType;
    long long  _cacheMaxAllowedMessageCount;
    long long  _cacheMessageExpiryInterval;
    NSString * _debugRequestName;
    unsigned long long  _intervalJitter;
    NSString * _logMessageCacheFilePath;
    GEOLogMessageCacheManager * _logMessageCacheManager;
    BOOL  _logMessageCollectionRequestPending;
    NSLock * _logMessageCollectionRequesterLock;
    GEOProtobufSessionTask * _logMessageCollectionSessionTask;
    NSObject<OS_dispatch_queue> * _logMessageSendQueue;
    long long  _logMessagesOverflowPurgeSize;
    long long  _maxMessageChunkCount;
    long long  _maxMessageChunkSize;
    NSObject<OS_dispatch_queue> * _networkChangeObserverQueue;
    BOOL  _observingNetworkChange;
    NSString * _policyIdentifier;
    NSURL * _remoteURL;
    GEOLogMessageCollectionRequest * _request;
    BOOL  _requireWiFi;
    unsigned long long  _retryInterval;
    BOOL  _sendInRealtime;
    BOOL  _shouldAddIntervalJitter;
    BOOL  _shouldCacheOnDisk;
    BOOL  _shouldCompressRequest;
    id  _shouldDeferXPCActivityBlock;
    NSLock * _shouldDeferXPCActivityBlockLock;
    NSLock * _xpcActivityInfoLock;
    NSString * _xpcActivityName;
}

@property (atomic, readonly) NSString *adaptorIdentifier;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (nonatomic, readwrite, retain) NSString *debugRequestName;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (nonatomic, readwrite, retain) NSURL *remoteURL;
@property (atomic, readonly) Class superclass;
@property (atomic, readonly) int supportedLogMessageType;
@property (nonatomic, readwrite) long long xpcActivityTriggerCount;

- (void).cxx_destruct;
- (void)_addNetworkObserver;
- (void)_beginSendingLogMessageChunks;
- (void)_cleanupLogMessageCollectionRequester;
- (void)_continueToSendNextBatch:(BOOL)arg1;
- (void)_deviceLocking;
- (void)_deviceUnlocked;
- (void)_initializeAdaptor;
- (BOOL)_isLogMessageCollectionRequesterPending;
- (void)_networkReachabilityChanged;
- (void)_purgeAndSendLogMessages;
- (void)_purgeExpiredLogMessagesFromCache;
- (void)_purgeLogMessageCache;
- (void)_queueNextLogMessagesChunkForSending;
- (void)_registerXPCActivityTimer;
- (void)_removeNetworkObserver;
- (void)_requesterStartSendRequest:(id)arg1;
- (void)_sendLogMessageRequest:(id)arg1;
- (void)_sendNextLogMessageChunk;
- (void)_setupLogMessageCache;
- (void)_setupQueueAndNotifications;
- (void)_setupXPCActivity;
- (void)_unregisterXPCActivityTimer;
- (BOOL)_useInMemoryLogMessageCache;
- (id)adaptorIdentifier;
- (void)dealloc;
- (id)debugRequestName;
- (void)flushLogs;
- (void)forceFlushLogs;
- (void)incrementXpcActivityTriggerCount;
- (id)initWithAdaptorPolicy:(id)arg1;
- (id)initWithRemoteURL:(id)arg1 debugRequestName:(id)arg2 supportedTypes:(id)arg3;
- (BOOL)isLogFrameworkAdaptor;
- (int)logMsgEventNetworkServiceForSupportedLogMsgType;
- (void)protobufSession:(id)arg1 didCompleteTask:(id)arg2;
- (void)queueLogMessage:(id)arg1;
- (id)remoteURL;
- (void)setDebugRequestName:(id)arg1;
- (void)setRemoteURL:(id)arg1;
- (void)setXpcActivityTriggerCount:(long long)arg1;
- (int)supportedLogMessageType;
- (void)updateAdaptorPolicyConfiguration:(id)arg1;
- (long long)xpcActivityTriggerCount;

@end
