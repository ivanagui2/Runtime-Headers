/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices
 */

@interface GEOMapRegion : PBCodable <NSCopying> {
    double  _eastLng;
    struct { 
        unsigned int eastLng : 1; 
        unsigned int northLat : 1; 
        unsigned int southLat : 1; 
        unsigned int westLng : 1; 
    }  _has;
    double  _northLat;
    double  _southLat;
    PBUnknownFields * _unknownFields;
    NSMutableArray * _vertexs;
    double  _westLng;
}

@property (nonatomic, readonly) double centerLat;
@property (nonatomic, readonly) double centerLng;
@property (nonatomic, readwrite) double eastLng;
@property (nonatomic, readwrite) BOOL hasEastLng;
@property (nonatomic, readwrite) BOOL hasNorthLat;
@property (nonatomic, readwrite) BOOL hasSouthLat;
@property (nonatomic, readwrite) BOOL hasWestLng;
@property (nonatomic, readwrite) double northLat;
@property (nonatomic, readwrite) double southLat;
@property (nonatomic, readonly) double spanLat;
@property (nonatomic, readonly) double spanLng;
@property (nonatomic, readonly) PBUnknownFields *unknownFields;
@property (nonatomic, readwrite, retain) NSMutableArray *vertexs;
@property (nonatomic, readwrite) double westLng;

// Image: /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices

+ (Class)vertexType;

- (void).cxx_destruct;
- (void)addVertex:(id)arg1;
- (void)clearVertexs;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (double)eastLng;
- (BOOL)hasEastLng;
- (BOOL)hasNorthLat;
- (BOOL)hasSouthLat;
- (BOOL)hasWestLng;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (double)northLat;
- (BOOL)readFrom:(id)arg1;
- (void)setEastLng:(double)arg1;
- (void)setHasEastLng:(BOOL)arg1;
- (void)setHasNorthLat:(BOOL)arg1;
- (void)setHasSouthLat:(BOOL)arg1;
- (void)setHasWestLng:(BOOL)arg1;
- (void)setNorthLat:(double)arg1;
- (void)setSouthLat:(double)arg1;
- (void)setVertexs:(id)arg1;
- (void)setWestLng:(double)arg1;
- (double)southLat;
- (id)unknownFields;
- (id)vertexAtIndex:(unsigned long long)arg1;
- (id)vertexs;
- (unsigned long long)vertexsCount;
- (double)westLng;
- (void)writeTo:(id)arg1;

// GEOMapRegion (GEOGeometry)

+ (id)_geo_mapRegionForGEOCoordinateRegion:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1;

// GEOMapRegion (GEOProtoExtras)

- (double)centerLat;
- (double)centerLng;
- (BOOL)containsCoordinate:(struct { double x1; double x2; })arg1;
- (BOOL)containsMapRect:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithCoordinateRegion:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithLatitude:(double)arg1 longitude:(double)arg2;
- (id)initWithMapRect:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithRadialPlace:(id)arg1;
- (void)setMapRect:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)spanLat;
- (double)spanLng;

// Image: /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation

- (id)_initWithCLRegion:(id)arg1;

// Image: /System/Library/Frameworks/MapKit.framework/Versions/A/MapKit

// GEOMapRegion (MKAdditions)

+ (id)_mapkit_mapRegionEnclosingAnnotations:(id)arg1;
+ (id)_mapkit_mapRegionForCoordinateRegion:(struct { struct CLLocationCoordinate2D { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1;
+ (id)_mapkit_mapRegionForLatitude:(double)arg1 longitude:(double)arg2 latSpan:(double)arg3 longSpan:(double)arg4;

@end
