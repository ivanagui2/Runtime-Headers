/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ContactsPersistence.framework/Versions/A/ContactsPersistence
 */

@interface ABCDContact : ABCDRecord <ABCDContactFallbackAlternateName> {
    BOOL  mHasUserImageChanges;
}

@property (nonatomic, readwrite, retain) NSSet *alertTones;
@property (nonatomic, readwrite, retain) NSDictionary *alertTonesDictionary;
@property (nonatomic, readwrite, retain) NSDate *birthday;
@property (nonatomic, readwrite, copy) NSDateComponents *birthdayComponents;
@property (nonatomic, readwrite, retain) ABCDContactIndex *contactIndex;
@property (nonatomic, readwrite) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } cropRect;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (nonatomic, readwrite, retain) NSString *department;
@property (atomic, readonly, copy) NSString *description;
@property (nonatomic, readwrite, retain) NSNumber *displayFlags;
@property (nonatomic, readwrite, retain) NSSet *emailAddresses;
@property (nonatomic, readwrite, retain) NSString *firstName;
@property (atomic, readonly) unsigned long long hash;
@property (nonatomic, readwrite, retain) NSString *imageReference;
@property (nonatomic, readwrite) BOOL isCompany;
@property (nonatomic, readwrite, retain) NSString *jobTitle;
@property (nonatomic, readwrite, retain) NSString *lastName;
@property (nonatomic, readwrite, retain) NSString *linkId;
@property (nonatomic, readwrite, retain) NSString *maidenName;
@property (nonatomic, readwrite, retain) NSSet *messagingAddresses;
@property (nonatomic, readwrite, retain) NSString *middleName;
@property (nonatomic, readwrite, retain) NSString *middleNameNormalized;
@property (nonatomic, readwrite, retain) NSString *nickname;
@property (nonatomic, readwrite, retain) NSString *nicknameNormalized;
@property (nonatomic, readwrite, retain) ABCDNote *note;
@property (nonatomic, readwrite, retain) NSString *organization;
@property (nonatomic, readwrite, retain) NSSet *phoneNumbers;
@property (nonatomic, readwrite, retain) NSString *phonemeData;
@property (nonatomic, readwrite, retain) NSString *phoneticFirstName;
@property (nonatomic, readwrite, retain) NSString *phoneticLastName;
@property (nonatomic, readwrite, retain) NSString *phoneticMiddleName;
@property (nonatomic, readwrite, retain) NSString *phoneticOrganization;
@property (nonatomic, readwrite, retain) NSSet *postalAddresses;
@property (nonatomic, readwrite, retain) NSString *preferredApplePersonaIdentifier;
@property (nonatomic, readwrite, retain) NSNumber *preferredForLinkName;
@property (nonatomic, readwrite, retain) NSNumber *preferredForLinkPhoto;
@property (nonatomic, readwrite, retain) NSString *preferredLikenessSource;
@property (nonatomic, readwrite, retain) NSDate *primitiveBirthday;
@property (nonatomic, readwrite, retain) NSNumber *primitiveDisplayFlags;
@property (nonatomic, readwrite, retain) NSString *primitiveFirstName;
@property (nonatomic, readwrite, retain) NSString *primitiveLastName;
@property (nonatomic, readwrite, retain) NSString *primitiveMiddleName;
@property (nonatomic, readwrite, retain) NSString *primitiveNickname;
@property (nonatomic, readwrite, retain) NSString *primitiveOrganization;
@property (nonatomic, readwrite, retain) NSString *primitivePhoneticFirstName;
@property (nonatomic, readwrite, retain) NSString *primitivePhoneticLastName;
@property (nonatomic, readwrite, retain) NSString *primitivePhoneticOrganization;
@property (nonatomic, readwrite, retain) NSString *primitiveSortingFirstName;
@property (nonatomic, readwrite, retain) NSString *primitiveSortingLastName;
@property (nonatomic, readwrite, retain) NSSet *relatedNames;
@property (nonatomic, readwrite, retain) NSDictionary *ringtone;
@property (nonatomic, readwrite, retain) NSSet *socialProfiles;
@property (nonatomic, readwrite, retain) NSString *suffix;
@property (atomic, readonly) Class superclass;
@property (nonatomic, readwrite, retain) NSDictionary *texttone;
@property (nonatomic, readwrite, retain) NSString *title;
@property (nonatomic, readwrite, retain) NSSet *urlAddresses;

// Image: /System/Library/PrivateFrameworks/ContactsPersistence.framework/Versions/A/ContactsPersistence

+ (id)_table;
+ (id)abEntityName;
+ (id)keyPathsForValuesAffectingIsCompany;
+ (id)preferredNameSortDescriptors;
+ (id)preferredPhotoSortDescriptors;
+ (id)stringForIndexingKeypaths;

- (id)_makeSortingFirstName;
- (id)_makeSortingLastName;
- (id)_newStringForIndexing;
- (id)alertTonesDictionary;
- (id)attributedStringValue;
- (void)awakeFromInsert;
- (id)birthday;
- (id)birthdayComponents;
- (long long)birthdayYear;
- (double)birthdayYearless;
- (id)callFallbackAlternateName;
- (long long)compare:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })cropRect;
- (id)dateComponents;
- (void)didChangeValueForKey:(id)arg1;
- (void)didSave;
- (id)fullName;
- (id)fullNameIncludingPrefix:(BOOL)arg1 suffix:(BOOL)arg2 nickname:(BOOL)arg3 company:(BOOL)arg4;
- (BOOL)hasLargeImageData;
- (BOOL)hasUserImageChanges;
- (id)imageDirectory;
- (id)imageHelper;
- (BOOL)isCompany;
- (BOOL)isMe;
- (id)largeImageData;
- (id)objectForKey:(id)arg1;
- (BOOL)propertyHasChanged:(id)arg1;
- (id)ringtone;
- (void)setAlertTonesDictionary:(id)arg1;
- (void)setBirthday:(id)arg1;
- (void)setBirthdayComponents:(id)arg1;
- (void)setBirthdayYear:(id)arg1;
- (void)setBirthdayYearless:(id)arg1;
- (void)setCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setDateComponents:(id)arg1;
- (void)setDisplayFlags:(id)arg1;
- (void)setFirstName:(id)arg1;
- (void)setIsCompany:(BOOL)arg1;
- (void)setLargeImageData:(id)arg1;
- (void)setLastName:(id)arg1;
- (void)setNormalizedBirthday:(id)arg1;
- (void)setOrganization:(id)arg1;
- (void)setPhoneticFirstName:(id)arg1;
- (void)setPhoneticLastName:(id)arg1;
- (void)setPhoneticOrganization:(id)arg1;
- (void)setRingtone:(id)arg1;
- (void)setTexttone:(id)arg1;
- (void)setThumbnailImageData:(id)arg1;
- (id)sortingFirstName;
- (id)sortingLastName;
- (id)texttone;
- (id)thumbnailImageData;
- (void)touch:(id)arg1;
- (void)willRefresh:(BOOL)arg1;
- (void)willSave;

// ABCDContact (ABCDRecordFormatter)

- (id)_firstAvailableValueForRelationship:(id)arg1 key:(id)arg2;
- (id)companyNameWithFormatter:(id)arg1;
- (id)firstNameWithFormatter:(id)arg1;
- (id)joinedName;
- (id)lastNameWithFormatter:(id)arg1;
- (id)middleNameWithFormatter:(id)arg1;
- (id)nameDelimiter;
- (unsigned long long)nameOrderWithFormatter:(id)arg1;
- (id)nameWithFormatter:(id)arg1 rangeOfSortingSubstring:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;

// Image: /System/Library/Frameworks/AddressBook.framework/Versions/A/AddressBook

// ABCDContact (ABNDABCDContactAdditions)

+ (id)keyPathsForValuesAffectingCompleteName;
+ (id)keyPathsForValuesAffectingCompletePhoneticName;
+ (id)keyPathsForValuesAffectingContentCellObject;

- (void)_setMultiValue:(id)arg1 forEntityName:(id)arg2 valueKey:(id)arg3;
- (void)_setMultiValueProperty:(id)arg1 forEntityName:(id)arg2 valueKey:(id)arg3;
- (id)completeName;
- (id)completeNameWithTokens:(id)arg1;
- (id)completePhoneticName;
- (id)contentCellObject;
- (id)expandedSelectionStringWithContext:(id)arg1;
- (id)orderedNameTokensWithFirstNameFirstTokens:(id)arg1 lastNameFirstTokens:(id)arg2;
- (id)orderedTokensForCompleteName;
- (id)orderedTokensForCompletePhoneticName;
- (void)populateUsingDictionary:(id)arg1;
- (void)setCompleteName:(id)arg1;
- (void)setCompletePhoneticName:(id)arg1;

// ABCDContact (AddressBook)

+ (void)addMappedKeysToDictionary:(id)arg1 mappedEntities:(id)arg2 mappedEntitiesMainKeys:(id)arg3 entityWithValueConverter:(struct __CFDictionary { }*)arg4 valueWithEntityConverter:(struct __CFDictionary { }*)arg5 converterKeys:(id)arg6;
+ (id)addressConverterKeyMappings;
+ (id)keyForProperty:(id)arg1 entityName:(id*)arg2 entityKey:(id*)arg3 entityWithValueSel:(SEL*)arg4 valueWithEntitySel:(SEL*)arg5;
+ (id)makeLinkIdentifier;
+ (id)messagingAddressConverterKeyMappings;
+ (id)metadataType;
+ (id)predicateForLinkId:(id)arg1;

- (id)XMLRepresentation;
- (id)addressEntityWithValue:(id)arg1;
- (id)addressValueWithEntity:(id)arg1;
- (void)applyValues:(id)arg1 toAddressEntity:(id)arg2;
- (void)applyValues:(id)arg1 toMessagingAddressEntity:(id)arg2;
- (void)applyValues:(id)arg1 toSocialProfileEntity:(id)arg2;
- (id)createAlternateNameForPerson:(id)arg1;
- (id)createFirstLastSorting:(BOOL)arg1 part1:(BOOL)arg2 forPerson:(id)arg3;
- (id)fallbackAlternateName;
- (id)imagePathOfKind:(id)arg1;
- (BOOL)isDataCachedForImageReference:(id)arg1;
- (id)linkedContacts;
- (id)messagingAddressValueWithEntity:(id)arg1;
- (id)nonNullValueForKey:(id)arg1 inDictionary:(id)arg2;
- (BOOL)nts_SetValue:(id)arg1 forProperty:(id)arg2 record:(id)arg3;
- (void)setValue:(id)arg1 forKey:(id)arg2 withEntityName:(id)arg3 entityKey:(id)arg4;
- (id)socialProfileEntityWithValue:(id)arg1;
- (id)socialProfileValueWithEntity:(id)arg1;
- (id)valueForKey:(id)arg1 withEntityName:(id)arg2 entityKey:(id)arg3;

// ABCDContact (MergingAdditions)

- (void)importContact:(id)arg1;
- (void)mergeContact:(id)arg1;

// ABCDContact (MergingInternalAdditions)

- (void)appendNote:(id)arg1;
- (id)findPeer:(id)arg1 withLabel:(id)arg2 test:(id)arg3;
- (id)findPeer:(id)arg1 withValuesForKeys:(id)arg2;
- (void)importAttribute:(id)arg1 fromContact:(id)arg2;
- (void)importContact:(id)arg1 replaceValues:(BOOL)arg2;
- (void)importDisplayFlagsFromContact:(id)arg1;
- (void)importNoteFromContact:(id)arg1 replaceValues:(BOOL)arg2;
- (void)importPhotoFromContact:(id)arg1;
- (void)importPhotoKind:(id)arg1 fromContact:(id)arg2;
- (void)importRelatedProperty:(id)arg1 fromContact:(id)arg2 replaceValues:(BOOL)arg3;
- (void)importSingleValueRelationshipProperty:(id)arg1 fromContact:(id)arg2 replaceValues:(BOOL)arg3;
- (void)importUnknownProperties:(id)arg1;
- (void)importValue:(id)arg1 forKeyPath:(id)arg2;
- (unsigned long long)indexOfObject:(id)arg1 inArray:(id)arg2 equalityTest:(id)arg3;
- (BOOL)isPeerValue:(id)arg1 equalTo:(id)arg2;
- (void)mergeParentGroupsFromContact:(id)arg1;
- (BOOL)shouldUsePrimitivesToSetValueForKey:(id)arg1;
- (id)valueKeyPathsForRelationshipWithName:(id)arg1;
- (id)valueToImportForKey:(id)arg1;

@end
